// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/app/view/v1/view.proto

package v1

import (
	v11 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/v1"
	pagination "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/pagination"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 业务类型
type BizType int32

const (
	BizType_BizTypeNone            BizType = 0 //
	BizType_BizTypeFollowVideo     BizType = 1 // 追番追剧
	BizType_BizTypeReserveActivity BizType = 2 // 预约活动
	BizType_BizTypeJumpLink        BizType = 3 // 跳转链接
	BizType_BizTypeFavSeason       BizType = 4 // 收藏合集
	BizType_BizTypeReserveGame     BizType = 5 // 预约游戏
)

// Enum value maps for BizType.
var (
	BizType_name = map[int32]string{
		0: "BizTypeNone",
		1: "BizTypeFollowVideo",
		2: "BizTypeReserveActivity",
		3: "BizTypeJumpLink",
		4: "BizTypeFavSeason",
		5: "BizTypeReserveGame",
	}
	BizType_value = map[string]int32{
		"BizTypeNone":            0,
		"BizTypeFollowVideo":     1,
		"BizTypeReserveActivity": 2,
		"BizTypeJumpLink":        3,
		"BizTypeFavSeason":       4,
		"BizTypeReserveGame":     5,
	}
)

func (x BizType) Enum() *BizType {
	p := new(BizType)
	*p = x
	return p
}

func (x BizType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BizType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[0].Descriptor()
}

func (BizType) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[0]
}

func (x BizType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BizType.Descriptor instead.
func (BizType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{0}
}

type Category int32

const (
	Category_CategoryUnknown Category = 0 //
	Category_CategorySeason  Category = 1 //
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0: "CategoryUnknown",
		1: "CategorySeason",
	}
	Category_value = map[string]int32{
		"CategoryUnknown": 0,
		"CategorySeason":  1,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[1].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[1]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{1}
}

// 枚举-文本类型
type DescType int32

const (
	DescType_DescTypeUnknown DescType = 0 // 占位
	DescType_DescTypeText    DescType = 1 // 文本
	DescType_DescTypeAt      DescType = 2 // @
)

// Enum value maps for DescType.
var (
	DescType_name = map[int32]string{
		0: "DescTypeUnknown",
		1: "DescTypeText",
		2: "DescTypeAt",
	}
	DescType_value = map[string]int32{
		"DescTypeUnknown": 0,
		"DescTypeText":    1,
		"DescTypeAt":      2,
	}
)

func (x DescType) Enum() *DescType {
	p := new(DescType)
	*p = x
	return p
}

func (x DescType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DescType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[2].Descriptor()
}

func (DescType) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[2]
}

func (x DescType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DescType.Descriptor instead.
func (DescType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{2}
}

// 错误代码
type ECode int32

const (
	ECode_DEFAULT ECode = 0 // 正常
	ECode_CODE404 ECode = 1 // 稿件被UP主删除
)

// Enum value maps for ECode.
var (
	ECode_name = map[int32]string{
		0: "DEFAULT",
		1: "CODE404",
	}
	ECode_value = map[string]int32{
		"DEFAULT": 0,
		"CODE404": 1,
	}
)

func (x ECode) Enum() *ECode {
	p := new(ECode)
	*p = x
	return p
}

func (x ECode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECode) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[3].Descriptor()
}

func (ECode) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[3]
}

func (x ECode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ECode.Descriptor instead.
func (ECode) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{3}
}

type MaterialSource int32

const (
	MaterialSource_Default MaterialSource = 0 //
	MaterialSource_BiJian  MaterialSource = 1 // 必剪
)

// Enum value maps for MaterialSource.
var (
	MaterialSource_name = map[int32]string{
		0: "Default",
		1: "BiJian",
	}
	MaterialSource_value = map[string]int32{
		"Default": 0,
		"BiJian":  1,
	}
)

func (x MaterialSource) Enum() *MaterialSource {
	p := new(MaterialSource)
	*p = x
	return p
}

func (x MaterialSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialSource) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[4].Descriptor()
}

func (MaterialSource) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[4]
}

func (x MaterialSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialSource.Descriptor instead.
func (MaterialSource) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{4}
}

// 卡片样式
type OperationCardType int32

const (
	OperationCardType_CardTypeNone     OperationCardType = 0 //
	OperationCardType_CardTypeStandard OperationCardType = 1 // 标准卡
	OperationCardType_CardTypeSkip     OperationCardType = 2 // 原跳转卡
)

// Enum value maps for OperationCardType.
var (
	OperationCardType_name = map[int32]string{
		0: "CardTypeNone",
		1: "CardTypeStandard",
		2: "CardTypeSkip",
	}
	OperationCardType_value = map[string]int32{
		"CardTypeNone":     0,
		"CardTypeStandard": 1,
		"CardTypeSkip":     2,
	}
)

func (x OperationCardType) Enum() *OperationCardType {
	p := new(OperationCardType)
	*p = x
	return p
}

func (x OperationCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[5].Descriptor()
}

func (OperationCardType) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[5]
}

func (x OperationCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationCardType.Descriptor instead.
func (OperationCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{5}
}

type PayState int32

const (
	PayState_PayStateUnknown PayState = 0 //
	PayState_PayStateActive  PayState = 1 //
)

// Enum value maps for PayState.
var (
	PayState_name = map[int32]string{
		0: "PayStateUnknown",
		1: "PayStateActive",
	}
	PayState_value = map[string]int32{
		"PayStateUnknown": 0,
		"PayStateActive":  1,
	}
)

func (x PayState) Enum() *PayState {
	p := new(PayState)
	*p = x
	return p
}

func (x PayState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayState) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[6].Descriptor()
}

func (PayState) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[6]
}

func (x PayState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayState.Descriptor instead.
func (PayState) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{6}
}

// 卡片类型
type PlayerCardType int32

const (
	PlayerCardType_PlayerCardTypeNone_VALUE      PlayerCardType = 0 //
	PlayerCardType_PlayerCardTypeAttention_VALUE PlayerCardType = 1 // 关注卡
	PlayerCardType_PlayerCardTypeOperation_VALUE PlayerCardType = 2 // 运营卡
	PlayerCardType_PlayerCardTypeContract_VALUE  PlayerCardType = 3 // 契约卡
)

// Enum value maps for PlayerCardType.
var (
	PlayerCardType_name = map[int32]string{
		0: "PlayerCardTypeNone_VALUE",
		1: "PlayerCardTypeAttention_VALUE",
		2: "PlayerCardTypeOperation_VALUE",
		3: "PlayerCardTypeContract_VALUE",
	}
	PlayerCardType_value = map[string]int32{
		"PlayerCardTypeNone_VALUE":      0,
		"PlayerCardTypeAttention_VALUE": 1,
		"PlayerCardTypeOperation_VALUE": 2,
		"PlayerCardTypeContract_VALUE":  3,
	}
)

func (x PlayerCardType) Enum() *PlayerCardType {
	p := new(PlayerCardType)
	*p = x
	return p
}

func (x PlayerCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[7].Descriptor()
}

func (PlayerCardType) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[7]
}

func (x PlayerCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerCardType.Descriptor instead.
func (PlayerCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{7}
}

type PremiereState int32

const (
	PremiereState_premiere_none   PremiereState = 0 //
	PremiereState_premiere_before PremiereState = 1 //
	PremiereState_premiere_in     PremiereState = 2 //
	PremiereState_premiere_after  PremiereState = 3 //
)

// Enum value maps for PremiereState.
var (
	PremiereState_name = map[int32]string{
		0: "premiere_none",
		1: "premiere_before",
		2: "premiere_in",
		3: "premiere_after",
	}
	PremiereState_value = map[string]int32{
		"premiere_none":   0,
		"premiere_before": 1,
		"premiere_in":     2,
		"premiere_after":  3,
	}
)

func (x PremiereState) Enum() *PremiereState {
	p := new(PremiereState)
	*p = x
	return p
}

func (x PremiereState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PremiereState) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[8].Descriptor()
}

func (PremiereState) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[8]
}

func (x PremiereState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PremiereState.Descriptor instead.
func (PremiereState) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{8}
}

type SeasonType int32

const (
	SeasonType_Unknown SeasonType = 0 //
	SeasonType_Base    SeasonType = 1 //
	SeasonType_Good    SeasonType = 2 //
)

// Enum value maps for SeasonType.
var (
	SeasonType_name = map[int32]string{
		0: "Unknown",
		1: "Base",
		2: "Good",
	}
	SeasonType_value = map[string]int32{
		"Unknown": 0,
		"Base":    1,
		"Good":    2,
	}
)

func (x SeasonType) Enum() *SeasonType {
	p := new(SeasonType)
	*p = x
	return p
}

func (x SeasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[9].Descriptor()
}

func (SeasonType) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[9]
}

func (x SeasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeasonType.Descriptor instead.
func (SeasonType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{9}
}

// TAB跳转类型
type TabOtype int32

const (
	TabOtype_UnknownOtype TabOtype = 0 // 未知类型
	TabOtype_URL          TabOtype = 1 // url链接
	TabOtype_TopicNA      TabOtype = 2 // native话题活动
	TabOtype_CmURI        TabOtype = 3 // 广告url
)

// Enum value maps for TabOtype.
var (
	TabOtype_name = map[int32]string{
		0: "UnknownOtype",
		1: "URL",
		2: "TopicNA",
		3: "CmURI",
	}
	TabOtype_value = map[string]int32{
		"UnknownOtype": 0,
		"URL":          1,
		"TopicNA":      2,
		"CmURI":        3,
	}
)

func (x TabOtype) Enum() *TabOtype {
	p := new(TabOtype)
	*p = x
	return p
}

func (x TabOtype) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TabOtype) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[10].Descriptor()
}

func (TabOtype) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[10]
}

func (x TabOtype) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TabOtype.Descriptor instead.
func (TabOtype) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{10}
}

// TAB样式
type TabStyle int32

const (
	TabStyle_UnknownStyle TabStyle = 0 // 未知样式
	TabStyle_Text         TabStyle = 1 // 文字样式
	TabStyle_Pic          TabStyle = 2 // 图片样式
)

// Enum value maps for TabStyle.
var (
	TabStyle_name = map[int32]string{
		0: "UnknownStyle",
		1: "Text",
		2: "Pic",
	}
	TabStyle_value = map[string]int32{
		"UnknownStyle": 0,
		"Text":         1,
		"Pic":          2,
	}
)

func (x TabStyle) Enum() *TabStyle {
	p := new(TabStyle)
	*p = x
	return p
}

func (x TabStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TabStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_view_v1_view_proto_enumTypes[11].Descriptor()
}

func (TabStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_view_v1_view_proto_enumTypes[11]
}

func (x TabStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TabStyle.Descriptor instead.
func (TabStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{11}
}

// 活动页资源包
type ActivityResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mod资源池名称
	ModPoolName string `protobuf:"bytes,1,opt,name=mod_pool_name,json=modPoolName,proto3" json:"mod_pool_name,omitempty"`
	// mod资源名称
	ModResourceName string `protobuf:"bytes,2,opt,name=mod_resource_name,json=modResourceName,proto3" json:"mod_resource_name,omitempty"`
	// 背景色
	BgColor string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 选中背景色
	SelectedBgColor string `protobuf:"bytes,4,opt,name=selected_bg_color,json=selectedBgColor,proto3" json:"selected_bg_color,omitempty"`
	// 文字颜色
	TextColor string `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 浅字色
	LightTextColor string `protobuf:"bytes,6,opt,name=light_text_color,json=lightTextColor,proto3" json:"light_text_color,omitempty"`
	// 深字色
	DarkTextColor string `protobuf:"bytes,7,opt,name=dark_text_color,json=darkTextColor,proto3" json:"dark_text_color,omitempty"`
	// 分割线色
	DividerColor string `protobuf:"bytes,8,opt,name=divider_color,json=dividerColor,proto3" json:"divider_color,omitempty"`
}

func (x *ActivityResource) Reset() {
	*x = ActivityResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityResource) ProtoMessage() {}

func (x *ActivityResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityResource.ProtoReflect.Descriptor instead.
func (*ActivityResource) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityResource) GetModPoolName() string {
	if x != nil {
		return x.ModPoolName
	}
	return ""
}

func (x *ActivityResource) GetModResourceName() string {
	if x != nil {
		return x.ModResourceName
	}
	return ""
}

func (x *ActivityResource) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActivityResource) GetSelectedBgColor() string {
	if x != nil {
		return x.SelectedBgColor
	}
	return ""
}

func (x *ActivityResource) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *ActivityResource) GetLightTextColor() string {
	if x != nil {
		return x.LightTextColor
	}
	return ""
}

func (x *ActivityResource) GetDarkTextColor() string {
	if x != nil {
		return x.DarkTextColor
	}
	return ""
}

func (x *ActivityResource) GetDividerColor() string {
	if x != nil {
		return x.DividerColor
	}
	return ""
}

// 大型活动合集
type ActivitySeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件信息
	Arc *v1.Arc `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	// 分P信息
	Pages []*ViewPage `protobuf:"bytes,2,rep,name=pages,proto3" json:"pages,omitempty"`
	// ("OnwerExt"为源码中拼写错误)
	OwnerExt *OnwerExt `protobuf:"bytes,3,opt,name=owner_ext,json=ownerExt,proto3" json:"owner_ext,omitempty"`
	// 稿件用户操作状态
	ReqUser *ReqUser `protobuf:"bytes,4,opt,name=req_user,json=reqUser,proto3" json:"req_user,omitempty"`
	// 充电排行
	ElecRank *ElecRank `protobuf:"bytes,5,opt,name=elec_rank,json=elecRank,proto3" json:"elec_rank,omitempty"`
	// 历史观看进度
	History *History `protobuf:"bytes,6,opt,name=history,proto3" json:"history,omitempty"`
	// 稿件bvid
	Bvid string `protobuf:"bytes,7,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 获得荣誉信息
	Honor *Honor `protobuf:"bytes,8,opt,name=honor,proto3" json:"honor,omitempty"`
	// 联合投稿成员列表
	Staff []*Staff `protobuf:"bytes,9,rep,name=staff,proto3" json:"staff,omitempty"`
	// UGC视频合集信息
	UgcSeason *UgcSeason `protobuf:"bytes,10,opt,name=ugc_season,json=ugcSeason,proto3" json:"ugc_season,omitempty"`
	// 播放页定制tab
	Tab *Tab `protobuf:"bytes,11,opt,name=tab,proto3" json:"tab,omitempty"`
	// 排行榜
	Rank *Rank `protobuf:"bytes,12,opt,name=rank,proto3" json:"rank,omitempty"`
	// 预约模块
	Order *Order `protobuf:"bytes,13,opt,name=order,proto3" json:"order,omitempty"`
	// 是否支持点踩
	SupportDislike bool `protobuf:"varint,14,opt,name=support_dislike,json=supportDislike,proto3" json:"support_dislike,omitempty"`
	// 相关推荐(运营配置+AI推荐)
	OperationRelate *OperationRelate `protobuf:"bytes,15,opt,name=operation_relate,json=operationRelate,proto3" json:"operation_relate,omitempty"`
	// 活动页资源包
	ActivityResource *ActivityResource `protobuf:"bytes,16,opt,name=activity_resource,json=activityResource,proto3" json:"activity_resource,omitempty"`
	// 短链接
	ShortLink string `protobuf:"bytes,17,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	// 标签
	Label *Label `protobuf:"bytes,18,opt,name=label,proto3" json:"label,omitempty"`
	// 不感兴趣原因
	Dislike *Dislike `protobuf:"bytes,19,opt,name=dislike,proto3" json:"dislike,omitempty"`
	// 播放图标动画配置档
	PlayerIcon *PlayerIcon `protobuf:"bytes,20,opt,name=player_icon,json=playerIcon,proto3" json:"player_icon,omitempty"`
	// 分享副标题(已观看xxx次)
	ShareSubtitle string `protobuf:"bytes,21,opt,name=share_subtitle,json=shareSubtitle,proto3" json:"share_subtitle,omitempty"`
	// 广告配置
	CmConfig *CMConfig `protobuf:"bytes,22,opt,name=cm_config,json=cmConfig,proto3" json:"cm_config,omitempty"`
	// 免流面板定制
	TfPanelCustomized *TFPanelCustomized `protobuf:"bytes,23,opt,name=tf_panel_customized,json=tfPanelCustomized,proto3" json:"tf_panel_customized,omitempty"`
	// 争议信息
	ArgueMsg string `protobuf:"bytes,24,opt,name=argue_msg,json=argueMsg,proto3" json:"argue_msg,omitempty"`
	// 错误码
	// DEFAULT:正常 CODE404:视频被UP主删除
	Ecode ECode `protobuf:"varint,25,opt,name=ecode,proto3,enum=bilibili.app.view.v1.ECode" json:"ecode,omitempty"`
	// 404页信息
	CustomConfig *CustomConfig `protobuf:"bytes,26,opt,name=custom_config,json=customConfig,proto3" json:"custom_config,omitempty"`
	// 评论样式
	BadgeUrl string `protobuf:"bytes,27,opt,name=badge_url,json=badgeUrl,proto3" json:"badge_url,omitempty"`
	// 稿件简介v2
	DescV2       []*DescV2   `protobuf:"bytes,28,rep,name=desc_v2,json=descV2,proto3" json:"desc_v2,omitempty"`
	Config       *Config     `protobuf:"bytes,29,opt,name=config,proto3" json:"config,omitempty"`
	Online       *Online     `protobuf:"bytes,30,opt,name=online,proto3" json:"online,omitempty"`
	ArcExtra     *ArcExtra   `protobuf:"bytes,31,opt,name=arc_extra,json=arcExtra,proto3" json:"arc_extra,omitempty"`
	ReplyPreface *ReplyStyle `protobuf:"bytes,32,opt,name=reply_preface,json=replyPreface,proto3" json:"reply_preface,omitempty"`
}

func (x *ActivitySeason) Reset() {
	*x = ActivitySeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySeason) ProtoMessage() {}

func (x *ActivitySeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySeason.ProtoReflect.Descriptor instead.
func (*ActivitySeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{1}
}

func (x *ActivitySeason) GetArc() *v1.Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *ActivitySeason) GetPages() []*ViewPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ActivitySeason) GetOwnerExt() *OnwerExt {
	if x != nil {
		return x.OwnerExt
	}
	return nil
}

func (x *ActivitySeason) GetReqUser() *ReqUser {
	if x != nil {
		return x.ReqUser
	}
	return nil
}

func (x *ActivitySeason) GetElecRank() *ElecRank {
	if x != nil {
		return x.ElecRank
	}
	return nil
}

func (x *ActivitySeason) GetHistory() *History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ActivitySeason) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivitySeason) GetHonor() *Honor {
	if x != nil {
		return x.Honor
	}
	return nil
}

func (x *ActivitySeason) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *ActivitySeason) GetUgcSeason() *UgcSeason {
	if x != nil {
		return x.UgcSeason
	}
	return nil
}

func (x *ActivitySeason) GetTab() *Tab {
	if x != nil {
		return x.Tab
	}
	return nil
}

func (x *ActivitySeason) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *ActivitySeason) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ActivitySeason) GetSupportDislike() bool {
	if x != nil {
		return x.SupportDislike
	}
	return false
}

func (x *ActivitySeason) GetOperationRelate() *OperationRelate {
	if x != nil {
		return x.OperationRelate
	}
	return nil
}

func (x *ActivitySeason) GetActivityResource() *ActivityResource {
	if x != nil {
		return x.ActivityResource
	}
	return nil
}

func (x *ActivitySeason) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *ActivitySeason) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *ActivitySeason) GetDislike() *Dislike {
	if x != nil {
		return x.Dislike
	}
	return nil
}

func (x *ActivitySeason) GetPlayerIcon() *PlayerIcon {
	if x != nil {
		return x.PlayerIcon
	}
	return nil
}

func (x *ActivitySeason) GetShareSubtitle() string {
	if x != nil {
		return x.ShareSubtitle
	}
	return ""
}

func (x *ActivitySeason) GetCmConfig() *CMConfig {
	if x != nil {
		return x.CmConfig
	}
	return nil
}

func (x *ActivitySeason) GetTfPanelCustomized() *TFPanelCustomized {
	if x != nil {
		return x.TfPanelCustomized
	}
	return nil
}

func (x *ActivitySeason) GetArgueMsg() string {
	if x != nil {
		return x.ArgueMsg
	}
	return ""
}

func (x *ActivitySeason) GetEcode() ECode {
	if x != nil {
		return x.Ecode
	}
	return ECode_DEFAULT
}

func (x *ActivitySeason) GetCustomConfig() *CustomConfig {
	if x != nil {
		return x.CustomConfig
	}
	return nil
}

func (x *ActivitySeason) GetBadgeUrl() string {
	if x != nil {
		return x.BadgeUrl
	}
	return ""
}

func (x *ActivitySeason) GetDescV2() []*DescV2 {
	if x != nil {
		return x.DescV2
	}
	return nil
}

func (x *ActivitySeason) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ActivitySeason) GetOnline() *Online {
	if x != nil {
		return x.Online
	}
	return nil
}

func (x *ActivitySeason) GetArcExtra() *ArcExtra {
	if x != nil {
		return x.ArcExtra
	}
	return nil
}

func (x *ActivitySeason) GetReplyPreface() *ReplyStyle {
	if x != nil {
		return x.ReplyPreface
	}
	return nil
}

// 点击签订契约-请求
type AddContractReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// UP主mid
	UpMid int64 `protobuf:"varint,2,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,3,opt,name=spmid,proto3" json:"spmid,omitempty"`
}

func (x *AddContractReq) Reset() {
	*x = AddContractReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContractReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContractReq) ProtoMessage() {}

func (x *AddContractReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContractReq.ProtoReflect.Descriptor instead.
func (*AddContractReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{2}
}

func (x *AddContractReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *AddContractReq) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *AddContractReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

type AdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeId      int64            `protobuf:"varint,1,opt,name=creative_id,json=creativeId,proto3" json:"creative_id,omitempty"`
	CreativeType    int64            `protobuf:"varint,2,opt,name=creative_type,json=creativeType,proto3" json:"creative_type,omitempty"`
	CreativeContent *CreativeContent `protobuf:"bytes,3,opt,name=creative_content,json=creativeContent,proto3" json:"creative_content,omitempty"`
	AdCb            string           `protobuf:"bytes,4,opt,name=ad_cb,json=adCb,proto3" json:"ad_cb,omitempty"`
	CardType        int32            `protobuf:"varint,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	Extra           []byte           `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *AdInfo) Reset() {
	*x = AdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdInfo) ProtoMessage() {}

func (x *AdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdInfo.ProtoReflect.Descriptor instead.
func (*AdInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{3}
}

func (x *AdInfo) GetCreativeId() int64 {
	if x != nil {
		return x.CreativeId
	}
	return 0
}

func (x *AdInfo) GetCreativeType() int64 {
	if x != nil {
		return x.CreativeType
	}
	return 0
}

func (x *AdInfo) GetCreativeContent() *CreativeContent {
	if x != nil {
		return x.CreativeContent
	}
	return nil
}

func (x *AdInfo) GetAdCb() string {
	if x != nil {
		return x.AdCb
	}
	return ""
}

func (x *AdInfo) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *AdInfo) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ArcExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArcPubLocation string `protobuf:"bytes,1,opt,name=arc_pub_location,json=arcPubLocation,proto3" json:"arc_pub_location,omitempty"`
}

func (x *ArcExtra) Reset() {
	*x = ArcExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArcExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArcExtra) ProtoMessage() {}

func (x *ArcExtra) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArcExtra.ProtoReflect.Descriptor instead.
func (*ArcExtra) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{4}
}

func (x *ArcExtra) GetArcPubLocation() string {
	if x != nil {
		return x.ArcPubLocation
	}
	return ""
}

type ArcsPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid        int64            `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	PlayerInfo map[int64]string `protobuf:"bytes,2,rep,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ArcsPlayer) Reset() {
	*x = ArcsPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArcsPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArcsPlayer) ProtoMessage() {}

func (x *ArcsPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArcsPlayer.ProtoReflect.Descriptor instead.
func (*ArcsPlayer) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{5}
}

func (x *ArcsPlayer) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ArcsPlayer) GetPlayerInfo() map[int64]string {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paid       int32     `protobuf:"varint,1,opt,name=paid,proto3" json:"paid,omitempty"`
	Price      int64     `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Msg        *AssetMsg `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	PreviewMsg *AssetMsg `protobuf:"bytes,4,opt,name=preview_msg,json=previewMsg,proto3" json:"preview_msg,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{6}
}

func (x *Asset) GetPaid() int32 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *Asset) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Asset) GetMsg() *AssetMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Asset) GetPreviewMsg() *AssetMsg {
	if x != nil {
		return x.PreviewMsg
	}
	return nil
}

type AssetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc1 string `protobuf:"bytes,1,opt,name=desc1,proto3" json:"desc1,omitempty"`
	Desc2 string `protobuf:"bytes,2,opt,name=desc2,proto3" json:"desc2,omitempty"`
}

func (x *AssetMsg) Reset() {
	*x = AssetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetMsg) ProtoMessage() {}

func (x *AssetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetMsg.ProtoReflect.Descriptor instead.
func (*AssetMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{7}
}

func (x *AssetMsg) GetDesc1() string {
	if x != nil {
		return x.Desc1
	}
	return ""
}

func (x *AssetMsg) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

// 关注按钮卡片
type Attention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始时间
	StartTime int32 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间
	EndTime int32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 位置x坐标
	PosX float64 `protobuf:"fixed64,3,opt,name=pos_x,json=posX,proto3" json:"pos_x,omitempty"`
	// 位置y坐标
	PosY float64 `protobuf:"fixed64,4,opt,name=pos_y,json=posY,proto3" json:"pos_y,omitempty"`
}

func (x *Attention) Reset() {
	*x = Attention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attention) ProtoMessage() {}

func (x *Attention) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attention.ProtoReflect.Descriptor instead.
func (*Attention) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{8}
}

func (x *Attention) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Attention) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Attention) GetPosX() float64 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *Attention) GetPosY() float64 {
	if x != nil {
		return x.PosY
	}
	return 0
}

// 音频稿件信息
type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 音频标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 音频封面url
	CoverUrl string `protobuf:"bytes,2,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	// 音频auid
	SongId int64 `protobuf:"varint,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	// 音频播放量
	PlayCount int64 `protobuf:"varint,4,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	// 音频评论数
	ReplyCount int64 `protobuf:"varint,5,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	// 音频作者UID
	UpperId int64 `protobuf:"varint,6,opt,name=upper_id,json=upperId,proto3" json:"upper_id,omitempty"`
	// 进入按钮文案
	Entrance string `protobuf:"bytes,7,opt,name=entrance,proto3" json:"entrance,omitempty"`
	SongAttr int64  `protobuf:"varint,8,opt,name=song_attr,json=songAttr,proto3" json:"song_attr,omitempty"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{9}
}

func (x *Audio) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Audio) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Audio) GetSongId() int64 {
	if x != nil {
		return x.SongId
	}
	return 0
}

func (x *Audio) GetPlayCount() int64 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *Audio) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *Audio) GetUpperId() int64 {
	if x != nil {
		return x.UpperId
	}
	return 0
}

func (x *Audio) GetEntrance() string {
	if x != nil {
		return x.Entrance
	}
	return ""
}

func (x *Audio) GetSongAttr() int64 {
	if x != nil {
		return x.SongAttr
	}
	return 0
}

type BadgeStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text             string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextColor        string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight   string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColor          string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight     string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	BorderColor      string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	BgStyle          int32  `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
}

func (x *BadgeStyle) Reset() {
	*x = BadgeStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeStyle) ProtoMessage() {}

func (x *BadgeStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeStyle.ProtoReflect.Descriptor instead.
func (*BadgeStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{10}
}

func (x *BadgeStyle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BadgeStyle) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *BadgeStyle) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *BadgeStyle) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *BadgeStyle) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *BadgeStyle) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *BadgeStyle) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *BadgeStyle) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

// 视频引用的bgm音频
type Bgm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 音频auid
	Sid int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// 音频作者mid
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	// 音频标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 音频作者昵称
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	// bgm页面url
	JumpUrl string `protobuf:"bytes,5,opt,name=jumpUrl,proto3" json:"jumpUrl,omitempty"`
	// 音频封面url
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *Bgm) Reset() {
	*x = Bgm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bgm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bgm) ProtoMessage() {}

func (x *Bgm) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bgm.ProtoReflect.Descriptor instead.
func (*Bgm) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{11}
}

func (x *Bgm) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Bgm) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Bgm) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Bgm) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Bgm) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Bgm) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 收藏合集参数
type BizFavSeasonParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集id
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *BizFavSeasonParam) Reset() {
	*x = BizFavSeasonParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizFavSeasonParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizFavSeasonParam) ProtoMessage() {}

func (x *BizFavSeasonParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizFavSeasonParam.ProtoReflect.Descriptor instead.
func (*BizFavSeasonParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{12}
}

func (x *BizFavSeasonParam) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type BizFollowVideoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *BizFollowVideoParam) Reset() {
	*x = BizFollowVideoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizFollowVideoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizFollowVideoParam) ProtoMessage() {}

func (x *BizFollowVideoParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizFollowVideoParam.ProtoReflect.Descriptor instead.
func (*BizFollowVideoParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{13}
}

func (x *BizFollowVideoParam) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type BizJumpLinkParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *BizJumpLinkParam) Reset() {
	*x = BizJumpLinkParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizJumpLinkParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizJumpLinkParam) ProtoMessage() {}

func (x *BizJumpLinkParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizJumpLinkParam.ProtoReflect.Descriptor instead.
func (*BizJumpLinkParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{14}
}

func (x *BizJumpLinkParam) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 预约活动参数
type BizReserveActivityParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动id
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// 场景
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// 类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 资源id
	Oid       int64 `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
	ReserveId int64 `protobuf:"varint,5,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
}

func (x *BizReserveActivityParam) Reset() {
	*x = BizReserveActivityParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizReserveActivityParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizReserveActivityParam) ProtoMessage() {}

func (x *BizReserveActivityParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizReserveActivityParam.ProtoReflect.Descriptor instead.
func (*BizReserveActivityParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{15}
}

func (x *BizReserveActivityParam) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *BizReserveActivityParam) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *BizReserveActivityParam) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BizReserveActivityParam) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *BizReserveActivityParam) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

type BizReserveGameParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游戏id
	GameId int64 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *BizReserveGameParam) Reset() {
	*x = BizReserveGameParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizReserveGameParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizReserveGameParam) ProtoMessage() {}

func (x *BizReserveGameParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizReserveGameParam.ProtoReflect.Descriptor instead.
func (*BizReserveGameParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{16}
}

func (x *BizReserveGameParam) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 按钮文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转uri
	Uri  string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Button) Reset() {
	*x = Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Button) ProtoMessage() {}

func (x *Button) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Button.ProtoReflect.Descriptor instead.
func (*Button) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{17}
}

func (x *Button) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Button) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Button) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type ButtonStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text           string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextColor      string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColor        string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight   string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	JumpLink       string `protobuf:"bytes,6,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
}

func (x *ButtonStyle) Reset() {
	*x = ButtonStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonStyle) ProtoMessage() {}

func (x *ButtonStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonStyle.ProtoReflect.Descriptor instead.
func (*ButtonStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{18}
}

func (x *ButtonStyle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ButtonStyle) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *ButtonStyle) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *ButtonStyle) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ButtonStyle) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *ButtonStyle) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

type BuzzwordConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema        string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Source        int32  `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	Start         int64  `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	End           int64  `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
	FollowControl bool   `protobuf:"varint,6,opt,name=follow_control,json=followControl,proto3" json:"follow_control,omitempty"`
	Id            int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	BuzzwordId    int64  `protobuf:"varint,8,opt,name=buzzword_id,json=buzzwordId,proto3" json:"buzzword_id,omitempty"`
	SchemaType    int32  `protobuf:"varint,9,opt,name=schema_type,json=schemaType,proto3" json:"schema_type,omitempty"`
	Picture       string `protobuf:"bytes,10,opt,name=picture,proto3" json:"picture,omitempty"`
}

func (x *BuzzwordConfig) Reset() {
	*x = BuzzwordConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuzzwordConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuzzwordConfig) ProtoMessage() {}

func (x *BuzzwordConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuzzwordConfig.ProtoReflect.Descriptor instead.
func (*BuzzwordConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{19}
}

func (x *BuzzwordConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuzzwordConfig) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *BuzzwordConfig) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *BuzzwordConfig) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *BuzzwordConfig) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *BuzzwordConfig) GetFollowControl() bool {
	if x != nil {
		return x.FollowControl
	}
	return false
}

func (x *BuzzwordConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuzzwordConfig) GetBuzzwordId() int64 {
	if x != nil {
		return x.BuzzwordId
	}
	return 0
}

func (x *BuzzwordConfig) GetSchemaType() int32 {
	if x != nil {
		return x.SchemaType
	}
	return 0
}

func (x *BuzzwordConfig) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

type CacheViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc               *v1.Arc            `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	Pages             []*ViewPage        `protobuf:"bytes,2,rep,name=pages,proto3" json:"pages,omitempty"`
	OwnerExt          *OnwerExt          `protobuf:"bytes,3,opt,name=owner_ext,json=ownerExt,proto3" json:"owner_ext,omitempty"`
	ReqUser           *ReqUser           `protobuf:"bytes,4,opt,name=req_user,json=reqUser,proto3" json:"req_user,omitempty"`
	Season            *Season            `protobuf:"bytes,5,opt,name=season,proto3" json:"season,omitempty"`
	ElecRank          *ElecRank          `protobuf:"bytes,6,opt,name=elec_rank,json=elecRank,proto3" json:"elec_rank,omitempty"`
	History           *History           `protobuf:"bytes,7,opt,name=history,proto3" json:"history,omitempty"`
	Dislike           *Dislike           `protobuf:"bytes,8,opt,name=dislike,proto3" json:"dislike,omitempty"`
	PlayerIcon        *PlayerIcon        `protobuf:"bytes,9,opt,name=player_icon,json=playerIcon,proto3" json:"player_icon,omitempty"`
	Bvid              string             `protobuf:"bytes,10,opt,name=bvid,proto3" json:"bvid,omitempty"`
	ShortLink         string             `protobuf:"bytes,11,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	ShareSubtitle     string             `protobuf:"bytes,12,opt,name=share_subtitle,json=shareSubtitle,proto3" json:"share_subtitle,omitempty"`
	TfPanelCustomized *TFPanelCustomized `protobuf:"bytes,13,opt,name=tf_panel_customized,json=tfPanelCustomized,proto3" json:"tf_panel_customized,omitempty"`
	Online            *Online            `protobuf:"bytes,14,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *CacheViewReply) Reset() {
	*x = CacheViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheViewReply) ProtoMessage() {}

func (x *CacheViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheViewReply.ProtoReflect.Descriptor instead.
func (*CacheViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{20}
}

func (x *CacheViewReply) GetArc() *v1.Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *CacheViewReply) GetPages() []*ViewPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *CacheViewReply) GetOwnerExt() *OnwerExt {
	if x != nil {
		return x.OwnerExt
	}
	return nil
}

func (x *CacheViewReply) GetReqUser() *ReqUser {
	if x != nil {
		return x.ReqUser
	}
	return nil
}

func (x *CacheViewReply) GetSeason() *Season {
	if x != nil {
		return x.Season
	}
	return nil
}

func (x *CacheViewReply) GetElecRank() *ElecRank {
	if x != nil {
		return x.ElecRank
	}
	return nil
}

func (x *CacheViewReply) GetHistory() *History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *CacheViewReply) GetDislike() *Dislike {
	if x != nil {
		return x.Dislike
	}
	return nil
}

func (x *CacheViewReply) GetPlayerIcon() *PlayerIcon {
	if x != nil {
		return x.PlayerIcon
	}
	return nil
}

func (x *CacheViewReply) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *CacheViewReply) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *CacheViewReply) GetShareSubtitle() string {
	if x != nil {
		return x.ShareSubtitle
	}
	return ""
}

func (x *CacheViewReply) GetTfPanelCustomized() *TFPanelCustomized {
	if x != nil {
		return x.TfPanelCustomized
	}
	return nil
}

func (x *CacheViewReply) GetOnline() *Online {
	if x != nil {
		return x.Online
	}
	return nil
}

type CacheViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid       int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid      string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Trackid   string `protobuf:"bytes,4,opt,name=trackid,proto3" json:"trackid,omitempty"`
	AdExtra   string `protobuf:"bytes,5,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	Spmid     string `protobuf:"bytes,6,opt,name=spmid,proto3" json:"spmid,omitempty"`
	FromSpmid string `protobuf:"bytes,7,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
}

func (x *CacheViewReq) Reset() {
	*x = CacheViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheViewReq) ProtoMessage() {}

func (x *CacheViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheViewReq.ProtoReflect.Descriptor instead.
func (*CacheViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{21}
}

func (x *CacheViewReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CacheViewReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *CacheViewReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CacheViewReq) GetTrackid() string {
	if x != nil {
		return x.Trackid
	}
	return ""
}

func (x *CacheViewReq) GetAdExtra() string {
	if x != nil {
		return x.AdExtra
	}
	return ""
}

func (x *CacheViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *CacheViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

// Chronos灰度管理
type Chronos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源包md5
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	// 资源包
	File string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Sign string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *Chronos) Reset() {
	*x = Chronos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chronos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chronos) ProtoMessage() {}

func (x *Chronos) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chronos.ProtoReflect.Descriptor instead.
func (*Chronos) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{22}
}

func (x *Chronos) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *Chronos) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Chronos) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type ChronosPkgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceKey      string `protobuf:"bytes,1,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
	EngineVersion   string `protobuf:"bytes,2,opt,name=engine_version,json=engineVersion,proto3" json:"engine_version,omitempty"`
	MessageProtocol string `protobuf:"bytes,3,opt,name=message_protocol,json=messageProtocol,proto3" json:"message_protocol,omitempty"`
}

func (x *ChronosPkgReq) Reset() {
	*x = ChronosPkgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChronosPkgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChronosPkgReq) ProtoMessage() {}

func (x *ChronosPkgReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChronosPkgReq.ProtoReflect.Descriptor instead.
func (*ChronosPkgReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{23}
}

func (x *ChronosPkgReq) GetServiceKey() string {
	if x != nil {
		return x.ServiceKey
	}
	return ""
}

func (x *ChronosPkgReq) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *ChronosPkgReq) GetMessageProtocol() string {
	if x != nil {
		return x.MessageProtocol
	}
	return ""
}

// 点击大型活动页预约-请求
type ClickActivitySeasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 预约类型
	OrderType BizType `protobuf:"varint,1,opt,name=order_type,json=orderType,proto3,enum=bilibili.app.view.v1.BizType" json:"order_type,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,2,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 业务参数
	//
	// Types that are assignable to OrderParam:
	//
	//	*ClickActivitySeasonReq_Reserve
	//	*ClickActivitySeasonReq_FavSeason
	OrderParam isClickActivitySeasonReq_OrderParam `protobuf_oneof:"order_param"`
	// 操作
	// 0:操作 1:取消操作
	Action int64 `protobuf:"varint,5,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ClickActivitySeasonReq) Reset() {
	*x = ClickActivitySeasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickActivitySeasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickActivitySeasonReq) ProtoMessage() {}

func (x *ClickActivitySeasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickActivitySeasonReq.ProtoReflect.Descriptor instead.
func (*ClickActivitySeasonReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{24}
}

func (x *ClickActivitySeasonReq) GetOrderType() BizType {
	if x != nil {
		return x.OrderType
	}
	return BizType_BizTypeNone
}

func (x *ClickActivitySeasonReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (m *ClickActivitySeasonReq) GetOrderParam() isClickActivitySeasonReq_OrderParam {
	if m != nil {
		return m.OrderParam
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetReserve() *BizReserveActivityParam {
	if x, ok := x.GetOrderParam().(*ClickActivitySeasonReq_Reserve); ok {
		return x.Reserve
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetFavSeason() *BizFavSeasonParam {
	if x, ok := x.GetOrderParam().(*ClickActivitySeasonReq_FavSeason); ok {
		return x.FavSeason
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type isClickActivitySeasonReq_OrderParam interface {
	isClickActivitySeasonReq_OrderParam()
}

type ClickActivitySeasonReq_Reserve struct {
	// 预约活动参数
	Reserve *BizReserveActivityParam `protobuf:"bytes,3,opt,name=reserve,proto3,oneof"`
}

type ClickActivitySeasonReq_FavSeason struct {
	// 收藏合集参数
	FavSeason *BizFavSeasonParam `protobuf:"bytes,4,opt,name=fav_season,json=favSeason,proto3,oneof"`
}

func (*ClickActivitySeasonReq_Reserve) isClickActivitySeasonReq_OrderParam() {}

func (*ClickActivitySeasonReq_FavSeason) isClickActivitySeasonReq_OrderParam() {}

// 点击播放器卡片-响应
type ClickPlayerCardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClickPlayerCardReply) Reset() {
	*x = ClickPlayerCardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickPlayerCardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickPlayerCardReply) ProtoMessage() {}

func (x *ClickPlayerCardReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickPlayerCardReply.ProtoReflect.Descriptor instead.
func (*ClickPlayerCardReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{25}
}

func (x *ClickPlayerCardReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 点击播放器卡片-请求
type ClickPlayerCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 稿件avid
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// 操作
	// 0:操作 1:取消操作
	Action int64 `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,5,opt,name=spmid,proto3" json:"spmid,omitempty"`
}

func (x *ClickPlayerCardReq) Reset() {
	*x = ClickPlayerCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickPlayerCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickPlayerCardReq) ProtoMessage() {}

func (x *ClickPlayerCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickPlayerCardReq.ProtoReflect.Descriptor instead.
func (*ClickPlayerCardReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{26}
}

func (x *ClickPlayerCardReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClickPlayerCardReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ClickPlayerCardReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ClickPlayerCardReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ClickPlayerCardReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

// 广告
type CM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告数据(需解包)
	SourceContent *anypb.Any `protobuf:"bytes,1,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
}

func (x *CM) Reset() {
	*x = CM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CM) ProtoMessage() {}

func (x *CM) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CM.ProtoReflect.Descriptor instead.
func (*CM) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{27}
}

func (x *CM) GetSourceContent() *anypb.Any {
	if x != nil {
		return x.SourceContent
	}
	return nil
}

// 广告配置
type CMConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告配置数据(需要二次解包)
	AdsControl *anypb.Any `protobuf:"bytes,1,opt,name=ads_control,json=adsControl,proto3" json:"ads_control,omitempty"`
}

func (x *CMConfig) Reset() {
	*x = CMConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMConfig) ProtoMessage() {}

func (x *CMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMConfig.ProtoReflect.Descriptor instead.
func (*CMConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{28}
}

func (x *CMConfig) GetAdsControl() *anypb.Any {
	if x != nil {
		return x.AdsControl
	}
	return nil
}

type CmIpad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cm       *CM        `protobuf:"bytes,1,opt,name=cm,proto3" json:"cm,omitempty"`
	Author   *v1.Author `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Stat     *v1.Stat   `protobuf:"bytes,3,opt,name=stat,proto3" json:"stat,omitempty"`
	Duration int64      `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Aid      int64      `protobuf:"varint,5,opt,name=aid,proto3" json:"aid,omitempty"`
}

func (x *CmIpad) Reset() {
	*x = CmIpad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmIpad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmIpad) ProtoMessage() {}

func (x *CmIpad) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmIpad.ProtoReflect.Descriptor instead.
func (*CmIpad) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{29}
}

func (x *CmIpad) GetCm() *CM {
	if x != nil {
		return x.Cm
	}
	return nil
}

func (x *CmIpad) GetAuthor() *v1.Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *CmIpad) GetStat() *v1.Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *CmIpad) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CmIpad) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type CoinCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toast string `protobuf:"bytes,1,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *CoinCustom) Reset() {
	*x = CoinCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinCustom) ProtoMessage() {}

func (x *CoinCustom) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinCustom.ProtoReflect.Descriptor instead.
func (*CoinCustom) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{30}
}

func (x *CoinCustom) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

// 互动弹幕条目信息
type CommandDm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 弹幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 对象视频cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 发送者mid
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 互动弹幕指令
	Command string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	// 互动弹幕正文
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 出现时间
	Progress int32 `protobuf:"varint,6,opt,name=progress,proto3" json:"progress,omitempty"`
	// 创建时间
	Ctime string `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 发布时间
	Mtime string `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// 扩展json数据
	Extra string `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	// 弹幕id str类型
	IdStr string `protobuf:"bytes,10,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
}

func (x *CommandDm) Reset() {
	*x = CommandDm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDm) ProtoMessage() {}

func (x *CommandDm) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDm.ProtoReflect.Descriptor instead.
func (*CommandDm) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{31}
}

func (x *CommandDm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommandDm) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CommandDm) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CommandDm) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandDm) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommandDm) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CommandDm) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *CommandDm) GetMtime() string {
	if x != nil {
		return x.Mtime
	}
	return ""
}

func (x *CommandDm) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *CommandDm) GetIdStr() string {
	if x != nil {
		return x.IdStr
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 下方推荐项标题
	RelatesTitle string `protobuf:"bytes,1,opt,name=relates_title,json=relatesTitle,proto3" json:"relates_title,omitempty"`
	RelatesStyle int32  `protobuf:"varint,2,opt,name=relates_style,json=relatesStyle,proto3" json:"relates_style,omitempty"`
	RelateGifExp int32  `protobuf:"varint,3,opt,name=relate_gif_exp,json=relateGifExp,proto3" json:"relate_gif_exp,omitempty"`
	EndPageHalf  int32  `protobuf:"varint,4,opt,name=end_page_half,json=endPageHalf,proto3" json:"end_page_half,omitempty"`
	EndPageFull  int32  `protobuf:"varint,5,opt,name=end_page_full,json=endPageFull,proto3" json:"end_page_full,omitempty"`
	// 退出是否自动小窗
	AutoSwindow        bool            `protobuf:"varint,6,opt,name=auto_swindow,json=autoSwindow,proto3" json:"auto_swindow,omitempty"`
	PopupInfo          bool            `protobuf:"varint,7,opt,name=popup_info,json=popupInfo,proto3" json:"popup_info,omitempty"`
	AbtestSmallWindow  string          `protobuf:"bytes,8,opt,name=abtest_small_window,json=abtestSmallWindow,proto3" json:"abtest_small_window,omitempty"`
	RecThreePointStyle int32           `protobuf:"varint,9,opt,name=rec_three_point_style,json=recThreePointStyle,proto3" json:"rec_three_point_style,omitempty"`
	IsAbsoluteTime     bool            `protobuf:"varint,10,opt,name=is_absolute_time,json=isAbsoluteTime,proto3" json:"is_absolute_time,omitempty"`
	NewSwindow         bool            `protobuf:"varint,11,opt,name=new_swindow,json=newSwindow,proto3" json:"new_swindow,omitempty"`
	RelatesBiserial    bool            `protobuf:"varint,12,opt,name=relates_biserial,json=relatesBiserial,proto3" json:"relates_biserial,omitempty"`
	ListenerConf       *ListenerConfig `protobuf:"bytes,13,opt,name=listener_conf,json=listenerConf,proto3" json:"listener_conf,omitempty"`
	RelatesFeedStyle   string          `protobuf:"bytes,14,opt,name=relates_feed_style,json=relatesFeedStyle,proto3" json:"relates_feed_style,omitempty"`
	RelatesFeedPopup   bool            `protobuf:"varint,15,opt,name=relates_feed_popup,json=relatesFeedPopup,proto3" json:"relates_feed_popup,omitempty"`
	RelatesHasNext     bool            `protobuf:"varint,16,opt,name=relates_has_next,json=relatesHasNext,proto3" json:"relates_has_next,omitempty"`
	LocalPlay          int32           `protobuf:"varint,17,opt,name=local_play,json=localPlay,proto3" json:"local_play,omitempty"`
	PlayStory          bool            `protobuf:"varint,18,opt,name=play_story,json=playStory,proto3" json:"play_story,omitempty"`
	ArcPlayStory       bool            `protobuf:"varint,19,opt,name=arc_play_story,json=arcPlayStory,proto3" json:"arc_play_story,omitempty"`
	StoryIcon          string          `protobuf:"bytes,20,opt,name=story_icon,json=storyIcon,proto3" json:"story_icon,omitempty"`
	LandscapeStory     bool            `protobuf:"varint,21,opt,name=landscape_story,json=landscapeStory,proto3" json:"landscape_story,omitempty"`
	ArcLandscapeStory  bool            `protobuf:"varint,22,opt,name=arc_landscape_story,json=arcLandscapeStory,proto3" json:"arc_landscape_story,omitempty"`
	LandscapeIcon      string          `protobuf:"bytes,23,opt,name=landscape_icon,json=landscapeIcon,proto3" json:"landscape_icon,omitempty"`
	ShowListenButton   bool            `protobuf:"varint,24,opt,name=show_listen_button,json=showListenButton,proto3" json:"show_listen_button,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{32}
}

func (x *Config) GetRelatesTitle() string {
	if x != nil {
		return x.RelatesTitle
	}
	return ""
}

func (x *Config) GetRelatesStyle() int32 {
	if x != nil {
		return x.RelatesStyle
	}
	return 0
}

func (x *Config) GetRelateGifExp() int32 {
	if x != nil {
		return x.RelateGifExp
	}
	return 0
}

func (x *Config) GetEndPageHalf() int32 {
	if x != nil {
		return x.EndPageHalf
	}
	return 0
}

func (x *Config) GetEndPageFull() int32 {
	if x != nil {
		return x.EndPageFull
	}
	return 0
}

func (x *Config) GetAutoSwindow() bool {
	if x != nil {
		return x.AutoSwindow
	}
	return false
}

func (x *Config) GetPopupInfo() bool {
	if x != nil {
		return x.PopupInfo
	}
	return false
}

func (x *Config) GetAbtestSmallWindow() string {
	if x != nil {
		return x.AbtestSmallWindow
	}
	return ""
}

func (x *Config) GetRecThreePointStyle() int32 {
	if x != nil {
		return x.RecThreePointStyle
	}
	return 0
}

func (x *Config) GetIsAbsoluteTime() bool {
	if x != nil {
		return x.IsAbsoluteTime
	}
	return false
}

func (x *Config) GetNewSwindow() bool {
	if x != nil {
		return x.NewSwindow
	}
	return false
}

func (x *Config) GetRelatesBiserial() bool {
	if x != nil {
		return x.RelatesBiserial
	}
	return false
}

func (x *Config) GetListenerConf() *ListenerConfig {
	if x != nil {
		return x.ListenerConf
	}
	return nil
}

func (x *Config) GetRelatesFeedStyle() string {
	if x != nil {
		return x.RelatesFeedStyle
	}
	return ""
}

func (x *Config) GetRelatesFeedPopup() bool {
	if x != nil {
		return x.RelatesFeedPopup
	}
	return false
}

func (x *Config) GetRelatesHasNext() bool {
	if x != nil {
		return x.RelatesHasNext
	}
	return false
}

func (x *Config) GetLocalPlay() int32 {
	if x != nil {
		return x.LocalPlay
	}
	return 0
}

func (x *Config) GetPlayStory() bool {
	if x != nil {
		return x.PlayStory
	}
	return false
}

func (x *Config) GetArcPlayStory() bool {
	if x != nil {
		return x.ArcPlayStory
	}
	return false
}

func (x *Config) GetStoryIcon() string {
	if x != nil {
		return x.StoryIcon
	}
	return ""
}

func (x *Config) GetLandscapeStory() bool {
	if x != nil {
		return x.LandscapeStory
	}
	return false
}

func (x *Config) GetArcLandscapeStory() bool {
	if x != nil {
		return x.ArcLandscapeStory
	}
	return false
}

func (x *Config) GetLandscapeIcon() string {
	if x != nil {
		return x.LandscapeIcon
	}
	return ""
}

func (x *Config) GetShowListenButton() bool {
	if x != nil {
		return x.ShowListenButton
	}
	return false
}

type ContinuousPlayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relates []*Relate `protobuf:"bytes,1,rep,name=relates,proto3" json:"relates,omitempty"`
}

func (x *ContinuousPlayReply) Reset() {
	*x = ContinuousPlayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousPlayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousPlayReply) ProtoMessage() {}

func (x *ContinuousPlayReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousPlayReply.ProtoReflect.Descriptor instead.
func (*ContinuousPlayReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{33}
}

func (x *ContinuousPlayReply) GetRelates() []*Relate {
	if x != nil {
		return x.Relates
	}
	return nil
}

type ContinuousPlayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid        int64           `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	From       string          `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Trackid    string          `protobuf:"bytes,3,opt,name=trackid,proto3" json:"trackid,omitempty"`
	Spmid      string          `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	FromSpmid  string          `protobuf:"bytes,5,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	Autoplay   int32           `protobuf:"varint,6,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	PlayerArgs *v11.PlayerArgs `protobuf:"bytes,7,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	DeviceType int64           `protobuf:"varint,8,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	SessionId  string          `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DisplayId  int64           `protobuf:"varint,10,opt,name=display_id,json=displayId,proto3" json:"display_id,omitempty"`
}

func (x *ContinuousPlayReq) Reset() {
	*x = ContinuousPlayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousPlayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousPlayReq) ProtoMessage() {}

func (x *ContinuousPlayReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousPlayReq.ProtoReflect.Descriptor instead.
func (*ContinuousPlayReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{34}
}

func (x *ContinuousPlayReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ContinuousPlayReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ContinuousPlayReq) GetTrackid() string {
	if x != nil {
		return x.Trackid
	}
	return ""
}

func (x *ContinuousPlayReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ContinuousPlayReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *ContinuousPlayReq) GetAutoplay() int32 {
	if x != nil {
		return x.Autoplay
	}
	return 0
}

func (x *ContinuousPlayReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *ContinuousPlayReq) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ContinuousPlayReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ContinuousPlayReq) GetDisplayId() int64 {
	if x != nil {
		return x.DisplayId
	}
	return 0
}

// 契约卡
type ContractCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要触发的播放进度百分比
	DisplayProgress float32 `protobuf:"fixed32,1,opt,name=display_progress,json=displayProgress,proto3" json:"display_progress,omitempty"`
	// 触发位置的前后误差(单位ms)
	DisplayAccuracy int64 `protobuf:"varint,2,opt,name=display_accuracy,json=displayAccuracy,proto3" json:"display_accuracy,omitempty"`
	// 展示持续时间(单位ms)
	DisplayDuration int64 `protobuf:"varint,3,opt,name=display_duration,json=displayDuration,proto3" json:"display_duration,omitempty"`
	// 弹出模式
	// 0: 原有模式 1: 半屏弹出 2: 全屏、半屏均弹出
	ShowMode int32 `protobuf:"varint,4,opt,name=show_mode,json=showMode,proto3" json:"show_mode,omitempty"`
	// 提示页面
	// 0: 原有页面 1: 6.23版本新页面
	PageType int32 `protobuf:"varint,5,opt,name=page_type,json=pageType,proto3" json:"page_type,omitempty"`
	// UP主信息
	Upper                    *UpperInfos   `protobuf:"bytes,6,opt,name=upper,proto3" json:"upper,omitempty"`
	IsFollowDisplay          int32         `protobuf:"varint,7,opt,name=is_follow_display,json=isFollowDisplay,proto3" json:"is_follow_display,omitempty"`
	Text                     *ContractText `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	FollowDisplayEndDuration int64         `protobuf:"varint,9,opt,name=follow_display_end_duration,json=followDisplayEndDuration,proto3" json:"follow_display_end_duration,omitempty"`
	IsPlayDisplay            int32         `protobuf:"varint,10,opt,name=is_play_display,json=isPlayDisplay,proto3" json:"is_play_display,omitempty"`
	IsInteractDisplay        int32         `protobuf:"varint,11,opt,name=is_interact_display,json=isInteractDisplay,proto3" json:"is_interact_display,omitempty"`
	PlayDisplaySwitch        bool          `protobuf:"varint,12,opt,name=play_display_switch,json=playDisplaySwitch,proto3" json:"play_display_switch,omitempty"`
}

func (x *ContractCard) Reset() {
	*x = ContractCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCard) ProtoMessage() {}

func (x *ContractCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCard.ProtoReflect.Descriptor instead.
func (*ContractCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{35}
}

func (x *ContractCard) GetDisplayProgress() float32 {
	if x != nil {
		return x.DisplayProgress
	}
	return 0
}

func (x *ContractCard) GetDisplayAccuracy() int64 {
	if x != nil {
		return x.DisplayAccuracy
	}
	return 0
}

func (x *ContractCard) GetDisplayDuration() int64 {
	if x != nil {
		return x.DisplayDuration
	}
	return 0
}

func (x *ContractCard) GetShowMode() int32 {
	if x != nil {
		return x.ShowMode
	}
	return 0
}

func (x *ContractCard) GetPageType() int32 {
	if x != nil {
		return x.PageType
	}
	return 0
}

func (x *ContractCard) GetUpper() *UpperInfos {
	if x != nil {
		return x.Upper
	}
	return nil
}

func (x *ContractCard) GetIsFollowDisplay() int32 {
	if x != nil {
		return x.IsFollowDisplay
	}
	return 0
}

func (x *ContractCard) GetText() *ContractText {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ContractCard) GetFollowDisplayEndDuration() int64 {
	if x != nil {
		return x.FollowDisplayEndDuration
	}
	return 0
}

func (x *ContractCard) GetIsPlayDisplay() int32 {
	if x != nil {
		return x.IsPlayDisplay
	}
	return 0
}

func (x *ContractCard) GetIsInteractDisplay() int32 {
	if x != nil {
		return x.IsInteractDisplay
	}
	return 0
}

func (x *ContractCard) GetPlayDisplaySwitch() bool {
	if x != nil {
		return x.PlayDisplaySwitch
	}
	return false
}

type ContractText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle    string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	InlineTitle string `protobuf:"bytes,3,opt,name=inline_title,json=inlineTitle,proto3" json:"inline_title,omitempty"`
}

func (x *ContractText) Reset() {
	*x = ContractText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractText) ProtoMessage() {}

func (x *ContractText) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractText.ProtoReflect.Descriptor instead.
func (*ContractText) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{36}
}

func (x *ContractText) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ContractText) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ContractText) GetInlineTitle() string {
	if x != nil {
		return x.InlineTitle
	}
	return ""
}

type CreativeContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ButtonTitle string `protobuf:"bytes,3,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	VideoId     int64  `protobuf:"varint,4,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Username    string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	ImageUrl    string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ImageMd5    string `protobuf:"bytes,7,opt,name=image_md5,json=imageMd5,proto3" json:"image_md5,omitempty"`
	LogUrl      string `protobuf:"bytes,8,opt,name=log_url,json=logUrl,proto3" json:"log_url,omitempty"`
	LogMd5      string `protobuf:"bytes,9,opt,name=log_md5,json=logMd5,proto3" json:"log_md5,omitempty"`
	Url         string `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	ClickUrl    string `protobuf:"bytes,11,opt,name=click_url,json=clickUrl,proto3" json:"click_url,omitempty"`
	ShowUrl     string `protobuf:"bytes,12,opt,name=show_url,json=showUrl,proto3" json:"show_url,omitempty"`
}

func (x *CreativeContent) Reset() {
	*x = CreativeContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeContent) ProtoMessage() {}

func (x *CreativeContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeContent.ProtoReflect.Descriptor instead.
func (*CreativeContent) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{37}
}

func (x *CreativeContent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreativeContent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreativeContent) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

func (x *CreativeContent) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *CreativeContent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreativeContent) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreativeContent) GetImageMd5() string {
	if x != nil {
		return x.ImageMd5
	}
	return ""
}

func (x *CreativeContent) GetLogUrl() string {
	if x != nil {
		return x.LogUrl
	}
	return ""
}

func (x *CreativeContent) GetLogMd5() string {
	if x != nil {
		return x.LogMd5
	}
	return ""
}

func (x *CreativeContent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreativeContent) GetClickUrl() string {
	if x != nil {
		return x.ClickUrl
	}
	return ""
}

func (x *CreativeContent) GetShowUrl() string {
	if x != nil {
		return x.ShowUrl
	}
	return ""
}

// 404页信息
type CustomConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 重定向页面url
	RedirectUrl string `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *CustomConfig) Reset() {
	*x = CustomConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomConfig) ProtoMessage() {}

func (x *CustomConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomConfig.ProtoReflect.Descriptor instead.
func (*CustomConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{38}
}

func (x *CustomConfig) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

// 特殊稿件简介
type DescV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文本内容
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文本类型
	Type DescType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.view.v1.DescType" json:"type,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 资源ID
	Rid int64 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *DescV2) Reset() {
	*x = DescV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescV2) ProtoMessage() {}

func (x *DescV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescV2.ProtoReflect.Descriptor instead.
func (*DescV2) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{39}
}

func (x *DescV2) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DescV2) GetType() DescType {
	if x != nil {
		return x.Type
	}
	return DescType_DescTypeUnknown
}

func (x *DescV2) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DescV2) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

// 不喜欢原因
type Dislike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 原因项列表
	Reasons []*DislikeReasons `protobuf:"bytes,3,rep,name=reasons,proto3" json:"reasons,omitempty"`
}

func (x *Dislike) Reset() {
	*x = Dislike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dislike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dislike) ProtoMessage() {}

func (x *Dislike) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dislike.ProtoReflect.Descriptor instead.
func (*Dislike) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{40}
}

func (x *Dislike) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dislike) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *Dislike) GetReasons() []*DislikeReasons {
	if x != nil {
		return x.Reasons
	}
	return nil
}

// 不喜欢原因项
type DislikeReasons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// 1:全部类型 3:TAG 4:UP主
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 相关UP主mid
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	// 相关分区tid
	Rid int32 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	// 相关TAG id
	TagId int64 `protobuf:"varint,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// 相关名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DislikeReasons) Reset() {
	*x = DislikeReasons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeReasons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeReasons) ProtoMessage() {}

func (x *DislikeReasons) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeReasons.ProtoReflect.Descriptor instead.
func (*DislikeReasons) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{41}
}

func (x *DislikeReasons) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DislikeReasons) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DislikeReasons) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DislikeReasons) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *DislikeReasons) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 分P弹幕信息
type DM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分P是否关闭弹幕
	// 0:正常 1:关闭
	Closed   bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
	RealName bool `protobuf:"varint,2,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	// 分P弹幕总数
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DM) Reset() {
	*x = DM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DM) ProtoMessage() {}

func (x *DM) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DM.ProtoReflect.Descriptor instead.
func (*DM) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{42}
}

func (x *DM) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *DM) GetRealName() bool {
	if x != nil {
		return x.RealName
	}
	return false
}

func (x *DM) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 充电排行信息
type ElecRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 充电排行列表
	List []*ElecRankItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 充电用户数
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Text  string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ElecRank) Reset() {
	*x = ElecRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElecRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElecRank) ProtoMessage() {}

func (x *ElecRank) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElecRank.ProtoReflect.Descriptor instead.
func (*ElecRank) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{43}
}

func (x *ElecRank) GetList() []*ElecRankItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ElecRank) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ElecRank) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 充电用户信息
type ElecRankItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户头像url
	Avatar string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 充电留言
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *ElecRankItem) Reset() {
	*x = ElecRankItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElecRankItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElecRankItem) ProtoMessage() {}

func (x *ElecRankItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElecRankItem.ProtoReflect.Descriptor instead.
func (*ElecRankItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{44}
}

func (x *ElecRankItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ElecRankItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ElecRankItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ElecRankItem) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

// 视频合集单话信息
type Episode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集单话id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 稿件avid
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频1P cid
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 稿件封面url
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 投稿时间显示文案
	CoverRightText string `protobuf:"bytes,6,opt,name=coverRightText,proto3" json:"coverRightText,omitempty"`
	// 视频分P信息
	Page *v1.Page `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
	// 视频状态数
	Stat *v1.Stat `protobuf:"bytes,8,opt,name=stat,proto3" json:"stat,omitempty"`
	// 稿件bvid
	Bvid string `protobuf:"bytes,9,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 稿件UP主信息
	Author     *v1.Author  `protobuf:"bytes,10,opt,name=author,proto3" json:"author,omitempty"`
	AuthorDesc string      `protobuf:"bytes,11,opt,name=author_desc,json=authorDesc,proto3" json:"author_desc,omitempty"`
	BadgeStyle *BadgeStyle `protobuf:"bytes,12,opt,name=badge_style,json=badgeStyle,proto3" json:"badge_style,omitempty"`
	NeedPay    bool        `protobuf:"varint,13,opt,name=need_pay,json=needPay,proto3" json:"need_pay,omitempty"`
	EpisodePay bool        `protobuf:"varint,14,opt,name=episode_pay,json=episodePay,proto3" json:"episode_pay,omitempty"`
	FreeWatch  bool        `protobuf:"varint,15,opt,name=free_watch,json=freeWatch,proto3" json:"free_watch,omitempty"`
	FirstFrame string      `protobuf:"bytes,16,opt,name=first_frame,json=firstFrame,proto3" json:"first_frame,omitempty"`
}

func (x *Episode) Reset() {
	*x = Episode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Episode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Episode) ProtoMessage() {}

func (x *Episode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Episode.ProtoReflect.Descriptor instead.
func (*Episode) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{45}
}

func (x *Episode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Episode) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Episode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Episode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Episode) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Episode) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

func (x *Episode) GetPage() *v1.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *Episode) GetStat() *v1.Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *Episode) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *Episode) GetAuthor() *v1.Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Episode) GetAuthorDesc() string {
	if x != nil {
		return x.AuthorDesc
	}
	return ""
}

func (x *Episode) GetBadgeStyle() *BadgeStyle {
	if x != nil {
		return x.BadgeStyle
	}
	return nil
}

func (x *Episode) GetNeedPay() bool {
	if x != nil {
		return x.NeedPay
	}
	return false
}

func (x *Episode) GetEpisodePay() bool {
	if x != nil {
		return x.EpisodePay
	}
	return false
}

func (x *Episode) GetFreeWatch() bool {
	if x != nil {
		return x.FreeWatch
	}
	return false
}

func (x *Episode) GetFirstFrame() string {
	if x != nil {
		return x.FirstFrame
	}
	return ""
}

// 播放器卡片曝光-请求
type ExposePlayerCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	CardType PlayerCardType `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3,enum=bilibili.app.view.v1.PlayerCardType" json:"card_type,omitempty"`
	// 稿件avid
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
}

func (x *ExposePlayerCardReq) Reset() {
	*x = ExposePlayerCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExposePlayerCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExposePlayerCardReq) ProtoMessage() {}

func (x *ExposePlayerCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExposePlayerCardReq.ProtoReflect.Descriptor instead.
func (*ExposePlayerCardReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{46}
}

func (x *ExposePlayerCardReq) GetCardType() PlayerCardType {
	if x != nil {
		return x.CardType
	}
	return PlayerCardType_PlayerCardTypeNone_VALUE
}

func (x *ExposePlayerCardReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ExposePlayerCardReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ExposePlayerCardReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

type FeedViewItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    *ViewReply `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Goto    string     `protobuf:"bytes,2,opt,name=goto,proto3" json:"goto,omitempty"`
	Uri     string     `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	TrackId string     `protobuf:"bytes,4,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
}

func (x *FeedViewItem) Reset() {
	*x = FeedViewItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedViewItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedViewItem) ProtoMessage() {}

func (x *FeedViewItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedViewItem.ProtoReflect.Descriptor instead.
func (*FeedViewItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{47}
}

func (x *FeedViewItem) GetView() *ViewReply {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *FeedViewItem) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *FeedViewItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *FeedViewItem) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type FeedViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*FeedViewItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasNext bool            `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *FeedViewReply) Reset() {
	*x = FeedViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedViewReply) ProtoMessage() {}

func (x *FeedViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedViewReply.ProtoReflect.Descriptor instead.
func (*FeedViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{48}
}

func (x *FeedViewReply) GetList() []*FeedViewItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FeedViewReply) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type FeedViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid         int64           `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid        string          `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	From        string          `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Spmid       string          `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	FromSpmid   string          `protobuf:"bytes,5,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs  *v11.PlayerArgs `protobuf:"bytes,6,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	DisplayId   int64           `protobuf:"varint,7,opt,name=display_id,json=displayId,proto3" json:"display_id,omitempty"`
	SessionId   string          `protobuf:"bytes,8,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	PageVersion string          `protobuf:"bytes,9,opt,name=page_version,json=pageVersion,proto3" json:"page_version,omitempty"`
	FromTrackId string          `protobuf:"bytes,10,opt,name=from_track_id,json=fromTrackId,proto3" json:"from_track_id,omitempty"`
}

func (x *FeedViewReq) Reset() {
	*x = FeedViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedViewReq) ProtoMessage() {}

func (x *FeedViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedViewReq.ProtoReflect.Descriptor instead.
func (*FeedViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{49}
}

func (x *FeedViewReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *FeedViewReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *FeedViewReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FeedViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *FeedViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *FeedViewReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *FeedViewReq) GetDisplayId() int64 {
	if x != nil {
		return x.DisplayId
	}
	return 0
}

func (x *FeedViewReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *FeedViewReq) GetPageVersion() string {
	if x != nil {
		return x.PageVersion
	}
	return ""
}

func (x *FeedViewReq) GetFromTrackId() string {
	if x != nil {
		return x.FromTrackId
	}
	return ""
}

type GetArcsPlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArcsPlayer []*ArcsPlayer `protobuf:"bytes,1,rep,name=arcs_player,json=arcsPlayer,proto3" json:"arcs_player,omitempty"`
}

func (x *GetArcsPlayerReply) Reset() {
	*x = GetArcsPlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArcsPlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArcsPlayerReply) ProtoMessage() {}

func (x *GetArcsPlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArcsPlayerReply.ProtoReflect.Descriptor instead.
func (*GetArcsPlayerReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{50}
}

func (x *GetArcsPlayerReply) GetArcsPlayer() []*ArcsPlayer {
	if x != nil {
		return x.ArcsPlayer
	}
	return nil
}

type GetArcsPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayAvs    []*PlayAv       `protobuf:"bytes,1,rep,name=play_avs,json=playAvs,proto3" json:"play_avs,omitempty"`
	PlayerArgs *v11.PlayerArgs `protobuf:"bytes,2,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *GetArcsPlayerReq) Reset() {
	*x = GetArcsPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArcsPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArcsPlayerReq) ProtoMessage() {}

func (x *GetArcsPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArcsPlayerReq.ProtoReflect.Descriptor instead.
func (*GetArcsPlayerReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{51}
}

func (x *GetArcsPlayerReq) GetPlayAvs() []*PlayAv {
	if x != nil {
		return x.PlayAvs
	}
	return nil
}

func (x *GetArcsPlayerReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type GoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId    string   `protobuf:"bytes,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	Category   int32    `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	GoodsPrice int64    `protobuf:"varint,3,opt,name=goods_price,json=goodsPrice,proto3" json:"goods_price,omitempty"`
	PayState   PayState `protobuf:"varint,4,opt,name=pay_state,json=payState,proto3,enum=bilibili.app.view.v1.PayState" json:"pay_state,omitempty"`
	GoodsName  string   `protobuf:"bytes,5,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`
	PriceFmt   string   `protobuf:"bytes,6,opt,name=price_fmt,json=priceFmt,proto3" json:"price_fmt,omitempty"`
}

func (x *GoodsInfo) Reset() {
	*x = GoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfo) ProtoMessage() {}

func (x *GoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfo.ProtoReflect.Descriptor instead.
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{52}
}

func (x *GoodsInfo) GetGoodsId() string {
	if x != nil {
		return x.GoodsId
	}
	return ""
}

func (x *GoodsInfo) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GoodsInfo) GetGoodsPrice() int64 {
	if x != nil {
		return x.GoodsPrice
	}
	return 0
}

func (x *GoodsInfo) GetPayState() PayState {
	if x != nil {
		return x.PayState
	}
	return PayState_PayStateUnknown
}

func (x *GoodsInfo) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *GoodsInfo) GetPriceFmt() string {
	if x != nil {
		return x.PriceFmt
	}
	return ""
}

// 稿件观看进度
type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 播放进度分P cid
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// 播放进度时间
	// 0:未观看 -1:已看完 正整数:播放时间进度
	Progress int64 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{53}
}

func (x *History) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *History) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// 稿件获得荣誉信息
type Honor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 荣誉栏图标url
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 荣誉栏图标url 夜间模式
	IconNight string `protobuf:"bytes,2,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	// 荣誉文案
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// 荣誉副文案
	TextExtra string `protobuf:"bytes,4,opt,name=text_extra,json=textExtra,proto3" json:"text_extra,omitempty"`
	// 标题颜色
	TextColor string `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 标题颜色 夜间模式
	TextColorNight string `protobuf:"bytes,6,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景颜色
	BgColor string `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 背景颜色 夜间模式
	BgColorNight string `protobuf:"bytes,8,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 跳转uri
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	// 跳转角标文案
	UrlText string `protobuf:"bytes,10,opt,name=url_text,json=urlText,proto3" json:"url_text,omitempty"`
}

func (x *Honor) Reset() {
	*x = Honor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Honor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Honor) ProtoMessage() {}

func (x *Honor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Honor.ProtoReflect.Descriptor instead.
func (*Honor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{54}
}

func (x *Honor) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Honor) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Honor) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Honor) GetTextExtra() string {
	if x != nil {
		return x.TextExtra
	}
	return ""
}

func (x *Honor) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Honor) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *Honor) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Honor) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *Honor) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Honor) GetUrlText() string {
	if x != nil {
		return x.UrlText
	}
	return ""
}

type IconData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaJson  string `protobuf:"bytes,1,opt,name=meta_json,json=metaJson,proto3" json:"meta_json,omitempty"`
	SpritsImg string `protobuf:"bytes,2,opt,name=sprits_img,json=spritsImg,proto3" json:"sprits_img,omitempty"`
}

func (x *IconData) Reset() {
	*x = IconData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconData) ProtoMessage() {}

func (x *IconData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconData.ProtoReflect.Descriptor instead.
func (*IconData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{55}
}

func (x *IconData) GetMetaJson() string {
	if x != nil {
		return x.MetaJson
	}
	return ""
}

func (x *IconData) GetSpritsImg() string {
	if x != nil {
		return x.SpritsImg
	}
	return ""
}

type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryNode  *Node  `protobuf:"bytes,1,opt,name=history_node,json=historyNode,proto3" json:"history_node,omitempty"`
	GraphVersion int64  `protobuf:"varint,2,opt,name=graph_version,json=graphVersion,proto3" json:"graph_version,omitempty"`
	Msg          string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Evaluation   string `protobuf:"bytes,4,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	Mark         int64  `protobuf:"varint,5,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{56}
}

func (x *Interaction) GetHistoryNode() *Node {
	if x != nil {
		return x.HistoryNode
	}
	return nil
}

func (x *Interaction) GetGraphVersion() int64 {
	if x != nil {
		return x.GraphVersion
	}
	return 0
}

func (x *Interaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Interaction) GetEvaluation() string {
	if x != nil {
		return x.Evaluation
	}
	return ""
}

func (x *Interaction) GetMark() int64 {
	if x != nil {
		return x.Mark
	}
	return 0
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Uri         string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Icon        string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	IconNight   string `protobuf:"bytes,4,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	IconWidth   int64  `protobuf:"varint,5,opt,name=icon_width,json=iconWidth,proto3" json:"icon_width,omitempty"`
	IconHeight  int64  `protobuf:"varint,6,opt,name=icon_height,json=iconHeight,proto3" json:"icon_height,omitempty"`
	Lottie      string `protobuf:"bytes,7,opt,name=lottie,proto3" json:"lottie,omitempty"`
	LottieNight string `protobuf:"bytes,8,opt,name=lottie_night,json=lottieNight,proto3" json:"lottie_night,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{57}
}

func (x *Label) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Label) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Label) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Label) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Label) GetIconWidth() int64 {
	if x != nil {
		return x.IconWidth
	}
	return 0
}

func (x *Label) GetIconHeight() int64 {
	if x != nil {
		return x.IconHeight
	}
	return 0
}

func (x *Label) GetLottie() string {
	if x != nil {
		return x.Lottie
	}
	return ""
}

func (x *Label) GetLottieNight() string {
	if x != nil {
		return x.LottieNight
	}
	return ""
}

type LikeAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeIcon      string `protobuf:"bytes,1,opt,name=like_icon,json=likeIcon,proto3" json:"like_icon,omitempty"`
	LikedIcon     string `protobuf:"bytes,2,opt,name=liked_icon,json=likedIcon,proto3" json:"liked_icon,omitempty"`
	LikeAnimation string `protobuf:"bytes,3,opt,name=like_animation,json=likeAnimation,proto3" json:"like_animation,omitempty"`
}

func (x *LikeAnimation) Reset() {
	*x = LikeAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAnimation) ProtoMessage() {}

func (x *LikeAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeAnimation.ProtoReflect.Descriptor instead.
func (*LikeAnimation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{58}
}

func (x *LikeAnimation) GetLikeIcon() string {
	if x != nil {
		return x.LikeIcon
	}
	return ""
}

func (x *LikeAnimation) GetLikedIcon() string {
	if x != nil {
		return x.LikedIcon
	}
	return ""
}

func (x *LikeAnimation) GetLikeAnimation() string {
	if x != nil {
		return x.LikeAnimation
	}
	return ""
}

type LikeCustom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeSwitch         bool  `protobuf:"varint,1,opt,name=like_switch,json=likeSwitch,proto3" json:"like_switch,omitempty"`
	FullToHalfProgress int64 `protobuf:"varint,2,opt,name=full_to_half_progress,json=fullToHalfProgress,proto3" json:"full_to_half_progress,omitempty"`
	NonFullProgress    int64 `protobuf:"varint,3,opt,name=non_full_progress,json=nonFullProgress,proto3" json:"non_full_progress,omitempty"`
	UpdateCount        int64 `protobuf:"varint,4,opt,name=update_count,json=updateCount,proto3" json:"update_count,omitempty"`
}

func (x *LikeCustom) Reset() {
	*x = LikeCustom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCustom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCustom) ProtoMessage() {}

func (x *LikeCustom) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCustom.ProtoReflect.Descriptor instead.
func (*LikeCustom) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{59}
}

func (x *LikeCustom) GetLikeSwitch() bool {
	if x != nil {
		return x.LikeSwitch
	}
	return false
}

func (x *LikeCustom) GetFullToHalfProgress() int64 {
	if x != nil {
		return x.FullToHalfProgress
	}
	return 0
}

func (x *LikeCustom) GetNonFullProgress() int64 {
	if x != nil {
		return x.NonFullProgress
	}
	return 0
}

func (x *LikeCustom) GetUpdateCount() int64 {
	if x != nil {
		return x.UpdateCount
	}
	return 0
}

type ListenerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JumpStyle int64             `protobuf:"varint,1,opt,name=jump_style,json=jumpStyle,proto3" json:"jump_style,omitempty"`
	GuideBar  *ListenerGuideBar `protobuf:"bytes,2,opt,name=guide_bar,json=guideBar,proto3" json:"guide_bar,omitempty"`
}

func (x *ListenerConfig) Reset() {
	*x = ListenerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerConfig) ProtoMessage() {}

func (x *ListenerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerConfig.ProtoReflect.Descriptor instead.
func (*ListenerConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{60}
}

func (x *ListenerConfig) GetJumpStyle() int64 {
	if x != nil {
		return x.JumpStyle
	}
	return 0
}

func (x *ListenerConfig) GetGuideBar() *ListenerGuideBar {
	if x != nil {
		return x.GuideBar
	}
	return nil
}

type ListenerGuideBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowStrategy   int64  `protobuf:"varint,1,opt,name=show_strategy,json=showStrategy,proto3" json:"show_strategy,omitempty"`
	Icon           string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Text           string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	BtnText        string `protobuf:"bytes,4,opt,name=btn_text,json=btnText,proto3" json:"btn_text,omitempty"`
	ShowTime       int64  `protobuf:"varint,5,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`
	BackgroundTime int64  `protobuf:"varint,6,opt,name=background_time,json=backgroundTime,proto3" json:"background_time,omitempty"`
}

func (x *ListenerGuideBar) Reset() {
	*x = ListenerGuideBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerGuideBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerGuideBar) ProtoMessage() {}

func (x *ListenerGuideBar) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerGuideBar.ProtoReflect.Descriptor instead.
func (*ListenerGuideBar) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{61}
}

func (x *ListenerGuideBar) GetShowStrategy() int64 {
	if x != nil {
		return x.ShowStrategy
	}
	return 0
}

func (x *ListenerGuideBar) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ListenerGuideBar) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ListenerGuideBar) GetBtnText() string {
	if x != nil {
		return x.BtnText
	}
	return ""
}

func (x *ListenerGuideBar) GetShowTime() int64 {
	if x != nil {
		return x.ShowTime
	}
	return 0
}

func (x *ListenerGuideBar) GetBackgroundTime() int64 {
	if x != nil {
		return x.BackgroundTime
	}
	return 0
}

// 直播信息
type Live struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主播UID
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 直播间id
	Roomid int64 `protobuf:"varint,2,opt,name=roomid,proto3" json:"roomid,omitempty"`
	// 直播间url
	Uri        string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	EndpageUri string `protobuf:"bytes,4,opt,name=endpage_uri,json=endpageUri,proto3" json:"endpage_uri,omitempty"`
}

func (x *Live) Reset() {
	*x = Live{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Live) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Live) ProtoMessage() {}

func (x *Live) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Live.ProtoReflect.Descriptor instead.
func (*Live) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{62}
}

func (x *Live) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Live) GetRoomid() int64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *Live) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Live) GetEndpageUri() string {
	if x != nil {
		return x.EndpageUri
	}
	return ""
}

// 直播预约信息
type LiveOrderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 预约id
	Sid int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// 预约条文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 直播开始时间
	LivePlanStartTime int64 `protobuf:"varint,3,opt,name=live_plan_start_time,json=livePlanStartTime,proto3" json:"live_plan_start_time,omitempty"`
	// 是否预约
	IsFollow bool `protobuf:"varint,4,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
}

func (x *LiveOrderInfo) Reset() {
	*x = LiveOrderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveOrderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveOrderInfo) ProtoMessage() {}

func (x *LiveOrderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveOrderInfo.ProtoReflect.Descriptor instead.
func (*LiveOrderInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{63}
}

func (x *LiveOrderInfo) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *LiveOrderInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LiveOrderInfo) GetLivePlanStartTime() int64 {
	if x != nil {
		return x.LivePlanStartTime
	}
	return 0
}

func (x *LiveOrderInfo) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type MaterialLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon            string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Text            string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Url             string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	LeftType        string `protobuf:"bytes,4,opt,name=left_type,json=leftType,proto3" json:"left_type,omitempty"`
	Param           string `protobuf:"bytes,5,opt,name=param,proto3" json:"param,omitempty"`
	OperationalType string `protobuf:"bytes,6,opt,name=operational_type,json=operationalType,proto3" json:"operational_type,omitempty"`
	StaticIcon      string `protobuf:"bytes,7,opt,name=static_icon,json=staticIcon,proto3" json:"static_icon,omitempty"`
}

func (x *MaterialLeft) Reset() {
	*x = MaterialLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialLeft) ProtoMessage() {}

func (x *MaterialLeft) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialLeft.ProtoReflect.Descriptor instead.
func (*MaterialLeft) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{64}
}

func (x *MaterialLeft) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MaterialLeft) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MaterialLeft) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MaterialLeft) GetLeftType() string {
	if x != nil {
		return x.LeftType
	}
	return ""
}

func (x *MaterialLeft) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *MaterialLeft) GetOperationalType() string {
	if x != nil {
		return x.OperationalType
	}
	return ""
}

func (x *MaterialLeft) GetStaticIcon() string {
	if x != nil {
		return x.StaticIcon
	}
	return ""
}

type MaterialRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Icon     string         `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Url      string         `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Type     MaterialSource `protobuf:"varint,4,opt,name=type,proto3,enum=bilibili.app.view.v1.MaterialSource" json:"type,omitempty"`
	Name     string         `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	BgColor  string         `protobuf:"bytes,6,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgPic    string         `protobuf:"bytes,7,opt,name=bg_pic,json=bgPic,proto3" json:"bg_pic,omitempty"`
	JumpType int32          `protobuf:"varint,8,opt,name=jump_type,json=jumpType,proto3" json:"jump_type,omitempty"`
}

func (x *MaterialRes) Reset() {
	*x = MaterialRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialRes) ProtoMessage() {}

func (x *MaterialRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialRes.ProtoReflect.Descriptor instead.
func (*MaterialRes) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{65}
}

func (x *MaterialRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MaterialRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MaterialRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MaterialRes) GetType() MaterialSource {
	if x != nil {
		return x.Type
	}
	return MaterialSource_Default
}

func (x *MaterialRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MaterialRes) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *MaterialRes) GetBgPic() string {
	if x != nil {
		return x.BgPic
	}
	return ""
}

func (x *MaterialRes) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cid    int64  `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{66}
}

func (x *Node) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Node) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Node) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 空回复
type NoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReply) Reset() {
	*x = NoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReply) ProtoMessage() {}

func (x *NoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReply.ProtoReflect.Descriptor instead.
func (*NoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{67}
}

type Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc  string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Notice) Reset() {
	*x = Notice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{68}
}

func (x *Notice) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notice) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 认证信息
type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 认证类型
	// 0:个人认证 1:官方认证
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 认证名称
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{69}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type Online struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineShow       bool   `protobuf:"varint,1,opt,name=online_show,json=onlineShow,proto3" json:"online_show,omitempty"`
	PlayerOnlineLogo string `protobuf:"bytes,2,opt,name=player_online_logo,json=playerOnlineLogo,proto3" json:"player_online_logo,omitempty"`
}

func (x *Online) Reset() {
	*x = Online{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Online) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Online) ProtoMessage() {}

func (x *Online) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Online.ProtoReflect.Descriptor instead.
func (*Online) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{70}
}

func (x *Online) GetOnlineShow() bool {
	if x != nil {
		return x.OnlineShow
	}
	return false
}

func (x *Online) GetPlayerOnlineLogo() string {
	if x != nil {
		return x.PlayerOnlineLogo
	}
	return ""
}

// UP主扩展信息 ("OnwerExt"为源码中拼写错误)
type OnwerExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 认证信息
	OfficialVerify *OfficialVerify `protobuf:"bytes,1,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	// 直播信息
	Live *Live `protobuf:"bytes,2,opt,name=live,proto3" json:"live,omitempty"`
	// 会员信息
	Vip     *Vip    `protobuf:"bytes,3,opt,name=vip,proto3" json:"vip,omitempty"`
	Assists []int64 `protobuf:"varint,4,rep,packed,name=assists,proto3" json:"assists,omitempty"`
	// 粉丝数
	Fans int64 `protobuf:"varint,5,opt,name=fans,proto3" json:"fans,omitempty"`
	// 总投稿数
	ArcCount string `protobuf:"bytes,6,opt,name=arc_count,json=arcCount,proto3" json:"arc_count,omitempty"`
}

func (x *OnwerExt) Reset() {
	*x = OnwerExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnwerExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnwerExt) ProtoMessage() {}

func (x *OnwerExt) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnwerExt.ProtoReflect.Descriptor instead.
func (*OnwerExt) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{71}
}

func (x *OnwerExt) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *OnwerExt) GetLive() *Live {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *OnwerExt) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *OnwerExt) GetAssists() []int64 {
	if x != nil {
		return x.Assists
	}
	return nil
}

func (x *OnwerExt) GetFans() int64 {
	if x != nil {
		return x.Fans
	}
	return 0
}

func (x *OnwerExt) GetArcCount() string {
	if x != nil {
		return x.ArcCount
	}
	return ""
}

// 老运营卡片
type OperationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始时间(单位为秒)
	StartTime int32 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间(单位为秒)
	EndTime int32 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 按钮文案
	ButtonText string `protobuf:"bytes,5,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// 内容描述
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *OperationCard) Reset() {
	*x = OperationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCard) ProtoMessage() {}

func (x *OperationCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCard.ProtoReflect.Descriptor instead.
func (*OperationCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{72}
}

func (x *OperationCard) GetStartTime() int32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OperationCard) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *OperationCard) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OperationCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperationCard) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *OperationCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OperationCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 内嵌操作按钮卡片
type OperationCardNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 开始时间
	From int32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	// 结束时间
	To int32 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	// 用户操作态
	// true已操作 false未操作
	Status bool `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	// 卡片类型
	CardType OperationCardType `protobuf:"varint,5,opt,name=card_type,json=cardType,proto3,enum=bilibili.app.view.v1.OperationCardType" json:"card_type,omitempty"`
	// 卡片渲染
	//
	// Types that are assignable to Render:
	//
	//	*OperationCardNew_Standard
	//	*OperationCardNew_Skip
	Render  isOperationCardNew_Render `protobuf_oneof:"render"`
	BizType BizType                   `protobuf:"varint,8,opt,name=biz_type,json=bizType,proto3,enum=bilibili.app.view.v1.BizType" json:"biz_type,omitempty"`
	// Types that are assignable to Param:
	//
	//	*OperationCardNew_Follow
	//	*OperationCardNew_Reserve
	//	*OperationCardNew_Jump
	//	*OperationCardNew_Game
	Param isOperationCardNew_Param `protobuf_oneof:"param"`
}

func (x *OperationCardNew) Reset() {
	*x = OperationCardNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationCardNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCardNew) ProtoMessage() {}

func (x *OperationCardNew) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCardNew.ProtoReflect.Descriptor instead.
func (*OperationCardNew) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{73}
}

func (x *OperationCardNew) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperationCardNew) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *OperationCardNew) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *OperationCardNew) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *OperationCardNew) GetCardType() OperationCardType {
	if x != nil {
		return x.CardType
	}
	return OperationCardType_CardTypeNone
}

func (m *OperationCardNew) GetRender() isOperationCardNew_Render {
	if m != nil {
		return m.Render
	}
	return nil
}

func (x *OperationCardNew) GetStandard() *StandardCard {
	if x, ok := x.GetRender().(*OperationCardNew_Standard); ok {
		return x.Standard
	}
	return nil
}

func (x *OperationCardNew) GetSkip() *OperationCard {
	if x, ok := x.GetRender().(*OperationCardNew_Skip); ok {
		return x.Skip
	}
	return nil
}

func (x *OperationCardNew) GetBizType() BizType {
	if x != nil {
		return x.BizType
	}
	return BizType_BizTypeNone
}

func (m *OperationCardNew) GetParam() isOperationCardNew_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *OperationCardNew) GetFollow() *BizFollowVideoParam {
	if x, ok := x.GetParam().(*OperationCardNew_Follow); ok {
		return x.Follow
	}
	return nil
}

func (x *OperationCardNew) GetReserve() *BizReserveActivityParam {
	if x, ok := x.GetParam().(*OperationCardNew_Reserve); ok {
		return x.Reserve
	}
	return nil
}

func (x *OperationCardNew) GetJump() *BizJumpLinkParam {
	if x, ok := x.GetParam().(*OperationCardNew_Jump); ok {
		return x.Jump
	}
	return nil
}

func (x *OperationCardNew) GetGame() *BizReserveGameParam {
	if x, ok := x.GetParam().(*OperationCardNew_Game); ok {
		return x.Game
	}
	return nil
}

type isOperationCardNew_Render interface {
	isOperationCardNew_Render()
}

type OperationCardNew_Standard struct {
	// 标准卡
	Standard *StandardCard `protobuf:"bytes,6,opt,name=standard,proto3,oneof"`
}

type OperationCardNew_Skip struct {
	// 老运营卡片(原B剪跳转卡)
	Skip *OperationCard `protobuf:"bytes,7,opt,name=skip,proto3,oneof"`
}

func (*OperationCardNew_Standard) isOperationCardNew_Render() {}

func (*OperationCardNew_Skip) isOperationCardNew_Render() {}

type isOperationCardNew_Param interface {
	isOperationCardNew_Param()
}

type OperationCardNew_Follow struct {
	// 追番追剧参数
	Follow *BizFollowVideoParam `protobuf:"bytes,9,opt,name=follow,proto3,oneof"`
}

type OperationCardNew_Reserve struct {
	// 预约活动参数
	Reserve *BizReserveActivityParam `protobuf:"bytes,10,opt,name=reserve,proto3,oneof"`
}

type OperationCardNew_Jump struct {
	// 跳转参数
	Jump *BizJumpLinkParam `protobuf:"bytes,11,opt,name=jump,proto3,oneof"`
}

type OperationCardNew_Game struct {
	// 预约游戏参数
	Game *BizReserveGameParam `protobuf:"bytes,12,opt,name=game,proto3,oneof"`
}

func (*OperationCardNew_Follow) isOperationCardNew_Param() {}

func (*OperationCardNew_Reserve) isOperationCardNew_Param() {}

func (*OperationCardNew_Jump) isOperationCardNew_Param() {}

func (*OperationCardNew_Game) isOperationCardNew_Param() {}

type OperationCardV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	From    int32                   `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To      int32                   `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	Status  bool                    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	BizType int32                   `protobuf:"varint,5,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	Content *OperationCardV2Content `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	// Types that are assignable to Param:
	//
	//	*OperationCardV2_BizFollowVideoParam
	//	*OperationCardV2_BizReserveActivityParam
	//	*OperationCardV2_BizJumpLinkParam
	//	*OperationCardV2_BizReserveGameParam
	Param isOperationCardV2_Param `protobuf_oneof:"param"`
}

func (x *OperationCardV2) Reset() {
	*x = OperationCardV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationCardV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCardV2) ProtoMessage() {}

func (x *OperationCardV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCardV2.ProtoReflect.Descriptor instead.
func (*OperationCardV2) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{74}
}

func (x *OperationCardV2) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperationCardV2) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *OperationCardV2) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *OperationCardV2) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *OperationCardV2) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *OperationCardV2) GetContent() *OperationCardV2Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (m *OperationCardV2) GetParam() isOperationCardV2_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *OperationCardV2) GetBizFollowVideoParam() *BizFollowVideoParam {
	if x, ok := x.GetParam().(*OperationCardV2_BizFollowVideoParam); ok {
		return x.BizFollowVideoParam
	}
	return nil
}

func (x *OperationCardV2) GetBizReserveActivityParam() *BizReserveActivityParam {
	if x, ok := x.GetParam().(*OperationCardV2_BizReserveActivityParam); ok {
		return x.BizReserveActivityParam
	}
	return nil
}

func (x *OperationCardV2) GetBizJumpLinkParam() *BizJumpLinkParam {
	if x, ok := x.GetParam().(*OperationCardV2_BizJumpLinkParam); ok {
		return x.BizJumpLinkParam
	}
	return nil
}

func (x *OperationCardV2) GetBizReserveGameParam() *BizReserveGameParam {
	if x, ok := x.GetParam().(*OperationCardV2_BizReserveGameParam); ok {
		return x.BizReserveGameParam
	}
	return nil
}

type isOperationCardV2_Param interface {
	isOperationCardV2_Param()
}

type OperationCardV2_BizFollowVideoParam struct {
	BizFollowVideoParam *BizFollowVideoParam `protobuf:"bytes,7,opt,name=BizFollowVideoParam,proto3,oneof"`
}

type OperationCardV2_BizReserveActivityParam struct {
	BizReserveActivityParam *BizReserveActivityParam `protobuf:"bytes,8,opt,name=BizReserveActivityParam,proto3,oneof"`
}

type OperationCardV2_BizJumpLinkParam struct {
	BizJumpLinkParam *BizJumpLinkParam `protobuf:"bytes,9,opt,name=BizJumpLinkParam,proto3,oneof"`
}

type OperationCardV2_BizReserveGameParam struct {
	BizReserveGameParam *BizReserveGameParam `protobuf:"bytes,10,opt,name=BizReserveGameParam,proto3,oneof"`
}

func (*OperationCardV2_BizFollowVideoParam) isOperationCardV2_Param() {}

func (*OperationCardV2_BizReserveActivityParam) isOperationCardV2_Param() {}

func (*OperationCardV2_BizJumpLinkParam) isOperationCardV2_Param() {}

func (*OperationCardV2_BizReserveGameParam) isOperationCardV2_Param() {}

type OperationCardV2Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title               string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle            string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Icon                string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	ButtonTitle         string `protobuf:"bytes,4,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	ButtonSelectedTitle string `protobuf:"bytes,5,opt,name=button_selected_title,json=buttonSelectedTitle,proto3" json:"button_selected_title,omitempty"`
	ShowSelected        bool   `protobuf:"varint,6,opt,name=show_selected,json=showSelected,proto3" json:"show_selected,omitempty"`
}

func (x *OperationCardV2Content) Reset() {
	*x = OperationCardV2Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationCardV2Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCardV2Content) ProtoMessage() {}

func (x *OperationCardV2Content) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCardV2Content.ProtoReflect.Descriptor instead.
func (*OperationCardV2Content) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{75}
}

func (x *OperationCardV2Content) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperationCardV2Content) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *OperationCardV2Content) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OperationCardV2Content) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

func (x *OperationCardV2Content) GetButtonSelectedTitle() string {
	if x != nil {
		return x.ButtonSelectedTitle
	}
	return ""
}

func (x *OperationCardV2Content) GetShowSelected() bool {
	if x != nil {
		return x.ShowSelected
	}
	return false
}

// 相关推荐(运营配置+AI推荐)
type OperationRelate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 相关推荐模块内容
	RelateItem []*RelateItem `protobuf:"bytes,2,rep,name=relate_item,json=relateItem,proto3" json:"relate_item,omitempty"`
	// AI相关推荐
	AiRelateItem []*Relate `protobuf:"bytes,3,rep,name=ai_relate_item,json=aiRelateItem,proto3" json:"ai_relate_item,omitempty"`
}

func (x *OperationRelate) Reset() {
	*x = OperationRelate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationRelate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationRelate) ProtoMessage() {}

func (x *OperationRelate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationRelate.ProtoReflect.Descriptor instead.
func (*OperationRelate) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{76}
}

func (x *OperationRelate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperationRelate) GetRelateItem() []*RelateItem {
	if x != nil {
		return x.RelateItem
	}
	return nil
}

func (x *OperationRelate) GetAiRelateItem() []*Relate {
	if x != nil {
		return x.AiRelateItem
	}
	return nil
}

// 预约模块
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户操作态
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 模块标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 按钮文字 未操作
	ButtonTitle string `protobuf:"bytes,3,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	// 按钮文字 已操作
	ButtonSelectedTitle string `protobuf:"bytes,4,opt,name=button_selected_title,json=buttonSelectedTitle,proto3" json:"button_selected_title,omitempty"`
	// 合集播放数
	SeasonStatView int64 `protobuf:"varint,5,opt,name=season_stat_view,json=seasonStatView,proto3" json:"season_stat_view,omitempty"`
	// 合集弹幕数
	SeasonStatDanmaku int64 `protobuf:"varint,6,opt,name=season_stat_danmaku,json=seasonStatDanmaku,proto3" json:"season_stat_danmaku,omitempty"`
	// 预约类型(点击时透传，直播开始前预约活动，直播开始后收藏合集)
	OrderType BizType `protobuf:"varint,7,opt,name=order_type,json=orderType,proto3,enum=bilibili.app.view.v1.BizType" json:"order_type,omitempty"`
	// 预约业务参数
	//
	// Types that are assignable to OrderParam:
	//
	//	*Order_Reserve
	//	*Order_FavSeason
	OrderParam isOrder_OrderParam `protobuf_oneof:"order_param"`
	// 合集简介
	Intro string `protobuf:"bytes,10,opt,name=intro,proto3" json:"intro,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{77}
}

func (x *Order) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Order) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Order) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

func (x *Order) GetButtonSelectedTitle() string {
	if x != nil {
		return x.ButtonSelectedTitle
	}
	return ""
}

func (x *Order) GetSeasonStatView() int64 {
	if x != nil {
		return x.SeasonStatView
	}
	return 0
}

func (x *Order) GetSeasonStatDanmaku() int64 {
	if x != nil {
		return x.SeasonStatDanmaku
	}
	return 0
}

func (x *Order) GetOrderType() BizType {
	if x != nil {
		return x.OrderType
	}
	return BizType_BizTypeNone
}

func (m *Order) GetOrderParam() isOrder_OrderParam {
	if m != nil {
		return m.OrderParam
	}
	return nil
}

func (x *Order) GetReserve() *BizReserveActivityParam {
	if x, ok := x.GetOrderParam().(*Order_Reserve); ok {
		return x.Reserve
	}
	return nil
}

func (x *Order) GetFavSeason() *BizFavSeasonParam {
	if x, ok := x.GetOrderParam().(*Order_FavSeason); ok {
		return x.FavSeason
	}
	return nil
}

func (x *Order) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

type isOrder_OrderParam interface {
	isOrder_OrderParam()
}

type Order_Reserve struct {
	// 预约活动参数
	Reserve *BizReserveActivityParam `protobuf:"bytes,8,opt,name=reserve,proto3,oneof"`
}

type Order_FavSeason struct {
	// 收藏合集参数
	FavSeason *BizFavSeasonParam `protobuf:"bytes,9,opt,name=fav_season,json=favSeason,proto3,oneof"`
}

func (*Order_Reserve) isOrder_OrderParam() {}

func (*Order_FavSeason) isOrder_OrderParam() {}

// 游戏礼包信息
type PackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 礼包标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 礼包页uri
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *PackInfo) Reset() {
	*x = PackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackInfo) ProtoMessage() {}

func (x *PackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackInfo.ProtoReflect.Descriptor instead.
func (*PackInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{78}
}

func (x *PackInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PackInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type PlayAv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *PlayAv) Reset() {
	*x = PlayAv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAv) ProtoMessage() {}

func (x *PlayAv) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAv.ProtoReflect.Descriptor instead.
func (*PlayAv) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{79}
}

func (x *PlayAv) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *PlayAv) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 进度条动画配置
type PlayerIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 拖动动画配置档url
	Url1 string `protobuf:"bytes,1,opt,name=url1,proto3" json:"url1,omitempty"`
	// 拖动动画配置档hash
	Hash1 string `protobuf:"bytes,2,opt,name=hash1,proto3" json:"hash1,omitempty"`
	// 松手动画配置档url
	Url2 string `protobuf:"bytes,3,opt,name=url2,proto3" json:"url2,omitempty"`
	// 松手动画配置档hash
	Hash2        string    `protobuf:"bytes,4,opt,name=hash2,proto3" json:"hash2,omitempty"`
	DragLeftPng  string    `protobuf:"bytes,5,opt,name=drag_left_png,json=dragLeftPng,proto3" json:"drag_left_png,omitempty"`
	MiddlePng    string    `protobuf:"bytes,6,opt,name=middle_png,json=middlePng,proto3" json:"middle_png,omitempty"`
	DragRightPng string    `protobuf:"bytes,7,opt,name=drag_right_png,json=dragRightPng,proto3" json:"drag_right_png,omitempty"`
	DragData     *IconData `protobuf:"bytes,8,opt,name=drag_data,json=dragData,proto3" json:"drag_data,omitempty"`
	NodragData   *IconData `protobuf:"bytes,9,opt,name=nodrag_data,json=nodragData,proto3" json:"nodrag_data,omitempty"`
}

func (x *PlayerIcon) Reset() {
	*x = PlayerIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerIcon) ProtoMessage() {}

func (x *PlayerIcon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerIcon.ProtoReflect.Descriptor instead.
func (*PlayerIcon) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{80}
}

func (x *PlayerIcon) GetUrl1() string {
	if x != nil {
		return x.Url1
	}
	return ""
}

func (x *PlayerIcon) GetHash1() string {
	if x != nil {
		return x.Hash1
	}
	return ""
}

func (x *PlayerIcon) GetUrl2() string {
	if x != nil {
		return x.Url2
	}
	return ""
}

func (x *PlayerIcon) GetHash2() string {
	if x != nil {
		return x.Hash2
	}
	return ""
}

func (x *PlayerIcon) GetDragLeftPng() string {
	if x != nil {
		return x.DragLeftPng
	}
	return ""
}

func (x *PlayerIcon) GetMiddlePng() string {
	if x != nil {
		return x.MiddlePng
	}
	return ""
}

func (x *PlayerIcon) GetDragRightPng() string {
	if x != nil {
		return x.DragRightPng
	}
	return ""
}

func (x *PlayerIcon) GetDragData() *IconData {
	if x != nil {
		return x.DragData
	}
	return nil
}

func (x *PlayerIcon) GetNodragData() *IconData {
	if x != nil {
		return x.NodragData
	}
	return nil
}

type PlayerRelatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Relate `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PlayerRelatesReply) Reset() {
	*x = PlayerRelatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRelatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRelatesReply) ProtoMessage() {}

func (x *PlayerRelatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRelatesReply.ProtoReflect.Descriptor instead.
func (*PlayerRelatesReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{81}
}

func (x *PlayerRelatesReply) GetList() []*Relate {
	if x != nil {
		return x.List
	}
	return nil
}

type PlayerRelatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid         int64           `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid        string          `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	From        string          `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Spmid       string          `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	FromSpmid   string          `protobuf:"bytes,5,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs  *v11.PlayerArgs `protobuf:"bytes,6,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	SessionId   string          `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	FromTrackId string          `protobuf:"bytes,8,opt,name=from_track_id,json=fromTrackId,proto3" json:"from_track_id,omitempty"`
}

func (x *PlayerRelatesReq) Reset() {
	*x = PlayerRelatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRelatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRelatesReq) ProtoMessage() {}

func (x *PlayerRelatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRelatesReq.ProtoReflect.Descriptor instead.
func (*PlayerRelatesReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{82}
}

func (x *PlayerRelatesReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *PlayerRelatesReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *PlayerRelatesReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PlayerRelatesReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *PlayerRelatesReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *PlayerRelatesReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *PlayerRelatesReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PlayerRelatesReq) GetFromTrackId() string {
	if x != nil {
		return x.FromTrackId
	}
	return ""
}

type PointMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	MaterialSource int32  `protobuf:"varint,2,opt,name=material_source,json=materialSource,proto3" json:"material_source,omitempty"`
}

func (x *PointMaterial) Reset() {
	*x = PointMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointMaterial) ProtoMessage() {}

func (x *PointMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointMaterial.ProtoReflect.Descriptor instead.
func (*PointMaterial) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{83}
}

func (x *PointMaterial) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PointMaterial) GetMaterialSource() int32 {
	if x != nil {
		return x.MaterialSource
	}
	return 0
}

type PowerIconStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl      string `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IconNightUrl string `protobuf:"bytes,2,opt,name=icon_night_url,json=iconNightUrl,proto3" json:"icon_night_url,omitempty"`
	IconWidth    int64  `protobuf:"varint,3,opt,name=icon_width,json=iconWidth,proto3" json:"icon_width,omitempty"`
	IconHeight   int64  `protobuf:"varint,4,opt,name=icon_height,json=iconHeight,proto3" json:"icon_height,omitempty"`
}

func (x *PowerIconStyle) Reset() {
	*x = PowerIconStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerIconStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerIconStyle) ProtoMessage() {}

func (x *PowerIconStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerIconStyle.ProtoReflect.Descriptor instead.
func (*PowerIconStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{84}
}

func (x *PowerIconStyle) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *PowerIconStyle) GetIconNightUrl() string {
	if x != nil {
		return x.IconNightUrl
	}
	return ""
}

func (x *PowerIconStyle) GetIconWidth() int64 {
	if x != nil {
		return x.IconWidth
	}
	return 0
}

func (x *PowerIconStyle) GetIconHeight() int64 {
	if x != nil {
		return x.IconHeight
	}
	return 0
}

type Premiere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PremiereState PremiereState `protobuf:"varint,1,opt,name=premiere_state,json=premiereState,proto3,enum=bilibili.app.view.v1.PremiereState" json:"premiere_state,omitempty"`
	StartTime     int64         `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ServiceTime   int64         `protobuf:"varint,3,opt,name=service_time,json=serviceTime,proto3" json:"service_time,omitempty"`
	RoomId        int64         `protobuf:"varint,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *Premiere) Reset() {
	*x = Premiere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Premiere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Premiere) ProtoMessage() {}

func (x *Premiere) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Premiere.ProtoReflect.Descriptor instead.
func (*Premiere) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{85}
}

func (x *Premiere) GetPremiereState() PremiereState {
	if x != nil {
		return x.PremiereState
	}
	return PremiereState_premiere_none
}

func (x *Premiere) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Premiere) GetServiceTime() int64 {
	if x != nil {
		return x.ServiceTime
	}
	return 0
}

func (x *Premiere) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type PremiereArchiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Premiere   *Premiere `protobuf:"bytes,1,opt,name=premiere,proto3" json:"premiere,omitempty"`
	RiskStatus bool      `protobuf:"varint,2,opt,name=risk_status,json=riskStatus,proto3" json:"risk_status,omitempty"`
	RiskReason string    `protobuf:"bytes,3,opt,name=risk_reason,json=riskReason,proto3" json:"risk_reason,omitempty"`
}

func (x *PremiereArchiveReply) Reset() {
	*x = PremiereArchiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereArchiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereArchiveReply) ProtoMessage() {}

func (x *PremiereArchiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereArchiveReply.ProtoReflect.Descriptor instead.
func (*PremiereArchiveReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{86}
}

func (x *PremiereArchiveReply) GetPremiere() *Premiere {
	if x != nil {
		return x.Premiere
	}
	return nil
}

func (x *PremiereArchiveReply) GetRiskStatus() bool {
	if x != nil {
		return x.RiskStatus
	}
	return false
}

func (x *PremiereArchiveReply) GetRiskReason() string {
	if x != nil {
		return x.RiskReason
	}
	return ""
}

type PremiereArchiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
}

func (x *PremiereArchiveReq) Reset() {
	*x = PremiereArchiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereArchiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereArchiveReq) ProtoMessage() {}

func (x *PremiereArchiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereArchiveReq.ProtoReflect.Descriptor instead.
func (*PremiereArchiveReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{87}
}

func (x *PremiereArchiveReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type PremiereReserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveId int64 `protobuf:"varint,1,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	Count     int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	IsFollow  bool  `protobuf:"varint,3,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
}

func (x *PremiereReserve) Reset() {
	*x = PremiereReserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereReserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereReserve) ProtoMessage() {}

func (x *PremiereReserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereReserve.ProtoReflect.Descriptor instead.
func (*PremiereReserve) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{88}
}

func (x *PremiereReserve) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *PremiereReserve) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PremiereReserve) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type PremiereResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Premiere *Premiere        `protobuf:"bytes,1,opt,name=premiere,proto3" json:"premiere,omitempty"`
	Reserve  *PremiereReserve `protobuf:"bytes,2,opt,name=reserve,proto3" json:"reserve,omitempty"`
	Text     *PremiereText    `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *PremiereResource) Reset() {
	*x = PremiereResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereResource) ProtoMessage() {}

func (x *PremiereResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereResource.ProtoReflect.Descriptor instead.
func (*PremiereResource) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{89}
}

func (x *PremiereResource) GetPremiere() *Premiere {
	if x != nil {
		return x.Premiere
	}
	return nil
}

func (x *PremiereResource) GetReserve() *PremiereReserve {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *PremiereResource) GetText() *PremiereText {
	if x != nil {
		return x.Text
	}
	return nil
}

type PremiereText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title            string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle         string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	OnlineText       string `protobuf:"bytes,3,opt,name=online_text,json=onlineText,proto3" json:"online_text,omitempty"`
	OnlineIcon       string `protobuf:"bytes,4,opt,name=online_icon,json=onlineIcon,proto3" json:"online_icon,omitempty"`
	OnlineIconDark   string `protobuf:"bytes,5,opt,name=online_icon_dark,json=onlineIconDark,proto3" json:"online_icon_dark,omitempty"`
	IntroTitle       string `protobuf:"bytes,6,opt,name=intro_title,json=introTitle,proto3" json:"intro_title,omitempty"`
	IntroIcon        string `protobuf:"bytes,7,opt,name=intro_icon,json=introIcon,proto3" json:"intro_icon,omitempty"`
	GuidancePulldown string `protobuf:"bytes,8,opt,name=guidance_pulldown,json=guidancePulldown,proto3" json:"guidance_pulldown,omitempty"`
	GuidanceEntry    string `protobuf:"bytes,9,opt,name=guidance_entry,json=guidanceEntry,proto3" json:"guidance_entry,omitempty"`
	IntroIconNight   string `protobuf:"bytes,10,opt,name=intro_icon_night,json=introIconNight,proto3" json:"intro_icon_night,omitempty"`
}

func (x *PremiereText) Reset() {
	*x = PremiereText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereText) ProtoMessage() {}

func (x *PremiereText) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereText.ProtoReflect.Descriptor instead.
func (*PremiereText) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{90}
}

func (x *PremiereText) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PremiereText) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *PremiereText) GetOnlineText() string {
	if x != nil {
		return x.OnlineText
	}
	return ""
}

func (x *PremiereText) GetOnlineIcon() string {
	if x != nil {
		return x.OnlineIcon
	}
	return ""
}

func (x *PremiereText) GetOnlineIconDark() string {
	if x != nil {
		return x.OnlineIconDark
	}
	return ""
}

func (x *PremiereText) GetIntroTitle() string {
	if x != nil {
		return x.IntroTitle
	}
	return ""
}

func (x *PremiereText) GetIntroIcon() string {
	if x != nil {
		return x.IntroIcon
	}
	return ""
}

func (x *PremiereText) GetGuidancePulldown() string {
	if x != nil {
		return x.GuidancePulldown
	}
	return ""
}

func (x *PremiereText) GetGuidanceEntry() string {
	if x != nil {
		return x.GuidanceEntry
	}
	return ""
}

func (x *PremiereText) GetIntroIconNight() string {
	if x != nil {
		return x.IntroIconNight
	}
	return ""
}

type PullClientAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	PullAction bool   `protobuf:"varint,2,opt,name=pull_action,json=pullAction,proto3" json:"pull_action,omitempty"`
	Params     string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *PullClientAction) Reset() {
	*x = PullClientAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullClientAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullClientAction) ProtoMessage() {}

func (x *PullClientAction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullClientAction.ProtoReflect.Descriptor instead.
func (*PullClientAction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{91}
}

func (x *PullClientAction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PullClientAction) GetPullAction() bool {
	if x != nil {
		return x.PullAction
	}
	return false
}

func (x *PullClientAction) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

// 排行榜
type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排行榜icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 排行榜icon 夜间模式
	IconNight string `protobuf:"bytes,2,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	// 排行榜文案
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{92}
}

func (x *Rank) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Rank) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Rank) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrlNight   string `protobuf:"bytes,1,opt,name=icon_url_night,json=iconUrlNight,proto3" json:"icon_url_night,omitempty"`
	IconUrlDay     string `protobuf:"bytes,2,opt,name=icon_url_day,json=iconUrlDay,proto3" json:"icon_url_day,omitempty"`
	BkgNightColor  string `protobuf:"bytes,3,opt,name=bkg_night_color,json=bkgNightColor,proto3" json:"bkg_night_color,omitempty"`
	BkgDayColor    string `protobuf:"bytes,4,opt,name=bkg_day_color,json=bkgDayColor,proto3" json:"bkg_day_color,omitempty"`
	FontNightColor string `protobuf:"bytes,5,opt,name=font_night_color,json=fontNightColor,proto3" json:"font_night_color,omitempty"`
	FontDayColor   string `protobuf:"bytes,6,opt,name=font_day_color,json=fontDayColor,proto3" json:"font_day_color,omitempty"`
	RankContent    string `protobuf:"bytes,7,opt,name=rank_content,json=rankContent,proto3" json:"rank_content,omitempty"`
	RankLink       string `protobuf:"bytes,8,opt,name=rank_link,json=rankLink,proto3" json:"rank_link,omitempty"`
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{93}
}

func (x *RankInfo) GetIconUrlNight() string {
	if x != nil {
		return x.IconUrlNight
	}
	return ""
}

func (x *RankInfo) GetIconUrlDay() string {
	if x != nil {
		return x.IconUrlDay
	}
	return ""
}

func (x *RankInfo) GetBkgNightColor() string {
	if x != nil {
		return x.BkgNightColor
	}
	return ""
}

func (x *RankInfo) GetBkgDayColor() string {
	if x != nil {
		return x.BkgDayColor
	}
	return ""
}

func (x *RankInfo) GetFontNightColor() string {
	if x != nil {
		return x.FontNightColor
	}
	return ""
}

func (x *RankInfo) GetFontDayColor() string {
	if x != nil {
		return x.FontDayColor
	}
	return ""
}

func (x *RankInfo) GetRankContent() string {
	if x != nil {
		return x.RankContent
	}
	return ""
}

func (x *RankInfo) GetRankLink() string {
	if x != nil {
		return x.RankLink
	}
	return ""
}

// 推荐理由样式
type ReasonStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 日间模式文字
	TextColor   string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	BgColor     string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BorderColor string `protobuf:"bytes,4,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 夜间模式文字
	TextColorNight   string `protobuf:"bytes,5,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColorNight     string `protobuf:"bytes,6,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 1:填充 2:描边 3:填充 + 描边 4:背景不填充 + 背景不描边
	BgStyle  int32 `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
	Selected int32 `protobuf:"varint,9,opt,name=selected,proto3" json:"selected,omitempty"`
}

func (x *ReasonStyle) Reset() {
	*x = ReasonStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonStyle) ProtoMessage() {}

func (x *ReasonStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonStyle.ProtoReflect.Descriptor instead.
func (*ReasonStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{94}
}

func (x *ReasonStyle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ReasonStyle) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *ReasonStyle) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ReasonStyle) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *ReasonStyle) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *ReasonStyle) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *ReasonStyle) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *ReasonStyle) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

func (x *ReasonStyle) GetSelected() int32 {
	if x != nil {
		return x.Selected
	}
	return 0
}

type RecDislike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle        string            `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	ClosedSubTitle  string            `protobuf:"bytes,3,opt,name=closed_sub_title,json=closedSubTitle,proto3" json:"closed_sub_title,omitempty"`
	PasteText       string            `protobuf:"bytes,4,opt,name=paste_text,json=pasteText,proto3" json:"paste_text,omitempty"`
	ClosedPasteText string            `protobuf:"bytes,5,opt,name=closed_paste_text,json=closedPasteText,proto3" json:"closed_paste_text,omitempty"`
	DislikeReason   []*DislikeReasons `protobuf:"bytes,6,rep,name=dislike_reason,json=dislikeReason,proto3" json:"dislike_reason,omitempty"`
	Toast           string            `protobuf:"bytes,7,opt,name=toast,proto3" json:"toast,omitempty"`
	ClosedToast     string            `protobuf:"bytes,8,opt,name=closed_toast,json=closedToast,proto3" json:"closed_toast,omitempty"`
}

func (x *RecDislike) Reset() {
	*x = RecDislike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecDislike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecDislike) ProtoMessage() {}

func (x *RecDislike) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecDislike.ProtoReflect.Descriptor instead.
func (*RecDislike) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{95}
}

func (x *RecDislike) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RecDislike) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *RecDislike) GetClosedSubTitle() string {
	if x != nil {
		return x.ClosedSubTitle
	}
	return ""
}

func (x *RecDislike) GetPasteText() string {
	if x != nil {
		return x.PasteText
	}
	return ""
}

func (x *RecDislike) GetClosedPasteText() string {
	if x != nil {
		return x.ClosedPasteText
	}
	return ""
}

func (x *RecDislike) GetDislikeReason() []*DislikeReasons {
	if x != nil {
		return x.DislikeReason
	}
	return nil
}

func (x *RecDislike) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *RecDislike) GetClosedToast() string {
	if x != nil {
		return x.ClosedToast
	}
	return ""
}

type RecThreePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dislike    *RecDislike `protobuf:"bytes,1,opt,name=dislike,proto3" json:"dislike,omitempty"`
	Feedback   *RecDislike `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
	WatchLater bool        `protobuf:"varint,3,opt,name=watch_later,json=watchLater,proto3" json:"watch_later,omitempty"`
}

func (x *RecThreePoint) Reset() {
	*x = RecThreePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecThreePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecThreePoint) ProtoMessage() {}

func (x *RecThreePoint) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecThreePoint.ProtoReflect.Descriptor instead.
func (*RecThreePoint) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{96}
}

func (x *RecThreePoint) GetDislike() *RecDislike {
	if x != nil {
		return x.Dislike
	}
	return nil
}

func (x *RecThreePoint) GetFeedback() *RecDislike {
	if x != nil {
		return x.Feedback
	}
	return nil
}

func (x *RecThreePoint) GetWatchLater() bool {
	if x != nil {
		return x.WatchLater
	}
	return false
}

type RefreshPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refreshable int32   `protobuf:"varint,1,opt,name=refreshable,proto3" json:"refreshable,omitempty"`
	RefreshIcon int32   `protobuf:"varint,2,opt,name=refresh_icon,json=refreshIcon,proto3" json:"refresh_icon,omitempty"`
	RefreshText string  `protobuf:"bytes,3,opt,name=refresh_text,json=refreshText,proto3" json:"refresh_text,omitempty"`
	RefreshShow float32 `protobuf:"fixed32,4,opt,name=refresh_show,json=refreshShow,proto3" json:"refresh_show,omitempty"`
}

func (x *RefreshPage) Reset() {
	*x = RefreshPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshPage) ProtoMessage() {}

func (x *RefreshPage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshPage.ProtoReflect.Descriptor instead.
func (*RefreshPage) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{97}
}

func (x *RefreshPage) GetRefreshable() int32 {
	if x != nil {
		return x.Refreshable
	}
	return 0
}

func (x *RefreshPage) GetRefreshIcon() int32 {
	if x != nil {
		return x.RefreshIcon
	}
	return 0
}

func (x *RefreshPage) GetRefreshText() string {
	if x != nil {
		return x.RefreshText
	}
	return ""
}

func (x *RefreshPage) GetRefreshShow() float32 {
	if x != nil {
		return x.RefreshShow
	}
	return 0
}

// 相关推荐项
type Relate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 封面url
	Pic string `protobuf:"bytes,2,opt,name=pic,proto3" json:"pic,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// UP主信息
	Author *v1.Author `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	// 稿件状态数
	Stat *v1.Stat `protobuf:"bytes,5,opt,name=stat,proto3" json:"stat,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转类型
	// special:pgc视频 av:稿件视频 cm:广告 game:游戏
	Goto string `protobuf:"bytes,7,opt,name=goto,proto3" json:"goto,omitempty"`
	// 参数（如av号等）
	Param string `protobuf:"bytes,8,opt,name=param,proto3" json:"param,omitempty"`
	// 跳转uri
	Uri     string `protobuf:"bytes,9,opt,name=uri,proto3" json:"uri,omitempty"`
	JumpUrl string `protobuf:"bytes,10,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 评分
	Rating  float64 `protobuf:"fixed64,11,opt,name=rating,proto3" json:"rating,omitempty"`
	Reserve string  `protobuf:"bytes,12,opt,name=reserve,proto3" json:"reserve,omitempty"`
	// 来源标识
	// operation:管理员添加
	From string `protobuf:"bytes,13,opt,name=from,proto3" json:"from,omitempty"`
	// 备注
	Desc       string `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`
	RcmdReason string `protobuf:"bytes,15,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
	// 标志文字
	Badge string `protobuf:"bytes,16,opt,name=badge,proto3" json:"badge,omitempty"`
	// 1P cid
	Cid         int64 `protobuf:"varint,17,opt,name=cid,proto3" json:"cid,omitempty"`
	SeasonType  int32 `protobuf:"varint,18,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	RatingCount int32 `protobuf:"varint,19,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	// 标签文案
	TagName string `protobuf:"bytes,20,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	// 游戏礼包信息
	PackInfo *PackInfo `protobuf:"bytes,21,opt,name=pack_info,json=packInfo,proto3" json:"pack_info,omitempty"`
	Notice   *Notice   `protobuf:"bytes,22,opt,name=notice,proto3" json:"notice,omitempty"`
	// 按钮信息
	Button *Button `protobuf:"bytes,23,opt,name=button,proto3" json:"button,omitempty"`
	// spm追踪id
	Trackid string `protobuf:"bytes,24,opt,name=trackid,proto3" json:"trackid,omitempty"`
	// 游戏卡片新样式
	NewCard int32 `protobuf:"varint,25,opt,name=new_card,json=newCard,proto3" json:"new_card,omitempty"`
	// 推荐理由样式
	RcmdReasonStyle *ReasonStyle `protobuf:"bytes,26,opt,name=rcmd_reason_style,json=rcmdReasonStyle,proto3" json:"rcmd_reason_style,omitempty"`
	CoverGif        string       `protobuf:"bytes,27,opt,name=cover_gif,json=coverGif,proto3" json:"cover_gif,omitempty"`
	// 广告
	Cm *CM `protobuf:"bytes,28,opt,name=cm,proto3" json:"cm,omitempty"`
	// 游戏卡字段
	// 0:下载 1:预约(跳过详情) 2:预约 3:测试 4:测试+预约 5:跳过详情页
	ReserveStatus     int64           `protobuf:"varint,29,opt,name=reserve_status,json=reserveStatus,proto3" json:"reserve_status,omitempty"`
	RcmdReasonExtra   string          `protobuf:"bytes,30,opt,name=rcmd_reason_extra,json=rcmdReasonExtra,proto3" json:"rcmd_reason_extra,omitempty"`
	RecThreePoint     *RecThreePoint  `protobuf:"bytes,31,opt,name=rec_three_point,json=recThreePoint,proto3" json:"rec_three_point,omitempty"`
	UniqueId          string          `protobuf:"bytes,32,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	MaterialId        int64           `protobuf:"varint,33,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	FromSourceType    int64           `protobuf:"varint,34,opt,name=from_source_type,json=fromSourceType,proto3" json:"from_source_type,omitempty"`
	FromSourceId      string          `protobuf:"bytes,35,opt,name=from_source_id,json=fromSourceId,proto3" json:"from_source_id,omitempty"`
	Dimension         *v1.Dimension   `protobuf:"bytes,36,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Cover             string          `protobuf:"bytes,37,opt,name=cover,proto3" json:"cover,omitempty"`
	BadgeStyle        *ReasonStyle    `protobuf:"bytes,38,opt,name=badge_style,json=badgeStyle,proto3" json:"badge_style,omitempty"`
	PowerIconStyle    *PowerIconStyle `protobuf:"bytes,39,opt,name=power_icon_style,json=powerIconStyle,proto3" json:"power_icon_style,omitempty"`
	ReserveStatusText string          `protobuf:"bytes,40,opt,name=reserve_status_text,json=reserveStatusText,proto3" json:"reserve_status_text,omitempty"`
	DislikeReportData string          `protobuf:"bytes,41,opt,name=dislike_report_data,json=dislikeReportData,proto3" json:"dislike_report_data,omitempty"`
	RankInfoGame      *RankInfo       `protobuf:"bytes,42,opt,name=rank_info_game,json=rankInfoGame,proto3" json:"rank_info_game,omitempty"`
	FirstFrame        string          `protobuf:"bytes,43,opt,name=first_frame,json=firstFrame,proto3" json:"first_frame,omitempty"`
}

func (x *Relate) Reset() {
	*x = Relate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relate) ProtoMessage() {}

func (x *Relate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relate.ProtoReflect.Descriptor instead.
func (*Relate) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{98}
}

func (x *Relate) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Relate) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Relate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Relate) GetAuthor() *v1.Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Relate) GetStat() *v1.Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *Relate) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Relate) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *Relate) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *Relate) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Relate) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Relate) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Relate) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *Relate) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Relate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Relate) GetRcmdReason() string {
	if x != nil {
		return x.RcmdReason
	}
	return ""
}

func (x *Relate) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *Relate) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Relate) GetSeasonType() int32 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *Relate) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *Relate) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *Relate) GetPackInfo() *PackInfo {
	if x != nil {
		return x.PackInfo
	}
	return nil
}

func (x *Relate) GetNotice() *Notice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *Relate) GetButton() *Button {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *Relate) GetTrackid() string {
	if x != nil {
		return x.Trackid
	}
	return ""
}

func (x *Relate) GetNewCard() int32 {
	if x != nil {
		return x.NewCard
	}
	return 0
}

func (x *Relate) GetRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.RcmdReasonStyle
	}
	return nil
}

func (x *Relate) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *Relate) GetCm() *CM {
	if x != nil {
		return x.Cm
	}
	return nil
}

func (x *Relate) GetReserveStatus() int64 {
	if x != nil {
		return x.ReserveStatus
	}
	return 0
}

func (x *Relate) GetRcmdReasonExtra() string {
	if x != nil {
		return x.RcmdReasonExtra
	}
	return ""
}

func (x *Relate) GetRecThreePoint() *RecThreePoint {
	if x != nil {
		return x.RecThreePoint
	}
	return nil
}

func (x *Relate) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *Relate) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *Relate) GetFromSourceType() int64 {
	if x != nil {
		return x.FromSourceType
	}
	return 0
}

func (x *Relate) GetFromSourceId() string {
	if x != nil {
		return x.FromSourceId
	}
	return ""
}

func (x *Relate) GetDimension() *v1.Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Relate) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Relate) GetBadgeStyle() *ReasonStyle {
	if x != nil {
		return x.BadgeStyle
	}
	return nil
}

func (x *Relate) GetPowerIconStyle() *PowerIconStyle {
	if x != nil {
		return x.PowerIconStyle
	}
	return nil
}

func (x *Relate) GetReserveStatusText() string {
	if x != nil {
		return x.ReserveStatusText
	}
	return ""
}

func (x *Relate) GetDislikeReportData() string {
	if x != nil {
		return x.DislikeReportData
	}
	return ""
}

func (x *Relate) GetRankInfoGame() *RankInfo {
	if x != nil {
		return x.RankInfoGame
	}
	return nil
}

func (x *Relate) GetFirstFrame() string {
	if x != nil {
		return x.FirstFrame
	}
	return ""
}

// 相关推荐内容
type RelateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 跳链
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *RelateItem) Reset() {
	*x = RelateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateItem) ProtoMessage() {}

func (x *RelateItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateItem.ProtoReflect.Descriptor instead.
func (*RelateItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{99}
}

func (x *RelateItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RelateItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 播放页推荐IFS-响应
type RelatesFeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*Relate                   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HasNext    bool                        `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	Pagination *pagination.PaginationReply `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *RelatesFeedReply) Reset() {
	*x = RelatesFeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatesFeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatesFeedReply) ProtoMessage() {}

func (x *RelatesFeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatesFeedReply.ProtoReflect.Descriptor instead.
func (*RelatesFeedReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{100}
}

func (x *RelatesFeedReply) GetList() []*Relate {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RelatesFeedReply) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *RelatesFeedReply) GetPagination() *pagination.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 播放页推荐IFS-请求
type RelatesFeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid         int64                  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid        string                 `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	From        string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Spmid       string                 `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	FromSpmid   string                 `protobuf:"bytes,5,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs  *v11.PlayerArgs        `protobuf:"bytes,6,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	RelatesPage int64                  `protobuf:"varint,7,opt,name=relates_page,json=relatesPage,proto3" json:"relates_page,omitempty"`
	SessionId   string                 `protobuf:"bytes,8,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Autoplay    int32                  `protobuf:"varint,9,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	FromTrackId string                 `protobuf:"bytes,10,opt,name=from_track_id,json=fromTrackId,proto3" json:"from_track_id,omitempty"`
	BizExtra    string                 `protobuf:"bytes,11,opt,name=biz_extra,json=bizExtra,proto3" json:"biz_extra,omitempty"`
	DeviceType  int64                  `protobuf:"varint,12,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	AdExtra     string                 `protobuf:"bytes,13,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	Pagination  *pagination.Pagination `protobuf:"bytes,14,opt,name=pagination,proto3" json:"pagination,omitempty"`
	RefreshNum  int32                  `protobuf:"varint,15,opt,name=refresh_num,json=refreshNum,proto3" json:"refresh_num,omitempty"`
}

func (x *RelatesFeedReq) Reset() {
	*x = RelatesFeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatesFeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatesFeedReq) ProtoMessage() {}

func (x *RelatesFeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatesFeedReq.ProtoReflect.Descriptor instead.
func (*RelatesFeedReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{101}
}

func (x *RelatesFeedReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *RelatesFeedReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *RelatesFeedReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RelatesFeedReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *RelatesFeedReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *RelatesFeedReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *RelatesFeedReq) GetRelatesPage() int64 {
	if x != nil {
		return x.RelatesPage
	}
	return 0
}

func (x *RelatesFeedReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RelatesFeedReq) GetAutoplay() int32 {
	if x != nil {
		return x.Autoplay
	}
	return 0
}

func (x *RelatesFeedReq) GetFromTrackId() string {
	if x != nil {
		return x.FromTrackId
	}
	return ""
}

func (x *RelatesFeedReq) GetBizExtra() string {
	if x != nil {
		return x.BizExtra
	}
	return ""
}

func (x *RelatesFeedReq) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *RelatesFeedReq) GetAdExtra() string {
	if x != nil {
		return x.AdExtra
	}
	return ""
}

func (x *RelatesFeedReq) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *RelatesFeedReq) GetRefreshNum() int32 {
	if x != nil {
		return x.RefreshNum
	}
	return 0
}

type RelateTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *RelateTab) Reset() {
	*x = RelateTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateTab) ProtoMessage() {}

func (x *RelateTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateTab.ProtoReflect.Descriptor instead.
func (*RelateTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{102}
}

func (x *RelateTab) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RelateTab) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ReplyStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadgeUrl  string `protobuf:"bytes,1,opt,name=badge_url,json=badgeUrl,proto3" json:"badge_url,omitempty"`
	BadgeText string `protobuf:"bytes,2,opt,name=badge_text,json=badgeText,proto3" json:"badge_text,omitempty"`
	BadgeType int64  `protobuf:"varint,3,opt,name=badge_type,json=badgeType,proto3" json:"badge_type,omitempty"`
}

func (x *ReplyStyle) Reset() {
	*x = ReplyStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyStyle) ProtoMessage() {}

func (x *ReplyStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyStyle.ProtoReflect.Descriptor instead.
func (*ReplyStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{103}
}

func (x *ReplyStyle) GetBadgeUrl() string {
	if x != nil {
		return x.BadgeUrl
	}
	return ""
}

func (x *ReplyStyle) GetBadgeText() string {
	if x != nil {
		return x.BadgeText
	}
	return ""
}

func (x *ReplyStyle) GetBadgeType() int64 {
	if x != nil {
		return x.BadgeType
	}
	return 0
}

// 用户操作状态
type ReqUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户是否关注UP
	Attention int32 `protobuf:"varint,1,opt,name=attention,proto3" json:"attention,omitempty"`
	// UP是否关注用户
	GuestAttention int32 `protobuf:"varint,2,opt,name=guest_attention,json=guestAttention,proto3" json:"guest_attention,omitempty"`
	// 是否收藏
	Favorite int32 `protobuf:"varint,3,opt,name=favorite,proto3" json:"favorite,omitempty"`
	// 是否点赞
	Like int32 `protobuf:"varint,4,opt,name=like,proto3" json:"like,omitempty"`
	// 是否点踩
	Dislike int32 `protobuf:"varint,5,opt,name=dislike,proto3" json:"dislike,omitempty"`
	// 是否投币
	Coin int32 `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	// 关注等级
	AttentionLevel int32 `protobuf:"varint,7,opt,name=attention_level,json=attentionLevel,proto3" json:"attention_level,omitempty"`
	// 是否收藏合集
	FavSeason   int32   `protobuf:"varint,8,opt,name=fav_season,json=favSeason,proto3" json:"fav_season,omitempty"`
	ElecPlusBtn *Button `protobuf:"bytes,9,opt,name=elec_plus_btn,json=elecPlusBtn,proto3" json:"elec_plus_btn,omitempty"`
}

func (x *ReqUser) Reset() {
	*x = ReqUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUser) ProtoMessage() {}

func (x *ReqUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUser.ProtoReflect.Descriptor instead.
func (*ReqUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{104}
}

func (x *ReqUser) GetAttention() int32 {
	if x != nil {
		return x.Attention
	}
	return 0
}

func (x *ReqUser) GetGuestAttention() int32 {
	if x != nil {
		return x.GuestAttention
	}
	return 0
}

func (x *ReqUser) GetFavorite() int32 {
	if x != nil {
		return x.Favorite
	}
	return 0
}

func (x *ReqUser) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *ReqUser) GetDislike() int32 {
	if x != nil {
		return x.Dislike
	}
	return 0
}

func (x *ReqUser) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *ReqUser) GetAttentionLevel() int32 {
	if x != nil {
		return x.AttentionLevel
	}
	return 0
}

func (x *ReqUser) GetFavSeason() int32 {
	if x != nil {
		return x.FavSeason
	}
	return 0
}

func (x *ReqUser) GetElecPlusBtn() *Button {
	if x != nil {
		return x.ElecPlusBtn
	}
	return nil
}

type ReserveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveId int64 `protobuf:"varint,1,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
}

func (x *ReserveReply) Reset() {
	*x = ReserveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveReply) ProtoMessage() {}

func (x *ReserveReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveReply.ProtoReflect.Descriptor instead.
func (*ReserveReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{105}
}

func (x *ReserveReply) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

type ReserveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveId     int64 `protobuf:"varint,1,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	ReserveAction int64 `protobuf:"varint,2,opt,name=reserve_action,json=reserveAction,proto3" json:"reserve_action,omitempty"`
	UpId          int64 `protobuf:"varint,3,opt,name=up_id,json=upId,proto3" json:"up_id,omitempty"`
}

func (x *ReserveReq) Reset() {
	*x = ReserveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveReq) ProtoMessage() {}

func (x *ReserveReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveReq.ProtoReflect.Descriptor instead.
func (*ReserveReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{106}
}

func (x *ReserveReq) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *ReserveReq) GetReserveAction() int64 {
	if x != nil {
		return x.ReserveAction
	}
	return 0
}

func (x *ReserveReq) GetUpId() int64 {
	if x != nil {
		return x.UpId
	}
	return 0
}

type Restriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTeenagers bool `protobuf:"varint,1,opt,name=is_teenagers,json=isTeenagers,proto3" json:"is_teenagers,omitempty"`
	IsLessons   bool `protobuf:"varint,2,opt,name=is_lessons,json=isLessons,proto3" json:"is_lessons,omitempty"`
	IsReview    bool `protobuf:"varint,3,opt,name=is_review,json=isReview,proto3" json:"is_review,omitempty"`
	DisableRcmd bool `protobuf:"varint,4,opt,name=disable_rcmd,json=disableRcmd,proto3" json:"disable_rcmd,omitempty"`
}

func (x *Restriction) Reset() {
	*x = Restriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restriction) ProtoMessage() {}

func (x *Restriction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restriction.ProtoReflect.Descriptor instead.
func (*Restriction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{107}
}

func (x *Restriction) GetIsTeenagers() bool {
	if x != nil {
		return x.IsTeenagers
	}
	return false
}

func (x *Restriction) GetIsLessons() bool {
	if x != nil {
		return x.IsLessons
	}
	return false
}

func (x *Restriction) GetIsReview() bool {
	if x != nil {
		return x.IsReview
	}
	return false
}

func (x *Restriction) GetDisableRcmd() bool {
	if x != nil {
		return x.DisableRcmd
	}
	return false
}

// 剧集信息
type Season struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowDownload string `protobuf:"bytes,1,opt,name=allow_download,json=allowDownload,proto3" json:"allow_download,omitempty"`
	// 剧集ssid
	SeasonId int64 `protobuf:"varint,2,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 是否重定向跳转
	IsJump int32 `protobuf:"varint,3,opt,name=is_jump,json=isJump,proto3" json:"is_jump,omitempty"`
	// 剧集标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 剧集封面url
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 剧集是否完结
	IsFinish int32 `protobuf:"varint,6,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	// 最新一话epid
	NewestEpId int64 `protobuf:"varint,7,opt,name=newest_ep_id,json=newestEpId,proto3" json:"newest_ep_id,omitempty"`
	// 最新一话标题
	NewestEpIndex string `protobuf:"bytes,8,opt,name=newest_ep_index,json=newestEpIndex,proto3" json:"newest_ep_index,omitempty"`
	// 总集数
	TotalCount int64 `protobuf:"varint,9,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 更新星期日
	Weekday int32 `protobuf:"varint,10,opt,name=weekday,proto3" json:"weekday,omitempty"`
	// 用户追番标志
	UserSeason *UserSeason   `protobuf:"bytes,11,opt,name=user_season,json=userSeason,proto3" json:"user_season,omitempty"`
	Player     *SeasonPlayer `protobuf:"bytes,12,opt,name=player,proto3" json:"player,omitempty"`
	// 单集页面url
	OgvPlayurl string `protobuf:"bytes,13,opt,name=ogv_playurl,json=ogvPlayurl,proto3" json:"ogv_playurl,omitempty"`
}

func (x *Season) Reset() {
	*x = Season{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Season) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Season) ProtoMessage() {}

func (x *Season) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Season.ProtoReflect.Descriptor instead.
func (*Season) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{108}
}

func (x *Season) GetAllowDownload() string {
	if x != nil {
		return x.AllowDownload
	}
	return ""
}

func (x *Season) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *Season) GetIsJump() int32 {
	if x != nil {
		return x.IsJump
	}
	return 0
}

func (x *Season) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Season) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Season) GetIsFinish() int32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *Season) GetNewestEpId() int64 {
	if x != nil {
		return x.NewestEpId
	}
	return 0
}

func (x *Season) GetNewestEpIndex() string {
	if x != nil {
		return x.NewestEpIndex
	}
	return ""
}

func (x *Season) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Season) GetWeekday() int32 {
	if x != nil {
		return x.Weekday
	}
	return 0
}

func (x *Season) GetUserSeason() *UserSeason {
	if x != nil {
		return x.UserSeason
	}
	return nil
}

func (x *Season) GetPlayer() *SeasonPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *Season) GetOgvPlayurl() string {
	if x != nil {
		return x.OgvPlayurl
	}
	return ""
}

type SeasonActivityRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *UgcSeasonActivity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *SeasonActivityRecordReply) Reset() {
	*x = SeasonActivityRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonActivityRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonActivityRecordReply) ProtoMessage() {}

func (x *SeasonActivityRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonActivityRecordReply.ProtoReflect.Descriptor instead.
func (*SeasonActivityRecordReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{109}
}

func (x *SeasonActivityRecordReply) GetActivity() *UgcSeasonActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type SeasonActivityRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId   int64  `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	ActivityId int64  `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Action     int32  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	Aid        int64  `protobuf:"varint,4,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid        int64  `protobuf:"varint,5,opt,name=cid,proto3" json:"cid,omitempty"`
	Scene      int64  `protobuf:"varint,6,opt,name=scene,proto3" json:"scene,omitempty"`
	Spmid      string `protobuf:"bytes,7,opt,name=spmid,proto3" json:"spmid,omitempty"`
}

func (x *SeasonActivityRecordReq) Reset() {
	*x = SeasonActivityRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonActivityRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonActivityRecordReq) ProtoMessage() {}

func (x *SeasonActivityRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonActivityRecordReq.ProtoReflect.Descriptor instead.
func (*SeasonActivityRecordReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{110}
}

func (x *SeasonActivityRecordReq) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetScene() int64 {
	if x != nil {
		return x.Scene
	}
	return 0
}

func (x *SeasonActivityRecordReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

type SeasonPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Vid  string `protobuf:"bytes,2,opt,name=vid,proto3" json:"vid,omitempty"`
	Cid  int64  `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	From string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *SeasonPlayer) Reset() {
	*x = SeasonPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonPlayer) ProtoMessage() {}

func (x *SeasonPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonPlayer.ProtoReflect.Descriptor instead.
func (*SeasonPlayer) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{111}
}

func (x *SeasonPlayer) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *SeasonPlayer) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *SeasonPlayer) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SeasonPlayer) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// 合集详情页-响应
type SeasonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集信息
	Season *UgcSeason `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
}

func (x *SeasonReply) Reset() {
	*x = SeasonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonReply) ProtoMessage() {}

func (x *SeasonReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonReply.ProtoReflect.Descriptor instead.
func (*SeasonReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{112}
}

func (x *SeasonReply) GetSeason() *UgcSeason {
	if x != nil {
		return x.Season
	}
	return nil
}

// 合集详情页-请求
type SeasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集id
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *SeasonReq) Reset() {
	*x = SeasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonReq) ProtoMessage() {}

func (x *SeasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonReq.ProtoReflect.Descriptor instead.
func (*SeasonReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{113}
}

func (x *SeasonReq) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type SeasonShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonText    string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	JoinText      string `protobuf:"bytes,2,opt,name=join_text,json=joinText,proto3" json:"join_text,omitempty"`
	RuleText      string `protobuf:"bytes,3,opt,name=rule_text,json=ruleText,proto3" json:"rule_text,omitempty"`
	CheckinText   string `protobuf:"bytes,4,opt,name=checkin_text,json=checkinText,proto3" json:"checkin_text,omitempty"`
	CheckinPrompt string `protobuf:"bytes,5,opt,name=checkin_prompt,json=checkinPrompt,proto3" json:"checkin_prompt,omitempty"`
}

func (x *SeasonShow) Reset() {
	*x = SeasonShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonShow) ProtoMessage() {}

func (x *SeasonShow) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonShow.ProtoReflect.Descriptor instead.
func (*SeasonShow) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{114}
}

func (x *SeasonShow) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SeasonShow) GetJoinText() string {
	if x != nil {
		return x.JoinText
	}
	return ""
}

func (x *SeasonShow) GetRuleText() string {
	if x != nil {
		return x.RuleText
	}
	return ""
}

func (x *SeasonShow) GetCheckinText() string {
	if x != nil {
		return x.CheckinText
	}
	return ""
}

func (x *SeasonShow) GetCheckinPrompt() string {
	if x != nil {
		return x.CheckinPrompt
	}
	return ""
}

type SeasonWidgetExposeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId   int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	ActivityId int64 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *SeasonWidgetExposeReply) Reset() {
	*x = SeasonWidgetExposeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonWidgetExposeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonWidgetExposeReply) ProtoMessage() {}

func (x *SeasonWidgetExposeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonWidgetExposeReply.ProtoReflect.Descriptor instead.
func (*SeasonWidgetExposeReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{115}
}

func (x *SeasonWidgetExposeReply) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonWidgetExposeReply) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type SeasonWidgetExposeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid        int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Type       int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	SeasonId   int64 `protobuf:"varint,3,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	ActivityId int64 `protobuf:"varint,4,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Aid        int64 `protobuf:"varint,5,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid        int64 `protobuf:"varint,6,opt,name=cid,proto3" json:"cid,omitempty"`
	Scene      int64 `protobuf:"varint,7,opt,name=scene,proto3" json:"scene,omitempty"`
}

func (x *SeasonWidgetExposeReq) Reset() {
	*x = SeasonWidgetExposeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonWidgetExposeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonWidgetExposeReq) ProtoMessage() {}

func (x *SeasonWidgetExposeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonWidgetExposeReq.ProtoReflect.Descriptor instead.
func (*SeasonWidgetExposeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{116}
}

func (x *SeasonWidgetExposeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SeasonWidgetExposeReq) GetScene() int64 {
	if x != nil {
		return x.Scene
	}
	return 0
}

// 视频合集小节信息
type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 小节id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 小节标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 小节类型
	// 0:其他 1:正片
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 单话列表
	Episodes []*Episode `protobuf:"bytes,4,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{117}
}

func (x *Section) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Section) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Section) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Section) GetEpisodes() []*Episode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

// 短视频下载-响应
type ShortFormVideoDownloadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有下载分享按钮
	HasDownloadUrl bool `protobuf:"varint,1,opt,name=has_download_url,json=hasDownloadUrl,proto3" json:"has_download_url,omitempty"`
	// 下载url
	DownloadUrl string `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	// 文件md5
	Md5 string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	// 文件大小(单位为Byte)
	Size              int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	BackupDownloadUrl string `protobuf:"bytes,5,opt,name=backup_download_url,json=backupDownloadUrl,proto3" json:"backup_download_url,omitempty"`
}

func (x *ShortFormVideoDownloadReply) Reset() {
	*x = ShortFormVideoDownloadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortFormVideoDownloadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortFormVideoDownloadReply) ProtoMessage() {}

func (x *ShortFormVideoDownloadReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortFormVideoDownloadReply.ProtoReflect.Descriptor instead.
func (*ShortFormVideoDownloadReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{118}
}

func (x *ShortFormVideoDownloadReply) GetHasDownloadUrl() bool {
	if x != nil {
		return x.HasDownloadUrl
	}
	return false
}

func (x *ShortFormVideoDownloadReply) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *ShortFormVideoDownloadReply) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ShortFormVideoDownloadReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ShortFormVideoDownloadReply) GetBackupDownloadUrl() string {
	if x != nil {
		return x.BackupDownloadUrl
	}
	return ""
}

// 短视频下载-请求
type ShortFormVideoDownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 设备buvid
	Buvid string `protobuf:"bytes,4,opt,name=buvid,proto3" json:"buvid,omitempty"`
	// 移动端包类型
	MobiApp string `protobuf:"bytes,5,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	// 移动端版本号
	Build int64 `protobuf:"varint,6,opt,name=build,proto3" json:"build,omitempty"`
	// 运行设备
	Device string `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	// 平台
	Platform string `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	// 当前页面spm
	Spmid       string       `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	Restriction *Restriction `protobuf:"bytes,10,opt,name=restriction,proto3" json:"restriction,omitempty"`
	TfIsp       string       `protobuf:"bytes,11,opt,name=tf_isp,json=tfIsp,proto3" json:"tf_isp,omitempty"`
}

func (x *ShortFormVideoDownloadReq) Reset() {
	*x = ShortFormVideoDownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortFormVideoDownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortFormVideoDownloadReq) ProtoMessage() {}

func (x *ShortFormVideoDownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortFormVideoDownloadReq.ProtoReflect.Descriptor instead.
func (*ShortFormVideoDownloadReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{119}
}

func (x *ShortFormVideoDownloadReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ShortFormVideoDownloadReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ShortFormVideoDownloadReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ShortFormVideoDownloadReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

func (x *ShortFormVideoDownloadReq) GetMobiApp() string {
	if x != nil {
		return x.MobiApp
	}
	return ""
}

func (x *ShortFormVideoDownloadReq) GetBuild() int64 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *ShortFormVideoDownloadReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ShortFormVideoDownloadReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ShortFormVideoDownloadReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ShortFormVideoDownloadReq) GetRestriction() *Restriction {
	if x != nil {
		return x.Restriction
	}
	return nil
}

func (x *ShortFormVideoDownloadReq) GetTfIsp() string {
	if x != nil {
		return x.TfIsp
	}
	return ""
}

type SpecialCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon             string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	IconNight        string `protobuf:"bytes,2,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	Text             string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	TextColor        string `protobuf:"bytes,4,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight   string `protobuf:"bytes,5,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	JumpUrl          string `protobuf:"bytes,6,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	CellType         string `protobuf:"bytes,7,opt,name=cell_type,json=cellType,proto3" json:"cell_type,omitempty"`
	CellBgcolor      string `protobuf:"bytes,8,opt,name=cell_bgcolor,json=cellBgcolor,proto3" json:"cell_bgcolor,omitempty"`
	CellBgcolorNight string `protobuf:"bytes,9,opt,name=cell_bgcolor_night,json=cellBgcolorNight,proto3" json:"cell_bgcolor_night,omitempty"`
	Param            string `protobuf:"bytes,10,opt,name=param,proto3" json:"param,omitempty"`
	PageTitle        string `protobuf:"bytes,11,opt,name=page_title,json=pageTitle,proto3" json:"page_title,omitempty"`
	JumpType         string `protobuf:"bytes,12,opt,name=jump_type,json=jumpType,proto3" json:"jump_type,omitempty"`
	EndIcon          string `protobuf:"bytes,13,opt,name=end_icon,json=endIcon,proto3" json:"end_icon,omitempty"`
	EndIconNight     string `protobuf:"bytes,14,opt,name=end_icon_night,json=endIconNight,proto3" json:"end_icon_night,omitempty"`
	NotesCount       int64  `protobuf:"varint,15,opt,name=notes_count,json=notesCount,proto3" json:"notes_count,omitempty"`
}

func (x *SpecialCell) Reset() {
	*x = SpecialCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialCell) ProtoMessage() {}

func (x *SpecialCell) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialCell.ProtoReflect.Descriptor instead.
func (*SpecialCell) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{120}
}

func (x *SpecialCell) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SpecialCell) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *SpecialCell) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SpecialCell) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *SpecialCell) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *SpecialCell) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *SpecialCell) GetCellType() string {
	if x != nil {
		return x.CellType
	}
	return ""
}

func (x *SpecialCell) GetCellBgcolor() string {
	if x != nil {
		return x.CellBgcolor
	}
	return ""
}

func (x *SpecialCell) GetCellBgcolorNight() string {
	if x != nil {
		return x.CellBgcolorNight
	}
	return ""
}

func (x *SpecialCell) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *SpecialCell) GetPageTitle() string {
	if x != nil {
		return x.PageTitle
	}
	return ""
}

func (x *SpecialCell) GetJumpType() string {
	if x != nil {
		return x.JumpType
	}
	return ""
}

func (x *SpecialCell) GetEndIcon() string {
	if x != nil {
		return x.EndIcon
	}
	return ""
}

func (x *SpecialCell) GetEndIconNight() string {
	if x != nil {
		return x.EndIconNight
	}
	return ""
}

func (x *SpecialCell) GetNotesCount() int64 {
	if x != nil {
		return x.NotesCount
	}
	return 0
}

// 合作成员信息
type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成员mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 成员角色
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 成员头像url
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 成员昵称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 成员官方信息
	OfficialVerify *OfficialVerify `protobuf:"bytes,5,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	// 成员会员信息
	Vip *Vip `protobuf:"bytes,6,opt,name=vip,proto3" json:"vip,omitempty"`
	// 是否关注该成员
	Attention  int32 `protobuf:"varint,7,opt,name=attention,proto3" json:"attention,omitempty"`
	LabelStyle int32 `protobuf:"varint,8,opt,name=label_style,json=labelStyle,proto3" json:"label_style,omitempty"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{121}
}

func (x *Staff) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Staff) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Staff) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Staff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Staff) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *Staff) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Staff) GetAttention() int32 {
	if x != nil {
		return x.Attention
	}
	return 0
}

func (x *Staff) GetLabelStyle() int32 {
	if x != nil {
		return x.LabelStyle
	}
	return 0
}

// 标准卡
type StandardCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 按钮文字 未操作
	ButtonTitle string `protobuf:"bytes,2,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	// 按钮文字 已操作
	ButtonSelectedTitle string `protobuf:"bytes,3,opt,name=button_selected_title,json=buttonSelectedTitle,proto3" json:"button_selected_title,omitempty"`
	// 已操作态是否显示
	ShowSelected bool `protobuf:"varint,4,opt,name=show_selected,json=showSelected,proto3" json:"show_selected,omitempty"`
}

func (x *StandardCard) Reset() {
	*x = StandardCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardCard) ProtoMessage() {}

func (x *StandardCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardCard.ProtoReflect.Descriptor instead.
func (*StandardCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{122}
}

func (x *StandardCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StandardCard) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

func (x *StandardCard) GetButtonSelectedTitle() string {
	if x != nil {
		return x.ButtonSelectedTitle
	}
	return ""
}

func (x *StandardCard) GetShowSelected() bool {
	if x != nil {
		return x.ShowSelected
	}
	return false
}

// 免流子面板定制化配置
type SubTFPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 右侧按钮素材
	RightBtnImg string `protobuf:"bytes,1,opt,name=right_btn_img,json=rightBtnImg,proto3" json:"right_btn_img,omitempty"`
	// 右侧按钮文案
	RightBtnText string `protobuf:"bytes,2,opt,name=right_btn_text,json=rightBtnText,proto3" json:"right_btn_text,omitempty"`
	// 右侧按钮字体颜色
	RightBtnTextColor string `protobuf:"bytes,3,opt,name=right_btn_text_color,json=rightBtnTextColor,proto3" json:"right_btn_text_color,omitempty"`
	// 右侧按钮跳转链接
	RightBtnLink string `protobuf:"bytes,4,opt,name=right_btn_link,json=rightBtnLink,proto3" json:"right_btn_link,omitempty"`
	// 中心主文案内容
	MainLabel string `protobuf:"bytes,5,opt,name=main_label,json=mainLabel,proto3" json:"main_label,omitempty"`
	// 运营商
	Operator string `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *SubTFPanel) Reset() {
	*x = SubTFPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubTFPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTFPanel) ProtoMessage() {}

func (x *SubTFPanel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTFPanel.ProtoReflect.Descriptor instead.
func (*SubTFPanel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{123}
}

func (x *SubTFPanel) GetRightBtnImg() string {
	if x != nil {
		return x.RightBtnImg
	}
	return ""
}

func (x *SubTFPanel) GetRightBtnText() string {
	if x != nil {
		return x.RightBtnText
	}
	return ""
}

func (x *SubTFPanel) GetRightBtnTextColor() string {
	if x != nil {
		return x.RightBtnTextColor
	}
	return ""
}

func (x *SubTFPanel) GetRightBtnLink() string {
	if x != nil {
		return x.RightBtnLink
	}
	return ""
}

func (x *SubTFPanel) GetMainLabel() string {
	if x != nil {
		return x.MainLabel
	}
	return ""
}

func (x *SubTFPanel) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

// TAB
type Tab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 背景图片
	Background string `protobuf:"bytes,1,opt,name=background,proto3" json:"background,omitempty"`
	// 跳转类型
	Otype TabOtype `protobuf:"varint,2,opt,name=otype,proto3,enum=bilibili.app.view.v1.TabOtype" json:"otype,omitempty"`
	// 类型id
	Oid int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	// 跳转url
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	// 样式
	Style TabStyle `protobuf:"varint,5,opt,name=style,proto3,enum=bilibili.app.view.v1.TabStyle" json:"style,omitempty"`
	// 文字
	Text string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	// 未选中态字色
	TextColor string `protobuf:"bytes,7,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 选中态字色
	TextColorSelected string `protobuf:"bytes,8,opt,name=text_color_selected,json=textColorSelected,proto3" json:"text_color_selected,omitempty"`
	// 图片
	Pic string `protobuf:"bytes,9,opt,name=pic,proto3" json:"pic,omitempty"`
	// 后台配置自增
	Id        int64      `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	AdTabInfo *anypb.Any `protobuf:"bytes,11,opt,name=ad_tab_info,json=adTabInfo,proto3" json:"ad_tab_info,omitempty"`
}

func (x *Tab) Reset() {
	*x = Tab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tab) ProtoMessage() {}

func (x *Tab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tab.ProtoReflect.Descriptor instead.
func (*Tab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{124}
}

func (x *Tab) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *Tab) GetOtype() TabOtype {
	if x != nil {
		return x.Otype
	}
	return TabOtype_UnknownOtype
}

func (x *Tab) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *Tab) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Tab) GetStyle() TabStyle {
	if x != nil {
		return x.Style
	}
	return TabStyle_UnknownStyle
}

func (x *Tab) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Tab) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Tab) GetTextColorSelected() string {
	if x != nil {
		return x.TextColorSelected
	}
	return ""
}

func (x *Tab) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Tab) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tab) GetAdTabInfo() *anypb.Any {
	if x != nil {
		return x.AdTabInfo
	}
	return nil
}

// TAG信息
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TAD id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// TAG名
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Likes int64  `protobuf:"varint,3,opt,name=likes,proto3" json:"likes,omitempty"`
	Hates int64  `protobuf:"varint,4,opt,name=hates,proto3" json:"hates,omitempty"`
	Liked int32  `protobuf:"varint,5,opt,name=liked,proto3" json:"liked,omitempty"`
	Hated int32  `protobuf:"varint,6,opt,name=hated,proto3" json:"hated,omitempty"`
	// TAG页面uri
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// TAG类型
	// common:普通 new:话题 act:活动
	TagType string `protobuf:"bytes,8,opt,name=tag_type,json=tagType,proto3" json:"tag_type,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{125}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *Tag) GetHates() int64 {
	if x != nil {
		return x.Hates
	}
	return 0
}

func (x *Tag) GetLiked() int32 {
	if x != nil {
		return x.Liked
	}
	return 0
}

func (x *Tag) GetHated() int32 {
	if x != nil {
		return x.Hated
	}
	return 0
}

func (x *Tag) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Tag) GetTagType() string {
	if x != nil {
		return x.TagType
	}
	return ""
}

// 免流面板定制
type TFPanelCustomized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 右侧按钮素材
	RightBtnImg string `protobuf:"bytes,1,opt,name=right_btn_img,json=rightBtnImg,proto3" json:"right_btn_img,omitempty"`
	// 右侧按钮文案
	RightBtnText string `protobuf:"bytes,2,opt,name=right_btn_text,json=rightBtnText,proto3" json:"right_btn_text,omitempty"`
	// 右侧按钮字体颜色
	RightBtnTextColor string `protobuf:"bytes,3,opt,name=right_btn_text_color,json=rightBtnTextColor,proto3" json:"right_btn_text_color,omitempty"`
	// 右侧按钮跳转链接
	RightBtnLink string `protobuf:"bytes,4,opt,name=right_btn_link,json=rightBtnLink,proto3" json:"right_btn_link,omitempty"`
	// 中心主文案内容
	MainLabel string `protobuf:"bytes,5,opt,name=main_label,json=mainLabel,proto3" json:"main_label,omitempty"`
	// 运营商(cm ct cu)
	Operator string `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	// 子面板定制化配置
	SubPanel map[string]*SubTFPanel `protobuf:"bytes,7,rep,name=sub_panel,json=subPanel,proto3" json:"sub_panel,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TFPanelCustomized) Reset() {
	*x = TFPanelCustomized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TFPanelCustomized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFPanelCustomized) ProtoMessage() {}

func (x *TFPanelCustomized) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFPanelCustomized.ProtoReflect.Descriptor instead.
func (*TFPanelCustomized) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{126}
}

func (x *TFPanelCustomized) GetRightBtnImg() string {
	if x != nil {
		return x.RightBtnImg
	}
	return ""
}

func (x *TFPanelCustomized) GetRightBtnText() string {
	if x != nil {
		return x.RightBtnText
	}
	return ""
}

func (x *TFPanelCustomized) GetRightBtnTextColor() string {
	if x != nil {
		return x.RightBtnTextColor
	}
	return ""
}

func (x *TFPanelCustomized) GetRightBtnLink() string {
	if x != nil {
		return x.RightBtnLink
	}
	return ""
}

func (x *TFPanelCustomized) GetMainLabel() string {
	if x != nil {
		return x.MainLabel
	}
	return ""
}

func (x *TFPanelCustomized) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *TFPanelCustomized) GetSubPanel() map[string]*SubTFPanel {
	if x != nil {
		return x.SubPanel
	}
	return nil
}

// TAG图标信息
type TIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TAG图标url
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *TIcon) Reset() {
	*x = TIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TIcon) ProtoMessage() {}

func (x *TIcon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TIcon.ProtoReflect.Descriptor instead.
func (*TIcon) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{127}
}

func (x *TIcon) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// UGC视频合集信息
type UgcSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 合集标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 合集封面url
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 合集简介
	Intro string `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro,omitempty"`
	// 小节列表
	Sections []*Section `protobuf:"bytes,5,rep,name=sections,proto3" json:"sections,omitempty"`
	// 合集状态数
	Stat *UgcSeasonStat `protobuf:"bytes,6,opt,name=stat,proto3" json:"stat,omitempty"`
	// 标签字色
	LabelText string `protobuf:"bytes,7,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	// 标签背景色
	LabelTextColor string `protobuf:"bytes,8,opt,name=label_text_color,json=labelTextColor,proto3" json:"label_text_color,omitempty"`
	// 标签夜间字色
	LabelBgColor string `protobuf:"bytes,9,opt,name=label_bg_color,json=labelBgColor,proto3" json:"label_bg_color,omitempty"`
	// 标签夜间背景色
	LabelTextNightColor string `protobuf:"bytes,10,opt,name=label_text_night_color,json=labelTextNightColor,proto3" json:"label_text_night_color,omitempty"`
	// 右侧描述文案
	LabelBgNightColor string `protobuf:"bytes,11,opt,name=label_bg_night_color,json=labelBgNightColor,proto3" json:"label_bg_night_color,omitempty"`
	// 按钮文案
	DescRight string `protobuf:"bytes,12,opt,name=descRight,proto3" json:"descRight,omitempty"`
	// 分集总数
	EpCount int64 `protobuf:"varint,13,opt,name=ep_count,json=epCount,proto3" json:"ep_count,omitempty"`
	// 合集类型
	SeasonType          SeasonType         `protobuf:"varint,14,opt,name=season_type,json=seasonType,proto3,enum=bilibili.app.view.v1.SeasonType" json:"season_type,omitempty"`
	ShowContinualButton bool               `protobuf:"varint,15,opt,name=show_continual_button,json=showContinualButton,proto3" json:"show_continual_button,omitempty"`
	EpNum               int64              `protobuf:"varint,16,opt,name=ep_num,json=epNum,proto3" json:"ep_num,omitempty"`
	SeasonPay           bool               `protobuf:"varint,17,opt,name=season_pay,json=seasonPay,proto3" json:"season_pay,omitempty"`
	GoodsInfo           *GoodsInfo         `protobuf:"bytes,18,opt,name=goods_info,json=goodsInfo,proto3" json:"goods_info,omitempty"`
	PayButton           *ButtonStyle       `protobuf:"bytes,19,opt,name=pay_button,json=payButton,proto3" json:"pay_button,omitempty"`
	LabelTextNew        string             `protobuf:"bytes,20,opt,name=label_text_new,json=labelTextNew,proto3" json:"label_text_new,omitempty"`
	Activity            *UgcSeasonActivity `protobuf:"bytes,21,opt,name=activity,proto3" json:"activity,omitempty"`
	SeasonAbility       []string           `protobuf:"bytes,22,rep,name=season_ability,json=seasonAbility,proto3" json:"season_ability,omitempty"`
}

func (x *UgcSeason) Reset() {
	*x = UgcSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSeason) ProtoMessage() {}

func (x *UgcSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSeason.ProtoReflect.Descriptor instead.
func (*UgcSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{128}
}

func (x *UgcSeason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UgcSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UgcSeason) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UgcSeason) GetSections() []*Section {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *UgcSeason) GetStat() *UgcSeasonStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *UgcSeason) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *UgcSeason) GetLabelTextColor() string {
	if x != nil {
		return x.LabelTextColor
	}
	return ""
}

func (x *UgcSeason) GetLabelBgColor() string {
	if x != nil {
		return x.LabelBgColor
	}
	return ""
}

func (x *UgcSeason) GetLabelTextNightColor() string {
	if x != nil {
		return x.LabelTextNightColor
	}
	return ""
}

func (x *UgcSeason) GetLabelBgNightColor() string {
	if x != nil {
		return x.LabelBgNightColor
	}
	return ""
}

func (x *UgcSeason) GetDescRight() string {
	if x != nil {
		return x.DescRight
	}
	return ""
}

func (x *UgcSeason) GetEpCount() int64 {
	if x != nil {
		return x.EpCount
	}
	return 0
}

func (x *UgcSeason) GetSeasonType() SeasonType {
	if x != nil {
		return x.SeasonType
	}
	return SeasonType_Unknown
}

func (x *UgcSeason) GetShowContinualButton() bool {
	if x != nil {
		return x.ShowContinualButton
	}
	return false
}

func (x *UgcSeason) GetEpNum() int64 {
	if x != nil {
		return x.EpNum
	}
	return 0
}

func (x *UgcSeason) GetSeasonPay() bool {
	if x != nil {
		return x.SeasonPay
	}
	return false
}

func (x *UgcSeason) GetGoodsInfo() *GoodsInfo {
	if x != nil {
		return x.GoodsInfo
	}
	return nil
}

func (x *UgcSeason) GetPayButton() *ButtonStyle {
	if x != nil {
		return x.PayButton
	}
	return nil
}

func (x *UgcSeason) GetLabelTextNew() string {
	if x != nil {
		return x.LabelTextNew
	}
	return ""
}

func (x *UgcSeason) GetActivity() *UgcSeasonActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *UgcSeason) GetSeasonAbility() []string {
	if x != nil {
		return x.SeasonAbility
	}
	return nil
}

type UgcSeasonActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             int32         `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Oid              int64         `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	ActivityId       int64         `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Title            string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Intro            string        `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	DayCount         int32         `protobuf:"varint,6,opt,name=day_count,json=dayCount,proto3" json:"day_count,omitempty"`
	UserCount        int32         `protobuf:"varint,7,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	JoinDeadline     int64         `protobuf:"varint,8,opt,name=join_deadline,json=joinDeadline,proto3" json:"join_deadline,omitempty"`
	ActivityDeadline int64         `protobuf:"varint,9,opt,name=activity_deadline,json=activityDeadline,proto3" json:"activity_deadline,omitempty"`
	CheckinViewTime  int32         `protobuf:"varint,10,opt,name=checkin_view_time,json=checkinViewTime,proto3" json:"checkin_view_time,omitempty"`
	NewActivity      bool          `protobuf:"varint,11,opt,name=new_activity,json=newActivity,proto3" json:"new_activity,omitempty"`
	UserActivity     *UserActivity `protobuf:"bytes,12,opt,name=user_activity,json=userActivity,proto3" json:"user_activity,omitempty"`
	SeasonShow       *SeasonShow   `protobuf:"bytes,13,opt,name=season_show,json=seasonShow,proto3" json:"season_show,omitempty"`
}

func (x *UgcSeasonActivity) Reset() {
	*x = UgcSeasonActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSeasonActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSeasonActivity) ProtoMessage() {}

func (x *UgcSeasonActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSeasonActivity.ProtoReflect.Descriptor instead.
func (*UgcSeasonActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{129}
}

func (x *UgcSeasonActivity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UgcSeasonActivity) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *UgcSeasonActivity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *UgcSeasonActivity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcSeasonActivity) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UgcSeasonActivity) GetDayCount() int32 {
	if x != nil {
		return x.DayCount
	}
	return 0
}

func (x *UgcSeasonActivity) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *UgcSeasonActivity) GetJoinDeadline() int64 {
	if x != nil {
		return x.JoinDeadline
	}
	return 0
}

func (x *UgcSeasonActivity) GetActivityDeadline() int64 {
	if x != nil {
		return x.ActivityDeadline
	}
	return 0
}

func (x *UgcSeasonActivity) GetCheckinViewTime() int32 {
	if x != nil {
		return x.CheckinViewTime
	}
	return 0
}

func (x *UgcSeasonActivity) GetNewActivity() bool {
	if x != nil {
		return x.NewActivity
	}
	return false
}

func (x *UgcSeasonActivity) GetUserActivity() *UserActivity {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

func (x *UgcSeasonActivity) GetSeasonShow() *SeasonShow {
	if x != nil {
		return x.SeasonShow
	}
	return nil
}

// ugc视频合集状态数
type UgcSeasonStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合集id
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 观看数
	View int32 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	// 弹幕数
	Danmaku int32 `protobuf:"varint,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	// 评论数
	Reply int32 `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	// 收藏数
	Fav int32 `protobuf:"varint,5,opt,name=fav,proto3" json:"fav,omitempty"`
	// 投币数
	Coin int32 `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	// 分享数
	Share int32 `protobuf:"varint,7,opt,name=share,proto3" json:"share,omitempty"`
	// 当前排名
	NowRank int32 `protobuf:"varint,8,opt,name=now_rank,json=nowRank,proto3" json:"now_rank,omitempty"`
	// 历史最高排名
	HisRank int32 `protobuf:"varint,9,opt,name=his_rank,json=hisRank,proto3" json:"his_rank,omitempty"`
	// 总计点赞
	Like int32 `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *UgcSeasonStat) Reset() {
	*x = UgcSeasonStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSeasonStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSeasonStat) ProtoMessage() {}

func (x *UgcSeasonStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSeasonStat.ProtoReflect.Descriptor instead.
func (*UgcSeasonStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{130}
}

func (x *UgcSeasonStat) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *UgcSeasonStat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *UgcSeasonStat) GetDanmaku() int32 {
	if x != nil {
		return x.Danmaku
	}
	return 0
}

func (x *UgcSeasonStat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *UgcSeasonStat) GetFav() int32 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *UgcSeasonStat) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *UgcSeasonStat) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *UgcSeasonStat) GetNowRank() int32 {
	if x != nil {
		return x.NowRank
	}
	return 0
}

func (x *UgcSeasonStat) GetHisRank() int32 {
	if x != nil {
		return x.HisRank
	}
	return 0
}

func (x *UgcSeasonStat) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

type UpAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid       int64  `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid       int64  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Statement string `protobuf:"bytes,4,opt,name=statement,proto3" json:"statement,omitempty"`
	Image     string `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Url       string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Button    string `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
}

func (x *UpAct) Reset() {
	*x = UpAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpAct) ProtoMessage() {}

func (x *UpAct) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpAct.ProtoReflect.Descriptor instead.
func (*UpAct) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{131}
}

func (x *UpAct) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *UpAct) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UpAct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpAct) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *UpAct) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpAct) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpAct) GetButton() string {
	if x != nil {
		return x.Button
	}
	return ""
}

type UpLikeImg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreImg  string `protobuf:"bytes,1,opt,name=pre_img,json=preImg,proto3" json:"pre_img,omitempty"`
	SucImg  string `protobuf:"bytes,2,opt,name=suc_img,json=sucImg,proto3" json:"suc_img,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type    int64  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpLikeImg) Reset() {
	*x = UpLikeImg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpLikeImg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpLikeImg) ProtoMessage() {}

func (x *UpLikeImg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpLikeImg.ProtoReflect.Descriptor instead.
func (*UpLikeImg) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{132}
}

func (x *UpLikeImg) GetPreImg() string {
	if x != nil {
		return x.PreImg
	}
	return ""
}

func (x *UpLikeImg) GetSucImg() string {
	if x != nil {
		return x.SucImg
	}
	return ""
}

func (x *UpLikeImg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpLikeImg) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// UP主信息
type UpperInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 粉丝数
	FansCount int64 `protobuf:"varint,1,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`
	// 近半年投稿数
	ArcCountLastHalfYear int64 `protobuf:"varint,2,opt,name=arc_count_last_half_year,json=arcCountLastHalfYear,proto3" json:"arc_count_last_half_year,omitempty"`
	// 成为UP主时间
	FirstUpDates int64 `protobuf:"varint,3,opt,name=first_up_dates,json=firstUpDates,proto3" json:"first_up_dates,omitempty"`
	// 总播放量
	TotalPlayCount int64 `protobuf:"varint,4,opt,name=total_play_count,json=totalPlayCount,proto3" json:"total_play_count,omitempty"`
}

func (x *UpperInfos) Reset() {
	*x = UpperInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpperInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpperInfos) ProtoMessage() {}

func (x *UpperInfos) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpperInfos.ProtoReflect.Descriptor instead.
func (*UpperInfos) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{133}
}

func (x *UpperInfos) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *UpperInfos) GetArcCountLastHalfYear() int64 {
	if x != nil {
		return x.ArcCountLastHalfYear
	}
	return 0
}

func (x *UpperInfos) GetFirstUpDates() int64 {
	if x != nil {
		return x.FirstUpDates
	}
	return 0
}

func (x *UpperInfos) GetTotalPlayCount() int64 {
	if x != nil {
		return x.TotalPlayCount
	}
	return 0
}

type UserActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserState       int32  `protobuf:"varint,1,opt,name=user_state,json=userState,proto3" json:"user_state,omitempty"`
	LastCheckinDate int64  `protobuf:"varint,2,opt,name=last_checkin_date,json=lastCheckinDate,proto3" json:"last_checkin_date,omitempty"`
	CheckinToday    int32  `protobuf:"varint,3,opt,name=checkin_today,json=checkinToday,proto3" json:"checkin_today,omitempty"`
	UserDayCount    int32  `protobuf:"varint,4,opt,name=user_day_count,json=userDayCount,proto3" json:"user_day_count,omitempty"`
	UserViewTime    int32  `protobuf:"varint,5,opt,name=user_view_time,json=userViewTime,proto3" json:"user_view_time,omitempty"`
	Portrait        string `protobuf:"bytes,6,opt,name=portrait,proto3" json:"portrait,omitempty"`
}

func (x *UserActivity) Reset() {
	*x = UserActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity) ProtoMessage() {}

func (x *UserActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity.ProtoReflect.Descriptor instead.
func (*UserActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{134}
}

func (x *UserActivity) GetUserState() int32 {
	if x != nil {
		return x.UserState
	}
	return 0
}

func (x *UserActivity) GetLastCheckinDate() int64 {
	if x != nil {
		return x.LastCheckinDate
	}
	return 0
}

func (x *UserActivity) GetCheckinToday() int32 {
	if x != nil {
		return x.CheckinToday
	}
	return 0
}

func (x *UserActivity) GetUserDayCount() int32 {
	if x != nil {
		return x.UserDayCount
	}
	return 0
}

func (x *UserActivity) GetUserViewTime() int32 {
	if x != nil {
		return x.UserViewTime
	}
	return 0
}

func (x *UserActivity) GetPortrait() string {
	if x != nil {
		return x.Portrait
	}
	return ""
}

// 用户装扮信息
type UserGarb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 点赞动画url
	UrlImageAniCut string `protobuf:"bytes,1,opt,name=url_image_ani_cut,json=urlImageAniCut,proto3" json:"url_image_ani_cut,omitempty"`
	LikeToast      string `protobuf:"bytes,2,opt,name=like_toast,json=likeToast,proto3" json:"like_toast,omitempty"`
}

func (x *UserGarb) Reset() {
	*x = UserGarb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGarb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGarb) ProtoMessage() {}

func (x *UserGarb) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGarb.ProtoReflect.Descriptor instead.
func (*UserGarb) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{135}
}

func (x *UserGarb) GetUrlImageAniCut() string {
	if x != nil {
		return x.UrlImageAniCut
	}
	return ""
}

func (x *UserGarb) GetLikeToast() string {
	if x != nil {
		return x.LikeToast
	}
	return ""
}

// 用户追番标志
type UserSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关注状态
	// 0:未关注 1:已关注
	Attention string `protobuf:"bytes,1,opt,name=attention,proto3" json:"attention,omitempty"`
}

func (x *UserSeason) Reset() {
	*x = UserSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSeason) ProtoMessage() {}

func (x *UserSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSeason.ProtoReflect.Descriptor instead.
func (*UserSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{136}
}

func (x *UserSeason) GetAttention() string {
	if x != nil {
		return x.Attention
	}
	return ""
}

// 视频引导信息
type VideoGuide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关注按钮卡片
	Attention []*Attention `protobuf:"bytes,1,rep,name=attention,proto3" json:"attention,omitempty"`
	// 互动弹幕
	CommandDms []*CommandDm `protobuf:"bytes,2,rep,name=commandDms,proto3" json:"commandDms,omitempty"`
	// 运营卡片
	OperationCard []*OperationCard `protobuf:"bytes,3,rep,name=operation_card,json=operationCard,proto3" json:"operation_card,omitempty"`
	// 运营卡片新版
	OperationCardNew []*OperationCardNew `protobuf:"bytes,4,rep,name=operation_card_new,json=operationCardNew,proto3" json:"operation_card_new,omitempty"`
	// 契约卡
	ContractCard *ContractCard      `protobuf:"bytes,5,opt,name=contract_card,json=contractCard,proto3" json:"contract_card,omitempty"`
	CardsSecond  []*OperationCardV2 `protobuf:"bytes,6,rep,name=cards_second,json=cardsSecond,proto3" json:"cards_second,omitempty"`
}

func (x *VideoGuide) Reset() {
	*x = VideoGuide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoGuide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoGuide) ProtoMessage() {}

func (x *VideoGuide) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoGuide.ProtoReflect.Descriptor instead.
func (*VideoGuide) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{137}
}

func (x *VideoGuide) GetAttention() []*Attention {
	if x != nil {
		return x.Attention
	}
	return nil
}

func (x *VideoGuide) GetCommandDms() []*CommandDm {
	if x != nil {
		return x.CommandDms
	}
	return nil
}

func (x *VideoGuide) GetOperationCard() []*OperationCard {
	if x != nil {
		return x.OperationCard
	}
	return nil
}

func (x *VideoGuide) GetOperationCardNew() []*OperationCardNew {
	if x != nil {
		return x.OperationCardNew
	}
	return nil
}

func (x *VideoGuide) GetContractCard() *ContractCard {
	if x != nil {
		return x.ContractCard
	}
	return nil
}

func (x *VideoGuide) GetCardsSecond() []*OperationCardV2 {
	if x != nil {
		return x.CardsSecond
	}
	return nil
}

type VideoPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	From    int64  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To      int64  `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Cover   string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	LogoUrl string `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
}

func (x *VideoPoint) Reset() {
	*x = VideoPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPoint) ProtoMessage() {}

func (x *VideoPoint) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPoint.ProtoReflect.Descriptor instead.
func (*VideoPoint) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{138}
}

func (x *VideoPoint) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VideoPoint) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *VideoPoint) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *VideoPoint) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *VideoPoint) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *VideoPoint) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

type VideoShot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PvData   string   `protobuf:"bytes,1,opt,name=pv_data,json=pvData,proto3" json:"pv_data,omitempty"`
	ImgXLen  int32    `protobuf:"varint,2,opt,name=img_x_len,json=imgXLen,proto3" json:"img_x_len,omitempty"`
	ImgYLen  int32    `protobuf:"varint,3,opt,name=img_y_len,json=imgYLen,proto3" json:"img_y_len,omitempty"`
	ImgXSize int32    `protobuf:"varint,4,opt,name=img_x_size,json=imgXSize,proto3" json:"img_x_size,omitempty"`
	ImgYSize int32    `protobuf:"varint,5,opt,name=img_y_size,json=imgYSize,proto3" json:"img_y_size,omitempty"`
	Image    []string `protobuf:"bytes,6,rep,name=image,proto3" json:"image,omitempty"`
}

func (x *VideoShot) Reset() {
	*x = VideoShot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoShot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoShot) ProtoMessage() {}

func (x *VideoShot) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoShot.ProtoReflect.Descriptor instead.
func (*VideoShot) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{139}
}

func (x *VideoShot) GetPvData() string {
	if x != nil {
		return x.PvData
	}
	return ""
}

func (x *VideoShot) GetImgXLen() int32 {
	if x != nil {
		return x.ImgXLen
	}
	return 0
}

func (x *VideoShot) GetImgYLen() int32 {
	if x != nil {
		return x.ImgYLen
	}
	return 0
}

func (x *VideoShot) GetImgXSize() int32 {
	if x != nil {
		return x.ImgXSize
	}
	return 0
}

func (x *VideoShot) GetImgYSize() int32 {
	if x != nil {
		return x.ImgYSize
	}
	return 0
}

func (x *VideoShot) GetImage() []string {
	if x != nil {
		return x.Image
	}
	return nil
}

type ViewMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid     int64  `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Mid     int64  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Author  string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *ViewMaterial) Reset() {
	*x = ViewMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewMaterial) ProtoMessage() {}

func (x *ViewMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewMaterial.ProtoReflect.Descriptor instead.
func (*ViewMaterial) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{140}
}

func (x *ViewMaterial) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ViewMaterial) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ViewMaterial) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ViewMaterial) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ViewMaterial) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type ViewMaterialReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialRes  []*MaterialRes `protobuf:"bytes,1,rep,name=material_res,json=materialRes,proto3" json:"material_res,omitempty"`
	MaterialLeft *MaterialLeft  `protobuf:"bytes,2,opt,name=material_left,json=materialLeft,proto3" json:"material_left,omitempty"`
}

func (x *ViewMaterialReply) Reset() {
	*x = ViewMaterialReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewMaterialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewMaterialReply) ProtoMessage() {}

func (x *ViewMaterialReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewMaterialReply.ProtoReflect.Descriptor instead.
func (*ViewMaterialReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{141}
}

func (x *ViewMaterialReply) GetMaterialRes() []*MaterialRes {
	if x != nil {
		return x.MaterialRes
	}
	return nil
}

func (x *ViewMaterialReply) GetMaterialLeft() *MaterialLeft {
	if x != nil {
		return x.MaterialLeft
	}
	return nil
}

type ViewMaterialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid  int64  `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ViewMaterialReq) Reset() {
	*x = ViewMaterialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewMaterialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewMaterialReq) ProtoMessage() {}

func (x *ViewMaterialReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewMaterialReq.ProtoReflect.Descriptor instead.
func (*ViewMaterialReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{142}
}

func (x *ViewMaterialReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewMaterialReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ViewMaterialReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 分P信息
type ViewPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分P基本信息
	Page *v1.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 分P对应的音频稿件
	Audio *Audio `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
	// 分P弹幕信息
	Dm *DM `protobuf:"bytes,3,opt,name=dm,proto3" json:"dm,omitempty"`
	// 下载文案
	DownloadTitle string `protobuf:"bytes,4,opt,name=download_title,json=downloadTitle,proto3" json:"download_title,omitempty"`
	// 分P完整标题(视频标题+分P标题)
	DownloadSubtitle string `protobuf:"bytes,5,opt,name=download_subtitle,json=downloadSubtitle,proto3" json:"download_subtitle,omitempty"`
}

func (x *ViewPage) Reset() {
	*x = ViewPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewPage) ProtoMessage() {}

func (x *ViewPage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewPage.ProtoReflect.Descriptor instead.
func (*ViewPage) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{143}
}

func (x *ViewPage) GetPage() *v1.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ViewPage) GetAudio() *Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *ViewPage) GetDm() *DM {
	if x != nil {
		return x.Dm
	}
	return nil
}

func (x *ViewPage) GetDownloadTitle() string {
	if x != nil {
		return x.DownloadTitle
	}
	return ""
}

func (x *ViewPage) GetDownloadSubtitle() string {
	if x != nil {
		return x.DownloadSubtitle
	}
	return ""
}

// 稿件播放中数据-回复
type ViewProgressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频引导信息
	VideoGuide *VideoGuide `protobuf:"bytes,1,opt,name=video_guide,json=videoGuide,proto3" json:"video_guide,omitempty"`
	// Chronos灰度管理
	Chronos *Chronos `protobuf:"bytes,2,opt,name=chronos,proto3" json:"chronos,omitempty"`
	// 视频快照
	ArcShot        *VideoShot     `protobuf:"bytes,3,opt,name=arc_shot,json=arcShot,proto3" json:"arc_shot,omitempty"`
	Points         []*VideoPoint  `protobuf:"bytes,4,rep,name=points,proto3" json:"points,omitempty"`
	PointMaterial  *PointMaterial `protobuf:"bytes,5,opt,name=point_material,json=pointMaterial,proto3" json:"point_material,omitempty"`
	PointPermanent bool           `protobuf:"varint,6,opt,name=point_permanent,json=pointPermanent,proto3" json:"point_permanent,omitempty"`
	// 名词解释列表
	BuzzwordPeriods []*BuzzwordConfig `protobuf:"bytes,7,rep,name=buzzword_periods,json=buzzwordPeriods,proto3" json:"buzzword_periods,omitempty"`
}

func (x *ViewProgressReply) Reset() {
	*x = ViewProgressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewProgressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewProgressReply) ProtoMessage() {}

func (x *ViewProgressReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewProgressReply.ProtoReflect.Descriptor instead.
func (*ViewProgressReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{144}
}

func (x *ViewProgressReply) GetVideoGuide() *VideoGuide {
	if x != nil {
		return x.VideoGuide
	}
	return nil
}

func (x *ViewProgressReply) GetChronos() *Chronos {
	if x != nil {
		return x.Chronos
	}
	return nil
}

func (x *ViewProgressReply) GetArcShot() *VideoShot {
	if x != nil {
		return x.ArcShot
	}
	return nil
}

func (x *ViewProgressReply) GetPoints() []*VideoPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *ViewProgressReply) GetPointMaterial() *PointMaterial {
	if x != nil {
		return x.PointMaterial
	}
	return nil
}

func (x *ViewProgressReply) GetPointPermanent() bool {
	if x != nil {
		return x.PointPermanent
	}
	return false
}

func (x *ViewProgressReply) GetBuzzwordPeriods() []*BuzzwordConfig {
	if x != nil {
		return x.BuzzwordPeriods
	}
	return nil
}

// 稿件播放中数据-请求
type ViewProgressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// UP主mid
	UpMid           int64  `protobuf:"varint,3,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	EngineVersion   string `protobuf:"bytes,4,opt,name=engine_version,json=engineVersion,proto3" json:"engine_version,omitempty"`
	MessageProtocol string `protobuf:"bytes,5,opt,name=message_protocol,json=messageProtocol,proto3" json:"message_protocol,omitempty"`
	ServiceKey      string `protobuf:"bytes,6,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
}

func (x *ViewProgressReq) Reset() {
	*x = ViewProgressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewProgressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewProgressReq) ProtoMessage() {}

func (x *ViewProgressReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewProgressReq.ProtoReflect.Descriptor instead.
func (*ViewProgressReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{145}
}

func (x *ViewProgressReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewProgressReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ViewProgressReq) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *ViewProgressReq) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *ViewProgressReq) GetMessageProtocol() string {
	if x != nil {
		return x.MessageProtocol
	}
	return ""
}

func (x *ViewProgressReq) GetServiceKey() string {
	if x != nil {
		return x.ServiceKey
	}
	return ""
}

// 视频页信息-响应
type ViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件信息
	Arc *v1.Arc `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	// 分P信息
	Pages []*ViewPage `protobuf:"bytes,2,rep,name=pages,proto3" json:"pages,omitempty"`
	// UP主扩展信息 ("OnwerExt"为源码中拼写错误)
	OwnerExt *OnwerExt `protobuf:"bytes,3,opt,name=owner_ext,json=ownerExt,proto3" json:"owner_ext,omitempty"`
	// 稿件用户操作状态
	ReqUser *ReqUser `protobuf:"bytes,4,opt,name=req_user,json=reqUser,proto3" json:"req_user,omitempty"`
	// 稿件TAG
	Tag []*Tag `protobuf:"bytes,5,rep,name=tag,proto3" json:"tag,omitempty"`
	// TAG对应的图标
	TIcon map[string]*TIcon `protobuf:"bytes,6,rep,name=t_icon,json=tIcon,proto3" json:"t_icon,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 稿件映射的PGC剧集信息
	Season *Season `protobuf:"bytes,7,opt,name=season,proto3" json:"season,omitempty"`
	// 充电排行
	ElecRank *ElecRank `protobuf:"bytes,8,opt,name=elec_rank,json=elecRank,proto3" json:"elec_rank,omitempty"`
	// 历史观看进度
	History *History `protobuf:"bytes,9,opt,name=history,proto3" json:"history,omitempty"`
	// 视频相关推荐列表
	Relates []*Relate `protobuf:"bytes,10,rep,name=relates,proto3" json:"relates,omitempty"`
	// 不感兴趣原因
	Dislike *Dislike `protobuf:"bytes,11,opt,name=dislike,proto3" json:"dislike,omitempty"`
	// 播放图标动画配置档
	PlayerIcon *PlayerIcon `protobuf:"bytes,12,opt,name=player_icon,json=playerIcon,proto3" json:"player_icon,omitempty"`
	VipActive  string      `protobuf:"bytes,13,opt,name=vip_active,json=vipActive,proto3" json:"vip_active,omitempty"`
	// 稿件bvid
	Bvid string `protobuf:"bytes,14,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 获得荣誉信息
	Honor *Honor `protobuf:"bytes,15,opt,name=honor,proto3" json:"honor,omitempty"`
	// 相关推荐顶部tab
	RelateTab []*RelateTab `protobuf:"bytes,16,rep,name=relate_tab,json=relateTab,proto3" json:"relate_tab,omitempty"`
	// 参与的活动页面url
	ActivityUrl string `protobuf:"bytes,17,opt,name=activity_url,json=activityUrl,proto3" json:"activity_url,omitempty"`
	// 稿件引用bgm列表
	Bgm []*Bgm `protobuf:"bytes,18,rep,name=bgm,proto3" json:"bgm,omitempty"`
	// 联合投稿成员列表
	Staff []*Staff `protobuf:"bytes,19,rep,name=staff,proto3" json:"staff,omitempty"`
	// 争议信息
	ArgueMsg string `protobuf:"bytes,20,opt,name=argue_msg,json=argueMsg,proto3" json:"argue_msg,omitempty"`
	// 短链接
	ShortLink string `protobuf:"bytes,21,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	// 播放实验
	// 1:相关推荐自动播放
	PlayParam int32 `protobuf:"varint,22,opt,name=play_param,json=playParam,proto3" json:"play_param,omitempty"`
	// 标签
	Label *Label `protobuf:"bytes,23,opt,name=label,proto3" json:"label,omitempty"`
	// UGC视频合集信息
	UgcSeason *UgcSeason `protobuf:"bytes,24,opt,name=ugc_season,json=ugcSeason,proto3" json:"ugc_season,omitempty"`
	// 配置信息
	Config *Config `protobuf:"bytes,25,opt,name=config,proto3" json:"config,omitempty"`
	// 分享副标题(已观看xxx次)
	ShareSubtitle string `protobuf:"bytes,26,opt,name=share_subtitle,json=shareSubtitle,proto3" json:"share_subtitle,omitempty"`
	// 互动视频信息
	Interaction *Interaction `protobuf:"bytes,27,opt,name=interaction,proto3" json:"interaction,omitempty"`
	// 错误码
	// DEFAULT:正常 CODE404:视频被UP主删除
	Ecode ECode `protobuf:"varint,28,opt,name=ecode,proto3,enum=bilibili.app.view.v1.ECode" json:"ecode,omitempty"`
	// 404页信息
	CustomConfig *CustomConfig `protobuf:"bytes,29,opt,name=custom_config,json=customConfig,proto3" json:"custom_config,omitempty"`
	// 广告
	Cms []*CM `protobuf:"bytes,30,rep,name=cms,proto3" json:"cms,omitempty"`
	// 广告配置
	CmConfig *CMConfig `protobuf:"bytes,31,opt,name=cm_config,json=cmConfig,proto3" json:"cm_config,omitempty"`
	// 播放页定制tab
	Tab *Tab `protobuf:"bytes,32,opt,name=tab,proto3" json:"tab,omitempty"`
	// 排行榜
	Rank *Rank `protobuf:"bytes,33,opt,name=rank,proto3" json:"rank,omitempty"`
	// 免流面板定制
	TfPanelCustomized *TFPanelCustomized `protobuf:"bytes,34,opt,name=tf_panel_customized,json=tfPanelCustomized,proto3" json:"tf_panel_customized,omitempty"`
	// UP主发起活动
	UpAct *UpAct `protobuf:"bytes,35,opt,name=up_act,json=upAct,proto3" json:"up_act,omitempty"`
	// 用户装扮
	UserGarb *UserGarb `protobuf:"bytes,36,opt,name=user_garb,json=userGarb,proto3" json:"user_garb,omitempty"`
	// 大型活动合集
	ActivitySeason *ActivitySeason `protobuf:"bytes,37,opt,name=activity_season,json=activitySeason,proto3" json:"activity_season,omitempty"`
	// 评论样式
	BadgeUrl string `protobuf:"bytes,38,opt,name=badge_url,json=badgeUrl,proto3" json:"badge_url,omitempty"`
	// 直播预约信息
	LiveOrderInfo *LiveOrderInfo `protobuf:"bytes,39,opt,name=live_order_info,json=liveOrderInfo,proto3" json:"live_order_info,omitempty"`
	// 稿件简介v2
	DescV2             []*DescV2                   `protobuf:"bytes,40,rep,name=desc_v2,json=descV2,proto3" json:"desc_v2,omitempty"`
	CmIpad             *CmIpad                     `protobuf:"bytes,41,opt,name=cm_ipad,json=cmIpad,proto3" json:"cm_ipad,omitempty"`
	Sticker            []*ViewMaterial             `protobuf:"bytes,42,rep,name=sticker,proto3" json:"sticker,omitempty"`
	UpLikeImg          *UpLikeImg                  `protobuf:"bytes,43,opt,name=up_like_img,json=upLikeImg,proto3" json:"up_like_img,omitempty"`
	LikeCustom         *LikeCustom                 `protobuf:"bytes,44,opt,name=like_custom,json=likeCustom,proto3" json:"like_custom,omitempty"`
	DescTag            []*Tag                      `protobuf:"bytes,45,rep,name=desc_tag,json=descTag,proto3" json:"desc_tag,omitempty"`
	SpecialCell        *SpecialCell                `protobuf:"bytes,46,opt,name=special_cell,json=specialCell,proto3" json:"special_cell,omitempty"`
	Online             *Online                     `protobuf:"bytes,47,opt,name=online,proto3" json:"online,omitempty"`
	CmUnderPlayer      *anypb.Any                  `protobuf:"bytes,48,opt,name=cm_under_player,json=cmUnderPlayer,proto3" json:"cm_under_player,omitempty"`
	VideoSource        []*ViewMaterial             `protobuf:"bytes,49,rep,name=video_source,json=videoSource,proto3" json:"video_source,omitempty"`
	SpecialCellNew     []*SpecialCell              `protobuf:"bytes,50,rep,name=special_cell_new,json=specialCellNew,proto3" json:"special_cell_new,omitempty"`
	Premiere           *PremiereResource           `protobuf:"bytes,51,opt,name=premiere,proto3" json:"premiere,omitempty"`
	RefreshSpecialCell bool                        `protobuf:"varint,52,opt,name=refresh_special_cell,json=refreshSpecialCell,proto3" json:"refresh_special_cell,omitempty"`
	MaterialLeft       *MaterialLeft               `protobuf:"bytes,53,opt,name=material_left,json=materialLeft,proto3" json:"material_left,omitempty"`
	NotesCount         int64                       `protobuf:"varint,54,opt,name=notes_count,json=notesCount,proto3" json:"notes_count,omitempty"`
	PullAction         *PullClientAction           `protobuf:"bytes,55,opt,name=pull_action,json=pullAction,proto3" json:"pull_action,omitempty"`
	ArcExtra           *ArcExtra                   `protobuf:"bytes,56,opt,name=arc_extra,json=arcExtra,proto3" json:"arc_extra,omitempty"`
	Pagination         *pagination.PaginationReply `protobuf:"bytes,57,opt,name=pagination,proto3" json:"pagination,omitempty"`
	LikeAnimation      *LikeAnimation              `protobuf:"bytes,58,opt,name=like_animation,json=likeAnimation,proto3" json:"like_animation,omitempty"`
	ReplyPreface       *ReplyStyle                 `protobuf:"bytes,59,opt,name=reply_preface,json=replyPreface,proto3" json:"reply_preface,omitempty"`
	RefreshPage        *RefreshPage                `protobuf:"bytes,60,opt,name=refresh_page,json=refreshPage,proto3" json:"refresh_page,omitempty"`
	CoinCustom         *CoinCustom                 `protobuf:"bytes,61,opt,name=coin_custom,json=coinCustom,proto3" json:"coin_custom,omitempty"`
}

func (x *ViewReply) Reset() {
	*x = ViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewReply) ProtoMessage() {}

func (x *ViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewReply.ProtoReflect.Descriptor instead.
func (*ViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{146}
}

func (x *ViewReply) GetArc() *v1.Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *ViewReply) GetPages() []*ViewPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ViewReply) GetOwnerExt() *OnwerExt {
	if x != nil {
		return x.OwnerExt
	}
	return nil
}

func (x *ViewReply) GetReqUser() *ReqUser {
	if x != nil {
		return x.ReqUser
	}
	return nil
}

func (x *ViewReply) GetTag() []*Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *ViewReply) GetTIcon() map[string]*TIcon {
	if x != nil {
		return x.TIcon
	}
	return nil
}

func (x *ViewReply) GetSeason() *Season {
	if x != nil {
		return x.Season
	}
	return nil
}

func (x *ViewReply) GetElecRank() *ElecRank {
	if x != nil {
		return x.ElecRank
	}
	return nil
}

func (x *ViewReply) GetHistory() *History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ViewReply) GetRelates() []*Relate {
	if x != nil {
		return x.Relates
	}
	return nil
}

func (x *ViewReply) GetDislike() *Dislike {
	if x != nil {
		return x.Dislike
	}
	return nil
}

func (x *ViewReply) GetPlayerIcon() *PlayerIcon {
	if x != nil {
		return x.PlayerIcon
	}
	return nil
}

func (x *ViewReply) GetVipActive() string {
	if x != nil {
		return x.VipActive
	}
	return ""
}

func (x *ViewReply) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ViewReply) GetHonor() *Honor {
	if x != nil {
		return x.Honor
	}
	return nil
}

func (x *ViewReply) GetRelateTab() []*RelateTab {
	if x != nil {
		return x.RelateTab
	}
	return nil
}

func (x *ViewReply) GetActivityUrl() string {
	if x != nil {
		return x.ActivityUrl
	}
	return ""
}

func (x *ViewReply) GetBgm() []*Bgm {
	if x != nil {
		return x.Bgm
	}
	return nil
}

func (x *ViewReply) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *ViewReply) GetArgueMsg() string {
	if x != nil {
		return x.ArgueMsg
	}
	return ""
}

func (x *ViewReply) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *ViewReply) GetPlayParam() int32 {
	if x != nil {
		return x.PlayParam
	}
	return 0
}

func (x *ViewReply) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *ViewReply) GetUgcSeason() *UgcSeason {
	if x != nil {
		return x.UgcSeason
	}
	return nil
}

func (x *ViewReply) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ViewReply) GetShareSubtitle() string {
	if x != nil {
		return x.ShareSubtitle
	}
	return ""
}

func (x *ViewReply) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *ViewReply) GetEcode() ECode {
	if x != nil {
		return x.Ecode
	}
	return ECode_DEFAULT
}

func (x *ViewReply) GetCustomConfig() *CustomConfig {
	if x != nil {
		return x.CustomConfig
	}
	return nil
}

func (x *ViewReply) GetCms() []*CM {
	if x != nil {
		return x.Cms
	}
	return nil
}

func (x *ViewReply) GetCmConfig() *CMConfig {
	if x != nil {
		return x.CmConfig
	}
	return nil
}

func (x *ViewReply) GetTab() *Tab {
	if x != nil {
		return x.Tab
	}
	return nil
}

func (x *ViewReply) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *ViewReply) GetTfPanelCustomized() *TFPanelCustomized {
	if x != nil {
		return x.TfPanelCustomized
	}
	return nil
}

func (x *ViewReply) GetUpAct() *UpAct {
	if x != nil {
		return x.UpAct
	}
	return nil
}

func (x *ViewReply) GetUserGarb() *UserGarb {
	if x != nil {
		return x.UserGarb
	}
	return nil
}

func (x *ViewReply) GetActivitySeason() *ActivitySeason {
	if x != nil {
		return x.ActivitySeason
	}
	return nil
}

func (x *ViewReply) GetBadgeUrl() string {
	if x != nil {
		return x.BadgeUrl
	}
	return ""
}

func (x *ViewReply) GetLiveOrderInfo() *LiveOrderInfo {
	if x != nil {
		return x.LiveOrderInfo
	}
	return nil
}

func (x *ViewReply) GetDescV2() []*DescV2 {
	if x != nil {
		return x.DescV2
	}
	return nil
}

func (x *ViewReply) GetCmIpad() *CmIpad {
	if x != nil {
		return x.CmIpad
	}
	return nil
}

func (x *ViewReply) GetSticker() []*ViewMaterial {
	if x != nil {
		return x.Sticker
	}
	return nil
}

func (x *ViewReply) GetUpLikeImg() *UpLikeImg {
	if x != nil {
		return x.UpLikeImg
	}
	return nil
}

func (x *ViewReply) GetLikeCustom() *LikeCustom {
	if x != nil {
		return x.LikeCustom
	}
	return nil
}

func (x *ViewReply) GetDescTag() []*Tag {
	if x != nil {
		return x.DescTag
	}
	return nil
}

func (x *ViewReply) GetSpecialCell() *SpecialCell {
	if x != nil {
		return x.SpecialCell
	}
	return nil
}

func (x *ViewReply) GetOnline() *Online {
	if x != nil {
		return x.Online
	}
	return nil
}

func (x *ViewReply) GetCmUnderPlayer() *anypb.Any {
	if x != nil {
		return x.CmUnderPlayer
	}
	return nil
}

func (x *ViewReply) GetVideoSource() []*ViewMaterial {
	if x != nil {
		return x.VideoSource
	}
	return nil
}

func (x *ViewReply) GetSpecialCellNew() []*SpecialCell {
	if x != nil {
		return x.SpecialCellNew
	}
	return nil
}

func (x *ViewReply) GetPremiere() *PremiereResource {
	if x != nil {
		return x.Premiere
	}
	return nil
}

func (x *ViewReply) GetRefreshSpecialCell() bool {
	if x != nil {
		return x.RefreshSpecialCell
	}
	return false
}

func (x *ViewReply) GetMaterialLeft() *MaterialLeft {
	if x != nil {
		return x.MaterialLeft
	}
	return nil
}

func (x *ViewReply) GetNotesCount() int64 {
	if x != nil {
		return x.NotesCount
	}
	return 0
}

func (x *ViewReply) GetPullAction() *PullClientAction {
	if x != nil {
		return x.PullAction
	}
	return nil
}

func (x *ViewReply) GetArcExtra() *ArcExtra {
	if x != nil {
		return x.ArcExtra
	}
	return nil
}

func (x *ViewReply) GetPagination() *pagination.PaginationReply {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ViewReply) GetLikeAnimation() *LikeAnimation {
	if x != nil {
		return x.LikeAnimation
	}
	return nil
}

func (x *ViewReply) GetReplyPreface() *ReplyStyle {
	if x != nil {
		return x.ReplyPreface
	}
	return nil
}

func (x *ViewReply) GetRefreshPage() *RefreshPage {
	if x != nil {
		return x.RefreshPage
	}
	return nil
}

func (x *ViewReply) GetCoinCustom() *CoinCustom {
	if x != nil {
		return x.CoinCustom
	}
	return nil
}

// 视频页详情页-请求
type ViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid(av/bv任选其一)
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 稿件bvid(av/bv任选其一)
	Bvid string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 来源
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// AI trackid
	Trackid string `protobuf:"bytes,4,opt,name=trackid,proto3" json:"trackid,omitempty"`
	// 广告扩展数据
	AdExtra string `protobuf:"bytes,5,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	// 清晰度(旧版)
	Qn int32 `protobuf:"varint,6,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本(旧版)
	Fnver int32 `protobuf:"varint,7,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型(旧版)
	Fnval int32 `protobuf:"varint,8,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名(旧版)
	ForceHost int32 `protobuf:"varint,9,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否允许4K(旧版)
	Fourk int32 `protobuf:"varint,10,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,11,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页面spm
	FromSpmid string `protobuf:"bytes,12,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	Autoplay  int32  `protobuf:"varint,13,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	// 视频秒开参数
	PlayerArgs  *v11.PlayerArgs        `protobuf:"bytes,14,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	PageVersion string                 `protobuf:"bytes,15,opt,name=page_version,json=pageVersion,proto3" json:"page_version,omitempty"`
	BizExtra    string                 `protobuf:"bytes,16,opt,name=biz_extra,json=bizExtra,proto3" json:"biz_extra,omitempty"`
	DeviceType  int64                  `protobuf:"varint,17,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	RelatesPage int64                  `protobuf:"varint,18,opt,name=relates_page,json=relatesPage,proto3" json:"relates_page,omitempty"`
	SessionId   string                 `protobuf:"bytes,19,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	InFeedPlay  int32                  `protobuf:"varint,20,opt,name=in_feed_play,json=inFeedPlay,proto3" json:"in_feed_play,omitempty"`
	PlayMode    string                 `protobuf:"bytes,21,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`
	Pagination  *pagination.Pagination `protobuf:"bytes,22,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Refresh     int32                  `protobuf:"varint,23,opt,name=refresh,proto3" json:"refresh,omitempty"`
	RefreshNum  int32                  `protobuf:"varint,24,opt,name=refresh_num,json=refreshNum,proto3" json:"refresh_num,omitempty"`
}

func (x *ViewReq) Reset() {
	*x = ViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewReq) ProtoMessage() {}

func (x *ViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewReq.ProtoReflect.Descriptor instead.
func (*ViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{147}
}

func (x *ViewReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ViewReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ViewReq) GetTrackid() string {
	if x != nil {
		return x.Trackid
	}
	return ""
}

func (x *ViewReq) GetAdExtra() string {
	if x != nil {
		return x.AdExtra
	}
	return ""
}

func (x *ViewReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *ViewReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *ViewReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *ViewReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *ViewReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

func (x *ViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *ViewReq) GetAutoplay() int32 {
	if x != nil {
		return x.Autoplay
	}
	return 0
}

func (x *ViewReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *ViewReq) GetPageVersion() string {
	if x != nil {
		return x.PageVersion
	}
	return ""
}

func (x *ViewReq) GetBizExtra() string {
	if x != nil {
		return x.BizExtra
	}
	return ""
}

func (x *ViewReq) GetDeviceType() int64 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ViewReq) GetRelatesPage() int64 {
	if x != nil {
		return x.RelatesPage
	}
	return 0
}

func (x *ViewReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ViewReq) GetInFeedPlay() int32 {
	if x != nil {
		return x.InFeedPlay
	}
	return 0
}

func (x *ViewReq) GetPlayMode() string {
	if x != nil {
		return x.PlayMode
	}
	return ""
}

func (x *ViewReq) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ViewReq) GetRefresh() int32 {
	if x != nil {
		return x.Refresh
	}
	return 0
}

func (x *ViewReq) GetRefreshNum() int32 {
	if x != nil {
		return x.RefreshNum
	}
	return 0
}

type ViewTagReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecialCellNew []*SpecialCell `protobuf:"bytes,1,rep,name=special_cell_new,json=specialCellNew,proto3" json:"special_cell_new,omitempty"`
	MaterialLeft   *MaterialLeft  `protobuf:"bytes,2,opt,name=material_left,json=materialLeft,proto3" json:"material_left,omitempty"`
}

func (x *ViewTagReply) Reset() {
	*x = ViewTagReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewTagReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTagReply) ProtoMessage() {}

func (x *ViewTagReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTagReply.ProtoReflect.Descriptor instead.
func (*ViewTagReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{148}
}

func (x *ViewTagReply) GetSpecialCellNew() []*SpecialCell {
	if x != nil {
		return x.SpecialCellNew
	}
	return nil
}

func (x *ViewTagReply) GetMaterialLeft() *MaterialLeft {
	if x != nil {
		return x.MaterialLeft
	}
	return nil
}

type ViewTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid  string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid   int64  `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Spmid string `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
}

func (x *ViewTagReq) Reset() {
	*x = ViewTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewTagReq) ProtoMessage() {}

func (x *ViewTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewTagReq.ProtoReflect.Descriptor instead.
func (*ViewTagReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{149}
}

func (x *ViewTagReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewTagReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ViewTagReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ViewTagReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

// 会员信息
type Vip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员类型
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 到期时间
	DueDate      int64  `protobuf:"varint,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	DueRemark    string `protobuf:"bytes,3,opt,name=due_remark,json=dueRemark,proto3" json:"due_remark,omitempty"`
	AccessStatus int32  `protobuf:"varint,4,opt,name=access_status,json=accessStatus,proto3" json:"access_status,omitempty"`
	// 会员状态
	VipStatus     int32     `protobuf:"varint,5,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	VipStatusWarn string    `protobuf:"bytes,6,opt,name=vip_status_warn,json=vipStatusWarn,proto3" json:"vip_status_warn,omitempty"`
	ThemeType     int32     `protobuf:"varint,7,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	Label         *VipLabel `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *Vip) Reset() {
	*x = Vip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vip) ProtoMessage() {}

func (x *Vip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vip.ProtoReflect.Descriptor instead.
func (*Vip) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{150}
}

func (x *Vip) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Vip) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *Vip) GetDueRemark() string {
	if x != nil {
		return x.DueRemark
	}
	return ""
}

func (x *Vip) GetAccessStatus() int32 {
	if x != nil {
		return x.AccessStatus
	}
	return 0
}

func (x *Vip) GetVipStatus() int32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *Vip) GetVipStatusWarn() string {
	if x != nil {
		return x.VipStatusWarn
	}
	return ""
}

func (x *Vip) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *Vip) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

// 会员类型标签
type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	LabelTheme string `protobuf:"bytes,3,opt,name=label_theme,json=labelTheme,proto3" json:"label_theme,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_view_v1_view_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_view_v1_view_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_view_v1_view_proto_rawDescGZIP(), []int{151}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *VipLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VipLabel) GetLabelTheme() string {
	if x != nil {
		return x.LabelTheme
	}
	return ""
}

var File_bilibili_app_view_v1_view_proto protoreflect.FileDescriptor

var file_bilibili_app_view_v1_view_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76,
	0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x72, 0x6b, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x61, 0x72, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0xe5, 0x0d, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x63, 0x52, 0x03, 0x61, 0x72, 0x63, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x77, 0x65, 0x72, 0x45, 0x78, 0x74, 0x52,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x71, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x63, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6c,
	0x65, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x63, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x37, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x31, 0x0a,
	0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72,
	0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x12, 0x3e, 0x0a, 0x0a, 0x75, 0x67, 0x63, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x09, 0x75, 0x67, 0x63, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x52, 0x03, 0x74, 0x61, 0x62,
	0x12, 0x2e, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x31, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x50, 0x0a, 0x10,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x53,
	0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x41,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x63, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x66, 0x5f, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x11, 0x74, 0x66, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x72, 0x67, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x05, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x47,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x76, 0x32, 0x18,
	0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x56, 0x32, 0x52, 0x06, 0x64, 0x65, 0x73, 0x63, 0x56, 0x32, 0x12, 0x34, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x72, 0x63, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x63, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x08, 0x61, 0x72, 0x63, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x45, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x61, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x65, 0x66, 0x61, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x75, 0x70, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x22, 0xe8, 0x01, 0x0a,
	0x06, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x63, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x43, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x34, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x72, 0x63, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x72, 0x63, 0x50, 0x75, 0x62, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x01,
	0x0a, 0x0a, 0x41, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x51,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x73, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa4, 0x01, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x22, 0x36, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73,
	0x63, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x22,
	0x6f, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x5f, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x13, 0x0a, 0x05, 0x70,
	0x6f, 0x73, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x59,
	0x22, 0xe7, 0x01, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x0a, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x03, 0x42, 0x67, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x30, 0x0a,
	0x11, 0x42, 0x69, 0x7a, 0x46, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x32, 0x0a, 0x13, 0x42, 0x69, 0x7a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x10, 0x42, 0x69, 0x7a, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x42, 0x69,
	0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x22,
	0x2e, 0x0a, 0x13, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x44, 0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a,
	0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0x8f, 0x02, 0x0a, 0x0e, 0x42, 0x75, 0x7a, 0x7a, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x7a, 0x7a, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x75, 0x7a,
	0x7a, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xfe, 0x05, 0x0a, 0x0e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63,
	0x52, 0x03, 0x61, 0x72, 0x63, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x77, 0x65, 0x72, 0x45, 0x78, 0x74, 0x52, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x71, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x63,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x08, 0x65, 0x6c, 0x65,
	0x63, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x37,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x07,
	0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x13, 0x74, 0x66, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x11, 0x74, 0x66, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x34, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x07, 0x43, 0x68, 0x72, 0x6f,
	0x6e, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x82, 0x01,
	0x0a, 0x0d, 0x43, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x50, 0x6b, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0xa8, 0x02, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x48, 0x0a, 0x0a,
	0x66, 0x61, 0x76, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x46, 0x61, 0x76, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x66, 0x61, 0x76,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x30, 0x0a,
	0x14, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x76, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x02, 0x43, 0x4d, 0x12, 0x3b, 0x0a,
	0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x08, 0x43, 0x4d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x64, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x0a, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xcc, 0x01,
	0x0a, 0x06, 0x43, 0x6d, 0x49, 0x70, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x02, 0x63, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x52, 0x02,
	0x63, 0x6d, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0a,
	0x43, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74,
	0x22, 0xe8, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64, 0x53, 0x74, 0x72, 0x22, 0xdd, 0x07, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x47, 0x69, 0x66, 0x45, 0x78, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x48, 0x61, 0x6c, 0x66, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x6e,
	0x64, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x62, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x62, 0x74, 0x65, 0x73, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x31, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x53, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x62, 0x69, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x42, 0x69, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x49, 0x0a, 0x0d, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x61, 0x72, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x63, 0x5f, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x72, 0x63, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63,
	0x61, 0x70, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x13, 0x43,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0xd4, 0x02, 0x0a, 0x11, 0x43,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x64, 0x22, 0xac, 0x04, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x05,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x64,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x70,
	0x6c, 0x61, 0x79, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x22, 0x63, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xd9, 0x02, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x67, 0x4d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x72,
	0x6c, 0x22, 0x31, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x74, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x63, 0x56, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x02, 0x44, 0x4d, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x08, 0x45, 0x6c, 0x65,
	0x63, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6e, 0x0a, 0x0c, 0x45, 0x6c, 0x65, 0x63, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0xa4, 0x04, 0x0a, 0x07, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x41, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70,
	0x6d, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x0d, 0x46, 0x65,
	0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0xd2,
	0x02, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x4f, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x61, 0x72, 0x63,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x0a, 0x61, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x76, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41,
	0x76, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x76, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x09,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6d, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6d, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x22, 0x46, 0x0a, 0x08, 0x49, 0x63,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x72, 0x69, 0x74, 0x73, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x72, 0x69, 0x74, 0x73, 0x49,
	0x6d, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x70, 0x68, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xdb, 0x01, 0x0a,
	0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x69,
	0x65, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x6f, 0x74, 0x74, 0x69, 0x65, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x22, 0x72, 0x0a, 0x0d, 0x4c, 0x69,
	0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x69, 0x6b, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65,
	0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6b, 0x65, 0x5f,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf,
	0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x31,
	0x0a, 0x15, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x66,
	0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x48, 0x61, 0x6c, 0x66, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x6f, 0x6e, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f,
	0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x74, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x43, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x52, 0x08, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x74, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x04, 0x4c, 0x69, 0x76,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6e, 0x64, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x22, 0x83,
	0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x22, 0xc7, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xe0,
	0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x67, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x67, 0x50, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x47, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x38, 0x0a, 0x0e, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0x57, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x81, 0x02, 0x0a,
	0x08, 0x4f, 0x6e, 0x77, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70,
	0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x61, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc0, 0x01, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xfd, 0x04, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x38, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x43, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x01, 0x52, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x01, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x3c, 0x0a, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x01, 0x52, 0x04, 0x6a, 0x75, 0x6d, 0x70, 0x12,
	0x3f, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x01, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0xc8, 0x04, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x72, 0x64, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x72, 0x64, 0x56, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x13, 0x42, 0x69, 0x7a, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x13, 0x42, 0x69, 0x7a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x69, 0x0a, 0x17, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x17, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x54, 0x0a, 0x10, 0x42, 0x69, 0x7a, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x7a, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x48, 0x00, 0x52, 0x10, 0x42, 0x69, 0x7a, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x5d, 0x0a, 0x13, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x13, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xda,
	0x01, 0x0a, 0x16, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x56, 0x32, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x68, 0x6f, 0x77, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x0e, 0x61, 0x69, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c,
	0x61, 0x69, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xde, 0x03, 0x0a,
	0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x44, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12, 0x3c, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x48,
	0x0a, 0x0a, 0x66, 0x61, 0x76, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x7a, 0x46, 0x61, 0x76,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x66,
	0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x0d,
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x32, 0x0a,
	0x08, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x22, 0x2c, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22,
	0xc7, 0x02, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72,
	0x6c, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x73, 0x68, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x68, 0x61, 0x73, 0x68, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x68, 0x61, 0x73, 0x68, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x61, 0x73,
	0x68, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x67, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x70, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x67, 0x4c,
	0x65, 0x66, 0x74, 0x50, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x5f, 0x70, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x50, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x72, 0x61, 0x67, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x72, 0x61, 0x67, 0x52, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x64,
	0x72, 0x61, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x64, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x72,
	0x61, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6e,
	0x6f, 0x64, 0x72, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x12, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x95, 0x02, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0d, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63, 0x6f,
	0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x63, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x63, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65,
	0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x94, 0x01,
	0x0a, 0x14, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x08, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65,
	0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x73, 0x6b, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x0f,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x22, 0xc7, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x08, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65,
	0x72, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69,
	0x65, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xea, 0x02, 0x0a, 0x0c,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x67, 0x75,
	0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x75, 0x6c, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x75, 0x69, 0x64, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x67, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x49,
	0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5f, 0x0a, 0x10, 0x50, 0x75, 0x6c, 0x6c,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x04, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x4e,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x08, 0x52, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x62, 0x6b, 0x67, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6b, 0x67, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6b, 0x67, 0x5f, 0x64, 0x61, 0x79,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6b,
	0x67, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6f, 0x6e,
	0x74, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6e,
	0x74, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xb3, 0x02, 0x0a, 0x0b, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22,
	0xba, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x73, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x61, 0x73,
	0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x63, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3a,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x53, 0x68, 0x6f, 0x77, 0x22, 0xf8, 0x0c, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x72, 0x63, 0x6d, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x67, 0x69, 0x66, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x47, 0x69, 0x66, 0x12, 0x28, 0x0a, 0x02, 0x63, 0x6d, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x52, 0x02, 0x63, 0x6d, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x12, 0x4b, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x09,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0a, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x10, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x27, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22,
	0x34, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xa5, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x04,
	0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x7a, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x7a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x3f, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x22, 0x31, 0x0a,
	0x09, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x67, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x76, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x63, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f,
	0x62, 0x74, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x50, 0x6c, 0x75,
	0x73, 0x42, 0x74, 0x6e, 0x22, 0x2d, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x70, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x54, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x63, 0x6d, 0x64, 0x22, 0xd3,
	0x03, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x20, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x45, 0x70, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x65,
	0x73, 0x74, 0x45, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65,
	0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x65,
	0x6b, 0x64, 0x61, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x67, 0x76, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x75,
	0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x67, 0x76, 0x50, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x22, 0x60, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x43, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x22, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x09, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x7e, 0x0a, 0x07, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x1b, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xbe, 0x02, 0x0a,
	0x19, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x5f, 0x61,
	0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x41, 0x70,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x12, 0x43, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x66, 0x5f, 0x69, 0x73, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x66, 0x49, 0x73, 0x70, 0x22, 0xda, 0x03,
	0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x62, 0x67,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x6c,
	0x6c, 0x42, 0x67, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x62, 0x67, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x65, 0x6c, 0x6c, 0x42, 0x67, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x64,
	0x49, 0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x52, 0x03, 0x76, 0x69, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x69,
	0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x74, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62,
	0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x74, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xf0, 0x02,
	0x0a, 0x03, 0x54, 0x61, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x4f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x34, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x61, 0x64,
	0x5f, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x61, 0x64, 0x54, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xae, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x68, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x68,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa2, 0x03, 0x0a, 0x11, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2f, 0x0a, 0x14, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x6e, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x74, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x69, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x46,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x2e,
	0x53, 0x75, 0x62, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x1a, 0x5d, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x75, 0x62, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1b, 0x0a, 0x05, 0x54, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0xa0, 0x07, 0x0a, 0x09, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78,
	0x74, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x67, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x42, 0x67, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x73, 0x63, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x63, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x65, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x70,
	0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x70, 0x61, 0x79, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x65, 0x77, 0x12, 0x43, 0x0a, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xef, 0x03, 0x0a, 0x11, 0x55, 0x67, 0x63, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x22, 0xf6, 0x01, 0x0a, 0x0d, 0x55, 0x67, 0x63,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61,
	0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x61, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x61, 0x76, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b,
	0x65, 0x22, 0x9f, 0x01, 0x0a, 0x05, 0x55, 0x70, 0x41, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x09, 0x55, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6d, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x63, 0x49,
	0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xb3, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x18, 0x61, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x61, 0x72, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x61,
	0x6c, 0x66, 0x59, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x70, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6c, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x22,
	0x54, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x72, 0x62, 0x12, 0x29, 0x0a, 0x11, 0x75,
	0x72, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x5f, 0x63, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x72, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x41, 0x6e, 0x69, 0x43, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65,
	0x54, 0x6f, 0x61, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc1, 0x03, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x12, 0x3d, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x44, 0x6d, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6d, 0x73,
	0x12, 0x4a, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x54, 0x0a, 0x12,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x65, 0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x65, 0x77,
	0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x4e,
	0x65, 0x77, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x56, 0x32, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x73, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x76, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x76, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x09, 0x69, 0x6d, 0x67, 0x5f, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x58, 0x4c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x6d,
	0x67, 0x5f, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x6d, 0x67, 0x59, 0x4c, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x6d, 0x67, 0x5f, 0x78, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x67, 0x58,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x6d, 0x67, 0x5f, 0x79, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x67, 0x59, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75,
	0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75,
	0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0c, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x52, 0x0c, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x49, 0x0a, 0x0f, 0x56, 0x69,
	0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x02, 0x64, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x4d, 0x52, 0x02,
	0x64, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xcb, 0x03, 0x0a, 0x11, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x75,
	0x69, 0x64, 0x65, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x47, 0x75, 0x69, 0x64, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x52,
	0x07, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x5f,
	0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x52, 0x07, 0x61, 0x72, 0x63,
	0x53, 0x68, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x4a,
	0x0a, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0d, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x62, 0x75, 0x7a, 0x7a, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x7a, 0x7a, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0f, 0x62, 0x75, 0x7a, 0x7a, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x70, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70,
	0x4d, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xe9, 0x1b, 0x0a, 0x09, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52,
	0x03, 0x61, 0x72, 0x63, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x77, 0x65, 0x72, 0x45, 0x78, 0x74, 0x52, 0x08, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x71, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x41,
	0x0a, 0x06, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x54, 0x49, 0x63, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x63, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6c, 0x65, 0x63, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x63,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a,
	0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x41,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x70, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
	0x52, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x03, 0x62, 0x67,
	0x6d, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x67, 0x6d, 0x52, 0x03, 0x62, 0x67, 0x6d, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x72, 0x67, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x0a, 0x75, 0x67, 0x63, 0x5f,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x09, 0x75,
	0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x03, 0x63, 0x6d, 0x73, 0x18, 0x1e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x52, 0x03, 0x63,
	0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x63, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2b, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x2e, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x57, 0x0a, 0x13,
	0x74, 0x66, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x46, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x52, 0x11, 0x74, 0x66, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x41,
	0x63, 0x74, 0x52, 0x05, 0x75, 0x70, 0x41, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x67, 0x61, 0x72, 0x62, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x72, 0x62, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x72, 0x62, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x4b, 0x0a, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x35, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x76, 0x32, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x56, 0x32, 0x52, 0x06,
	0x64, 0x65, 0x73, 0x63, 0x56, 0x32, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6d, 0x5f, 0x69, 0x70, 0x61,
	0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6d, 0x49, 0x70, 0x61, 0x64, 0x52, 0x06, 0x63, 0x6d, 0x49, 0x70, 0x61, 0x64, 0x12, 0x3c, 0x0a,
	0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x75,
	0x70, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6d,
	0x67, 0x52, 0x09, 0x75, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x41, 0x0a, 0x0b,
	0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12,
	0x34, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x2d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x07, 0x64, 0x65,
	0x73, 0x63, 0x54, 0x61, 0x67, 0x12, 0x44, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x0b,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x34, 0x0a, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x63, 0x6d, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x0d, 0x63, 0x6d, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x45, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43,
	0x65, 0x6c, 0x6c, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c,
	0x4e, 0x65, 0x77, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4c, 0x65, 0x66, 0x74, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x65,
	0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09,
	0x61, 0x72, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52,
	0x08, 0x61, 0x72, 0x63, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x0e, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6c, 0x69,
	0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0d, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x61, 0x63, 0x65, 0x18, 0x3b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x65, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x50, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x1a, 0x55, 0x0a, 0x0a, 0x54,
	0x49, 0x63, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xe9, 0x05, 0x0a, 0x07, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x71, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e,
	0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70,
	0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x7a, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x7a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x46, 0x65, 0x65,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x22, 0xa4,
	0x01, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4b, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x6e, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x0e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x4e, 0x65, 0x77, 0x12, 0x47, 0x0a, 0x0d,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x5a, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x70, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x22, 0x94, 0x02, 0x0a, 0x03, 0x56, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x65, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x75,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x76,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57,
	0x61, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x53, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x2a, 0x91, 0x01,
	0x0a, 0x07, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x69, 0x7a,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x69,
	0x7a, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61,
	0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x69, 0x7a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x10,
	0x05, 0x2a, 0x33, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x10, 0x01, 0x2a, 0x41, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x73,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x10, 0x02, 0x2a, 0x21, 0x0a, 0x05, 0x45, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x44, 0x45, 0x34, 0x30, 0x34, 0x10, 0x01, 0x2a, 0x29, 0x0a, 0x0e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42,
	0x69, 0x4a, 0x69, 0x61, 0x6e, 0x10, 0x01, 0x2a, 0x4d, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x6b, 0x69, 0x70, 0x10, 0x02, 0x2a, 0x33, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x2a, 0x96, 0x01, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x6f, 0x6e, 0x65, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x12,
	0x21, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x10, 0x03, 0x2a, 0x5c, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
	0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x65, 0x72, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x10, 0x03, 0x2a, 0x2d, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x10,
	0x02, 0x2a, 0x3d, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x4f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x4e, 0x41, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6d, 0x55, 0x52, 0x49, 0x10, 0x03,
	0x2a, 0x2f, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x10,
	0x02, 0x32, 0xf3, 0x0e, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x46, 0x0a, 0x04, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x12, 0x20, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x7c, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x31,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5a, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x62, 0x0a,
	0x13, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4c, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x5c, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x50, 0x0a, 0x0a, 0x43, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x50, 0x6b, 0x67, 0x12,
	0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x50, 0x6b,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x72, 0x6f,
	0x6e, 0x6f, 0x73, 0x12, 0x55, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5b, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x46, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x67, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x76, 0x0a, 0x14, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x70, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x73, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x73, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bilibili_app_view_v1_view_proto_rawDescOnce sync.Once
	file_bilibili_app_view_v1_view_proto_rawDescData = file_bilibili_app_view_v1_view_proto_rawDesc
)

func file_bilibili_app_view_v1_view_proto_rawDescGZIP() []byte {
	file_bilibili_app_view_v1_view_proto_rawDescOnce.Do(func() {
		file_bilibili_app_view_v1_view_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_view_v1_view_proto_rawDescData)
	})
	return file_bilibili_app_view_v1_view_proto_rawDescData
}

var file_bilibili_app_view_v1_view_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_bilibili_app_view_v1_view_proto_msgTypes = make([]protoimpl.MessageInfo, 155)
var file_bilibili_app_view_v1_view_proto_goTypes = []interface{}{
	(BizType)(0),                        // 0: bilibili.app.view.v1.BizType
	(Category)(0),                       // 1: bilibili.app.view.v1.Category
	(DescType)(0),                       // 2: bilibili.app.view.v1.DescType
	(ECode)(0),                          // 3: bilibili.app.view.v1.ECode
	(MaterialSource)(0),                 // 4: bilibili.app.view.v1.MaterialSource
	(OperationCardType)(0),              // 5: bilibili.app.view.v1.OperationCardType
	(PayState)(0),                       // 6: bilibili.app.view.v1.PayState
	(PlayerCardType)(0),                 // 7: bilibili.app.view.v1.PlayerCardType
	(PremiereState)(0),                  // 8: bilibili.app.view.v1.PremiereState
	(SeasonType)(0),                     // 9: bilibili.app.view.v1.SeasonType
	(TabOtype)(0),                       // 10: bilibili.app.view.v1.TabOtype
	(TabStyle)(0),                       // 11: bilibili.app.view.v1.TabStyle
	(*ActivityResource)(nil),            // 12: bilibili.app.view.v1.ActivityResource
	(*ActivitySeason)(nil),              // 13: bilibili.app.view.v1.ActivitySeason
	(*AddContractReq)(nil),              // 14: bilibili.app.view.v1.AddContractReq
	(*AdInfo)(nil),                      // 15: bilibili.app.view.v1.AdInfo
	(*ArcExtra)(nil),                    // 16: bilibili.app.view.v1.ArcExtra
	(*ArcsPlayer)(nil),                  // 17: bilibili.app.view.v1.ArcsPlayer
	(*Asset)(nil),                       // 18: bilibili.app.view.v1.Asset
	(*AssetMsg)(nil),                    // 19: bilibili.app.view.v1.AssetMsg
	(*Attention)(nil),                   // 20: bilibili.app.view.v1.Attention
	(*Audio)(nil),                       // 21: bilibili.app.view.v1.Audio
	(*BadgeStyle)(nil),                  // 22: bilibili.app.view.v1.BadgeStyle
	(*Bgm)(nil),                         // 23: bilibili.app.view.v1.Bgm
	(*BizFavSeasonParam)(nil),           // 24: bilibili.app.view.v1.BizFavSeasonParam
	(*BizFollowVideoParam)(nil),         // 25: bilibili.app.view.v1.BizFollowVideoParam
	(*BizJumpLinkParam)(nil),            // 26: bilibili.app.view.v1.BizJumpLinkParam
	(*BizReserveActivityParam)(nil),     // 27: bilibili.app.view.v1.BizReserveActivityParam
	(*BizReserveGameParam)(nil),         // 28: bilibili.app.view.v1.BizReserveGameParam
	(*Button)(nil),                      // 29: bilibili.app.view.v1.Button
	(*ButtonStyle)(nil),                 // 30: bilibili.app.view.v1.ButtonStyle
	(*BuzzwordConfig)(nil),              // 31: bilibili.app.view.v1.BuzzwordConfig
	(*CacheViewReply)(nil),              // 32: bilibili.app.view.v1.CacheViewReply
	(*CacheViewReq)(nil),                // 33: bilibili.app.view.v1.CacheViewReq
	(*Chronos)(nil),                     // 34: bilibili.app.view.v1.Chronos
	(*ChronosPkgReq)(nil),               // 35: bilibili.app.view.v1.ChronosPkgReq
	(*ClickActivitySeasonReq)(nil),      // 36: bilibili.app.view.v1.ClickActivitySeasonReq
	(*ClickPlayerCardReply)(nil),        // 37: bilibili.app.view.v1.ClickPlayerCardReply
	(*ClickPlayerCardReq)(nil),          // 38: bilibili.app.view.v1.ClickPlayerCardReq
	(*CM)(nil),                          // 39: bilibili.app.view.v1.CM
	(*CMConfig)(nil),                    // 40: bilibili.app.view.v1.CMConfig
	(*CmIpad)(nil),                      // 41: bilibili.app.view.v1.CmIpad
	(*CoinCustom)(nil),                  // 42: bilibili.app.view.v1.CoinCustom
	(*CommandDm)(nil),                   // 43: bilibili.app.view.v1.CommandDm
	(*Config)(nil),                      // 44: bilibili.app.view.v1.Config
	(*ContinuousPlayReply)(nil),         // 45: bilibili.app.view.v1.ContinuousPlayReply
	(*ContinuousPlayReq)(nil),           // 46: bilibili.app.view.v1.ContinuousPlayReq
	(*ContractCard)(nil),                // 47: bilibili.app.view.v1.ContractCard
	(*ContractText)(nil),                // 48: bilibili.app.view.v1.ContractText
	(*CreativeContent)(nil),             // 49: bilibili.app.view.v1.CreativeContent
	(*CustomConfig)(nil),                // 50: bilibili.app.view.v1.CustomConfig
	(*DescV2)(nil),                      // 51: bilibili.app.view.v1.DescV2
	(*Dislike)(nil),                     // 52: bilibili.app.view.v1.Dislike
	(*DislikeReasons)(nil),              // 53: bilibili.app.view.v1.DislikeReasons
	(*DM)(nil),                          // 54: bilibili.app.view.v1.DM
	(*ElecRank)(nil),                    // 55: bilibili.app.view.v1.ElecRank
	(*ElecRankItem)(nil),                // 56: bilibili.app.view.v1.ElecRankItem
	(*Episode)(nil),                     // 57: bilibili.app.view.v1.Episode
	(*ExposePlayerCardReq)(nil),         // 58: bilibili.app.view.v1.ExposePlayerCardReq
	(*FeedViewItem)(nil),                // 59: bilibili.app.view.v1.FeedViewItem
	(*FeedViewReply)(nil),               // 60: bilibili.app.view.v1.FeedViewReply
	(*FeedViewReq)(nil),                 // 61: bilibili.app.view.v1.FeedViewReq
	(*GetArcsPlayerReply)(nil),          // 62: bilibili.app.view.v1.GetArcsPlayerReply
	(*GetArcsPlayerReq)(nil),            // 63: bilibili.app.view.v1.GetArcsPlayerReq
	(*GoodsInfo)(nil),                   // 64: bilibili.app.view.v1.GoodsInfo
	(*History)(nil),                     // 65: bilibili.app.view.v1.History
	(*Honor)(nil),                       // 66: bilibili.app.view.v1.Honor
	(*IconData)(nil),                    // 67: bilibili.app.view.v1.IconData
	(*Interaction)(nil),                 // 68: bilibili.app.view.v1.Interaction
	(*Label)(nil),                       // 69: bilibili.app.view.v1.Label
	(*LikeAnimation)(nil),               // 70: bilibili.app.view.v1.LikeAnimation
	(*LikeCustom)(nil),                  // 71: bilibili.app.view.v1.LikeCustom
	(*ListenerConfig)(nil),              // 72: bilibili.app.view.v1.ListenerConfig
	(*ListenerGuideBar)(nil),            // 73: bilibili.app.view.v1.ListenerGuideBar
	(*Live)(nil),                        // 74: bilibili.app.view.v1.Live
	(*LiveOrderInfo)(nil),               // 75: bilibili.app.view.v1.LiveOrderInfo
	(*MaterialLeft)(nil),                // 76: bilibili.app.view.v1.MaterialLeft
	(*MaterialRes)(nil),                 // 77: bilibili.app.view.v1.MaterialRes
	(*Node)(nil),                        // 78: bilibili.app.view.v1.Node
	(*NoReply)(nil),                     // 79: bilibili.app.view.v1.NoReply
	(*Notice)(nil),                      // 80: bilibili.app.view.v1.Notice
	(*OfficialVerify)(nil),              // 81: bilibili.app.view.v1.OfficialVerify
	(*Online)(nil),                      // 82: bilibili.app.view.v1.Online
	(*OnwerExt)(nil),                    // 83: bilibili.app.view.v1.OnwerExt
	(*OperationCard)(nil),               // 84: bilibili.app.view.v1.OperationCard
	(*OperationCardNew)(nil),            // 85: bilibili.app.view.v1.OperationCardNew
	(*OperationCardV2)(nil),             // 86: bilibili.app.view.v1.OperationCardV2
	(*OperationCardV2Content)(nil),      // 87: bilibili.app.view.v1.OperationCardV2Content
	(*OperationRelate)(nil),             // 88: bilibili.app.view.v1.OperationRelate
	(*Order)(nil),                       // 89: bilibili.app.view.v1.Order
	(*PackInfo)(nil),                    // 90: bilibili.app.view.v1.PackInfo
	(*PlayAv)(nil),                      // 91: bilibili.app.view.v1.PlayAv
	(*PlayerIcon)(nil),                  // 92: bilibili.app.view.v1.PlayerIcon
	(*PlayerRelatesReply)(nil),          // 93: bilibili.app.view.v1.PlayerRelatesReply
	(*PlayerRelatesReq)(nil),            // 94: bilibili.app.view.v1.PlayerRelatesReq
	(*PointMaterial)(nil),               // 95: bilibili.app.view.v1.PointMaterial
	(*PowerIconStyle)(nil),              // 96: bilibili.app.view.v1.PowerIconStyle
	(*Premiere)(nil),                    // 97: bilibili.app.view.v1.Premiere
	(*PremiereArchiveReply)(nil),        // 98: bilibili.app.view.v1.PremiereArchiveReply
	(*PremiereArchiveReq)(nil),          // 99: bilibili.app.view.v1.PremiereArchiveReq
	(*PremiereReserve)(nil),             // 100: bilibili.app.view.v1.PremiereReserve
	(*PremiereResource)(nil),            // 101: bilibili.app.view.v1.PremiereResource
	(*PremiereText)(nil),                // 102: bilibili.app.view.v1.PremiereText
	(*PullClientAction)(nil),            // 103: bilibili.app.view.v1.PullClientAction
	(*Rank)(nil),                        // 104: bilibili.app.view.v1.Rank
	(*RankInfo)(nil),                    // 105: bilibili.app.view.v1.RankInfo
	(*ReasonStyle)(nil),                 // 106: bilibili.app.view.v1.ReasonStyle
	(*RecDislike)(nil),                  // 107: bilibili.app.view.v1.RecDislike
	(*RecThreePoint)(nil),               // 108: bilibili.app.view.v1.RecThreePoint
	(*RefreshPage)(nil),                 // 109: bilibili.app.view.v1.RefreshPage
	(*Relate)(nil),                      // 110: bilibili.app.view.v1.Relate
	(*RelateItem)(nil),                  // 111: bilibili.app.view.v1.RelateItem
	(*RelatesFeedReply)(nil),            // 112: bilibili.app.view.v1.RelatesFeedReply
	(*RelatesFeedReq)(nil),              // 113: bilibili.app.view.v1.RelatesFeedReq
	(*RelateTab)(nil),                   // 114: bilibili.app.view.v1.RelateTab
	(*ReplyStyle)(nil),                  // 115: bilibili.app.view.v1.ReplyStyle
	(*ReqUser)(nil),                     // 116: bilibili.app.view.v1.ReqUser
	(*ReserveReply)(nil),                // 117: bilibili.app.view.v1.ReserveReply
	(*ReserveReq)(nil),                  // 118: bilibili.app.view.v1.ReserveReq
	(*Restriction)(nil),                 // 119: bilibili.app.view.v1.Restriction
	(*Season)(nil),                      // 120: bilibili.app.view.v1.Season
	(*SeasonActivityRecordReply)(nil),   // 121: bilibili.app.view.v1.SeasonActivityRecordReply
	(*SeasonActivityRecordReq)(nil),     // 122: bilibili.app.view.v1.SeasonActivityRecordReq
	(*SeasonPlayer)(nil),                // 123: bilibili.app.view.v1.SeasonPlayer
	(*SeasonReply)(nil),                 // 124: bilibili.app.view.v1.SeasonReply
	(*SeasonReq)(nil),                   // 125: bilibili.app.view.v1.SeasonReq
	(*SeasonShow)(nil),                  // 126: bilibili.app.view.v1.SeasonShow
	(*SeasonWidgetExposeReply)(nil),     // 127: bilibili.app.view.v1.SeasonWidgetExposeReply
	(*SeasonWidgetExposeReq)(nil),       // 128: bilibili.app.view.v1.SeasonWidgetExposeReq
	(*Section)(nil),                     // 129: bilibili.app.view.v1.Section
	(*ShortFormVideoDownloadReply)(nil), // 130: bilibili.app.view.v1.ShortFormVideoDownloadReply
	(*ShortFormVideoDownloadReq)(nil),   // 131: bilibili.app.view.v1.ShortFormVideoDownloadReq
	(*SpecialCell)(nil),                 // 132: bilibili.app.view.v1.SpecialCell
	(*Staff)(nil),                       // 133: bilibili.app.view.v1.Staff
	(*StandardCard)(nil),                // 134: bilibili.app.view.v1.StandardCard
	(*SubTFPanel)(nil),                  // 135: bilibili.app.view.v1.subTFPanel
	(*Tab)(nil),                         // 136: bilibili.app.view.v1.Tab
	(*Tag)(nil),                         // 137: bilibili.app.view.v1.Tag
	(*TFPanelCustomized)(nil),           // 138: bilibili.app.view.v1.TFPanelCustomized
	(*TIcon)(nil),                       // 139: bilibili.app.view.v1.TIcon
	(*UgcSeason)(nil),                   // 140: bilibili.app.view.v1.UgcSeason
	(*UgcSeasonActivity)(nil),           // 141: bilibili.app.view.v1.UgcSeasonActivity
	(*UgcSeasonStat)(nil),               // 142: bilibili.app.view.v1.UgcSeasonStat
	(*UpAct)(nil),                       // 143: bilibili.app.view.v1.UpAct
	(*UpLikeImg)(nil),                   // 144: bilibili.app.view.v1.UpLikeImg
	(*UpperInfos)(nil),                  // 145: bilibili.app.view.v1.UpperInfos
	(*UserActivity)(nil),                // 146: bilibili.app.view.v1.UserActivity
	(*UserGarb)(nil),                    // 147: bilibili.app.view.v1.UserGarb
	(*UserSeason)(nil),                  // 148: bilibili.app.view.v1.UserSeason
	(*VideoGuide)(nil),                  // 149: bilibili.app.view.v1.VideoGuide
	(*VideoPoint)(nil),                  // 150: bilibili.app.view.v1.VideoPoint
	(*VideoShot)(nil),                   // 151: bilibili.app.view.v1.VideoShot
	(*ViewMaterial)(nil),                // 152: bilibili.app.view.v1.ViewMaterial
	(*ViewMaterialReply)(nil),           // 153: bilibili.app.view.v1.ViewMaterialReply
	(*ViewMaterialReq)(nil),             // 154: bilibili.app.view.v1.ViewMaterialReq
	(*ViewPage)(nil),                    // 155: bilibili.app.view.v1.ViewPage
	(*ViewProgressReply)(nil),           // 156: bilibili.app.view.v1.ViewProgressReply
	(*ViewProgressReq)(nil),             // 157: bilibili.app.view.v1.ViewProgressReq
	(*ViewReply)(nil),                   // 158: bilibili.app.view.v1.ViewReply
	(*ViewReq)(nil),                     // 159: bilibili.app.view.v1.ViewReq
	(*ViewTagReply)(nil),                // 160: bilibili.app.view.v1.ViewTagReply
	(*ViewTagReq)(nil),                  // 161: bilibili.app.view.v1.ViewTagReq
	(*Vip)(nil),                         // 162: bilibili.app.view.v1.Vip
	(*VipLabel)(nil),                    // 163: bilibili.app.view.v1.VipLabel
	nil,                                 // 164: bilibili.app.view.v1.ArcsPlayer.PlayerInfoEntry
	nil,                                 // 165: bilibili.app.view.v1.TFPanelCustomized.SubPanelEntry
	nil,                                 // 166: bilibili.app.view.v1.ViewReply.TIconEntry
	(*v1.Arc)(nil),                      // 167: bilibili.app.archive.v1.Arc
	(*anypb.Any)(nil),                   // 168: google.protobuf.Any
	(*v1.Author)(nil),                   // 169: bilibili.app.archive.v1.Author
	(*v1.Stat)(nil),                     // 170: bilibili.app.archive.v1.Stat
	(*v11.PlayerArgs)(nil),              // 171: bilibili.app.archive.middleware.v1.PlayerArgs
	(*v1.Page)(nil),                     // 172: bilibili.app.archive.v1.Page
	(*v1.Dimension)(nil),                // 173: bilibili.app.archive.v1.Dimension
	(*pagination.PaginationReply)(nil),  // 174: bilibili.pagination.PaginationReply
	(*pagination.Pagination)(nil),       // 175: bilibili.pagination.Pagination
}
var file_bilibili_app_view_v1_view_proto_depIdxs = []int32{
	167, // 0: bilibili.app.view.v1.ActivitySeason.arc:type_name -> bilibili.app.archive.v1.Arc
	155, // 1: bilibili.app.view.v1.ActivitySeason.pages:type_name -> bilibili.app.view.v1.ViewPage
	83,  // 2: bilibili.app.view.v1.ActivitySeason.owner_ext:type_name -> bilibili.app.view.v1.OnwerExt
	116, // 3: bilibili.app.view.v1.ActivitySeason.req_user:type_name -> bilibili.app.view.v1.ReqUser
	55,  // 4: bilibili.app.view.v1.ActivitySeason.elec_rank:type_name -> bilibili.app.view.v1.ElecRank
	65,  // 5: bilibili.app.view.v1.ActivitySeason.history:type_name -> bilibili.app.view.v1.History
	66,  // 6: bilibili.app.view.v1.ActivitySeason.honor:type_name -> bilibili.app.view.v1.Honor
	133, // 7: bilibili.app.view.v1.ActivitySeason.staff:type_name -> bilibili.app.view.v1.Staff
	140, // 8: bilibili.app.view.v1.ActivitySeason.ugc_season:type_name -> bilibili.app.view.v1.UgcSeason
	136, // 9: bilibili.app.view.v1.ActivitySeason.tab:type_name -> bilibili.app.view.v1.Tab
	104, // 10: bilibili.app.view.v1.ActivitySeason.rank:type_name -> bilibili.app.view.v1.Rank
	89,  // 11: bilibili.app.view.v1.ActivitySeason.order:type_name -> bilibili.app.view.v1.Order
	88,  // 12: bilibili.app.view.v1.ActivitySeason.operation_relate:type_name -> bilibili.app.view.v1.OperationRelate
	12,  // 13: bilibili.app.view.v1.ActivitySeason.activity_resource:type_name -> bilibili.app.view.v1.ActivityResource
	69,  // 14: bilibili.app.view.v1.ActivitySeason.label:type_name -> bilibili.app.view.v1.Label
	52,  // 15: bilibili.app.view.v1.ActivitySeason.dislike:type_name -> bilibili.app.view.v1.Dislike
	92,  // 16: bilibili.app.view.v1.ActivitySeason.player_icon:type_name -> bilibili.app.view.v1.PlayerIcon
	40,  // 17: bilibili.app.view.v1.ActivitySeason.cm_config:type_name -> bilibili.app.view.v1.CMConfig
	138, // 18: bilibili.app.view.v1.ActivitySeason.tf_panel_customized:type_name -> bilibili.app.view.v1.TFPanelCustomized
	3,   // 19: bilibili.app.view.v1.ActivitySeason.ecode:type_name -> bilibili.app.view.v1.ECode
	50,  // 20: bilibili.app.view.v1.ActivitySeason.custom_config:type_name -> bilibili.app.view.v1.CustomConfig
	51,  // 21: bilibili.app.view.v1.ActivitySeason.desc_v2:type_name -> bilibili.app.view.v1.DescV2
	44,  // 22: bilibili.app.view.v1.ActivitySeason.config:type_name -> bilibili.app.view.v1.Config
	82,  // 23: bilibili.app.view.v1.ActivitySeason.online:type_name -> bilibili.app.view.v1.Online
	16,  // 24: bilibili.app.view.v1.ActivitySeason.arc_extra:type_name -> bilibili.app.view.v1.ArcExtra
	115, // 25: bilibili.app.view.v1.ActivitySeason.reply_preface:type_name -> bilibili.app.view.v1.ReplyStyle
	49,  // 26: bilibili.app.view.v1.AdInfo.creative_content:type_name -> bilibili.app.view.v1.CreativeContent
	164, // 27: bilibili.app.view.v1.ArcsPlayer.player_info:type_name -> bilibili.app.view.v1.ArcsPlayer.PlayerInfoEntry
	19,  // 28: bilibili.app.view.v1.Asset.msg:type_name -> bilibili.app.view.v1.AssetMsg
	19,  // 29: bilibili.app.view.v1.Asset.preview_msg:type_name -> bilibili.app.view.v1.AssetMsg
	167, // 30: bilibili.app.view.v1.CacheViewReply.arc:type_name -> bilibili.app.archive.v1.Arc
	155, // 31: bilibili.app.view.v1.CacheViewReply.pages:type_name -> bilibili.app.view.v1.ViewPage
	83,  // 32: bilibili.app.view.v1.CacheViewReply.owner_ext:type_name -> bilibili.app.view.v1.OnwerExt
	116, // 33: bilibili.app.view.v1.CacheViewReply.req_user:type_name -> bilibili.app.view.v1.ReqUser
	120, // 34: bilibili.app.view.v1.CacheViewReply.season:type_name -> bilibili.app.view.v1.Season
	55,  // 35: bilibili.app.view.v1.CacheViewReply.elec_rank:type_name -> bilibili.app.view.v1.ElecRank
	65,  // 36: bilibili.app.view.v1.CacheViewReply.history:type_name -> bilibili.app.view.v1.History
	52,  // 37: bilibili.app.view.v1.CacheViewReply.dislike:type_name -> bilibili.app.view.v1.Dislike
	92,  // 38: bilibili.app.view.v1.CacheViewReply.player_icon:type_name -> bilibili.app.view.v1.PlayerIcon
	138, // 39: bilibili.app.view.v1.CacheViewReply.tf_panel_customized:type_name -> bilibili.app.view.v1.TFPanelCustomized
	82,  // 40: bilibili.app.view.v1.CacheViewReply.online:type_name -> bilibili.app.view.v1.Online
	0,   // 41: bilibili.app.view.v1.ClickActivitySeasonReq.order_type:type_name -> bilibili.app.view.v1.BizType
	27,  // 42: bilibili.app.view.v1.ClickActivitySeasonReq.reserve:type_name -> bilibili.app.view.v1.BizReserveActivityParam
	24,  // 43: bilibili.app.view.v1.ClickActivitySeasonReq.fav_season:type_name -> bilibili.app.view.v1.BizFavSeasonParam
	168, // 44: bilibili.app.view.v1.CM.source_content:type_name -> google.protobuf.Any
	168, // 45: bilibili.app.view.v1.CMConfig.ads_control:type_name -> google.protobuf.Any
	39,  // 46: bilibili.app.view.v1.CmIpad.cm:type_name -> bilibili.app.view.v1.CM
	169, // 47: bilibili.app.view.v1.CmIpad.author:type_name -> bilibili.app.archive.v1.Author
	170, // 48: bilibili.app.view.v1.CmIpad.stat:type_name -> bilibili.app.archive.v1.Stat
	72,  // 49: bilibili.app.view.v1.Config.listener_conf:type_name -> bilibili.app.view.v1.ListenerConfig
	110, // 50: bilibili.app.view.v1.ContinuousPlayReply.relates:type_name -> bilibili.app.view.v1.Relate
	171, // 51: bilibili.app.view.v1.ContinuousPlayReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	145, // 52: bilibili.app.view.v1.ContractCard.upper:type_name -> bilibili.app.view.v1.UpperInfos
	48,  // 53: bilibili.app.view.v1.ContractCard.text:type_name -> bilibili.app.view.v1.ContractText
	2,   // 54: bilibili.app.view.v1.DescV2.type:type_name -> bilibili.app.view.v1.DescType
	53,  // 55: bilibili.app.view.v1.Dislike.reasons:type_name -> bilibili.app.view.v1.DislikeReasons
	56,  // 56: bilibili.app.view.v1.ElecRank.list:type_name -> bilibili.app.view.v1.ElecRankItem
	172, // 57: bilibili.app.view.v1.Episode.page:type_name -> bilibili.app.archive.v1.Page
	170, // 58: bilibili.app.view.v1.Episode.stat:type_name -> bilibili.app.archive.v1.Stat
	169, // 59: bilibili.app.view.v1.Episode.author:type_name -> bilibili.app.archive.v1.Author
	22,  // 60: bilibili.app.view.v1.Episode.badge_style:type_name -> bilibili.app.view.v1.BadgeStyle
	7,   // 61: bilibili.app.view.v1.ExposePlayerCardReq.card_type:type_name -> bilibili.app.view.v1.PlayerCardType
	158, // 62: bilibili.app.view.v1.FeedViewItem.view:type_name -> bilibili.app.view.v1.ViewReply
	59,  // 63: bilibili.app.view.v1.FeedViewReply.list:type_name -> bilibili.app.view.v1.FeedViewItem
	171, // 64: bilibili.app.view.v1.FeedViewReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	17,  // 65: bilibili.app.view.v1.GetArcsPlayerReply.arcs_player:type_name -> bilibili.app.view.v1.ArcsPlayer
	91,  // 66: bilibili.app.view.v1.GetArcsPlayerReq.play_avs:type_name -> bilibili.app.view.v1.PlayAv
	171, // 67: bilibili.app.view.v1.GetArcsPlayerReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	6,   // 68: bilibili.app.view.v1.GoodsInfo.pay_state:type_name -> bilibili.app.view.v1.PayState
	78,  // 69: bilibili.app.view.v1.Interaction.history_node:type_name -> bilibili.app.view.v1.Node
	73,  // 70: bilibili.app.view.v1.ListenerConfig.guide_bar:type_name -> bilibili.app.view.v1.ListenerGuideBar
	4,   // 71: bilibili.app.view.v1.MaterialRes.type:type_name -> bilibili.app.view.v1.MaterialSource
	81,  // 72: bilibili.app.view.v1.OnwerExt.official_verify:type_name -> bilibili.app.view.v1.OfficialVerify
	74,  // 73: bilibili.app.view.v1.OnwerExt.live:type_name -> bilibili.app.view.v1.Live
	162, // 74: bilibili.app.view.v1.OnwerExt.vip:type_name -> bilibili.app.view.v1.Vip
	5,   // 75: bilibili.app.view.v1.OperationCardNew.card_type:type_name -> bilibili.app.view.v1.OperationCardType
	134, // 76: bilibili.app.view.v1.OperationCardNew.standard:type_name -> bilibili.app.view.v1.StandardCard
	84,  // 77: bilibili.app.view.v1.OperationCardNew.skip:type_name -> bilibili.app.view.v1.OperationCard
	0,   // 78: bilibili.app.view.v1.OperationCardNew.biz_type:type_name -> bilibili.app.view.v1.BizType
	25,  // 79: bilibili.app.view.v1.OperationCardNew.follow:type_name -> bilibili.app.view.v1.BizFollowVideoParam
	27,  // 80: bilibili.app.view.v1.OperationCardNew.reserve:type_name -> bilibili.app.view.v1.BizReserveActivityParam
	26,  // 81: bilibili.app.view.v1.OperationCardNew.jump:type_name -> bilibili.app.view.v1.BizJumpLinkParam
	28,  // 82: bilibili.app.view.v1.OperationCardNew.game:type_name -> bilibili.app.view.v1.BizReserveGameParam
	87,  // 83: bilibili.app.view.v1.OperationCardV2.content:type_name -> bilibili.app.view.v1.OperationCardV2Content
	25,  // 84: bilibili.app.view.v1.OperationCardV2.BizFollowVideoParam:type_name -> bilibili.app.view.v1.BizFollowVideoParam
	27,  // 85: bilibili.app.view.v1.OperationCardV2.BizReserveActivityParam:type_name -> bilibili.app.view.v1.BizReserveActivityParam
	26,  // 86: bilibili.app.view.v1.OperationCardV2.BizJumpLinkParam:type_name -> bilibili.app.view.v1.BizJumpLinkParam
	28,  // 87: bilibili.app.view.v1.OperationCardV2.BizReserveGameParam:type_name -> bilibili.app.view.v1.BizReserveGameParam
	111, // 88: bilibili.app.view.v1.OperationRelate.relate_item:type_name -> bilibili.app.view.v1.RelateItem
	110, // 89: bilibili.app.view.v1.OperationRelate.ai_relate_item:type_name -> bilibili.app.view.v1.Relate
	0,   // 90: bilibili.app.view.v1.Order.order_type:type_name -> bilibili.app.view.v1.BizType
	27,  // 91: bilibili.app.view.v1.Order.reserve:type_name -> bilibili.app.view.v1.BizReserveActivityParam
	24,  // 92: bilibili.app.view.v1.Order.fav_season:type_name -> bilibili.app.view.v1.BizFavSeasonParam
	67,  // 93: bilibili.app.view.v1.PlayerIcon.drag_data:type_name -> bilibili.app.view.v1.IconData
	67,  // 94: bilibili.app.view.v1.PlayerIcon.nodrag_data:type_name -> bilibili.app.view.v1.IconData
	110, // 95: bilibili.app.view.v1.PlayerRelatesReply.list:type_name -> bilibili.app.view.v1.Relate
	171, // 96: bilibili.app.view.v1.PlayerRelatesReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	8,   // 97: bilibili.app.view.v1.Premiere.premiere_state:type_name -> bilibili.app.view.v1.PremiereState
	97,  // 98: bilibili.app.view.v1.PremiereArchiveReply.premiere:type_name -> bilibili.app.view.v1.Premiere
	97,  // 99: bilibili.app.view.v1.PremiereResource.premiere:type_name -> bilibili.app.view.v1.Premiere
	100, // 100: bilibili.app.view.v1.PremiereResource.reserve:type_name -> bilibili.app.view.v1.PremiereReserve
	102, // 101: bilibili.app.view.v1.PremiereResource.text:type_name -> bilibili.app.view.v1.PremiereText
	53,  // 102: bilibili.app.view.v1.RecDislike.dislike_reason:type_name -> bilibili.app.view.v1.DislikeReasons
	107, // 103: bilibili.app.view.v1.RecThreePoint.dislike:type_name -> bilibili.app.view.v1.RecDislike
	107, // 104: bilibili.app.view.v1.RecThreePoint.feedback:type_name -> bilibili.app.view.v1.RecDislike
	169, // 105: bilibili.app.view.v1.Relate.author:type_name -> bilibili.app.archive.v1.Author
	170, // 106: bilibili.app.view.v1.Relate.stat:type_name -> bilibili.app.archive.v1.Stat
	90,  // 107: bilibili.app.view.v1.Relate.pack_info:type_name -> bilibili.app.view.v1.PackInfo
	80,  // 108: bilibili.app.view.v1.Relate.notice:type_name -> bilibili.app.view.v1.Notice
	29,  // 109: bilibili.app.view.v1.Relate.button:type_name -> bilibili.app.view.v1.Button
	106, // 110: bilibili.app.view.v1.Relate.rcmd_reason_style:type_name -> bilibili.app.view.v1.ReasonStyle
	39,  // 111: bilibili.app.view.v1.Relate.cm:type_name -> bilibili.app.view.v1.CM
	108, // 112: bilibili.app.view.v1.Relate.rec_three_point:type_name -> bilibili.app.view.v1.RecThreePoint
	173, // 113: bilibili.app.view.v1.Relate.dimension:type_name -> bilibili.app.archive.v1.Dimension
	106, // 114: bilibili.app.view.v1.Relate.badge_style:type_name -> bilibili.app.view.v1.ReasonStyle
	96,  // 115: bilibili.app.view.v1.Relate.power_icon_style:type_name -> bilibili.app.view.v1.PowerIconStyle
	105, // 116: bilibili.app.view.v1.Relate.rank_info_game:type_name -> bilibili.app.view.v1.RankInfo
	110, // 117: bilibili.app.view.v1.RelatesFeedReply.list:type_name -> bilibili.app.view.v1.Relate
	174, // 118: bilibili.app.view.v1.RelatesFeedReply.pagination:type_name -> bilibili.pagination.PaginationReply
	171, // 119: bilibili.app.view.v1.RelatesFeedReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	175, // 120: bilibili.app.view.v1.RelatesFeedReq.pagination:type_name -> bilibili.pagination.Pagination
	29,  // 121: bilibili.app.view.v1.ReqUser.elec_plus_btn:type_name -> bilibili.app.view.v1.Button
	148, // 122: bilibili.app.view.v1.Season.user_season:type_name -> bilibili.app.view.v1.UserSeason
	123, // 123: bilibili.app.view.v1.Season.player:type_name -> bilibili.app.view.v1.SeasonPlayer
	141, // 124: bilibili.app.view.v1.SeasonActivityRecordReply.activity:type_name -> bilibili.app.view.v1.UgcSeasonActivity
	140, // 125: bilibili.app.view.v1.SeasonReply.season:type_name -> bilibili.app.view.v1.UgcSeason
	57,  // 126: bilibili.app.view.v1.Section.episodes:type_name -> bilibili.app.view.v1.Episode
	119, // 127: bilibili.app.view.v1.ShortFormVideoDownloadReq.restriction:type_name -> bilibili.app.view.v1.Restriction
	81,  // 128: bilibili.app.view.v1.Staff.official_verify:type_name -> bilibili.app.view.v1.OfficialVerify
	162, // 129: bilibili.app.view.v1.Staff.vip:type_name -> bilibili.app.view.v1.Vip
	10,  // 130: bilibili.app.view.v1.Tab.otype:type_name -> bilibili.app.view.v1.TabOtype
	11,  // 131: bilibili.app.view.v1.Tab.style:type_name -> bilibili.app.view.v1.TabStyle
	168, // 132: bilibili.app.view.v1.Tab.ad_tab_info:type_name -> google.protobuf.Any
	165, // 133: bilibili.app.view.v1.TFPanelCustomized.sub_panel:type_name -> bilibili.app.view.v1.TFPanelCustomized.SubPanelEntry
	129, // 134: bilibili.app.view.v1.UgcSeason.sections:type_name -> bilibili.app.view.v1.Section
	142, // 135: bilibili.app.view.v1.UgcSeason.stat:type_name -> bilibili.app.view.v1.UgcSeasonStat
	9,   // 136: bilibili.app.view.v1.UgcSeason.season_type:type_name -> bilibili.app.view.v1.SeasonType
	64,  // 137: bilibili.app.view.v1.UgcSeason.goods_info:type_name -> bilibili.app.view.v1.GoodsInfo
	30,  // 138: bilibili.app.view.v1.UgcSeason.pay_button:type_name -> bilibili.app.view.v1.ButtonStyle
	141, // 139: bilibili.app.view.v1.UgcSeason.activity:type_name -> bilibili.app.view.v1.UgcSeasonActivity
	146, // 140: bilibili.app.view.v1.UgcSeasonActivity.user_activity:type_name -> bilibili.app.view.v1.UserActivity
	126, // 141: bilibili.app.view.v1.UgcSeasonActivity.season_show:type_name -> bilibili.app.view.v1.SeasonShow
	20,  // 142: bilibili.app.view.v1.VideoGuide.attention:type_name -> bilibili.app.view.v1.Attention
	43,  // 143: bilibili.app.view.v1.VideoGuide.commandDms:type_name -> bilibili.app.view.v1.CommandDm
	84,  // 144: bilibili.app.view.v1.VideoGuide.operation_card:type_name -> bilibili.app.view.v1.OperationCard
	85,  // 145: bilibili.app.view.v1.VideoGuide.operation_card_new:type_name -> bilibili.app.view.v1.OperationCardNew
	47,  // 146: bilibili.app.view.v1.VideoGuide.contract_card:type_name -> bilibili.app.view.v1.ContractCard
	86,  // 147: bilibili.app.view.v1.VideoGuide.cards_second:type_name -> bilibili.app.view.v1.OperationCardV2
	77,  // 148: bilibili.app.view.v1.ViewMaterialReply.material_res:type_name -> bilibili.app.view.v1.MaterialRes
	76,  // 149: bilibili.app.view.v1.ViewMaterialReply.material_left:type_name -> bilibili.app.view.v1.MaterialLeft
	172, // 150: bilibili.app.view.v1.ViewPage.page:type_name -> bilibili.app.archive.v1.Page
	21,  // 151: bilibili.app.view.v1.ViewPage.audio:type_name -> bilibili.app.view.v1.Audio
	54,  // 152: bilibili.app.view.v1.ViewPage.dm:type_name -> bilibili.app.view.v1.DM
	149, // 153: bilibili.app.view.v1.ViewProgressReply.video_guide:type_name -> bilibili.app.view.v1.VideoGuide
	34,  // 154: bilibili.app.view.v1.ViewProgressReply.chronos:type_name -> bilibili.app.view.v1.Chronos
	151, // 155: bilibili.app.view.v1.ViewProgressReply.arc_shot:type_name -> bilibili.app.view.v1.VideoShot
	150, // 156: bilibili.app.view.v1.ViewProgressReply.points:type_name -> bilibili.app.view.v1.VideoPoint
	95,  // 157: bilibili.app.view.v1.ViewProgressReply.point_material:type_name -> bilibili.app.view.v1.PointMaterial
	31,  // 158: bilibili.app.view.v1.ViewProgressReply.buzzword_periods:type_name -> bilibili.app.view.v1.BuzzwordConfig
	167, // 159: bilibili.app.view.v1.ViewReply.arc:type_name -> bilibili.app.archive.v1.Arc
	155, // 160: bilibili.app.view.v1.ViewReply.pages:type_name -> bilibili.app.view.v1.ViewPage
	83,  // 161: bilibili.app.view.v1.ViewReply.owner_ext:type_name -> bilibili.app.view.v1.OnwerExt
	116, // 162: bilibili.app.view.v1.ViewReply.req_user:type_name -> bilibili.app.view.v1.ReqUser
	137, // 163: bilibili.app.view.v1.ViewReply.tag:type_name -> bilibili.app.view.v1.Tag
	166, // 164: bilibili.app.view.v1.ViewReply.t_icon:type_name -> bilibili.app.view.v1.ViewReply.TIconEntry
	120, // 165: bilibili.app.view.v1.ViewReply.season:type_name -> bilibili.app.view.v1.Season
	55,  // 166: bilibili.app.view.v1.ViewReply.elec_rank:type_name -> bilibili.app.view.v1.ElecRank
	65,  // 167: bilibili.app.view.v1.ViewReply.history:type_name -> bilibili.app.view.v1.History
	110, // 168: bilibili.app.view.v1.ViewReply.relates:type_name -> bilibili.app.view.v1.Relate
	52,  // 169: bilibili.app.view.v1.ViewReply.dislike:type_name -> bilibili.app.view.v1.Dislike
	92,  // 170: bilibili.app.view.v1.ViewReply.player_icon:type_name -> bilibili.app.view.v1.PlayerIcon
	66,  // 171: bilibili.app.view.v1.ViewReply.honor:type_name -> bilibili.app.view.v1.Honor
	114, // 172: bilibili.app.view.v1.ViewReply.relate_tab:type_name -> bilibili.app.view.v1.RelateTab
	23,  // 173: bilibili.app.view.v1.ViewReply.bgm:type_name -> bilibili.app.view.v1.Bgm
	133, // 174: bilibili.app.view.v1.ViewReply.staff:type_name -> bilibili.app.view.v1.Staff
	69,  // 175: bilibili.app.view.v1.ViewReply.label:type_name -> bilibili.app.view.v1.Label
	140, // 176: bilibili.app.view.v1.ViewReply.ugc_season:type_name -> bilibili.app.view.v1.UgcSeason
	44,  // 177: bilibili.app.view.v1.ViewReply.config:type_name -> bilibili.app.view.v1.Config
	68,  // 178: bilibili.app.view.v1.ViewReply.interaction:type_name -> bilibili.app.view.v1.Interaction
	3,   // 179: bilibili.app.view.v1.ViewReply.ecode:type_name -> bilibili.app.view.v1.ECode
	50,  // 180: bilibili.app.view.v1.ViewReply.custom_config:type_name -> bilibili.app.view.v1.CustomConfig
	39,  // 181: bilibili.app.view.v1.ViewReply.cms:type_name -> bilibili.app.view.v1.CM
	40,  // 182: bilibili.app.view.v1.ViewReply.cm_config:type_name -> bilibili.app.view.v1.CMConfig
	136, // 183: bilibili.app.view.v1.ViewReply.tab:type_name -> bilibili.app.view.v1.Tab
	104, // 184: bilibili.app.view.v1.ViewReply.rank:type_name -> bilibili.app.view.v1.Rank
	138, // 185: bilibili.app.view.v1.ViewReply.tf_panel_customized:type_name -> bilibili.app.view.v1.TFPanelCustomized
	143, // 186: bilibili.app.view.v1.ViewReply.up_act:type_name -> bilibili.app.view.v1.UpAct
	147, // 187: bilibili.app.view.v1.ViewReply.user_garb:type_name -> bilibili.app.view.v1.UserGarb
	13,  // 188: bilibili.app.view.v1.ViewReply.activity_season:type_name -> bilibili.app.view.v1.ActivitySeason
	75,  // 189: bilibili.app.view.v1.ViewReply.live_order_info:type_name -> bilibili.app.view.v1.LiveOrderInfo
	51,  // 190: bilibili.app.view.v1.ViewReply.desc_v2:type_name -> bilibili.app.view.v1.DescV2
	41,  // 191: bilibili.app.view.v1.ViewReply.cm_ipad:type_name -> bilibili.app.view.v1.CmIpad
	152, // 192: bilibili.app.view.v1.ViewReply.sticker:type_name -> bilibili.app.view.v1.ViewMaterial
	144, // 193: bilibili.app.view.v1.ViewReply.up_like_img:type_name -> bilibili.app.view.v1.UpLikeImg
	71,  // 194: bilibili.app.view.v1.ViewReply.like_custom:type_name -> bilibili.app.view.v1.LikeCustom
	137, // 195: bilibili.app.view.v1.ViewReply.desc_tag:type_name -> bilibili.app.view.v1.Tag
	132, // 196: bilibili.app.view.v1.ViewReply.special_cell:type_name -> bilibili.app.view.v1.SpecialCell
	82,  // 197: bilibili.app.view.v1.ViewReply.online:type_name -> bilibili.app.view.v1.Online
	168, // 198: bilibili.app.view.v1.ViewReply.cm_under_player:type_name -> google.protobuf.Any
	152, // 199: bilibili.app.view.v1.ViewReply.video_source:type_name -> bilibili.app.view.v1.ViewMaterial
	132, // 200: bilibili.app.view.v1.ViewReply.special_cell_new:type_name -> bilibili.app.view.v1.SpecialCell
	101, // 201: bilibili.app.view.v1.ViewReply.premiere:type_name -> bilibili.app.view.v1.PremiereResource
	76,  // 202: bilibili.app.view.v1.ViewReply.material_left:type_name -> bilibili.app.view.v1.MaterialLeft
	103, // 203: bilibili.app.view.v1.ViewReply.pull_action:type_name -> bilibili.app.view.v1.PullClientAction
	16,  // 204: bilibili.app.view.v1.ViewReply.arc_extra:type_name -> bilibili.app.view.v1.ArcExtra
	174, // 205: bilibili.app.view.v1.ViewReply.pagination:type_name -> bilibili.pagination.PaginationReply
	70,  // 206: bilibili.app.view.v1.ViewReply.like_animation:type_name -> bilibili.app.view.v1.LikeAnimation
	115, // 207: bilibili.app.view.v1.ViewReply.reply_preface:type_name -> bilibili.app.view.v1.ReplyStyle
	109, // 208: bilibili.app.view.v1.ViewReply.refresh_page:type_name -> bilibili.app.view.v1.RefreshPage
	42,  // 209: bilibili.app.view.v1.ViewReply.coin_custom:type_name -> bilibili.app.view.v1.CoinCustom
	171, // 210: bilibili.app.view.v1.ViewReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	175, // 211: bilibili.app.view.v1.ViewReq.pagination:type_name -> bilibili.pagination.Pagination
	132, // 212: bilibili.app.view.v1.ViewTagReply.special_cell_new:type_name -> bilibili.app.view.v1.SpecialCell
	76,  // 213: bilibili.app.view.v1.ViewTagReply.material_left:type_name -> bilibili.app.view.v1.MaterialLeft
	163, // 214: bilibili.app.view.v1.Vip.label:type_name -> bilibili.app.view.v1.VipLabel
	135, // 215: bilibili.app.view.v1.TFPanelCustomized.SubPanelEntry.value:type_name -> bilibili.app.view.v1.subTFPanel
	139, // 216: bilibili.app.view.v1.ViewReply.TIconEntry.value:type_name -> bilibili.app.view.v1.TIcon
	159, // 217: bilibili.app.view.v1.View.View:input_type -> bilibili.app.view.v1.ViewReq
	161, // 218: bilibili.app.view.v1.View.ViewTag:input_type -> bilibili.app.view.v1.ViewTagReq
	154, // 219: bilibili.app.view.v1.View.ViewMaterial:input_type -> bilibili.app.view.v1.ViewMaterialReq
	157, // 220: bilibili.app.view.v1.View.ViewProgress:input_type -> bilibili.app.view.v1.ViewProgressReq
	131, // 221: bilibili.app.view.v1.View.ShortFormVideoDownload:input_type -> bilibili.app.view.v1.ShortFormVideoDownloadReq
	38,  // 222: bilibili.app.view.v1.View.ClickPlayerCard:input_type -> bilibili.app.view.v1.ClickPlayerCardReq
	36,  // 223: bilibili.app.view.v1.View.ClickActivitySeason:input_type -> bilibili.app.view.v1.ClickActivitySeasonReq
	125, // 224: bilibili.app.view.v1.View.Season:input_type -> bilibili.app.view.v1.SeasonReq
	58,  // 225: bilibili.app.view.v1.View.ExposePlayerCard:input_type -> bilibili.app.view.v1.ExposePlayerCardReq
	14,  // 226: bilibili.app.view.v1.View.AddContract:input_type -> bilibili.app.view.v1.AddContractReq
	35,  // 227: bilibili.app.view.v1.View.ChronosPkg:input_type -> bilibili.app.view.v1.ChronosPkgReq
	33,  // 228: bilibili.app.view.v1.View.CacheView:input_type -> bilibili.app.view.v1.CacheViewReq
	46,  // 229: bilibili.app.view.v1.View.ContinuousPlay:input_type -> bilibili.app.view.v1.ContinuousPlayReq
	113, // 230: bilibili.app.view.v1.View.RelatesFeed:input_type -> bilibili.app.view.v1.RelatesFeedReq
	99,  // 231: bilibili.app.view.v1.View.PremiereArchive:input_type -> bilibili.app.view.v1.PremiereArchiveReq
	118, // 232: bilibili.app.view.v1.View.Reserve:input_type -> bilibili.app.view.v1.ReserveReq
	94,  // 233: bilibili.app.view.v1.View.PlayerRelates:input_type -> bilibili.app.view.v1.PlayerRelatesReq
	122, // 234: bilibili.app.view.v1.View.SeasonActivityRecord:input_type -> bilibili.app.view.v1.SeasonActivityRecordReq
	128, // 235: bilibili.app.view.v1.View.SeasonWidgetExpose:input_type -> bilibili.app.view.v1.SeasonWidgetExposeReq
	63,  // 236: bilibili.app.view.v1.View.GetArcsPlayer:input_type -> bilibili.app.view.v1.GetArcsPlayerReq
	158, // 237: bilibili.app.view.v1.View.View:output_type -> bilibili.app.view.v1.ViewReply
	160, // 238: bilibili.app.view.v1.View.ViewTag:output_type -> bilibili.app.view.v1.ViewTagReply
	153, // 239: bilibili.app.view.v1.View.ViewMaterial:output_type -> bilibili.app.view.v1.ViewMaterialReply
	156, // 240: bilibili.app.view.v1.View.ViewProgress:output_type -> bilibili.app.view.v1.ViewProgressReply
	130, // 241: bilibili.app.view.v1.View.ShortFormVideoDownload:output_type -> bilibili.app.view.v1.ShortFormVideoDownloadReply
	79,  // 242: bilibili.app.view.v1.View.ClickPlayerCard:output_type -> bilibili.app.view.v1.NoReply
	79,  // 243: bilibili.app.view.v1.View.ClickActivitySeason:output_type -> bilibili.app.view.v1.NoReply
	124, // 244: bilibili.app.view.v1.View.Season:output_type -> bilibili.app.view.v1.SeasonReply
	79,  // 245: bilibili.app.view.v1.View.ExposePlayerCard:output_type -> bilibili.app.view.v1.NoReply
	79,  // 246: bilibili.app.view.v1.View.AddContract:output_type -> bilibili.app.view.v1.NoReply
	34,  // 247: bilibili.app.view.v1.View.ChronosPkg:output_type -> bilibili.app.view.v1.Chronos
	32,  // 248: bilibili.app.view.v1.View.CacheView:output_type -> bilibili.app.view.v1.CacheViewReply
	45,  // 249: bilibili.app.view.v1.View.ContinuousPlay:output_type -> bilibili.app.view.v1.ContinuousPlayReply
	112, // 250: bilibili.app.view.v1.View.RelatesFeed:output_type -> bilibili.app.view.v1.RelatesFeedReply
	98,  // 251: bilibili.app.view.v1.View.PremiereArchive:output_type -> bilibili.app.view.v1.PremiereArchiveReply
	117, // 252: bilibili.app.view.v1.View.Reserve:output_type -> bilibili.app.view.v1.ReserveReply
	93,  // 253: bilibili.app.view.v1.View.PlayerRelates:output_type -> bilibili.app.view.v1.PlayerRelatesReply
	121, // 254: bilibili.app.view.v1.View.SeasonActivityRecord:output_type -> bilibili.app.view.v1.SeasonActivityRecordReply
	127, // 255: bilibili.app.view.v1.View.SeasonWidgetExpose:output_type -> bilibili.app.view.v1.SeasonWidgetExposeReply
	62,  // 256: bilibili.app.view.v1.View.GetArcsPlayer:output_type -> bilibili.app.view.v1.GetArcsPlayerReply
	237, // [237:257] is the sub-list for method output_type
	217, // [217:237] is the sub-list for method input_type
	217, // [217:217] is the sub-list for extension type_name
	217, // [217:217] is the sub-list for extension extendee
	0,   // [0:217] is the sub-list for field type_name
}

func init() { file_bilibili_app_view_v1_view_proto_init() }
func file_bilibili_app_view_v1_view_proto_init() {
	if File_bilibili_app_view_v1_view_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_view_v1_view_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContractReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArcExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArcsPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bgm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizFavSeasonParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizFollowVideoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizJumpLinkParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizReserveActivityParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizReserveGameParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuzzwordConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chronos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChronosPkgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickActivitySeasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickPlayerCardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickPlayerCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmIpad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinuousPlayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinuousPlayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dislike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeReasons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElecRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElecRankItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Episode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExposePlayerCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedViewItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArcsPlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArcsPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Honor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeCustom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerGuideBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Live); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveOrderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Online); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnwerExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationCardNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationCardV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationCardV2Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationRelate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRelatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRelatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerIconStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Premiere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereArchiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereArchiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereReserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullClientAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecDislike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecThreePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatesFeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatesFeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Season); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonActivityRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonActivityRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonWidgetExposeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonWidgetExposeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortFormVideoDownloadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortFormVideoDownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubTFPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TFPanelCustomized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSeasonActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSeasonStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpLikeImg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpperInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGarb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoGuide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoShot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewMaterialReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewMaterialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewProgressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewProgressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewTagReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_view_v1_view_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_view_v1_view_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*ClickActivitySeasonReq_Reserve)(nil),
		(*ClickActivitySeasonReq_FavSeason)(nil),
	}
	file_bilibili_app_view_v1_view_proto_msgTypes[73].OneofWrappers = []interface{}{
		(*OperationCardNew_Standard)(nil),
		(*OperationCardNew_Skip)(nil),
		(*OperationCardNew_Follow)(nil),
		(*OperationCardNew_Reserve)(nil),
		(*OperationCardNew_Jump)(nil),
		(*OperationCardNew_Game)(nil),
	}
	file_bilibili_app_view_v1_view_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*OperationCardV2_BizFollowVideoParam)(nil),
		(*OperationCardV2_BizReserveActivityParam)(nil),
		(*OperationCardV2_BizJumpLinkParam)(nil),
		(*OperationCardV2_BizReserveGameParam)(nil),
	}
	file_bilibili_app_view_v1_view_proto_msgTypes[77].OneofWrappers = []interface{}{
		(*Order_Reserve)(nil),
		(*Order_FavSeason)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_view_v1_view_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   155,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_view_v1_view_proto_goTypes,
		DependencyIndexes: file_bilibili_app_view_v1_view_proto_depIdxs,
		EnumInfos:         file_bilibili_app_view_v1_view_proto_enumTypes,
		MessageInfos:      file_bilibili_app_view_v1_view_proto_msgTypes,
	}.Build()
	File_bilibili_app_view_v1_view_proto = out.File
	file_bilibili_app_view_v1_view_proto_rawDesc = nil
	file_bilibili_app_view_v1_view_proto_goTypes = nil
	file_bilibili_app_view_v1_view_proto_depIdxs = nil
}
