// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/app/dynamic/v1/dynamic.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BgType int32

const (
	BgType_bg_type_default BgType = 0 //
	BgType_bg_type_face    BgType = 1 //
)

// Enum value maps for BgType.
var (
	BgType_name = map[int32]string{
		0: "bg_type_default",
		1: "bg_type_face",
	}
	BgType_value = map[string]int32{
		"bg_type_default": 0,
		"bg_type_face":    1,
	}
)

func (x BgType) Enum() *BgType {
	p := new(BgType)
	*p = x
	return p
}

func (x BgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BgType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[0].Descriptor()
}

func (BgType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[0]
}

func (x BgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BgType.Descriptor instead.
func (BgType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{0}
}

type CornerType int32

const (
	CornerType_corner_type_none      CornerType = 0 //
	CornerType_corner_type_text      CornerType = 1 //
	CornerType_corner_type_animation CornerType = 2 //
)

// Enum value maps for CornerType.
var (
	CornerType_name = map[int32]string{
		0: "corner_type_none",
		1: "corner_type_text",
		2: "corner_type_animation",
	}
	CornerType_value = map[string]int32{
		"corner_type_none":      0,
		"corner_type_text":      1,
		"corner_type_animation": 2,
	}
)

func (x CornerType) Enum() *CornerType {
	p := new(CornerType)
	*p = x
	return p
}

func (x CornerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CornerType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[1].Descriptor()
}

func (CornerType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[1]
}

func (x CornerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CornerType.Descriptor instead.
func (CornerType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{1}
}

// 折叠分类
type FoldType int32

const (
	FoldType_FoldTypeZero     FoldType = 0 // 占位
	FoldType_FoldTypePublish  FoldType = 1 // 用户发布折叠
	FoldType_FoldTypeFrequent FoldType = 2 // 转发超频折叠
	FoldType_FoldTypeUnite    FoldType = 3 // 联合投稿折叠
	FoldType_FoldTypeLimit    FoldType = 4 // 动态受限折叠
)

// Enum value maps for FoldType.
var (
	FoldType_name = map[int32]string{
		0: "FoldTypeZero",
		1: "FoldTypePublish",
		2: "FoldTypeFrequent",
		3: "FoldTypeUnite",
		4: "FoldTypeLimit",
	}
	FoldType_value = map[string]int32{
		"FoldTypeZero":     0,
		"FoldTypePublish":  1,
		"FoldTypeFrequent": 2,
		"FoldTypeUnite":    3,
		"FoldTypeLimit":    4,
	}
)

func (x FoldType) Enum() *FoldType {
	p := new(FoldType)
	*p = x
	return p
}

func (x FoldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FoldType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[2].Descriptor()
}

func (FoldType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[2]
}

func (x FoldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FoldType.Descriptor instead.
func (FoldType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{2}
}

// 播放器类型
type MediaType int32

const (
	MediaType_MediaTypeNone MediaType = 0 // 本地
	MediaType_MediaTypeUGC  MediaType = 1 // UGC
	MediaType_MediaTypePGC  MediaType = 2 // PGC
	MediaType_MediaTypeLive MediaType = 3 // 直播
	MediaType_MediaTypeVCS  MediaType = 4 // 小视频
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MediaTypeNone",
		1: "MediaTypeUGC",
		2: "MediaTypePGC",
		3: "MediaTypeLive",
		4: "MediaTypeVCS",
	}
	MediaType_value = map[string]int32{
		"MediaTypeNone": 0,
		"MediaTypeUGC":  1,
		"MediaTypePGC":  2,
		"MediaTypeLive": 3,
		"MediaTypeVCS":  4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[3].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[3]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{3}
}

// 关注状态
type RelationStatus int32

const (
	RelationStatus_relation_status_none           RelationStatus = 0 //
	RelationStatus_relation_status_nofollow       RelationStatus = 1 // 未关注
	RelationStatus_relation_status_follow         RelationStatus = 2 // 关注
	RelationStatus_relation_status_followed       RelationStatus = 3 // 被关注
	RelationStatus_relation_status_mutual_concern RelationStatus = 4 // 互相关注
	RelationStatus_relation_status_special        RelationStatus = 5 // 特别关注
)

// Enum value maps for RelationStatus.
var (
	RelationStatus_name = map[int32]string{
		0: "relation_status_none",
		1: "relation_status_nofollow",
		2: "relation_status_follow",
		3: "relation_status_followed",
		4: "relation_status_mutual_concern",
		5: "relation_status_special",
	}
	RelationStatus_value = map[string]int32{
		"relation_status_none":           0,
		"relation_status_nofollow":       1,
		"relation_status_follow":         2,
		"relation_status_followed":       3,
		"relation_status_mutual_concern": 4,
		"relation_status_special":        5,
	}
)

func (x RelationStatus) Enum() *RelationStatus {
	p := new(RelationStatus)
	*p = x
	return p
}

func (x RelationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[4].Descriptor()
}

func (RelationStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[4]
}

func (x RelationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationStatus.Descriptor instead.
func (RelationStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{4}
}

type StyleType int32

const (
	StyleType_STYLE_TYPE_NONE   StyleType = 0 //
	StyleType_STYLE_TYPE_LIVE   StyleType = 1 //
	StyleType_STYLE_TYPE_DYN_UP StyleType = 2 //
)

// Enum value maps for StyleType.
var (
	StyleType_name = map[int32]string{
		0: "STYLE_TYPE_NONE",
		1: "STYLE_TYPE_LIVE",
		2: "STYLE_TYPE_DYN_UP",
	}
	StyleType_value = map[string]int32{
		"STYLE_TYPE_NONE":   0,
		"STYLE_TYPE_LIVE":   1,
		"STYLE_TYPE_DYN_UP": 2,
	}
)

func (x StyleType) Enum() *StyleType {
	p := new(StyleType)
	*p = x
	return p
}

func (x StyleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StyleType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[5].Descriptor()
}

func (StyleType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[5]
}

func (x StyleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StyleType.Descriptor instead.
func (StyleType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{5}
}

// 入口联播页类型
type SVideoType int32

const (
	SVideoType_TypeNone           SVideoType = 0 // 无类型
	SVideoType_TypeDynamic        SVideoType = 1 // 动态
	SVideoType_TypePopularIndex   SVideoType = 2 // 热门分类
	SVideoType_TypePopularHotword SVideoType = 3 // 热点聚合
)

// Enum value maps for SVideoType.
var (
	SVideoType_name = map[int32]string{
		0: "TypeNone",
		1: "TypeDynamic",
		2: "TypePopularIndex",
		3: "TypePopularHotword",
	}
	SVideoType_value = map[string]int32{
		"TypeNone":           0,
		"TypeDynamic":        1,
		"TypePopularIndex":   2,
		"TypePopularHotword": 3,
	}
)

func (x SVideoType) Enum() *SVideoType {
	p := new(SVideoType)
	*p = x
	return p
}

func (x SVideoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SVideoType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[6].Descriptor()
}

func (SVideoType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[6]
}

func (x SVideoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SVideoType.Descriptor instead.
func (SVideoType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{6}
}

// 番剧类型
type VideoSubType int32

const (
	VideoSubType_VideoSubTypeNone        VideoSubType = 0 // 没有子类型
	VideoSubType_VideoSubTypeBangumi     VideoSubType = 1 // 番剧
	VideoSubType_VideoSubTypeMovie       VideoSubType = 2 // 电影
	VideoSubType_VideoSubTypeDocumentary VideoSubType = 3 // 纪录片
	VideoSubType_VideoSubTypeDomestic    VideoSubType = 4 // 国创
	VideoSubType_VideoSubTypeTeleplay    VideoSubType = 5 // 电视剧
)

// Enum value maps for VideoSubType.
var (
	VideoSubType_name = map[int32]string{
		0: "VideoSubTypeNone",
		1: "VideoSubTypeBangumi",
		2: "VideoSubTypeMovie",
		3: "VideoSubTypeDocumentary",
		4: "VideoSubTypeDomestic",
		5: "VideoSubTypeTeleplay",
	}
	VideoSubType_value = map[string]int32{
		"VideoSubTypeNone":        0,
		"VideoSubTypeBangumi":     1,
		"VideoSubTypeMovie":       2,
		"VideoSubTypeDocumentary": 3,
		"VideoSubTypeDomestic":    4,
		"VideoSubTypeTeleplay":    5,
	}
)

func (x VideoSubType) Enum() *VideoSubType {
	p := new(VideoSubType)
	*p = x
	return p
}

func (x VideoSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[7].Descriptor()
}

func (VideoSubType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes[7]
}

func (x VideoSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoSubType.Descriptor instead.
func (VideoSubType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{7}
}

// 地址部件
type AddressComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 国家
	Nation string `protobuf:"bytes,1,opt,name=nation,proto3" json:"nation,omitempty"`
	// 省
	Province string `protobuf:"bytes,2,opt,name=province,proto3" json:"province,omitempty"`
	// 市
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// 区，可能为空字串
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
	// 街道，可能为空字串
	Street string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
	// 门牌，可能为空字串
	StreetNumber string `protobuf:"bytes,6,opt,name=street_number,json=streetNumber,proto3" json:"street_number,omitempty"`
}

func (x *AddressComponent) Reset() {
	*x = AddressComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressComponent) ProtoMessage() {}

func (x *AddressComponent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressComponent.ProtoReflect.Descriptor instead.
func (*AddressComponent) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{0}
}

func (x *AddressComponent) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *AddressComponent) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddressComponent) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressComponent) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *AddressComponent) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *AddressComponent) GetStreetNumber() string {
	if x != nil {
		return x.StreetNumber
	}
	return ""
}

// 行政区划信息
type AdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 国家代码(ISO3166标准3位数字码)
	NationCode string `protobuf:"bytes,1,opt,name=nation_code,json=nationCode,proto3" json:"nation_code,omitempty"`
	// 行政区划代码，规则详见：行政区划代码说明
	Adcode string `protobuf:"bytes,2,opt,name=adcode,proto3" json:"adcode,omitempty"`
	// 城市代码，由国家码+行政区划代码(提出城市级别)组合而来，总共为9位
	CityCode string `protobuf:"bytes,3,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`
	// 行政区划名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 行政区划中心点坐标
	Gps *Gps `protobuf:"bytes,5,opt,name=gps,proto3" json:"gps,omitempty"`
}

func (x *AdInfo) Reset() {
	*x = AdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdInfo) ProtoMessage() {}

func (x *AdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdInfo.ProtoReflect.Descriptor instead.
func (*AdInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{1}
}

func (x *AdInfo) GetNationCode() string {
	if x != nil {
		return x.NationCode
	}
	return ""
}

func (x *AdInfo) GetAdcode() string {
	if x != nil {
		return x.Adcode
	}
	return ""
}

func (x *AdInfo) GetCityCode() string {
	if x != nil {
		return x.CityCode
	}
	return ""
}

func (x *AdInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdInfo) GetGps() *Gps {
	if x != nil {
		return x.Gps
	}
	return nil
}

// 付费课程批次卡
type CardCurrBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1(本集标题)
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 展示项 2(更新了多少个视频)
	Text_2 string `protobuf:"bytes,5,opt,name=text_2,json=text2,proto3" json:"text_2,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *CardCurrBatch) Reset() {
	*x = CardCurrBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCurrBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCurrBatch) ProtoMessage() {}

func (x *CardCurrBatch) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCurrBatch.ProtoReflect.Descriptor instead.
func (*CardCurrBatch) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{2}
}

func (x *CardCurrBatch) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardCurrBatch) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardCurrBatch) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CardCurrBatch) GetText_1() string {
	if x != nil {
		return x.Text_1
	}
	return ""
}

func (x *CardCurrBatch) GetText_2() string {
	if x != nil {
		return x.Text_2
	}
	return ""
}

func (x *CardCurrBatch) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// 付费课程系列卡
type CardCurrSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1(更新信息)
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 描述信息
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *CardCurrSeason) Reset() {
	*x = CardCurrSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCurrSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCurrSeason) ProtoMessage() {}

func (x *CardCurrSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCurrSeason.ProtoReflect.Descriptor instead.
func (*CardCurrSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{3}
}

func (x *CardCurrSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardCurrSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardCurrSeason) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CardCurrSeason) GetText_1() string {
	if x != nil {
		return x.Text_1
	}
	return ""
}

func (x *CardCurrSeason) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CardCurrSeason) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// PGC视频卡片数据
type CardPGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,7,opt,name=cid,proto3" json:"cid,omitempty"`
	// season_id
	SeasonId int64 `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,9,opt,name=epid,proto3" json:"epid,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,10,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,11,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v1.MediaType" json:"media_type,omitempty"`
	// 番剧类型
	SubType VideoSubType `protobuf:"varint,12,opt,name=sub_type,json=subType,proto3,enum=bilibili.app.dynamic.v1.VideoSubType" json:"sub_type,omitempty"`
	// 番剧是否为预览视频 0:否，1:是
	IsPreview int32 `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,14,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标
	Badge []*VideoBadge `protobuf:"bytes,15,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay int32 `protobuf:"varint,16,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// PGC单季信息
	Season *PGCSeason `protobuf:"bytes,17,opt,name=season,proto3" json:"season,omitempty"`
}

func (x *CardPGC) Reset() {
	*x = CardPGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardPGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardPGC) ProtoMessage() {}

func (x *CardPGC) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardPGC.ProtoReflect.Descriptor instead.
func (*CardPGC) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{4}
}

func (x *CardPGC) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardPGC) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardPGC) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CardPGC) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *CardPGC) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *CardPGC) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *CardPGC) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CardPGC) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *CardPGC) GetEpid() int64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *CardPGC) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CardPGC) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MediaTypeNone
}

func (x *CardPGC) GetSubType() VideoSubType {
	if x != nil {
		return x.SubType
	}
	return VideoSubType_VideoSubTypeNone
}

func (x *CardPGC) GetIsPreview() int32 {
	if x != nil {
		return x.IsPreview
	}
	return 0
}

func (x *CardPGC) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *CardPGC) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *CardPGC) GetCanPlay() int32 {
	if x != nil {
		return x.CanPlay
	}
	return 0
}

func (x *CardPGC) GetSeason() *PGCSeason {
	if x != nil {
		return x.Season
	}
	return nil
}

// UGC视频卡片数据
type CardUGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,7,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,8,opt,name=cid,proto3" json:"cid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,9,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v1.MediaType" json:"media_type,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,10,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标
	Badge []*VideoBadge `protobuf:"bytes,11,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay int32 `protobuf:"varint,12,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
}

func (x *CardUGC) Reset() {
	*x = CardUGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardUGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardUGC) ProtoMessage() {}

func (x *CardUGC) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardUGC.ProtoReflect.Descriptor instead.
func (*CardUGC) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{5}
}

func (x *CardUGC) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardUGC) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardUGC) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CardUGC) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *CardUGC) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *CardUGC) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *CardUGC) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

func (x *CardUGC) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CardUGC) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MediaTypeNone
}

func (x *CardUGC) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *CardUGC) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *CardUGC) GetCanPlay() int32 {
	if x != nil {
		return x.CanPlay
	}
	return 0
}

// 粉丝样式
type DecoCardFan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是粉丝
	IsFan int32 `protobuf:"varint,1,opt,name=is_fan,json=isFan,proto3" json:"is_fan,omitempty"`
	// 数量
	Number int32 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	// 颜色
	Color string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *DecoCardFan) Reset() {
	*x = DecoCardFan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecoCardFan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecoCardFan) ProtoMessage() {}

func (x *DecoCardFan) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecoCardFan.ProtoReflect.Descriptor instead.
func (*DecoCardFan) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{6}
}

func (x *DecoCardFan) GetIsFan() int32 {
	if x != nil {
		return x.IsFan
	}
	return 0
}

func (x *DecoCardFan) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DecoCardFan) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// 装扮卡片
type DecorateCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 装扮卡片id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 装扮卡片链接
	CardUrl string `protobuf:"bytes,2,opt,name=card_url,json=cardUrl,proto3" json:"card_url,omitempty"`
	// 装扮卡片点击跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 粉丝样式
	Fan *DecoCardFan `protobuf:"bytes,4,opt,name=fan,proto3" json:"fan,omitempty"`
}

func (x *DecorateCard) Reset() {
	*x = DecorateCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecorateCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecorateCard) ProtoMessage() {}

func (x *DecorateCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecorateCard.ProtoReflect.Descriptor instead.
func (*DecorateCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{7}
}

func (x *DecorateCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DecorateCard) GetCardUrl() string {
	if x != nil {
		return x.CardUrl
	}
	return ""
}

func (x *DecorateCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *DecorateCard) GetFan() *DecoCardFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

// 文本描述
type Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文本内容
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文本类型
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// emoji类型
	EmojiType string `protobuf:"bytes,4,opt,name=emoji_type,json=emojiType,proto3" json:"emoji_type,omitempty"`
	// 商品类型
	GoodsType string `protobuf:"bytes,5,opt,name=goods_type,json=goodsType,proto3" json:"goods_type,omitempty"`
}

func (x *Description) Reset() {
	*x = Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{8}
}

func (x *Description) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Description) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Description) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Description) GetEmojiType() string {
	if x != nil {
		return x.EmojiType
	}
	return ""
}

func (x *Description) GetGoodsType() string {
	if x != nil {
		return x.GoodsType
	}
	return ""
}

// 尺寸信息
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{9}
}

func (x *Dimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetRotate() int64 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

// 动态卡片项
type DynamicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	// forward:转发 av:稿件视频 fold:折叠 pgc:pgc内容 courses:付费视频 upList:最近访问列表 followList:我的追番列表
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 转发类型下，items的类型
	ItemType string `protobuf:"bytes,2,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	// 模块内容
	Modules []*Module `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	// 动态ID str
	DynIdStr string `protobuf:"bytes,4,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
	// 转发动态ID str
	OrigDynIdStr string `protobuf:"bytes,5,opt,name=orig_dyn_id_str,json=origDynIdStr,proto3" json:"orig_dyn_id_str,omitempty"`
	// r_type
	RType int32 `protobuf:"varint,6,opt,name=r_type,json=rType,proto3" json:"r_type,omitempty"`
	// 该卡片下面是否含有折叠卡
	HasFold int32 `protobuf:"varint,7,opt,name=has_fold,json=hasFold,proto3" json:"has_fold,omitempty"`
}

func (x *DynamicItem) Reset() {
	*x = DynamicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicItem) ProtoMessage() {}

func (x *DynamicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicItem.ProtoReflect.Descriptor instead.
func (*DynamicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{10}
}

func (x *DynamicItem) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *DynamicItem) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *DynamicItem) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *DynamicItem) GetDynIdStr() string {
	if x != nil {
		return x.DynIdStr
	}
	return ""
}

func (x *DynamicItem) GetOrigDynIdStr() string {
	if x != nil {
		return x.OrigDynIdStr
	}
	return ""
}

func (x *DynamicItem) GetRType() int32 {
	if x != nil {
		return x.RType
	}
	return 0
}

func (x *DynamicItem) GetHasFold() int32 {
	if x != nil {
		return x.HasFold
	}
	return 0
}

// 批量动态id获取动态详情返回值
type DynDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DynDetailsReply) Reset() {
	*x = DynDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailsReply) ProtoMessage() {}

func (x *DynDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailsReply.ProtoReflect.Descriptor instead.
func (*DynDetailsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{11}
}

func (x *DynDetailsReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 批量动态id获取动态详情请求参数
type DynDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 动态id
	DynamicIds string `protobuf:"bytes,2,opt,name=dynamic_ids,json=dynamicIds,proto3" json:"dynamic_ids,omitempty"`
	// 清晰度
	Qn int32 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流功能
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名
	ForceHost int32 `protobuf:"varint,6,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k
	Fourk int32 `protobuf:"varint,7,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *DynDetailsReq) Reset() {
	*x = DynDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailsReq) ProtoMessage() {}

func (x *DynDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailsReq.ProtoReflect.Descriptor instead.
func (*DynDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{12}
}

func (x *DynDetailsReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *DynDetailsReq) GetDynamicIds() string {
	if x != nil {
		return x.DynamicIds
	}
	return ""
}

func (x *DynDetailsReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *DynDetailsReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *DynDetailsReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *DynDetailsReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *DynDetailsReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

// 查看更多-搜索-响应
type DynMixUpListSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MixUpListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DynMixUpListSearchReply) Reset() {
	*x = DynMixUpListSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynMixUpListSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynMixUpListSearchReply) ProtoMessage() {}

func (x *DynMixUpListSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynMixUpListSearchReply.ProtoReflect.Descriptor instead.
func (*DynMixUpListSearchReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{13}
}

func (x *DynMixUpListSearchReply) GetItems() []*MixUpListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查看更多-搜索-请求
type DynMixUpListSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DynMixUpListSearchReq) Reset() {
	*x = DynMixUpListSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynMixUpListSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynMixUpListSearchReq) ProtoMessage() {}

func (x *DynMixUpListSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynMixUpListSearchReq.ProtoReflect.Descriptor instead.
func (*DynMixUpListSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{14}
}

func (x *DynMixUpListSearchReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 查看更多-列表-响应
type DynMixUpListViewMoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关注up主列表信息
	Items []*MixUpListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 默认搜索文案
	SearchDefaultText string `protobuf:"bytes,2,opt,name=search_default_text,json=searchDefaultText,proto3" json:"search_default_text,omitempty"`
}

func (x *DynMixUpListViewMoreReply) Reset() {
	*x = DynMixUpListViewMoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynMixUpListViewMoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynMixUpListViewMoreReply) ProtoMessage() {}

func (x *DynMixUpListViewMoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynMixUpListViewMoreReply.ProtoReflect.Descriptor instead.
func (*DynMixUpListViewMoreReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{15}
}

func (x *DynMixUpListViewMoreReply) GetItems() []*MixUpListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DynMixUpListViewMoreReply) GetSearchDefaultText() string {
	if x != nil {
		return x.SearchDefaultText
	}
	return ""
}

// 动态同城物料
type DynOurCityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	// av:稿件 draw:图文
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 动态ID
	DynId int64 `protobuf:"varint,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 模块列表
	Modules []*DynOurCityModule `protobuf:"bytes,4,rep,name=modules,proto3" json:"modules,omitempty"`
	// 资源ID
	Rid int64 `protobuf:"varint,5,opt,name=rid,proto3" json:"rid,omitempty"`
	// 透传服务端魔镜参数
	DebugInfo string `protobuf:"bytes,6,opt,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
}

func (x *DynOurCityItem) Reset() {
	*x = DynOurCityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityItem) ProtoMessage() {}

func (x *DynOurCityItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityItem.ProtoReflect.Descriptor instead.
func (*DynOurCityItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{16}
}

func (x *DynOurCityItem) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *DynOurCityItem) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *DynOurCityItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynOurCityItem) GetModules() []*DynOurCityModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *DynOurCityItem) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DynOurCityItem) GetDebugInfo() string {
	if x != nil {
		return x.DebugInfo
	}
	return ""
}

// 动态同城物料模块
type DynOurCityModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// cover:封面 desc:描述 author:发布人 extend:扩展部分
	ModuleType string `protobuf:"bytes,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	// Types that are assignable to ModuleItem:
	//
	//	*DynOurCityModule_ModuleCover
	//	*DynOurCityModule_ModuleDesc
	//	*DynOurCityModule_ModuleAuthor
	//	*DynOurCityModule_ModuleExtend
	ModuleItem isDynOurCityModule_ModuleItem `protobuf_oneof:"module_item"`
}

func (x *DynOurCityModule) Reset() {
	*x = DynOurCityModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModule) ProtoMessage() {}

func (x *DynOurCityModule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModule.ProtoReflect.Descriptor instead.
func (*DynOurCityModule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{17}
}

func (x *DynOurCityModule) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (m *DynOurCityModule) GetModuleItem() isDynOurCityModule_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (x *DynOurCityModule) GetModuleCover() *DynOurCityModuleCover {
	if x, ok := x.GetModuleItem().(*DynOurCityModule_ModuleCover); ok {
		return x.ModuleCover
	}
	return nil
}

func (x *DynOurCityModule) GetModuleDesc() *DynOurCityModuleDesc {
	if x, ok := x.GetModuleItem().(*DynOurCityModule_ModuleDesc); ok {
		return x.ModuleDesc
	}
	return nil
}

func (x *DynOurCityModule) GetModuleAuthor() *DynOurCityModuleAuthor {
	if x, ok := x.GetModuleItem().(*DynOurCityModule_ModuleAuthor); ok {
		return x.ModuleAuthor
	}
	return nil
}

func (x *DynOurCityModule) GetModuleExtend() *DynOurCityModuleExtend {
	if x, ok := x.GetModuleItem().(*DynOurCityModule_ModuleExtend); ok {
		return x.ModuleExtend
	}
	return nil
}

type isDynOurCityModule_ModuleItem interface {
	isDynOurCityModule_ModuleItem()
}

type DynOurCityModule_ModuleCover struct {
	// 封面
	ModuleCover *DynOurCityModuleCover `protobuf:"bytes,2,opt,name=module_cover,json=moduleCover,proto3,oneof"`
}

type DynOurCityModule_ModuleDesc struct {
	// 描述
	ModuleDesc *DynOurCityModuleDesc `protobuf:"bytes,3,opt,name=module_desc,json=moduleDesc,proto3,oneof"`
}

type DynOurCityModule_ModuleAuthor struct {
	// 发布人
	ModuleAuthor *DynOurCityModuleAuthor `protobuf:"bytes,4,opt,name=module_author,json=moduleAuthor,proto3,oneof"`
}

type DynOurCityModule_ModuleExtend struct {
	// 扩展部分
	ModuleExtend *DynOurCityModuleExtend `protobuf:"bytes,5,opt,name=module_extend,json=moduleExtend,proto3,oneof"`
}

func (*DynOurCityModule_ModuleCover) isDynOurCityModule_ModuleItem() {}

func (*DynOurCityModule_ModuleDesc) isDynOurCityModule_ModuleItem() {}

func (*DynOurCityModule_ModuleAuthor) isDynOurCityModule_ModuleItem() {}

func (*DynOurCityModule_ModuleExtend) isDynOurCityModule_ModuleItem() {}

// 动态同城物料-发布人模块
type DynOurCityModuleAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户Mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *DynOurCityModuleAuthor) Reset() {
	*x = DynOurCityModuleAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModuleAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModuleAuthor) ProtoMessage() {}

func (x *DynOurCityModuleAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModuleAuthor.ProtoReflect.Descriptor instead.
func (*DynOurCityModuleAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{18}
}

func (x *DynOurCityModuleAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DynOurCityModuleAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynOurCityModuleAuthor) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *DynOurCityModuleAuthor) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态同城物料-封面模块
type DynOurCityModuleCover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面图 单图样式取第一个元素
	Covers []string `protobuf:"bytes,1,rep,name=covers,proto3" json:"covers,omitempty"`
	// 封面样式
	// 1:横图 2:竖图 3:方图
	Style int32 `protobuf:"varint,2,opt,name=style,proto3" json:"style,omitempty"`
	// 视频封面展示项图标 1
	CoverLeftIcon_1 int32 `protobuf:"varint,3,opt,name=cover_left_icon_1,json=coverLeftIcon1,proto3" json:"cover_left_icon_1,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项图标 2
	CoverLeftIcon_2 int32 `protobuf:"varint,5,opt,name=cover_left_icon_2,json=coverLeftIcon2,proto3" json:"cover_left_icon_2,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,6,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,7,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// 角标
	Badge []*VideoBadge `protobuf:"bytes,8,rep,name=badge,proto3" json:"badge,omitempty"`
}

func (x *DynOurCityModuleCover) Reset() {
	*x = DynOurCityModuleCover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModuleCover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModuleCover) ProtoMessage() {}

func (x *DynOurCityModuleCover) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModuleCover.ProtoReflect.Descriptor instead.
func (*DynOurCityModuleCover) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{19}
}

func (x *DynOurCityModuleCover) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *DynOurCityModuleCover) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *DynOurCityModuleCover) GetCoverLeftIcon_1() int32 {
	if x != nil {
		return x.CoverLeftIcon_1
	}
	return 0
}

func (x *DynOurCityModuleCover) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *DynOurCityModuleCover) GetCoverLeftIcon_2() int32 {
	if x != nil {
		return x.CoverLeftIcon_2
	}
	return 0
}

func (x *DynOurCityModuleCover) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *DynOurCityModuleCover) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *DynOurCityModuleCover) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// 动态同城物料-描述模块
type DynOurCityModuleDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 描述信息
	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *DynOurCityModuleDesc) Reset() {
	*x = DynOurCityModuleDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModuleDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModuleDesc) ProtoMessage() {}

func (x *DynOurCityModuleDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModuleDesc.ProtoReflect.Descriptor instead.
func (*DynOurCityModuleDesc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{20}
}

func (x *DynOurCityModuleDesc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 动态同城物料-扩展部分模块
type DynOurCityModuleExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to Extend:
	//
	//	*DynOurCityModuleExtend_ExtendLbs
	Extend isDynOurCityModuleExtend_Extend `protobuf_oneof:"extend"`
}

func (x *DynOurCityModuleExtend) Reset() {
	*x = DynOurCityModuleExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModuleExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModuleExtend) ProtoMessage() {}

func (x *DynOurCityModuleExtend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModuleExtend.ProtoReflect.Descriptor instead.
func (*DynOurCityModuleExtend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{21}
}

func (x *DynOurCityModuleExtend) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *DynOurCityModuleExtend) GetExtend() isDynOurCityModuleExtend_Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (x *DynOurCityModuleExtend) GetExtendLbs() *DynOurCityModuleExtendLBS {
	if x, ok := x.GetExtend().(*DynOurCityModuleExtend_ExtendLbs); ok {
		return x.ExtendLbs
	}
	return nil
}

type isDynOurCityModuleExtend_Extend interface {
	isDynOurCityModuleExtend_Extend()
}

type DynOurCityModuleExtend_ExtendLbs struct {
	// LBS模块
	ExtendLbs *DynOurCityModuleExtendLBS `protobuf:"bytes,2,opt,name=extend_lbs,json=extendLbs,proto3,oneof"`
}

func (*DynOurCityModuleExtend_ExtendLbs) isDynOurCityModuleExtend_Extend() {}

// 动态同城物料extent-LBS模块
type DynOurCityModuleExtendLBS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType int32 `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
}

func (x *DynOurCityModuleExtendLBS) Reset() {
	*x = DynOurCityModuleExtendLBS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityModuleExtendLBS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityModuleExtendLBS) ProtoMessage() {}

func (x *DynOurCityModuleExtendLBS) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityModuleExtendLBS.ProtoReflect.Descriptor instead.
func (*DynOurCityModuleExtendLBS) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{22}
}

func (x *DynOurCityModuleExtendLBS) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynOurCityModuleExtendLBS) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynOurCityModuleExtendLBS) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DynOurCityModuleExtendLBS) GetPoiType() int32 {
	if x != nil {
		return x.PoiType
	}
	return 0
}

// 动态同城-响应
type DynOurCityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 翻页游标
	Offset string `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	// 1:有
	HasMore int32 `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 样式类型
	// 1:双列 2:瀑布流
	Style int32 `protobuf:"varint,3,opt,name=style,proto3" json:"style,omitempty"`
	// 顶导信息
	TopLabel string `protobuf:"bytes,4,opt,name=top_label,json=topLabel,proto3" json:"top_label,omitempty"`
	// 列表详情
	List []*DynOurCityItem `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
	// 顶导按钮信息
	TopButtonLabel string `protobuf:"bytes,6,opt,name=top_button_label,json=topButtonLabel,proto3" json:"top_button_label,omitempty"`
	// 城市ID
	CityId int32 `protobuf:"varint,7,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 城市名
	CityName string `protobuf:"bytes,8,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
}

func (x *DynOurCityReply) Reset() {
	*x = DynOurCityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityReply) ProtoMessage() {}

func (x *DynOurCityReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityReply.ProtoReflect.Descriptor instead.
func (*DynOurCityReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{23}
}

func (x *DynOurCityReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynOurCityReply) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *DynOurCityReply) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *DynOurCityReply) GetTopLabel() string {
	if x != nil {
		return x.TopLabel
	}
	return ""
}

func (x *DynOurCityReply) GetList() []*DynOurCityItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynOurCityReply) GetTopButtonLabel() string {
	if x != nil {
		return x.TopButtonLabel
	}
	return ""
}

func (x *DynOurCityReply) GetCityId() int32 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *DynOurCityReply) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

// 动态同城页-请求
type DynOurCityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 城市ID
	CityId int64 `protobuf:"varint,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,2,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,3,opt,name=lng,proto3" json:"lng,omitempty"`
	// 透传上一次接口请求返回的offset
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// 每页元素个数
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// 青少年模式
	// 1:开启青少年模式
	TeenagersMode int32 `protobuf:"varint,6,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 清晰度(旧版)
	Qn int32 `protobuf:"varint,7,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本(旧版)
	Fnver int32 `protobuf:"varint,8,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型(旧版)
	Fnval int32 `protobuf:"varint,9,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名(旧版)
	ForceHost int32 `protobuf:"varint,10,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k(旧版)
	Fourk int32 `protobuf:"varint,11,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 是否开启lbs
	// 0:关闭 1:开启
	LbsState int32 `protobuf:"varint,12,opt,name=lbs_state,json=lbsState,proto3" json:"lbs_state,omitempty"`
	// 是否刷新城市
	RefreshCity uint32 `protobuf:"varint,13,opt,name=refresh_city,json=refreshCity,proto3" json:"refresh_city,omitempty"`
	// 魔镜设置
	ExpConf *ExpConf `protobuf:"bytes,14,opt,name=exp_conf,json=expConf,proto3" json:"exp_conf,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,15,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 城市码
	CityCode int64 `protobuf:"varint,16,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`
	// 构建时间
	BuildTime int64 `protobuf:"varint,17,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
}

func (x *DynOurCityReq) Reset() {
	*x = DynOurCityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCityReq) ProtoMessage() {}

func (x *DynOurCityReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCityReq.ProtoReflect.Descriptor instead.
func (*DynOurCityReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{24}
}

func (x *DynOurCityReq) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *DynOurCityReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *DynOurCityReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *DynOurCityReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynOurCityReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DynOurCityReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *DynOurCityReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *DynOurCityReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *DynOurCityReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *DynOurCityReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *DynOurCityReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

func (x *DynOurCityReq) GetLbsState() int32 {
	if x != nil {
		return x.LbsState
	}
	return 0
}

func (x *DynOurCityReq) GetRefreshCity() uint32 {
	if x != nil {
		return x.RefreshCity
	}
	return 0
}

func (x *DynOurCityReq) GetExpConf() *ExpConf {
	if x != nil {
		return x.ExpConf
	}
	return nil
}

func (x *DynOurCityReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynOurCityReq) GetCityCode() int64 {
	if x != nil {
		return x.CityCode
	}
	return 0
}

func (x *DynOurCityReq) GetBuildTime() int64 {
	if x != nil {
		return x.BuildTime
	}
	return 0
}

// 动态同城开关-请求
type DynOurCitySwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开关参数
	// 0:关闭 1:开启
	Switch int32 `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
}

func (x *DynOurCitySwitchReq) Reset() {
	*x = DynOurCitySwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynOurCitySwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynOurCitySwitchReq) ProtoMessage() {}

func (x *DynOurCitySwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynOurCitySwitchReq.ProtoReflect.Descriptor instead.
func (*DynOurCitySwitchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{25}
}

func (x *DynOurCitySwitchReq) GetSwitch() int32 {
	if x != nil {
		return x.Switch
	}
	return 0
}

// 红点接口物料
type DynRedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数字红点有效 更新数
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DynRedItem) Reset() {
	*x = DynRedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRedItem) ProtoMessage() {}

func (x *DynRedItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRedItem.ProtoReflect.Descriptor instead.
func (*DynRedItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{26}
}

func (x *DynRedItem) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 红点接口-响应
type DynRedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// count:数字红点 point:普通红点 no_point:没有红点
	RedType string `protobuf:"bytes,1,opt,name=red_type,json=redType,proto3" json:"red_type,omitempty"`
	// 红点具体信息
	DynRedItem *DynRedItem `protobuf:"bytes,2,opt,name=dyn_red_item,json=dynRedItem,proto3" json:"dyn_red_item,omitempty"`
	// 默认tab 值对应tab接口下发的anchor
	DefaultTab string `protobuf:"bytes,3,opt,name=default_tab,json=defaultTab,proto3" json:"default_tab,omitempty"`
	RedStyle *DynRedStyle `protobuf:"bytes,4,opt,name=red_style,json=redStyle,proto3" json:"red_style,omitempty"`
}

func (x *DynRedReply) Reset() {
	*x = DynRedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRedReply) ProtoMessage() {}

func (x *DynRedReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRedReply.ProtoReflect.Descriptor instead.
func (*DynRedReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{27}
}

func (x *DynRedReply) GetRedType() string {
	if x != nil {
		return x.RedType
	}
	return ""
}

func (x *DynRedReply) GetDynRedItem() *DynRedItem {
	if x != nil {
		return x.DynRedItem
	}
	return nil
}

func (x *DynRedReply) GetDefaultTab() string {
	if x != nil {
		return x.DefaultTab
	}
	return ""
}

func (x *DynRedReply) GetRedStyle() *DynRedStyle {
	if x != nil {
		return x.RedStyle
	}
	return nil
}

// 动态红点接口-请求
type DynRedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态红点接口各tab offset信息
	TabOffset []*TabOffset `protobuf:"bytes,1,rep,name=tab_offset,json=tabOffset,proto3" json:"tab_offset,omitempty"`
}

func (x *DynRedReq) Reset() {
	*x = DynRedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRedReq) ProtoMessage() {}

func (x *DynRedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRedReq.ProtoReflect.Descriptor instead.
func (*DynRedReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{28}
}

func (x *DynRedReq) GetTabOffset() []*TabOffset {
	if x != nil {
		return x.TabOffset
	}
	return nil
}

type DynRedStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgType int32 `protobuf:"varint,1,opt,name=bg_type,json=bgType,proto3" json:"bg_type,omitempty"`
	CornerType int32 `protobuf:"varint,2,opt,name=corner_type,json=cornerType,proto3" json:"corner_type,omitempty"`
	DisplayTime int32 `protobuf:"varint,3,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	CornerMark string `protobuf:"bytes,4,opt,name=corner_mark,json=cornerMark,proto3" json:"corner_mark,omitempty"`
	Up *DynRedStyleUp `protobuf:"bytes,5,opt,name=up,proto3" json:"up,omitempty"`
	Type int32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DynRedStyle) Reset() {
	*x = DynRedStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRedStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRedStyle) ProtoMessage() {}

func (x *DynRedStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRedStyle.ProtoReflect.Descriptor instead.
func (*DynRedStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{29}
}

func (x *DynRedStyle) GetBgType() int32 {
	if x != nil {
		return x.BgType
	}
	return 0
}

func (x *DynRedStyle) GetCornerType() int32 {
	if x != nil {
		return x.CornerType
	}
	return 0
}

func (x *DynRedStyle) GetDisplayTime() int32 {
	if x != nil {
		return x.DisplayTime
	}
	return 0
}

func (x *DynRedStyle) GetCornerMark() string {
	if x != nil {
		return x.CornerMark
	}
	return ""
}

func (x *DynRedStyle) GetUp() *DynRedStyleUp {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *DynRedStyle) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DynRedStyleUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *DynRedStyleUp) Reset() {
	*x = DynRedStyleUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRedStyleUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRedStyleUp) ProtoMessage() {}

func (x *DynRedStyleUp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRedStyleUp.ProtoReflect.Descriptor instead.
func (*DynRedStyleUp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{30}
}

func (x *DynRedStyleUp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynRedStyleUp) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

// 动态tab详情
type DynTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tab标题 优先展示用,未开启状态第一次请求返回同城,后续请求返回对应城市名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 气泡内容
	Bubble string `protobuf:"bytes,3,opt,name=bubble,proto3" json:"bubble,omitempty"`
	// 是否推红点
	RedPoint int32 `protobuf:"varint,4,opt,name=red_point,json=redPoint,proto3" json:"red_point,omitempty"`
	// 城市ID
	CityId int64 `protobuf:"varint,5,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 是否弹窗
	IsPopup int32 `protobuf:"varint,6,opt,name=is_popup,json=isPopup,proto3" json:"is_popup,omitempty"`
	// 弹窗内容
	Popup *Popup `protobuf:"bytes,7,opt,name=popup,proto3" json:"popup,omitempty"`
	// 是否默认tab
	DefaultTab bool `protobuf:"varint,8,opt,name=defaultTab,proto3" json:"defaultTab,omitempty"`
	// 副标题 对应城市名
	SubTitle string `protobuf:"bytes,9,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 锚点字段
	Anchor string `protobuf:"bytes,10,opt,name=anchor,proto3" json:"anchor,omitempty"`
	// 内测文案
	InternalTest string `protobuf:"bytes,11,opt,name=internal_test,json=internalTest,proto3" json:"internal_test,omitempty"`
}

func (x *DynTab) Reset() {
	*x = DynTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTab) ProtoMessage() {}

func (x *DynTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTab.ProtoReflect.Descriptor instead.
func (*DynTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{31}
}

func (x *DynTab) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynTab) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynTab) GetBubble() string {
	if x != nil {
		return x.Bubble
	}
	return ""
}

func (x *DynTab) GetRedPoint() int32 {
	if x != nil {
		return x.RedPoint
	}
	return 0
}

func (x *DynTab) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *DynTab) GetIsPopup() int32 {
	if x != nil {
		return x.IsPopup
	}
	return 0
}

func (x *DynTab) GetPopup() *Popup {
	if x != nil {
		return x.Popup
	}
	return nil
}

func (x *DynTab) GetDefaultTab() bool {
	if x != nil {
		return x.DefaultTab
	}
	return false
}

func (x *DynTab) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *DynTab) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *DynTab) GetInternalTest() string {
	if x != nil {
		return x.InternalTest
	}
	return ""
}

// 动态tab页-响应
type DynTabReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态tab详情列表
	DynTab []*DynTab `protobuf:"bytes,1,rep,name=dyn_tab,json=dynTab,proto3" json:"dyn_tab,omitempty"`
}

func (x *DynTabReply) Reset() {
	*x = DynTabReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTabReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTabReply) ProtoMessage() {}

func (x *DynTabReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTabReply.ProtoReflect.Descriptor instead.
func (*DynTabReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{32}
}

func (x *DynTabReply) GetDynTab() []*DynTab {
	if x != nil {
		return x.DynTab
	}
	return nil
}

// 动态tab页-请求
type DynTabReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 青少年模式
	// 1:开启青少年模式
	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
}

func (x *DynTabReq) Reset() {
	*x = DynTabReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTabReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTabReq) ProtoMessage() {}

func (x *DynTabReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTabReq.ProtoReflect.Descriptor instead.
func (*DynTabReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{33}
}

func (x *DynTabReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

// 最近访问-标记已读-请求
type DynUpdOffsetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者的UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 用户已读进度
	ReadOffset string `protobuf:"bytes,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
}

func (x *DynUpdOffsetReq) Reset() {
	*x = DynUpdOffsetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynUpdOffsetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynUpdOffsetReq) ProtoMessage() {}

func (x *DynUpdOffsetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynUpdOffsetReq.ProtoReflect.Descriptor instead.
func (*DynUpdOffsetReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{34}
}

func (x *DynUpdOffsetReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynUpdOffsetReq) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

// 最近访问-个人feed流列表-响应
type DynVideoPersonalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移量
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	HasMore int32 `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 已读进度
	ReadOffset string `protobuf:"bytes,4,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
}

func (x *DynVideoPersonalReply) Reset() {
	*x = DynVideoPersonalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoPersonalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoPersonalReply) ProtoMessage() {}

func (x *DynVideoPersonalReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoPersonalReply.ProtoReflect.Descriptor instead.
func (*DynVideoPersonalReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{35}
}

func (x *DynVideoPersonalReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynVideoPersonalReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoPersonalReply) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *DynVideoPersonalReply) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

// 最近访问-个人feed流列表-请求
type DynVideoPersonalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 青少年模式
	// 1:开启青少年模式
	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 被访问者的mid
	HostUid int64 `protobuf:"varint,2,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 偏移量 第一页可传空
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 标明下拉几次
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// 是否是预加载
	IsPreload int32 `protobuf:"varint,5,opt,name=is_preload,json=isPreload,proto3" json:"is_preload,omitempty"`
	// 清晰度
	Qn int32 `protobuf:"varint,6,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int32 `protobuf:"varint,7,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型
	Fnval int32 `protobuf:"varint,8,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名
	ForceHost int32 `protobuf:"varint,9,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k
	Fourk int32 `protobuf:"varint,10,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *DynVideoPersonalReq) Reset() {
	*x = DynVideoPersonalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoPersonalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoPersonalReq) ProtoMessage() {}

func (x *DynVideoPersonalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoPersonalReq.ProtoReflect.Descriptor instead.
func (*DynVideoPersonalReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{36}
}

func (x *DynVideoPersonalReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *DynVideoPersonalReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynVideoPersonalReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoPersonalReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynVideoPersonalReq) GetIsPreload() int32 {
	if x != nil {
		return x.IsPreload
	}
	return 0
}

func (x *DynVideoPersonalReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *DynVideoPersonalReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *DynVideoPersonalReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *DynVideoPersonalReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *DynVideoPersonalReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

// 动态视频页-请求
type DynVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 透传 update_baseline
	UpdateBaseline string `protobuf:"bytes,2,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 透传 history_offset
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// 刷新方式
	// 1:向上刷新 2:向下翻页
	RefreshType int32 `protobuf:"varint,5,opt,name=refresh_type,json=refreshType,proto3" json:"refresh_type,omitempty"`
	// 清晰度
	Qn int32 `protobuf:"varint,6,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int32 `protobuf:"varint,7,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型
	Fnval int32 `protobuf:"varint,8,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名
	ForceHost int32 `protobuf:"varint,9,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk int32 `protobuf:"varint,10,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *DynVideoReq) Reset() {
	*x = DynVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoReq) ProtoMessage() {}

func (x *DynVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoReq.ProtoReflect.Descriptor instead.
func (*DynVideoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{37}
}

func (x *DynVideoReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *DynVideoReq) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *DynVideoReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynVideoReq) GetRefreshType() int32 {
	if x != nil {
		return x.RefreshType
	}
	return 0
}

func (x *DynVideoReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *DynVideoReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *DynVideoReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *DynVideoReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *DynVideoReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

// 动态视频页-响应
type DynVideoReqReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新的动态数
	UpdateNum int32 `protobuf:"varint,2,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,3,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 更新基础信息
	UpdateBaseline string `protobuf:"bytes,4,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 是否还有更多数据
	HasMore int32 `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *DynVideoReqReply) Reset() {
	*x = DynVideoReqReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoReqReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoReqReply) ProtoMessage() {}

func (x *DynVideoReqReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoReqReply.ProtoReflect.Descriptor instead.
func (*DynVideoReqReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{38}
}

func (x *DynVideoReqReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynVideoReqReply) GetUpdateNum() int32 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

func (x *DynVideoReqReply) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *DynVideoReqReply) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *DynVideoReqReply) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

// 魔镜实验配置项
type Exp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 实验名
	ExpName string `protobuf:"bytes,1,opt,name=exp_name,json=expName,proto3" json:"exp_name,omitempty"`
	// 实验组
	ExpGroup string `protobuf:"bytes,2,opt,name=exp_group,json=expGroup,proto3" json:"exp_group,omitempty"`
}

func (x *Exp) Reset() {
	*x = Exp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exp) ProtoMessage() {}

func (x *Exp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exp.ProtoReflect.Descriptor instead.
func (*Exp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{39}
}

func (x *Exp) GetExpName() string {
	if x != nil {
		return x.ExpName
	}
	return ""
}

func (x *Exp) GetExpGroup() string {
	if x != nil {
		return x.ExpGroup
	}
	return ""
}

// 魔镜设置
type ExpConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是魔镜请求
	ExpEnable int32 `protobuf:"varint,1,opt,name=exp_enable,json=expEnable,proto3" json:"exp_enable,omitempty"`
	// 实验配置
	Exps []*Exp `protobuf:"bytes,2,rep,name=exps,proto3" json:"exps,omitempty"`
}

func (x *ExpConf) Reset() {
	*x = ExpConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpConf) ProtoMessage() {}

func (x *ExpConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpConf.ProtoReflect.Descriptor instead.
func (*ExpConf) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{40}
}

func (x *ExpConf) GetExpEnable() int32 {
	if x != nil {
		return x.ExpEnable
	}
	return 0
}

func (x *ExpConf) GetExps() []*Exp {
	if x != nil {
		return x.Exps
	}
	return nil
}

// 拓展
type Extend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// topic:话题小卡 lbs:lbs hot:热门视频 game:游戏
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// 卡片详情
	//
	// Types that are assignable to Extend:
	//
	//	*Extend_ExtInfoTopic
	//	*Extend_ExtInfoLbs
	//	*Extend_ExtInfoHot
	//	*Extend_ExtInfoGame
	Extend isExtend_Extend `protobuf_oneof:"extend"`
}

func (x *Extend) Reset() {
	*x = Extend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extend) ProtoMessage() {}

func (x *Extend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extend.ProtoReflect.Descriptor instead.
func (*Extend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{41}
}

func (x *Extend) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *Extend) GetExtend() isExtend_Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (x *Extend) GetExtInfoTopic() *ExtInfoTopic {
	if x, ok := x.GetExtend().(*Extend_ExtInfoTopic); ok {
		return x.ExtInfoTopic
	}
	return nil
}

func (x *Extend) GetExtInfoLbs() *ExtInfoLBS {
	if x, ok := x.GetExtend().(*Extend_ExtInfoLbs); ok {
		return x.ExtInfoLbs
	}
	return nil
}

func (x *Extend) GetExtInfoHot() *ExtInfoHot {
	if x, ok := x.GetExtend().(*Extend_ExtInfoHot); ok {
		return x.ExtInfoHot
	}
	return nil
}

func (x *Extend) GetExtInfoGame() *ExtInfoGame {
	if x, ok := x.GetExtend().(*Extend_ExtInfoGame); ok {
		return x.ExtInfoGame
	}
	return nil
}

type isExtend_Extend interface {
	isExtend_Extend()
}

type Extend_ExtInfoTopic struct {
	// 话题小卡
	ExtInfoTopic *ExtInfoTopic `protobuf:"bytes,2,opt,name=ext_info_topic,json=extInfoTopic,proto3,oneof"`
}

type Extend_ExtInfoLbs struct {
	// lbs
	ExtInfoLbs *ExtInfoLBS `protobuf:"bytes,3,opt,name=ext_info_lbs,json=extInfoLbs,proto3,oneof"`
}

type Extend_ExtInfoHot struct {
	// 热门视频
	ExtInfoHot *ExtInfoHot `protobuf:"bytes,4,opt,name=ext_info_hot,json=extInfoHot,proto3,oneof"`
}

type Extend_ExtInfoGame struct {
	// 游戏
	ExtInfoGame *ExtInfoGame `protobuf:"bytes,5,opt,name=ext_info_game,json=extInfoGame,proto3,oneof"`
}

func (*Extend_ExtInfoTopic) isExtend_Extend() {}

func (*Extend_ExtInfoLbs) isExtend_Extend() {}

func (*Extend_ExtInfoHot) isExtend_Extend() {}

func (*Extend_ExtInfoGame) isExtend_Extend() {}

// 拓展信息-游戏小卡
type ExtInfoGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoGame) Reset() {
	*x = ExtInfoGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoGame) ProtoMessage() {}

func (x *ExtInfoGame) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoGame.ProtoReflect.Descriptor instead.
func (*ExtInfoGame) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{42}
}

func (x *ExtInfoGame) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoGame) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoGame) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 拓展信息-热门视频
type ExtInfoHot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoHot) Reset() {
	*x = ExtInfoHot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoHot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoHot) ProtoMessage() {}

func (x *ExtInfoHot) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoHot.ProtoReflect.Descriptor instead.
func (*ExtInfoHot) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{43}
}

func (x *ExtInfoHot) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoHot) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoHot) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 拓展信息-lbs
type ExtInfoLBS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType int32 `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
}

func (x *ExtInfoLBS) Reset() {
	*x = ExtInfoLBS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoLBS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoLBS) ProtoMessage() {}

func (x *ExtInfoLBS) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoLBS.ProtoReflect.Descriptor instead.
func (*ExtInfoLBS) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{44}
}

func (x *ExtInfoLBS) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoLBS) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoLBS) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ExtInfoLBS) GetPoiType() int32 {
	if x != nil {
		return x.PoiType
	}
	return 0
}

// 拓展信息-话题小卡
type ExtInfoTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题-话题名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoTopic) Reset() {
	*x = ExtInfoTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoTopic) ProtoMessage() {}

func (x *ExtInfoTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoTopic.ProtoReflect.Descriptor instead.
func (*ExtInfoTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{45}
}

func (x *ExtInfoTopic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoTopic) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoTopic) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 我的追番列表Item
type FollowListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// season_id
	SeasonId int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 最新ep
	NewEp *NewEP `protobuf:"bytes,5,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
}

func (x *FollowListItem) Reset() {
	*x = FollowListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowListItem) ProtoMessage() {}

func (x *FollowListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowListItem.ProtoReflect.Descriptor instead.
func (*FollowListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{46}
}

func (x *FollowListItem) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *FollowListItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FollowListItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FollowListItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FollowListItem) GetNewEp() *NewEP {
	if x != nil {
		return x.NewEp
	}
	return nil
}

// 位置定位-响应
type GeoCoderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 以行政区划+道路+门牌号等信息组成的标准格式化地址
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// 地址部件，address不满足需求时可自行拼接
	AddressComponent *AddressComponent `protobuf:"bytes,2,opt,name=address_component,json=addressComponent,proto3" json:"address_component,omitempty"`
	// 行政区划信息
	AdInfo *AdInfo `protobuf:"bytes,3,opt,name=ad_info,json=adInfo,proto3" json:"ad_info,omitempty"`
}

func (x *GeoCoderReply) Reset() {
	*x = GeoCoderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoCoderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoCoderReply) ProtoMessage() {}

func (x *GeoCoderReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoCoderReply.ProtoReflect.Descriptor instead.
func (*GeoCoderReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{47}
}

func (x *GeoCoderReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GeoCoderReply) GetAddressComponent() *AddressComponent {
	if x != nil {
		return x.AddressComponent
	}
	return nil
}

func (x *GeoCoderReply) GetAdInfo() *AdInfo {
	if x != nil {
		return x.AdInfo
	}
	return nil
}

// 位置定位-请求
type GeoCoderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 纬度
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	// 页面来源
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *GeoCoderReq) Reset() {
	*x = GeoCoderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoCoderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoCoderReq) ProtoMessage() {}

func (x *GeoCoderReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoCoderReq.ProtoReflect.Descriptor instead.
func (*GeoCoderReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{48}
}

func (x *GeoCoderReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GeoCoderReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *GeoCoderReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// 行政区划中心点坐标
type Gps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 纬度
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *Gps) Reset() {
	*x = Gps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gps) ProtoMessage() {}

func (x *Gps) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gps.ProtoReflect.Descriptor instead.
func (*Gps) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{49}
}

func (x *Gps) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Gps) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

// 点赞动画
type LikeAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始动画
	Begin string `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// 过程动画
	Proc string `protobuf:"bytes,2,opt,name=proc,proto3" json:"proc,omitempty"`
	// 结束动画
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// id
	LikeIconId int64 `protobuf:"varint,4,opt,name=like_icon_id,json=likeIconId,proto3" json:"like_icon_id,omitempty"`
}

func (x *LikeAnimation) Reset() {
	*x = LikeAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAnimation) ProtoMessage() {}

func (x *LikeAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeAnimation.ProtoReflect.Descriptor instead.
func (*LikeAnimation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{50}
}

func (x *LikeAnimation) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *LikeAnimation) GetProc() string {
	if x != nil {
		return x.Proc
	}
	return ""
}

func (x *LikeAnimation) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LikeAnimation) GetLikeIconId() int64 {
	if x != nil {
		return x.LikeIconId
	}
	return 0
}

// 点赞拓展信息
type LikeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 点赞动画
	Animation *LikeAnimation `protobuf:"bytes,1,opt,name=animation,proto3" json:"animation,omitempty"`
	// 是否点赞
	IsLike int32 `protobuf:"varint,2,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
}

func (x *LikeInfo) Reset() {
	*x = LikeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeInfo) ProtoMessage() {}

func (x *LikeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeInfo.ProtoReflect.Descriptor instead.
func (*LikeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{51}
}

func (x *LikeInfo) GetAnimation() *LikeAnimation {
	if x != nil {
		return x.Animation
	}
	return nil
}

func (x *LikeInfo) GetIsLike() int32 {
	if x != nil {
		return x.IsLike
	}
	return 0
}

// 点赞用户
type LikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *LikeUser) Reset() {
	*x = LikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeUser) ProtoMessage() {}

func (x *LikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeUser.ProtoReflect.Descriptor instead.
func (*LikeUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{52}
}

func (x *LikeUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LikeUser) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *LikeUser) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 直播信息
type LiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否在直播
	// 0:未直播 1:正在直播
	IsLiving int32 `protobuf:"varint,1,opt,name=is_living,json=isLiving,proto3" json:"is_living,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *LiveInfo) Reset() {
	*x = LiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveInfo) ProtoMessage() {}

func (x *LiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveInfo.ProtoReflect.Descriptor instead.
func (*LiveInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{53}
}

func (x *LiveInfo) GetIsLiving() int32 {
	if x != nil {
		return x.IsLiving
	}
	return 0
}

func (x *LiveInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 查看更多-列表单条数据
type MixUpListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 特别关注
	// 0:否 1:是
	SpecialAttention int32 `protobuf:"varint,2,opt,name=special_attention,json=specialAttention,proto3" json:"special_attention,omitempty"`
	// 小红点状态
	// 0:没有 1:有
	ReddotState int32 `protobuf:"varint,3,opt,name=reddot_state,json=reddotState,proto3" json:"reddot_state,omitempty"`
	// 直播信息
	LiveInfo *MixUpListLiveItem `protobuf:"bytes,4,opt,name=live_info,json=liveInfo,proto3" json:"live_info,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,6,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,9,opt,name=relation,proto3" json:"relation,omitempty"`
	PremiereState int32 `protobuf:"varint,10,opt,name=premiere_state,json=premiereState,proto3" json:"premiere_state,omitempty"`
	Uri string `protobuf:"bytes,11,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *MixUpListItem) Reset() {
	*x = MixUpListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixUpListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixUpListItem) ProtoMessage() {}

func (x *MixUpListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixUpListItem.ProtoReflect.Descriptor instead.
func (*MixUpListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{54}
}

func (x *MixUpListItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MixUpListItem) GetSpecialAttention() int32 {
	if x != nil {
		return x.SpecialAttention
	}
	return 0
}

func (x *MixUpListItem) GetReddotState() int32 {
	if x != nil {
		return x.ReddotState
	}
	return 0
}

func (x *MixUpListItem) GetLiveInfo() *MixUpListLiveItem {
	if x != nil {
		return x.LiveInfo
	}
	return nil
}

func (x *MixUpListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MixUpListItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *MixUpListItem) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *MixUpListItem) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *MixUpListItem) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *MixUpListItem) GetPremiereState() int32 {
	if x != nil {
		return x.PremiereState
	}
	return 0
}

func (x *MixUpListItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 直播信息
type MixUpListLiveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 直播状态
	// 0:未直播 1:直播中
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 房间号
	RoomId int64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *MixUpListLiveItem) Reset() {
	*x = MixUpListLiveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixUpListLiveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixUpListLiveItem) ProtoMessage() {}

func (x *MixUpListLiveItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixUpListLiveItem.ProtoReflect.Descriptor instead.
func (*MixUpListLiveItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{55}
}

func (x *MixUpListLiveItem) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *MixUpListLiveItem) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *MixUpListLiveItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 模块
type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// fold:折叠 author:发布人 dynamic:动态卡片内容 state:计数信息 forward:转发 extend:小卡信息 dispute:争议小黄条 desc:描述信息
	// likeUser:点赞用户 upList:最近访问列表 followList:我的追番
	ModuleType string `protobuf:"bytes,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	// Types that are assignable to ModuleItem:
	//
	//	*Module_ModuleFold
	//	*Module_ModuleAuthor
	//	*Module_ModuleDynamic
	//	*Module_ModuleState
	//	*Module_ModuleForward
	//	*Module_ModuleExtend
	//	*Module_ModuleDispute
	//	*Module_ModuleDesc
	//	*Module_ModuleLikeUser
	//	*Module_ModuleUpList
	//	*Module_ModuleFollowList
	ModuleItem isModule_ModuleItem `protobuf_oneof:"module_item"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{56}
}

func (x *Module) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (m *Module) GetModuleItem() isModule_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (x *Module) GetModuleFold() *ModuleFold {
	if x, ok := x.GetModuleItem().(*Module_ModuleFold); ok {
		return x.ModuleFold
	}
	return nil
}

func (x *Module) GetModuleAuthor() *ModuleAuthor {
	if x, ok := x.GetModuleItem().(*Module_ModuleAuthor); ok {
		return x.ModuleAuthor
	}
	return nil
}

func (x *Module) GetModuleDynamic() *ModuleDynamic {
	if x, ok := x.GetModuleItem().(*Module_ModuleDynamic); ok {
		return x.ModuleDynamic
	}
	return nil
}

func (x *Module) GetModuleState() *ModuleState {
	if x, ok := x.GetModuleItem().(*Module_ModuleState); ok {
		return x.ModuleState
	}
	return nil
}

func (x *Module) GetModuleForward() *ModuleForward {
	if x, ok := x.GetModuleItem().(*Module_ModuleForward); ok {
		return x.ModuleForward
	}
	return nil
}

func (x *Module) GetModuleExtend() *ModuleExtend {
	if x, ok := x.GetModuleItem().(*Module_ModuleExtend); ok {
		return x.ModuleExtend
	}
	return nil
}

func (x *Module) GetModuleDispute() *ModuleDispute {
	if x, ok := x.GetModuleItem().(*Module_ModuleDispute); ok {
		return x.ModuleDispute
	}
	return nil
}

func (x *Module) GetModuleDesc() *ModuleDesc {
	if x, ok := x.GetModuleItem().(*Module_ModuleDesc); ok {
		return x.ModuleDesc
	}
	return nil
}

func (x *Module) GetModuleLikeUser() *ModuleLikeUser {
	if x, ok := x.GetModuleItem().(*Module_ModuleLikeUser); ok {
		return x.ModuleLikeUser
	}
	return nil
}

func (x *Module) GetModuleUpList() *ModuleDynUpList {
	if x, ok := x.GetModuleItem().(*Module_ModuleUpList); ok {
		return x.ModuleUpList
	}
	return nil
}

func (x *Module) GetModuleFollowList() *ModuleFollowList {
	if x, ok := x.GetModuleItem().(*Module_ModuleFollowList); ok {
		return x.ModuleFollowList
	}
	return nil
}

type isModule_ModuleItem interface {
	isModule_ModuleItem()
}

type Module_ModuleFold struct {
	// 折叠
	ModuleFold *ModuleFold `protobuf:"bytes,2,opt,name=module_fold,json=moduleFold,proto3,oneof"`
}

type Module_ModuleAuthor struct {
	// 发布人
	ModuleAuthor *ModuleAuthor `protobuf:"bytes,3,opt,name=module_author,json=moduleAuthor,proto3,oneof"`
}

type Module_ModuleDynamic struct {
	// 动态卡片内容
	ModuleDynamic *ModuleDynamic `protobuf:"bytes,4,opt,name=module_dynamic,json=moduleDynamic,proto3,oneof"`
}

type Module_ModuleState struct {
	// 计数信息
	ModuleState *ModuleState `protobuf:"bytes,5,opt,name=module_state,json=moduleState,proto3,oneof"`
}

type Module_ModuleForward struct {
	// 转发
	ModuleForward *ModuleForward `protobuf:"bytes,6,opt,name=module_forward,json=moduleForward,proto3,oneof"`
}

type Module_ModuleExtend struct {
	// 小卡信息
	ModuleExtend *ModuleExtend `protobuf:"bytes,7,opt,name=module_extend,json=moduleExtend,proto3,oneof"`
}

type Module_ModuleDispute struct {
	// 争议小黄条
	ModuleDispute *ModuleDispute `protobuf:"bytes,8,opt,name=module_dispute,json=moduleDispute,proto3,oneof"`
}

type Module_ModuleDesc struct {
	// 描述信息
	ModuleDesc *ModuleDesc `protobuf:"bytes,9,opt,name=module_desc,json=moduleDesc,proto3,oneof"`
}

type Module_ModuleLikeUser struct {
	// 点赞用户
	ModuleLikeUser *ModuleLikeUser `protobuf:"bytes,10,opt,name=module_likeUser,json=moduleLikeUser,proto3,oneof"`
}

type Module_ModuleUpList struct {
	// 最近访问列表
	ModuleUpList *ModuleDynUpList `protobuf:"bytes,11,opt,name=module_upList,json=moduleUpList,proto3,oneof"`
}

type Module_ModuleFollowList struct {
	// 我的追番
	ModuleFollowList *ModuleFollowList `protobuf:"bytes,12,opt,name=module_followList,json=moduleFollowList,proto3,oneof"`
}

func (*Module_ModuleFold) isModule_ModuleItem() {}

func (*Module_ModuleAuthor) isModule_ModuleItem() {}

func (*Module_ModuleDynamic) isModule_ModuleItem() {}

func (*Module_ModuleState) isModule_ModuleItem() {}

func (*Module_ModuleForward) isModule_ModuleItem() {}

func (*Module_ModuleExtend) isModule_ModuleItem() {}

func (*Module_ModuleDispute) isModule_ModuleItem() {}

func (*Module_ModuleDesc) isModule_ModuleItem() {}

func (*Module_ModuleLikeUser) isModule_ModuleItem() {}

func (*Module_ModuleUpList) isModule_ModuleItem() {}

func (*Module_ModuleFollowList) isModule_ModuleItem() {}

// 作者信息模块
type ModuleAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 时间标签
	PtimeLabelText string `protobuf:"bytes,2,opt,name=ptime_label_text,json=ptimeLabelText,proto3" json:"ptime_label_text,omitempty"`
	// 用户详情
	Author *UserInfo `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// 装扮卡片
	DecorateCard *DecorateCard `protobuf:"bytes,4,opt,name=decorate_card,json=decorateCard,proto3" json:"decorate_card,omitempty"`
}

func (x *ModuleAuthor) Reset() {
	*x = ModuleAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAuthor) ProtoMessage() {}

func (x *ModuleAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAuthor.ProtoReflect.Descriptor instead.
func (*ModuleAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{57}
}

func (x *ModuleAuthor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleAuthor) GetPtimeLabelText() string {
	if x != nil {
		return x.PtimeLabelText
	}
	return ""
}

func (x *ModuleAuthor) GetAuthor() *UserInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ModuleAuthor) GetDecorateCard() *DecorateCard {
	if x != nil {
		return x.DecorateCard
	}
	return nil
}

// 文本内容模块
type ModuleDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文本描述
	Desc []*Description `protobuf:"bytes,1,rep,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ModuleDesc) Reset() {
	*x = ModuleDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDesc) ProtoMessage() {}

func (x *ModuleDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDesc.ProtoReflect.Descriptor instead.
func (*ModuleDesc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{58}
}

func (x *ModuleDesc) GetDesc() []*Description {
	if x != nil {
		return x.Desc
	}
	return nil
}

// 争议小黄条模块
type ModuleDispute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述内容
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *ModuleDispute) Reset() {
	*x = ModuleDispute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDispute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDispute) ProtoMessage() {}

func (x *ModuleDispute) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDispute.ProtoReflect.Descriptor instead.
func (*ModuleDispute) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{59}
}

func (x *ModuleDispute) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleDispute) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ModuleDispute) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态详情模块
type ModuleDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	// ugc:ugc卡 pgc:pgc卡 currSeason:付费课程系列 currBatch:付费课程批次
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 正文卡片
	//
	// Types that are assignable to Card:
	//
	//	*ModuleDynamic_CardUgc
	//	*ModuleDynamic_CardPgc
	//	*ModuleDynamic_CardCurrSeason
	//	*ModuleDynamic_CardCurrBatch
	Card isModuleDynamic_Card `protobuf_oneof:"card"`
}

func (x *ModuleDynamic) Reset() {
	*x = ModuleDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDynamic) ProtoMessage() {}

func (x *ModuleDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDynamic.ProtoReflect.Descriptor instead.
func (*ModuleDynamic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{60}
}

func (x *ModuleDynamic) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (m *ModuleDynamic) GetCard() isModuleDynamic_Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (x *ModuleDynamic) GetCardUgc() *CardUGC {
	if x, ok := x.GetCard().(*ModuleDynamic_CardUgc); ok {
		return x.CardUgc
	}
	return nil
}

func (x *ModuleDynamic) GetCardPgc() *CardPGC {
	if x, ok := x.GetCard().(*ModuleDynamic_CardPgc); ok {
		return x.CardPgc
	}
	return nil
}

func (x *ModuleDynamic) GetCardCurrSeason() *CardCurrSeason {
	if x, ok := x.GetCard().(*ModuleDynamic_CardCurrSeason); ok {
		return x.CardCurrSeason
	}
	return nil
}

func (x *ModuleDynamic) GetCardCurrBatch() *CardCurrBatch {
	if x, ok := x.GetCard().(*ModuleDynamic_CardCurrBatch); ok {
		return x.CardCurrBatch
	}
	return nil
}

type isModuleDynamic_Card interface {
	isModuleDynamic_Card()
}

type ModuleDynamic_CardUgc struct {
	// ugc卡
	CardUgc *CardUGC `protobuf:"bytes,2,opt,name=card_ugc,json=cardUgc,proto3,oneof"`
}

type ModuleDynamic_CardPgc struct {
	// pgc卡
	CardPgc *CardPGC `protobuf:"bytes,3,opt,name=card_pgc,json=cardPgc,proto3,oneof"`
}

type ModuleDynamic_CardCurrSeason struct {
	// 付费课程系列
	CardCurrSeason *CardCurrSeason `protobuf:"bytes,4,opt,name=card_curr_season,json=cardCurrSeason,proto3,oneof"`
}

type ModuleDynamic_CardCurrBatch struct {
	// 付费课程批次
	CardCurrBatch *CardCurrBatch `protobuf:"bytes,5,opt,name=card_curr_batch,json=cardCurrBatch,proto3,oneof"`
}

func (*ModuleDynamic_CardUgc) isModuleDynamic_Card() {}

func (*ModuleDynamic_CardPgc) isModuleDynamic_Card() {}

func (*ModuleDynamic_CardCurrSeason) isModuleDynamic_Card() {}

func (*ModuleDynamic_CardCurrBatch) isModuleDynamic_Card() {}

// 最近访问up主列表
type ModuleDynUpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题展示文案
	ModuleTitle string `protobuf:"bytes,1,opt,name=module_title,json=moduleTitle,proto3" json:"module_title,omitempty"`
	// “全部”按钮文案
	ShowAll string `protobuf:"bytes,2,opt,name=show_all,json=showAll,proto3" json:"show_all,omitempty"`
	// up主列表
	List []*UpListItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ModuleDynUpList) Reset() {
	*x = ModuleDynUpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDynUpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDynUpList) ProtoMessage() {}

func (x *ModuleDynUpList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDynUpList.ProtoReflect.Descriptor instead.
func (*ModuleDynUpList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{61}
}

func (x *ModuleDynUpList) GetModuleTitle() string {
	if x != nil {
		return x.ModuleTitle
	}
	return ""
}

func (x *ModuleDynUpList) GetShowAll() string {
	if x != nil {
		return x.ShowAll
	}
	return ""
}

func (x *ModuleDynUpList) GetList() []*UpListItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 拓展信息
type ModuleExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 拓展
	Extend []*Extend `protobuf:"bytes,1,rep,name=extend,proto3" json:"extend,omitempty"`
}

func (x *ModuleExtend) Reset() {
	*x = ModuleExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleExtend) ProtoMessage() {}

func (x *ModuleExtend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleExtend.ProtoReflect.Descriptor instead.
func (*ModuleExtend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{62}
}

func (x *ModuleExtend) GetExtend() []*Extend {
	if x != nil {
		return x.Extend
	}
	return nil
}

// 折叠模块
type ModuleFold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 折叠分类(该字段废弃)
	FoldType int32 `protobuf:"varint,1,opt,name=fold_type,json=foldType,proto3" json:"fold_type,omitempty"`
	// 折叠文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 被折叠的动态
	FoldIds string `protobuf:"bytes,3,opt,name=fold_ids,json=foldIds,proto3" json:"fold_ids,omitempty"`
	// 被折叠的用户信息
	FoldUsers []*UserInfo `protobuf:"bytes,4,rep,name=fold_users,json=foldUsers,proto3" json:"fold_users,omitempty"`
	// 折叠分类
	FoldTypeV2 FoldType `protobuf:"varint,5,opt,name=fold_type_v2,json=foldTypeV2,proto3,enum=bilibili.app.dynamic.v1.FoldType" json:"fold_type_v2,omitempty"`
}

func (x *ModuleFold) Reset() {
	*x = ModuleFold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleFold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleFold) ProtoMessage() {}

func (x *ModuleFold) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleFold.ProtoReflect.Descriptor instead.
func (*ModuleFold) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{63}
}

func (x *ModuleFold) GetFoldType() int32 {
	if x != nil {
		return x.FoldType
	}
	return 0
}

func (x *ModuleFold) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ModuleFold) GetFoldIds() string {
	if x != nil {
		return x.FoldIds
	}
	return ""
}

func (x *ModuleFold) GetFoldUsers() []*UserInfo {
	if x != nil {
		return x.FoldUsers
	}
	return nil
}

func (x *ModuleFold) GetFoldTypeV2() FoldType {
	if x != nil {
		return x.FoldTypeV2
	}
	return FoldType_FoldTypeZero
}

// 我的追番列表
type ModuleFollowList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查看全部的跳转链接
	ViewAllLink string `protobuf:"bytes,1,opt,name=view_all_link,json=viewAllLink,proto3" json:"view_all_link,omitempty"`
	List []*FollowListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ModuleFollowList) Reset() {
	*x = ModuleFollowList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleFollowList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleFollowList) ProtoMessage() {}

func (x *ModuleFollowList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleFollowList.ProtoReflect.Descriptor instead.
func (*ModuleFollowList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{64}
}

func (x *ModuleFollowList) GetViewAllLink() string {
	if x != nil {
		return x.ViewAllLink
	}
	return ""
}

func (x *ModuleFollowList) GetList() []*FollowListItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 转发模块
type ModuleForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 嵌套模型
	Modules []*Module `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *ModuleForward) Reset() {
	*x = ModuleForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleForward) ProtoMessage() {}

func (x *ModuleForward) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleForward.ProtoReflect.Descriptor instead.
func (*ModuleForward) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{65}
}

func (x *ModuleForward) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *ModuleForward) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

// 点赞用户模块
type ModuleLikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 点赞用户
	LikeUsers []*LikeUser `protobuf:"bytes,1,rep,name=like_users,json=likeUsers,proto3" json:"like_users,omitempty"`
	// 文案
	DisplayText string `protobuf:"bytes,2,opt,name=display_text,json=displayText,proto3" json:"display_text,omitempty"`
}

func (x *ModuleLikeUser) Reset() {
	*x = ModuleLikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleLikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleLikeUser) ProtoMessage() {}

func (x *ModuleLikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleLikeUser.ProtoReflect.Descriptor instead.
func (*ModuleLikeUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{66}
}

func (x *ModuleLikeUser) GetLikeUsers() []*LikeUser {
	if x != nil {
		return x.LikeUsers
	}
	return nil
}

func (x *ModuleLikeUser) GetDisplayText() string {
	if x != nil {
		return x.DisplayText
	}
	return ""
}

// 计数信息模块
type ModuleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 转发数
	Repost int32 `protobuf:"varint,1,opt,name=repost,proto3" json:"repost,omitempty"`
	// 点赞数
	Like int32 `protobuf:"varint,2,opt,name=like,proto3" json:"like,omitempty"`
	// 评论数
	Reply int32 `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`
	// 点赞拓展信息
	LikeInfo *LikeInfo `protobuf:"bytes,4,opt,name=like_info,json=likeInfo,proto3" json:"like_info,omitempty"`
	// 禁评
	NoComment bool `protobuf:"varint,5,opt,name=no_comment,json=noComment,proto3" json:"no_comment,omitempty"`
	// 禁转
	NoForward bool `protobuf:"varint,6,opt,name=no_forward,json=noForward,proto3" json:"no_forward,omitempty"`
}

func (x *ModuleState) Reset() {
	*x = ModuleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleState) ProtoMessage() {}

func (x *ModuleState) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleState.ProtoReflect.Descriptor instead.
func (*ModuleState) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{67}
}

func (x *ModuleState) GetRepost() int32 {
	if x != nil {
		return x.Repost
	}
	return 0
}

func (x *ModuleState) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *ModuleState) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *ModuleState) GetLikeInfo() *LikeInfo {
	if x != nil {
		return x.LikeInfo
	}
	return nil
}

func (x *ModuleState) GetNoComment() bool {
	if x != nil {
		return x.NoComment
	}
	return false
}

func (x *ModuleState) GetNoForward() bool {
	if x != nil {
		return x.NoForward
	}
	return false
}

// 认证名牌
type Nameplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// nid
	Nid int64 `protobuf:"varint,1,opt,name=nid,proto3" json:"nid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片地址
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 小图地址
	ImageSmall string `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	// 等级
	Level string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	// 获取条件
	Condition string `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *Nameplate) Reset() {
	*x = Nameplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nameplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nameplate) ProtoMessage() {}

func (x *Nameplate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nameplate.ProtoReflect.Descriptor instead.
func (*Nameplate) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{68}
}

func (x *Nameplate) GetNid() int64 {
	if x != nil {
		return x.Nid
	}
	return 0
}

func (x *Nameplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Nameplate) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Nameplate) GetImageSmall() string {
	if x != nil {
		return x.ImageSmall
	}
	return ""
}

func (x *Nameplate) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Nameplate) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

// 最新ep
type NewEP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 最新话epid
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 更新至XX话
	IndexShow string `protobuf:"bytes,2,opt,name=index_show,json=indexShow,proto3" json:"index_show,omitempty"`
	// 更新剧集的封面
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *NewEP) Reset() {
	*x = NewEP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEP) ProtoMessage() {}

func (x *NewEP) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEP.ProtoReflect.Descriptor instead.
func (*NewEP) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{69}
}

func (x *NewEP) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewEP) GetIndexShow() string {
	if x != nil {
		return x.IndexShow
	}
	return ""
}

func (x *NewEP) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 空响应
type NoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReply) Reset() {
	*x = NoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReply) ProtoMessage() {}

func (x *NoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReply.ProtoReflect.Descriptor instead.
func (*NoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{70}
}

// 空请求
type NoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReq) Reset() {
	*x = NoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReq) ProtoMessage() {}

func (x *NoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReq.ProtoReflect.Descriptor instead.
func (*NoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{71}
}

// 认证信息
type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 认证类型
	// 127:未认证 0:个人 1:机构
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 认证描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	IsAtten int32 `protobuf:"varint,3,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{72}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfficialVerify) GetIsAtten() int32 {
	if x != nil {
		return x.IsAtten
	}
	return 0
}

// 动态同城点击上报-响应
type OurCityClickReportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OurCityClickReportReply) Reset() {
	*x = OurCityClickReportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OurCityClickReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OurCityClickReportReply) ProtoMessage() {}

func (x *OurCityClickReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OurCityClickReportReply.ProtoReflect.Descriptor instead.
func (*OurCityClickReportReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{73}
}

// 动态同城点击上报-请求
type OurCityClickReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态ID
	DynamicId string `protobuf:"bytes,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 城市ID
	CityId int64 `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	// 纬度
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度
	Lng float64 `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *OurCityClickReportReq) Reset() {
	*x = OurCityClickReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OurCityClickReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OurCityClickReportReq) ProtoMessage() {}

func (x *OurCityClickReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OurCityClickReportReq.ProtoReflect.Descriptor instead.
func (*OurCityClickReportReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{74}
}

func (x *OurCityClickReportReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *OurCityClickReportReq) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *OurCityClickReportReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *OurCityClickReportReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

// PGC单季信息
type PGCSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否完结
	IsFinish int32 `protobuf:"varint,1,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 类型
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PGCSeason) Reset() {
	*x = PGCSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGCSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGCSeason) ProtoMessage() {}

func (x *PGCSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGCSeason.ProtoReflect.Descriptor instead.
func (*PGCSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{75}
}

func (x *PGCSeason) GetIsFinish() int32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *PGCSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PGCSeason) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 秒开参数
type PlayerPreloadParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 清晰度
	Qn int32 `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int32 `protobuf:"varint,2,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型
	Fnval int32 `protobuf:"varint,3,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名
	ForceHost int32 `protobuf:"varint,4,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k
	Fourk int32 `protobuf:"varint,5,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *PlayerPreloadParams) Reset() {
	*x = PlayerPreloadParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPreloadParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPreloadParams) ProtoMessage() {}

func (x *PlayerPreloadParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPreloadParams.ProtoReflect.Descriptor instead.
func (*PlayerPreloadParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{76}
}

func (x *PlayerPreloadParams) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayerPreloadParams) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayerPreloadParams) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayerPreloadParams) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayerPreloadParams) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

// 动态tab弹窗详情
type Popup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 文案
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 文案附加跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Popup) Reset() {
	*x = Popup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup) ProtoMessage() {}

func (x *Popup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup.ProtoReflect.Descriptor instead.
func (*Popup) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{77}
}

func (x *Popup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Popup) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Popup) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 关注关系
type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关注状态
	Status RelationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v1.RelationStatus" json:"status,omitempty"`
	// 关注
	IsFollow int32 `protobuf:"varint,2,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	// 被关注
	IsFollowed int32 `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	// 文案
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{78}
}

func (x *Relation) GetStatus() RelationStatus {
	if x != nil {
		return x.Status
	}
	return RelationStatus_relation_status_none
}

func (x *Relation) GetIsFollow() int32 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *Relation) GetIsFollowed() int32 {
	if x != nil {
		return x.IsFollowed
	}
	return 0
}

func (x *Relation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 分享需要
type ShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 稿件bvid
	Bvid string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 稿件封面
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// up mid
	Mid int64 `protobuf:"varint,6,opt,name=mid,proto3" json:"mid,omitempty"`
	// up昵称
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ShareInfo) Reset() {
	*x = ShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareInfo) ProtoMessage() {}

func (x *ShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareInfo.ProtoReflect.Descriptor instead.
func (*ShareInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{79}
}

func (x *ShareInfo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ShareInfo) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ShareInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShareInfo) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ShareInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ShareInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ShareInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 小视频卡片项
type SVideoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	// av:稿件视频
	CardType string `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 模块内容
	Modules []*SVideoModule `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
	// 动态ID str
	DynIdStr string `protobuf:"bytes,3,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
	// 卡片游标
	Index int64 `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *SVideoItem) Reset() {
	*x = SVideoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoItem) ProtoMessage() {}

func (x *SVideoItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoItem.ProtoReflect.Descriptor instead.
func (*SVideoItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{80}
}

func (x *SVideoItem) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *SVideoItem) GetModules() []*SVideoModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *SVideoItem) GetDynIdStr() string {
	if x != nil {
		return x.DynIdStr
	}
	return ""
}

func (x *SVideoItem) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// 小视频模块
type SVideoModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// author:发布人 player:播放器内容 desc:描述信息 stat:计数信息
	ModuleType string `protobuf:"bytes,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	// Types that are assignable to ModuleItem:
	//
	//	*SVideoModule_ModuleAuthor
	//	*SVideoModule_ModulePlayer
	//	*SVideoModule_ModuleDesc
	//	*SVideoModule_ModuleStat
	ModuleItem isSVideoModule_ModuleItem `protobuf_oneof:"module_item"`
}

func (x *SVideoModule) Reset() {
	*x = SVideoModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoModule) ProtoMessage() {}

func (x *SVideoModule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoModule.ProtoReflect.Descriptor instead.
func (*SVideoModule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{81}
}

func (x *SVideoModule) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (m *SVideoModule) GetModuleItem() isSVideoModule_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (x *SVideoModule) GetModuleAuthor() *SVideoModuleAuthor {
	if x, ok := x.GetModuleItem().(*SVideoModule_ModuleAuthor); ok {
		return x.ModuleAuthor
	}
	return nil
}

func (x *SVideoModule) GetModulePlayer() *SVideoModulePlayer {
	if x, ok := x.GetModuleItem().(*SVideoModule_ModulePlayer); ok {
		return x.ModulePlayer
	}
	return nil
}

func (x *SVideoModule) GetModuleDesc() *SVideoModuleDesc {
	if x, ok := x.GetModuleItem().(*SVideoModule_ModuleDesc); ok {
		return x.ModuleDesc
	}
	return nil
}

func (x *SVideoModule) GetModuleStat() *SVideoModuleStat {
	if x, ok := x.GetModuleItem().(*SVideoModule_ModuleStat); ok {
		return x.ModuleStat
	}
	return nil
}

type isSVideoModule_ModuleItem interface {
	isSVideoModule_ModuleItem()
}

type SVideoModule_ModuleAuthor struct {
	// 发布人
	ModuleAuthor *SVideoModuleAuthor `protobuf:"bytes,2,opt,name=module_author,json=moduleAuthor,proto3,oneof"`
}

type SVideoModule_ModulePlayer struct {
	// 播放器内容
	ModulePlayer *SVideoModulePlayer `protobuf:"bytes,3,opt,name=module_player,json=modulePlayer,proto3,oneof"`
}

type SVideoModule_ModuleDesc struct {
	// 描述信息
	ModuleDesc *SVideoModuleDesc `protobuf:"bytes,4,opt,name=module_desc,json=moduleDesc,proto3,oneof"`
}

type SVideoModule_ModuleStat struct {
	// 计数信息
	ModuleStat *SVideoModuleStat `protobuf:"bytes,5,opt,name=module_stat,json=moduleStat,proto3,oneof"`
}

func (*SVideoModule_ModuleAuthor) isSVideoModule_ModuleItem() {}

func (*SVideoModule_ModulePlayer) isSVideoModule_ModuleItem() {}

func (*SVideoModule_ModuleDesc) isSVideoModule_ModuleItem() {}

func (*SVideoModule_ModuleStat) isSVideoModule_ModuleItem() {}

// 作者信息模块
type SVideoModuleAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 发布描述
	PubDesc string `protobuf:"bytes,4,opt,name=pub_desc,json=pubDesc,proto3" json:"pub_desc,omitempty"`
	// 是否关注up
	// 1:已关注
	IsAttention int32 `protobuf:"varint,5,opt,name=is_attention,json=isAttention,proto3" json:"is_attention,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *SVideoModuleAuthor) Reset() {
	*x = SVideoModuleAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoModuleAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoModuleAuthor) ProtoMessage() {}

func (x *SVideoModuleAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoModuleAuthor.ProtoReflect.Descriptor instead.
func (*SVideoModuleAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{82}
}

func (x *SVideoModuleAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *SVideoModuleAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SVideoModuleAuthor) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *SVideoModuleAuthor) GetPubDesc() string {
	if x != nil {
		return x.PubDesc
	}
	return ""
}

func (x *SVideoModuleAuthor) GetIsAttention() int32 {
	if x != nil {
		return x.IsAttention
	}
	return 0
}

func (x *SVideoModuleAuthor) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 文本内容模块
type SVideoModuleDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文本内容
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *SVideoModuleDesc) Reset() {
	*x = SVideoModuleDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoModuleDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoModuleDesc) ProtoMessage() {}

func (x *SVideoModuleDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoModuleDesc.ProtoReflect.Descriptor instead.
func (*SVideoModuleDesc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{83}
}

func (x *SVideoModuleDesc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SVideoModuleDesc) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 播放器模块
type SVideoModulePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址，秒开地址如果有会拼接player_preload可参考天马
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,4,opt,name=aid,proto3" json:"aid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,5,opt,name=cid,proto3" json:"cid,omitempty"`
	// 视频时长
	Duration int64 `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,7,opt,name=dimension,proto3" json:"dimension,omitempty"`
}

func (x *SVideoModulePlayer) Reset() {
	*x = SVideoModulePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoModulePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoModulePlayer) ProtoMessage() {}

func (x *SVideoModulePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoModulePlayer.ProtoReflect.Descriptor instead.
func (*SVideoModulePlayer) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{84}
}

func (x *SVideoModulePlayer) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SVideoModulePlayer) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SVideoModulePlayer) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SVideoModulePlayer) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *SVideoModulePlayer) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SVideoModulePlayer) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SVideoModulePlayer) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

// 计数信息模块
type SVideoModuleStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计数内容
	StatInfo []*SVideoStatInfo `protobuf:"bytes,1,rep,name=stat_info,json=statInfo,proto3" json:"stat_info,omitempty"`
	// 分享需要
	ShareInfo *ShareInfo `protobuf:"bytes,2,opt,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
}

func (x *SVideoModuleStat) Reset() {
	*x = SVideoModuleStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoModuleStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoModuleStat) ProtoMessage() {}

func (x *SVideoModuleStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoModuleStat.ProtoReflect.Descriptor instead.
func (*SVideoModuleStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{85}
}

func (x *SVideoModuleStat) GetStatInfo() []*SVideoStatInfo {
	if x != nil {
		return x.StatInfo
	}
	return nil
}

func (x *SVideoModuleStat) GetShareInfo() *ShareInfo {
	if x != nil {
		return x.ShareInfo
	}
	return nil
}

// 小视频连播页-响应
type SVideoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 列表
	List []*SVideoItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 翻页游标
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	// 1:有
	HasMore int32 `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 顶部
	Top *SVideoTop `protobuf:"bytes,4,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *SVideoReply) Reset() {
	*x = SVideoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoReply) ProtoMessage() {}

func (x *SVideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoReply.ProtoReflect.Descriptor instead.
func (*SVideoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{86}
}

func (x *SVideoReply) GetList() []*SVideoItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SVideoReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *SVideoReply) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *SVideoReply) GetTop() *SVideoTop {
	if x != nil {
		return x.Top
	}
	return nil
}

// 小视频连播页-请求
type SVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前素材的id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 当前素材类型
	// 1:动态(如果有oid则必传) 2:热门分类 3:热点聚合
	Type SVideoType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.dynamic.v1.SVideoType" json:"type,omitempty"`
	// 翻页offset
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 清晰度(旧版)
	Qn int32 `protobuf:"varint,4,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本(旧版)
	Fnver int32 `protobuf:"varint,5,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型(旧版)
	Fnval int32 `protobuf:"varint,6,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名(旧版)
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k(旧版)
	Fourk int32 `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页面spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上级页面spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 秒开参数
	PlayerPreload *PlayerPreloadParams `protobuf:"bytes,11,opt,name=player_preload,json=playerPreload,proto3" json:"player_preload,omitempty"`
	// 热门进入联播页的锚点aid
	FocusAid int64 `protobuf:"varint,12,opt,name=focus_aid,json=focusAid,proto3" json:"focus_aid,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,13,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *SVideoReq) Reset() {
	*x = SVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoReq) ProtoMessage() {}

func (x *SVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoReq.ProtoReflect.Descriptor instead.
func (*SVideoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{87}
}

func (x *SVideoReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SVideoReq) GetType() SVideoType {
	if x != nil {
		return x.Type
	}
	return SVideoType_TypeNone
}

func (x *SVideoReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *SVideoReq) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *SVideoReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *SVideoReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *SVideoReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *SVideoReq) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

func (x *SVideoReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *SVideoReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *SVideoReq) GetPlayerPreload() *PlayerPreloadParams {
	if x != nil {
		return x.PlayerPreload
	}
	return nil
}

func (x *SVideoReq) GetFocusAid() int64 {
	if x != nil {
		return x.FocusAid
	}
	return 0
}

func (x *SVideoReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 计数内容
type SVideoStatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计数icon
	// 1:分享符号 2:评论符号 3:点赞符号
	Icon int32 `protobuf:"varint,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 计数值
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	// 选中状态
	// 1:选中
	Selected int32 `protobuf:"varint,3,opt,name=selected,proto3" json:"selected,omitempty"`
	// 跳转链接(如评论)
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *SVideoStatInfo) Reset() {
	*x = SVideoStatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoStatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoStatInfo) ProtoMessage() {}

func (x *SVideoStatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoStatInfo.ProtoReflect.Descriptor instead.
func (*SVideoStatInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{88}
}

func (x *SVideoStatInfo) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *SVideoStatInfo) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SVideoStatInfo) GetSelected() int32 {
	if x != nil {
		return x.Selected
	}
	return 0
}

func (x *SVideoStatInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 顶部
type SVideoTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 联播页标题
	Title string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	// 联播页导语
	Desc string `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
}

func (x *SVideoTop) Reset() {
	*x = SVideoTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SVideoTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SVideoTop) ProtoMessage() {}

func (x *SVideoTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SVideoTop.ProtoReflect.Descriptor instead.
func (*SVideoTop) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{89}
}

func (x *SVideoTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SVideoTop) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 动态红点接口各tab offset信息
type TabOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1:综合页 2:视频页
	Tab int32 `protobuf:"varint,1,opt,name=tab,proto3" json:"tab,omitempty"`
	// 上一次对应列表页offset
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *TabOffset) Reset() {
	*x = TabOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabOffset) ProtoMessage() {}

func (x *TabOffset) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabOffset.ProtoReflect.Descriptor instead.
func (*TabOffset) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{90}
}

func (x *TabOffset) GetTab() int32 {
	if x != nil {
		return x.Tab
	}
	return 0
}

func (x *TabOffset) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

// up主列表
type UpListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有更新
	// 0:没有 1:有
	HasUpdate int32 `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	// up主头像
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UpListItem) Reset() {
	*x = UpListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpListItem) ProtoMessage() {}

func (x *UpListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpListItem.ProtoReflect.Descriptor instead.
func (*UpListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{91}
}

func (x *UpListItem) GetHasUpdate() int32 {
	if x != nil {
		return x.HasUpdate
	}
	return 0
}

func (x *UpListItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UpListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpListItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 用户信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,4,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,5,opt,name=vip,proto3" json:"vip,omitempty"`
	// 直播信息
	Live *LiveInfo `protobuf:"bytes,6,opt,name=live,proto3" json:"live,omitempty"`
	// 空间页跳转链接
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// 挂件信息
	Pendant *UserPendant `protobuf:"bytes,8,opt,name=pendant,proto3" json:"pendant,omitempty"`
	// 认证名牌
	Nameplate *Nameplate `protobuf:"bytes,9,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{92}
}

func (x *UserInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UserInfo) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *UserInfo) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *UserInfo) GetLive() *LiveInfo {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *UserInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *UserInfo) GetPendant() *UserPendant {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *UserInfo) GetNameplate() *Nameplate {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

// 头像挂件信息
type UserPendant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片链接
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 有效期
	Expire int64 `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *UserPendant) Reset() {
	*x = UserPendant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPendant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPendant) ProtoMessage() {}

func (x *UserPendant) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPendant.ProtoReflect.Descriptor instead.
func (*UserPendant) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{93}
}

func (x *UserPendant) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UserPendant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPendant) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UserPendant) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

// 角标信息
type VideoBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文案颜色-日间
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 文案颜色-夜间
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景颜色-日间
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 背景颜色-夜间
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 边框颜色-日间
	BorderColor string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 边框颜色-夜间
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 样式
	BgStyle int32 `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
}

func (x *VideoBadge) Reset() {
	*x = VideoBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBadge) ProtoMessage() {}

func (x *VideoBadge) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBadge.ProtoReflect.Descriptor instead.
func (*VideoBadge) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{94}
}

func (x *VideoBadge) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VideoBadge) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *VideoBadge) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *VideoBadge) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *VideoBadge) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *VideoBadge) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *VideoBadge) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *VideoBadge) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

// 大会员信息
type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 大会员类型
	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// 大会员状态
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 到期时间
	DueDate int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	// 标签
	Label *VipLabel `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// 主题
	ThemeType int32 `protobuf:"varint,5,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{95}
}

func (x *VipInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipInfo) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *VipInfo) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *VipInfo) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

// 大会员标签
type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片地址
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP(), []int{96}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_bilibili_app_dynamic_v1_dynamic_proto protoreflect.FileDescriptor

var file_bilibili_app_dynamic_v1_dynamic_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x06, 0x41, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x03, 0x67, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x70, 0x73, 0x52, 0x03, 0x67, 0x70, 0x73, 0x22, 0xb6, 0x01,
	0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x78, 0x74, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x32, 0x12, 0x39, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x75, 0x72, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x95, 0x05,
	0x0a, 0x07, 0x43, 0x61, 0x72, 0x64, 0x50, 0x47, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29, 0x0a,
	0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x41, 0x0a,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xc9, 0x03, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x64, 0x55, 0x47,
	0x43, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x76, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x61, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x22, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x73, 0x46, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x03,
	0x66, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x52,
	0x03, 0x66, 0x61, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x51, 0x0a, 0x09,
	0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22,
	0xf9, 0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x53,
	0x74, 0x72, 0x12, 0x25, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x69,
	0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69,
	0x67, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x22, 0x4b, 0x0a, 0x0f, 0x44,
	0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65,
	0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49,
	0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f,
	0x75, 0x72, 0x6b, 0x22, 0x57, 0x0a, 0x17, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x15,
	0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x19, 0x44, 0x79,
	0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x43,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x99, 0x03, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75,
	0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x50, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x56, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75,
	0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x64, 0x0a, 0x16, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xd7, 0x02, 0x0a, 0x15, 0x44, 0x79, 0x6e, 0x4f, 0x75,
	0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12,
	0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x22, 0x2a, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x8b, 0x01, 0x0a,
	0x16, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x62, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x4c, 0x42, 0x53, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x4c, 0x62, 0x73,
	0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x72, 0x0a, 0x19, 0x44, 0x79,
	0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x4c, 0x42, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22, 0x94,
	0x02, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x70, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x6f, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x6f, 0x70, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x04, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72,
	0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x65,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x75, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x62, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x62, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x3b, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x07, 0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x4f,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x44,
	0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x22, 0x0a, 0x0a, 0x44, 0x79,
	0x6e, 0x52, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd3,
	0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x64, 0x79, 0x6e,
	0x5f, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61,
	0x62, 0x12, 0x41, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x52, 0x65, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x08, 0x72, 0x65, 0x64, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x09, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x62, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x09, 0x74, 0x61, 0x62, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4d, 0x61,
	0x72, 0x6b, 0x12, 0x36, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x55, 0x70, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x35,
	0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x55, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x61, 0x63, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x06, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x70,
	0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x50, 0x6f, 0x70, 0x75,
	0x70, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x70, 0x75, 0x70,
	0x52, 0x05, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x65, 0x73,
	0x74, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x38, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x54,
	0x61, 0x62, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x22, 0x32, 0x0a, 0x09, 0x44, 0x79,
	0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x4d,
	0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xa5, 0x01,
	0x0a, 0x15, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e,
	0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x22, 0x9d, 0x02, 0x0a, 0x0b,
	0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e,
	0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x22, 0xd6, 0x01, 0x0a, 0x10,
	0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x22, 0x3d, 0x0a, 0x03, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x78, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x5a, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x65, 0x78, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x52, 0x04, 0x65, 0x78, 0x70, 0x73, 0x22,
	0xd3, 0x02, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d,
	0x0a, 0x0e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x0c, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x47, 0x0a,
	0x0c, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x62, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x42, 0x53, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x62, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f, 0x74, 0x12,
	0x4a, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x49, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x22, 0x48, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x42, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x4a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x0e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x06, 0x6e, 0x65, 0x77,
	0x5f, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x50, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x45, 0x70,
	0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x56, 0x0a, 0x11,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45,
	0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x29, 0x0a, 0x03, 0x47, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67,
	0x22, 0x6d, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x69, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x09, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x4c, 0x69,
	0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x22, 0x39, 0x0a, 0x08, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x73, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xd3, 0x03, 0x0a, 0x0d,
	0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x64, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x64, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x47, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x78,
	0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x43, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x65, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x22, 0x56, 0x0a, 0x11, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69,
	0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xa1, 0x07, 0x0a, 0x06, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x4c, 0x0a,
	0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0d, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x49, 0x0a, 0x0c,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x52, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x55, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x55, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xcf, 0x01,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x22,
	0x46, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x38, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x4b, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x22, 0xd9, 0x02, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x67, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x55, 0x47, 0x43, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55,
	0x67, 0x63, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x67, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x50, 0x47, 0x43, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x50, 0x67,
	0x63, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x43, 0x75, 0x72, 0x72,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x75,
	0x72, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x43,
	0x75, 0x72, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x22, 0x88, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x55, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x41,
	0x6c, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x0c, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12,
	0x40, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x43, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x32, 0x22, 0x73, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x3b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x0d, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x6c,
	0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x0b,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a,
	0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6e, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x6e, 0x6f, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x09,
	0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x05, 0x4e, 0x65,
	0x77, 0x45, 0x50, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x68,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x53, 0x0a, 0x0e,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x22, 0x19, 0x0a, 0x17, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x73, 0x0a, 0x15,
	0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e,
	0x67, 0x22, 0x52, 0x0a, 0x09, 0x50, 0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e,
	0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x22, 0x43,
	0x0a, 0x05, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x53, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x53,
	0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x82, 0x03, 0x0a, 0x0c, 0x53, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x52,
	0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x4c, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9e, 0x01,
	0x0a, 0x12, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x75, 0x62, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x38,
	0x0a, 0x10, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x53, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x9b, 0x01, 0x0a, 0x10, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaf, 0x01,
	0x0a, 0x0b, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x74, 0x6f, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x6f, 0x70, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x22,
	0xd7, 0x03, 0x0a, 0x09, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12,
	0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x75, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6f, 0x63, 0x75, 0x73, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x6f, 0x63, 0x75, 0x73, 0x41, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x64, 0x0a, 0x0e, 0x53, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22,
	0x35, 0x0a, 0x09, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x22, 0x35, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x65, 0x0a,
	0x0a, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x61, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x68, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x76, 0x69, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x3e, 0x0a,
	0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12, 0x40, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22,
	0x61, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x07,
	0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x2a, 0x2f, 0x0a, 0x06, 0x42, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x62, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x62, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x10, 0x01, 0x2a, 0x53, 0x0a, 0x0a, 0x43, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x63,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x08,
	0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x6f,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x46, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x04, 0x2a, 0x67, 0x0a, 0x09, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x55, 0x47, 0x43, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x50, 0x47, 0x43, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x76, 0x65,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x56,
	0x43, 0x53, 0x10, 0x04, 0x2a, 0xc3, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x75, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x10, 0x04, 0x12, 0x1b, 0x0a,
	0x17, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x10, 0x05, 0x2a, 0x4c, 0x0a, 0x09, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x59, 0x4c, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x59, 0x4e, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x0a, 0x53, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x48, 0x6f, 0x74, 0x77, 0x6f, 0x72,
	0x64, 0x10, 0x03, 0x2a, 0xa5, 0x01, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d,
	0x69, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x72, 0x79, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x10, 0x05, 0x32, 0x8a, 0x0a, 0x0a, 0x07,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x5b, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x06, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x79, 0x6e, 0x54,
	0x61, 0x62, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e,
	0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x62, 0x0a, 0x10,
	0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75,
	0x72, 0x43, 0x69, 0x74, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5e, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x79, 0x6e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x70, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5a, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e,
	0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52,
	0x0a, 0x06, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x76,
	0x0a, 0x12, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x76, 0x0a, 0x12, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74,
	0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x72, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58,
	0x0a, 0x08, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6f, 0x43, 0x6f,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30,
	0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d,
	0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_dynamic_v1_dynamic_proto_rawDescOnce sync.Once
	file_bilibili_app_dynamic_v1_dynamic_proto_rawDescData = file_bilibili_app_dynamic_v1_dynamic_proto_rawDesc
)

func file_bilibili_app_dynamic_v1_dynamic_proto_rawDescGZIP() []byte {
	file_bilibili_app_dynamic_v1_dynamic_proto_rawDescOnce.Do(func() {
		file_bilibili_app_dynamic_v1_dynamic_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_dynamic_v1_dynamic_proto_rawDescData)
	})
	return file_bilibili_app_dynamic_v1_dynamic_proto_rawDescData
}

var file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes = make([]protoimpl.MessageInfo, 97)
var file_bilibili_app_dynamic_v1_dynamic_proto_goTypes = []interface{}{
	(BgType)(0),                       // 0: bilibili.app.dynamic.v1.BgType
	(CornerType)(0),                   // 1: bilibili.app.dynamic.v1.CornerType
	(FoldType)(0),                     // 2: bilibili.app.dynamic.v1.FoldType
	(MediaType)(0),                    // 3: bilibili.app.dynamic.v1.MediaType
	(RelationStatus)(0),               // 4: bilibili.app.dynamic.v1.RelationStatus
	(StyleType)(0),                    // 5: bilibili.app.dynamic.v1.StyleType
	(SVideoType)(0),                   // 6: bilibili.app.dynamic.v1.SVideoType
	(VideoSubType)(0),                 // 7: bilibili.app.dynamic.v1.VideoSubType
	(*AddressComponent)(nil),          // 8: bilibili.app.dynamic.v1.AddressComponent
	(*AdInfo)(nil),                    // 9: bilibili.app.dynamic.v1.AdInfo
	(*CardCurrBatch)(nil),             // 10: bilibili.app.dynamic.v1.CardCurrBatch
	(*CardCurrSeason)(nil),            // 11: bilibili.app.dynamic.v1.CardCurrSeason
	(*CardPGC)(nil),                   // 12: bilibili.app.dynamic.v1.CardPGC
	(*CardUGC)(nil),                   // 13: bilibili.app.dynamic.v1.CardUGC
	(*DecoCardFan)(nil),               // 14: bilibili.app.dynamic.v1.DecoCardFan
	(*DecorateCard)(nil),              // 15: bilibili.app.dynamic.v1.DecorateCard
	(*Description)(nil),               // 16: bilibili.app.dynamic.v1.Description
	(*Dimension)(nil),                 // 17: bilibili.app.dynamic.v1.Dimension
	(*DynamicItem)(nil),               // 18: bilibili.app.dynamic.v1.DynamicItem
	(*DynDetailsReply)(nil),           // 19: bilibili.app.dynamic.v1.DynDetailsReply
	(*DynDetailsReq)(nil),             // 20: bilibili.app.dynamic.v1.DynDetailsReq
	(*DynMixUpListSearchReply)(nil),   // 21: bilibili.app.dynamic.v1.DynMixUpListSearchReply
	(*DynMixUpListSearchReq)(nil),     // 22: bilibili.app.dynamic.v1.DynMixUpListSearchReq
	(*DynMixUpListViewMoreReply)(nil), // 23: bilibili.app.dynamic.v1.DynMixUpListViewMoreReply
	(*DynOurCityItem)(nil),            // 24: bilibili.app.dynamic.v1.DynOurCityItem
	(*DynOurCityModule)(nil),          // 25: bilibili.app.dynamic.v1.DynOurCityModule
	(*DynOurCityModuleAuthor)(nil),    // 26: bilibili.app.dynamic.v1.DynOurCityModuleAuthor
	(*DynOurCityModuleCover)(nil),     // 27: bilibili.app.dynamic.v1.DynOurCityModuleCover
	(*DynOurCityModuleDesc)(nil),      // 28: bilibili.app.dynamic.v1.DynOurCityModuleDesc
	(*DynOurCityModuleExtend)(nil),    // 29: bilibili.app.dynamic.v1.DynOurCityModuleExtend
	(*DynOurCityModuleExtendLBS)(nil), // 30: bilibili.app.dynamic.v1.DynOurCityModuleExtendLBS
	(*DynOurCityReply)(nil),           // 31: bilibili.app.dynamic.v1.DynOurCityReply
	(*DynOurCityReq)(nil),             // 32: bilibili.app.dynamic.v1.DynOurCityReq
	(*DynOurCitySwitchReq)(nil),       // 33: bilibili.app.dynamic.v1.DynOurCitySwitchReq
	(*DynRedItem)(nil),                // 34: bilibili.app.dynamic.v1.DynRedItem
	(*DynRedReply)(nil),               // 35: bilibili.app.dynamic.v1.DynRedReply
	(*DynRedReq)(nil),                 // 36: bilibili.app.dynamic.v1.DynRedReq
	(*DynRedStyle)(nil),               // 37: bilibili.app.dynamic.v1.DynRedStyle
	(*DynRedStyleUp)(nil),             // 38: bilibili.app.dynamic.v1.DynRedStyleUp
	(*DynTab)(nil),                    // 39: bilibili.app.dynamic.v1.DynTab
	(*DynTabReply)(nil),               // 40: bilibili.app.dynamic.v1.DynTabReply
	(*DynTabReq)(nil),                 // 41: bilibili.app.dynamic.v1.DynTabReq
	(*DynUpdOffsetReq)(nil),           // 42: bilibili.app.dynamic.v1.DynUpdOffsetReq
	(*DynVideoPersonalReply)(nil),     // 43: bilibili.app.dynamic.v1.DynVideoPersonalReply
	(*DynVideoPersonalReq)(nil),       // 44: bilibili.app.dynamic.v1.DynVideoPersonalReq
	(*DynVideoReq)(nil),               // 45: bilibili.app.dynamic.v1.DynVideoReq
	(*DynVideoReqReply)(nil),          // 46: bilibili.app.dynamic.v1.DynVideoReqReply
	(*Exp)(nil),                       // 47: bilibili.app.dynamic.v1.Exp
	(*ExpConf)(nil),                   // 48: bilibili.app.dynamic.v1.ExpConf
	(*Extend)(nil),                    // 49: bilibili.app.dynamic.v1.Extend
	(*ExtInfoGame)(nil),               // 50: bilibili.app.dynamic.v1.ExtInfoGame
	(*ExtInfoHot)(nil),                // 51: bilibili.app.dynamic.v1.ExtInfoHot
	(*ExtInfoLBS)(nil),                // 52: bilibili.app.dynamic.v1.ExtInfoLBS
	(*ExtInfoTopic)(nil),              // 53: bilibili.app.dynamic.v1.ExtInfoTopic
	(*FollowListItem)(nil),            // 54: bilibili.app.dynamic.v1.FollowListItem
	(*GeoCoderReply)(nil),             // 55: bilibili.app.dynamic.v1.GeoCoderReply
	(*GeoCoderReq)(nil),               // 56: bilibili.app.dynamic.v1.GeoCoderReq
	(*Gps)(nil),                       // 57: bilibili.app.dynamic.v1.Gps
	(*LikeAnimation)(nil),             // 58: bilibili.app.dynamic.v1.LikeAnimation
	(*LikeInfo)(nil),                  // 59: bilibili.app.dynamic.v1.LikeInfo
	(*LikeUser)(nil),                  // 60: bilibili.app.dynamic.v1.LikeUser
	(*LiveInfo)(nil),                  // 61: bilibili.app.dynamic.v1.LiveInfo
	(*MixUpListItem)(nil),             // 62: bilibili.app.dynamic.v1.MixUpListItem
	(*MixUpListLiveItem)(nil),         // 63: bilibili.app.dynamic.v1.MixUpListLiveItem
	(*Module)(nil),                    // 64: bilibili.app.dynamic.v1.Module
	(*ModuleAuthor)(nil),              // 65: bilibili.app.dynamic.v1.ModuleAuthor
	(*ModuleDesc)(nil),                // 66: bilibili.app.dynamic.v1.ModuleDesc
	(*ModuleDispute)(nil),             // 67: bilibili.app.dynamic.v1.ModuleDispute
	(*ModuleDynamic)(nil),             // 68: bilibili.app.dynamic.v1.ModuleDynamic
	(*ModuleDynUpList)(nil),           // 69: bilibili.app.dynamic.v1.ModuleDynUpList
	(*ModuleExtend)(nil),              // 70: bilibili.app.dynamic.v1.ModuleExtend
	(*ModuleFold)(nil),                // 71: bilibili.app.dynamic.v1.ModuleFold
	(*ModuleFollowList)(nil),          // 72: bilibili.app.dynamic.v1.ModuleFollowList
	(*ModuleForward)(nil),             // 73: bilibili.app.dynamic.v1.ModuleForward
	(*ModuleLikeUser)(nil),            // 74: bilibili.app.dynamic.v1.ModuleLikeUser
	(*ModuleState)(nil),               // 75: bilibili.app.dynamic.v1.ModuleState
	(*Nameplate)(nil),                 // 76: bilibili.app.dynamic.v1.Nameplate
	(*NewEP)(nil),                     // 77: bilibili.app.dynamic.v1.NewEP
	(*NoReply)(nil),                   // 78: bilibili.app.dynamic.v1.NoReply
	(*NoReq)(nil),                     // 79: bilibili.app.dynamic.v1.NoReq
	(*OfficialVerify)(nil),            // 80: bilibili.app.dynamic.v1.OfficialVerify
	(*OurCityClickReportReply)(nil),   // 81: bilibili.app.dynamic.v1.OurCityClickReportReply
	(*OurCityClickReportReq)(nil),     // 82: bilibili.app.dynamic.v1.OurCityClickReportReq
	(*PGCSeason)(nil),                 // 83: bilibili.app.dynamic.v1.PGCSeason
	(*PlayerPreloadParams)(nil),       // 84: bilibili.app.dynamic.v1.PlayerPreloadParams
	(*Popup)(nil),                     // 85: bilibili.app.dynamic.v1.Popup
	(*Relation)(nil),                  // 86: bilibili.app.dynamic.v1.Relation
	(*ShareInfo)(nil),                 // 87: bilibili.app.dynamic.v1.ShareInfo
	(*SVideoItem)(nil),                // 88: bilibili.app.dynamic.v1.SVideoItem
	(*SVideoModule)(nil),              // 89: bilibili.app.dynamic.v1.SVideoModule
	(*SVideoModuleAuthor)(nil),        // 90: bilibili.app.dynamic.v1.SVideoModuleAuthor
	(*SVideoModuleDesc)(nil),          // 91: bilibili.app.dynamic.v1.SVideoModuleDesc
	(*SVideoModulePlayer)(nil),        // 92: bilibili.app.dynamic.v1.SVideoModulePlayer
	(*SVideoModuleStat)(nil),          // 93: bilibili.app.dynamic.v1.SVideoModuleStat
	(*SVideoReply)(nil),               // 94: bilibili.app.dynamic.v1.SVideoReply
	(*SVideoReq)(nil),                 // 95: bilibili.app.dynamic.v1.SVideoReq
	(*SVideoStatInfo)(nil),            // 96: bilibili.app.dynamic.v1.SVideoStatInfo
	(*SVideoTop)(nil),                 // 97: bilibili.app.dynamic.v1.SVideoTop
	(*TabOffset)(nil),                 // 98: bilibili.app.dynamic.v1.TabOffset
	(*UpListItem)(nil),                // 99: bilibili.app.dynamic.v1.UpListItem
	(*UserInfo)(nil),                  // 100: bilibili.app.dynamic.v1.UserInfo
	(*UserPendant)(nil),               // 101: bilibili.app.dynamic.v1.UserPendant
	(*VideoBadge)(nil),                // 102: bilibili.app.dynamic.v1.VideoBadge
	(*VipInfo)(nil),                   // 103: bilibili.app.dynamic.v1.VipInfo
	(*VipLabel)(nil),                  // 104: bilibili.app.dynamic.v1.VipLabel
	(*v1.PlayerArgs)(nil),             // 105: bilibili.app.archive.middleware.v1.PlayerArgs
}
var file_bilibili_app_dynamic_v1_dynamic_proto_depIdxs = []int32{
	57,  // 0: bilibili.app.dynamic.v1.AdInfo.gps:type_name -> bilibili.app.dynamic.v1.Gps
	102, // 1: bilibili.app.dynamic.v1.CardCurrBatch.badge:type_name -> bilibili.app.dynamic.v1.VideoBadge
	102, // 2: bilibili.app.dynamic.v1.CardCurrSeason.badge:type_name -> bilibili.app.dynamic.v1.VideoBadge
	3,   // 3: bilibili.app.dynamic.v1.CardPGC.media_type:type_name -> bilibili.app.dynamic.v1.MediaType
	7,   // 4: bilibili.app.dynamic.v1.CardPGC.sub_type:type_name -> bilibili.app.dynamic.v1.VideoSubType
	17,  // 5: bilibili.app.dynamic.v1.CardPGC.dimension:type_name -> bilibili.app.dynamic.v1.Dimension
	102, // 6: bilibili.app.dynamic.v1.CardPGC.badge:type_name -> bilibili.app.dynamic.v1.VideoBadge
	83,  // 7: bilibili.app.dynamic.v1.CardPGC.season:type_name -> bilibili.app.dynamic.v1.PGCSeason
	3,   // 8: bilibili.app.dynamic.v1.CardUGC.media_type:type_name -> bilibili.app.dynamic.v1.MediaType
	17,  // 9: bilibili.app.dynamic.v1.CardUGC.dimension:type_name -> bilibili.app.dynamic.v1.Dimension
	102, // 10: bilibili.app.dynamic.v1.CardUGC.badge:type_name -> bilibili.app.dynamic.v1.VideoBadge
	14,  // 11: bilibili.app.dynamic.v1.DecorateCard.fan:type_name -> bilibili.app.dynamic.v1.DecoCardFan
	64,  // 12: bilibili.app.dynamic.v1.DynamicItem.modules:type_name -> bilibili.app.dynamic.v1.Module
	18,  // 13: bilibili.app.dynamic.v1.DynDetailsReply.list:type_name -> bilibili.app.dynamic.v1.DynamicItem
	62,  // 14: bilibili.app.dynamic.v1.DynMixUpListSearchReply.items:type_name -> bilibili.app.dynamic.v1.MixUpListItem
	62,  // 15: bilibili.app.dynamic.v1.DynMixUpListViewMoreReply.items:type_name -> bilibili.app.dynamic.v1.MixUpListItem
	25,  // 16: bilibili.app.dynamic.v1.DynOurCityItem.modules:type_name -> bilibili.app.dynamic.v1.DynOurCityModule
	27,  // 17: bilibili.app.dynamic.v1.DynOurCityModule.module_cover:type_name -> bilibili.app.dynamic.v1.DynOurCityModuleCover
	28,  // 18: bilibili.app.dynamic.v1.DynOurCityModule.module_desc:type_name -> bilibili.app.dynamic.v1.DynOurCityModuleDesc
	26,  // 19: bilibili.app.dynamic.v1.DynOurCityModule.module_author:type_name -> bilibili.app.dynamic.v1.DynOurCityModuleAuthor
	29,  // 20: bilibili.app.dynamic.v1.DynOurCityModule.module_extend:type_name -> bilibili.app.dynamic.v1.DynOurCityModuleExtend
	102, // 21: bilibili.app.dynamic.v1.DynOurCityModuleCover.badge:type_name -> bilibili.app.dynamic.v1.VideoBadge
	30,  // 22: bilibili.app.dynamic.v1.DynOurCityModuleExtend.extend_lbs:type_name -> bilibili.app.dynamic.v1.DynOurCityModuleExtendLBS
	24,  // 23: bilibili.app.dynamic.v1.DynOurCityReply.list:type_name -> bilibili.app.dynamic.v1.DynOurCityItem
	48,  // 24: bilibili.app.dynamic.v1.DynOurCityReq.exp_conf:type_name -> bilibili.app.dynamic.v1.ExpConf
	105, // 25: bilibili.app.dynamic.v1.DynOurCityReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	34,  // 26: bilibili.app.dynamic.v1.DynRedReply.dyn_red_item:type_name -> bilibili.app.dynamic.v1.DynRedItem
	37,  // 27: bilibili.app.dynamic.v1.DynRedReply.red_style:type_name -> bilibili.app.dynamic.v1.DynRedStyle
	98,  // 28: bilibili.app.dynamic.v1.DynRedReq.tab_offset:type_name -> bilibili.app.dynamic.v1.TabOffset
	38,  // 29: bilibili.app.dynamic.v1.DynRedStyle.up:type_name -> bilibili.app.dynamic.v1.DynRedStyleUp
	85,  // 30: bilibili.app.dynamic.v1.DynTab.popup:type_name -> bilibili.app.dynamic.v1.Popup
	39,  // 31: bilibili.app.dynamic.v1.DynTabReply.dyn_tab:type_name -> bilibili.app.dynamic.v1.DynTab
	18,  // 32: bilibili.app.dynamic.v1.DynVideoPersonalReply.list:type_name -> bilibili.app.dynamic.v1.DynamicItem
	18,  // 33: bilibili.app.dynamic.v1.DynVideoReqReply.list:type_name -> bilibili.app.dynamic.v1.DynamicItem
	47,  // 34: bilibili.app.dynamic.v1.ExpConf.exps:type_name -> bilibili.app.dynamic.v1.Exp
	53,  // 35: bilibili.app.dynamic.v1.Extend.ext_info_topic:type_name -> bilibili.app.dynamic.v1.ExtInfoTopic
	52,  // 36: bilibili.app.dynamic.v1.Extend.ext_info_lbs:type_name -> bilibili.app.dynamic.v1.ExtInfoLBS
	51,  // 37: bilibili.app.dynamic.v1.Extend.ext_info_hot:type_name -> bilibili.app.dynamic.v1.ExtInfoHot
	50,  // 38: bilibili.app.dynamic.v1.Extend.ext_info_game:type_name -> bilibili.app.dynamic.v1.ExtInfoGame
	77,  // 39: bilibili.app.dynamic.v1.FollowListItem.new_ep:type_name -> bilibili.app.dynamic.v1.NewEP
	8,   // 40: bilibili.app.dynamic.v1.GeoCoderReply.address_component:type_name -> bilibili.app.dynamic.v1.AddressComponent
	9,   // 41: bilibili.app.dynamic.v1.GeoCoderReply.ad_info:type_name -> bilibili.app.dynamic.v1.AdInfo
	58,  // 42: bilibili.app.dynamic.v1.LikeInfo.animation:type_name -> bilibili.app.dynamic.v1.LikeAnimation
	63,  // 43: bilibili.app.dynamic.v1.MixUpListItem.live_info:type_name -> bilibili.app.dynamic.v1.MixUpListLiveItem
	80,  // 44: bilibili.app.dynamic.v1.MixUpListItem.official:type_name -> bilibili.app.dynamic.v1.OfficialVerify
	103, // 45: bilibili.app.dynamic.v1.MixUpListItem.vip:type_name -> bilibili.app.dynamic.v1.VipInfo
	86,  // 46: bilibili.app.dynamic.v1.MixUpListItem.relation:type_name -> bilibili.app.dynamic.v1.Relation
	71,  // 47: bilibili.app.dynamic.v1.Module.module_fold:type_name -> bilibili.app.dynamic.v1.ModuleFold
	65,  // 48: bilibili.app.dynamic.v1.Module.module_author:type_name -> bilibili.app.dynamic.v1.ModuleAuthor
	68,  // 49: bilibili.app.dynamic.v1.Module.module_dynamic:type_name -> bilibili.app.dynamic.v1.ModuleDynamic
	75,  // 50: bilibili.app.dynamic.v1.Module.module_state:type_name -> bilibili.app.dynamic.v1.ModuleState
	73,  // 51: bilibili.app.dynamic.v1.Module.module_forward:type_name -> bilibili.app.dynamic.v1.ModuleForward
	70,  // 52: bilibili.app.dynamic.v1.Module.module_extend:type_name -> bilibili.app.dynamic.v1.ModuleExtend
	67,  // 53: bilibili.app.dynamic.v1.Module.module_dispute:type_name -> bilibili.app.dynamic.v1.ModuleDispute
	66,  // 54: bilibili.app.dynamic.v1.Module.module_desc:type_name -> bilibili.app.dynamic.v1.ModuleDesc
	74,  // 55: bilibili.app.dynamic.v1.Module.module_likeUser:type_name -> bilibili.app.dynamic.v1.ModuleLikeUser
	69,  // 56: bilibili.app.dynamic.v1.Module.module_upList:type_name -> bilibili.app.dynamic.v1.ModuleDynUpList
	72,  // 57: bilibili.app.dynamic.v1.Module.module_followList:type_name -> bilibili.app.dynamic.v1.ModuleFollowList
	100, // 58: bilibili.app.dynamic.v1.ModuleAuthor.author:type_name -> bilibili.app.dynamic.v1.UserInfo
	15,  // 59: bilibili.app.dynamic.v1.ModuleAuthor.decorate_card:type_name -> bilibili.app.dynamic.v1.DecorateCard
	16,  // 60: bilibili.app.dynamic.v1.ModuleDesc.desc:type_name -> bilibili.app.dynamic.v1.Description
	13,  // 61: bilibili.app.dynamic.v1.ModuleDynamic.card_ugc:type_name -> bilibili.app.dynamic.v1.CardUGC
	12,  // 62: bilibili.app.dynamic.v1.ModuleDynamic.card_pgc:type_name -> bilibili.app.dynamic.v1.CardPGC
	11,  // 63: bilibili.app.dynamic.v1.ModuleDynamic.card_curr_season:type_name -> bilibili.app.dynamic.v1.CardCurrSeason
	10,  // 64: bilibili.app.dynamic.v1.ModuleDynamic.card_curr_batch:type_name -> bilibili.app.dynamic.v1.CardCurrBatch
	99,  // 65: bilibili.app.dynamic.v1.ModuleDynUpList.list:type_name -> bilibili.app.dynamic.v1.UpListItem
	49,  // 66: bilibili.app.dynamic.v1.ModuleExtend.extend:type_name -> bilibili.app.dynamic.v1.Extend
	100, // 67: bilibili.app.dynamic.v1.ModuleFold.fold_users:type_name -> bilibili.app.dynamic.v1.UserInfo
	2,   // 68: bilibili.app.dynamic.v1.ModuleFold.fold_type_v2:type_name -> bilibili.app.dynamic.v1.FoldType
	54,  // 69: bilibili.app.dynamic.v1.ModuleFollowList.list:type_name -> bilibili.app.dynamic.v1.FollowListItem
	64,  // 70: bilibili.app.dynamic.v1.ModuleForward.modules:type_name -> bilibili.app.dynamic.v1.Module
	60,  // 71: bilibili.app.dynamic.v1.ModuleLikeUser.like_users:type_name -> bilibili.app.dynamic.v1.LikeUser
	59,  // 72: bilibili.app.dynamic.v1.ModuleState.like_info:type_name -> bilibili.app.dynamic.v1.LikeInfo
	4,   // 73: bilibili.app.dynamic.v1.Relation.status:type_name -> bilibili.app.dynamic.v1.RelationStatus
	89,  // 74: bilibili.app.dynamic.v1.SVideoItem.modules:type_name -> bilibili.app.dynamic.v1.SVideoModule
	90,  // 75: bilibili.app.dynamic.v1.SVideoModule.module_author:type_name -> bilibili.app.dynamic.v1.SVideoModuleAuthor
	92,  // 76: bilibili.app.dynamic.v1.SVideoModule.module_player:type_name -> bilibili.app.dynamic.v1.SVideoModulePlayer
	91,  // 77: bilibili.app.dynamic.v1.SVideoModule.module_desc:type_name -> bilibili.app.dynamic.v1.SVideoModuleDesc
	93,  // 78: bilibili.app.dynamic.v1.SVideoModule.module_stat:type_name -> bilibili.app.dynamic.v1.SVideoModuleStat
	17,  // 79: bilibili.app.dynamic.v1.SVideoModulePlayer.dimension:type_name -> bilibili.app.dynamic.v1.Dimension
	96,  // 80: bilibili.app.dynamic.v1.SVideoModuleStat.stat_info:type_name -> bilibili.app.dynamic.v1.SVideoStatInfo
	87,  // 81: bilibili.app.dynamic.v1.SVideoModuleStat.share_info:type_name -> bilibili.app.dynamic.v1.ShareInfo
	88,  // 82: bilibili.app.dynamic.v1.SVideoReply.list:type_name -> bilibili.app.dynamic.v1.SVideoItem
	97,  // 83: bilibili.app.dynamic.v1.SVideoReply.top:type_name -> bilibili.app.dynamic.v1.SVideoTop
	6,   // 84: bilibili.app.dynamic.v1.SVideoReq.type:type_name -> bilibili.app.dynamic.v1.SVideoType
	84,  // 85: bilibili.app.dynamic.v1.SVideoReq.player_preload:type_name -> bilibili.app.dynamic.v1.PlayerPreloadParams
	105, // 86: bilibili.app.dynamic.v1.SVideoReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	80,  // 87: bilibili.app.dynamic.v1.UserInfo.official:type_name -> bilibili.app.dynamic.v1.OfficialVerify
	103, // 88: bilibili.app.dynamic.v1.UserInfo.vip:type_name -> bilibili.app.dynamic.v1.VipInfo
	61,  // 89: bilibili.app.dynamic.v1.UserInfo.live:type_name -> bilibili.app.dynamic.v1.LiveInfo
	101, // 90: bilibili.app.dynamic.v1.UserInfo.pendant:type_name -> bilibili.app.dynamic.v1.UserPendant
	76,  // 91: bilibili.app.dynamic.v1.UserInfo.nameplate:type_name -> bilibili.app.dynamic.v1.Nameplate
	104, // 92: bilibili.app.dynamic.v1.VipInfo.label:type_name -> bilibili.app.dynamic.v1.VipLabel
	45,  // 93: bilibili.app.dynamic.v1.Dynamic.DynVideo:input_type -> bilibili.app.dynamic.v1.DynVideoReq
	20,  // 94: bilibili.app.dynamic.v1.Dynamic.DynDetails:input_type -> bilibili.app.dynamic.v1.DynDetailsReq
	95,  // 95: bilibili.app.dynamic.v1.Dynamic.SVideo:input_type -> bilibili.app.dynamic.v1.SVideoReq
	41,  // 96: bilibili.app.dynamic.v1.Dynamic.DynTab:input_type -> bilibili.app.dynamic.v1.DynTabReq
	33,  // 97: bilibili.app.dynamic.v1.Dynamic.DynOurCitySwitch:input_type -> bilibili.app.dynamic.v1.DynOurCitySwitchReq
	32,  // 98: bilibili.app.dynamic.v1.Dynamic.DynOurCity:input_type -> bilibili.app.dynamic.v1.DynOurCityReq
	44,  // 99: bilibili.app.dynamic.v1.Dynamic.DynVideoPersonal:input_type -> bilibili.app.dynamic.v1.DynVideoPersonalReq
	42,  // 100: bilibili.app.dynamic.v1.Dynamic.DynUpdOffset:input_type -> bilibili.app.dynamic.v1.DynUpdOffsetReq
	36,  // 101: bilibili.app.dynamic.v1.Dynamic.DynRed:input_type -> bilibili.app.dynamic.v1.DynRedReq
	79,  // 102: bilibili.app.dynamic.v1.Dynamic.DynMixUpListViewMore:input_type -> bilibili.app.dynamic.v1.NoReq
	22,  // 103: bilibili.app.dynamic.v1.Dynamic.DynMixUpListSearch:input_type -> bilibili.app.dynamic.v1.DynMixUpListSearchReq
	82,  // 104: bilibili.app.dynamic.v1.Dynamic.OurCityClickReport:input_type -> bilibili.app.dynamic.v1.OurCityClickReportReq
	56,  // 105: bilibili.app.dynamic.v1.Dynamic.GeoCoder:input_type -> bilibili.app.dynamic.v1.GeoCoderReq
	46,  // 106: bilibili.app.dynamic.v1.Dynamic.DynVideo:output_type -> bilibili.app.dynamic.v1.DynVideoReqReply
	19,  // 107: bilibili.app.dynamic.v1.Dynamic.DynDetails:output_type -> bilibili.app.dynamic.v1.DynDetailsReply
	94,  // 108: bilibili.app.dynamic.v1.Dynamic.SVideo:output_type -> bilibili.app.dynamic.v1.SVideoReply
	40,  // 109: bilibili.app.dynamic.v1.Dynamic.DynTab:output_type -> bilibili.app.dynamic.v1.DynTabReply
	78,  // 110: bilibili.app.dynamic.v1.Dynamic.DynOurCitySwitch:output_type -> bilibili.app.dynamic.v1.NoReply
	31,  // 111: bilibili.app.dynamic.v1.Dynamic.DynOurCity:output_type -> bilibili.app.dynamic.v1.DynOurCityReply
	43,  // 112: bilibili.app.dynamic.v1.Dynamic.DynVideoPersonal:output_type -> bilibili.app.dynamic.v1.DynVideoPersonalReply
	78,  // 113: bilibili.app.dynamic.v1.Dynamic.DynUpdOffset:output_type -> bilibili.app.dynamic.v1.NoReply
	35,  // 114: bilibili.app.dynamic.v1.Dynamic.DynRed:output_type -> bilibili.app.dynamic.v1.DynRedReply
	23,  // 115: bilibili.app.dynamic.v1.Dynamic.DynMixUpListViewMore:output_type -> bilibili.app.dynamic.v1.DynMixUpListViewMoreReply
	21,  // 116: bilibili.app.dynamic.v1.Dynamic.DynMixUpListSearch:output_type -> bilibili.app.dynamic.v1.DynMixUpListSearchReply
	81,  // 117: bilibili.app.dynamic.v1.Dynamic.OurCityClickReport:output_type -> bilibili.app.dynamic.v1.OurCityClickReportReply
	55,  // 118: bilibili.app.dynamic.v1.Dynamic.GeoCoder:output_type -> bilibili.app.dynamic.v1.GeoCoderReply
	106, // [106:119] is the sub-list for method output_type
	93,  // [93:106] is the sub-list for method input_type
	93,  // [93:93] is the sub-list for extension type_name
	93,  // [93:93] is the sub-list for extension extendee
	0,   // [0:93] is the sub-list for field type_name
}

func init() { file_bilibili_app_dynamic_v1_dynamic_proto_init() }
func file_bilibili_app_dynamic_v1_dynamic_proto_init() {
	if File_bilibili_app_dynamic_v1_dynamic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardCurrBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardCurrSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardPGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardUGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecoCardFan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecorateCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynMixUpListSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynMixUpListSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynMixUpListViewMoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModuleAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModuleCover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModuleDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModuleExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityModuleExtendLBS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynOurCitySwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRedStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRedStyleUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTabReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTabReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynUpdOffsetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoPersonalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoPersonalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoReqReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoHot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoLBS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoCoderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoCoderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixUpListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixUpListLiveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDispute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDynUpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleFold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleFollowList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleLikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nameplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OurCityClickReportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OurCityClickReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGCSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPreloadParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Popup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoModuleAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoModuleDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoModulePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoModuleStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoStatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SVideoTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPendant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*DynOurCityModule_ModuleCover)(nil),
		(*DynOurCityModule_ModuleDesc)(nil),
		(*DynOurCityModule_ModuleAuthor)(nil),
		(*DynOurCityModule_ModuleExtend)(nil),
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*DynOurCityModuleExtend_ExtendLbs)(nil),
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[41].OneofWrappers = []interface{}{
		(*Extend_ExtInfoTopic)(nil),
		(*Extend_ExtInfoLbs)(nil),
		(*Extend_ExtInfoHot)(nil),
		(*Extend_ExtInfoGame)(nil),
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*Module_ModuleFold)(nil),
		(*Module_ModuleAuthor)(nil),
		(*Module_ModuleDynamic)(nil),
		(*Module_ModuleState)(nil),
		(*Module_ModuleForward)(nil),
		(*Module_ModuleExtend)(nil),
		(*Module_ModuleDispute)(nil),
		(*Module_ModuleDesc)(nil),
		(*Module_ModuleLikeUser)(nil),
		(*Module_ModuleUpList)(nil),
		(*Module_ModuleFollowList)(nil),
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*ModuleDynamic_CardUgc)(nil),
		(*ModuleDynamic_CardPgc)(nil),
		(*ModuleDynamic_CardCurrSeason)(nil),
		(*ModuleDynamic_CardCurrBatch)(nil),
	}
	file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes[81].OneofWrappers = []interface{}{
		(*SVideoModule_ModuleAuthor)(nil),
		(*SVideoModule_ModulePlayer)(nil),
		(*SVideoModule_ModuleDesc)(nil),
		(*SVideoModule_ModuleStat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_dynamic_v1_dynamic_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   97,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_dynamic_v1_dynamic_proto_goTypes,
		DependencyIndexes: file_bilibili_app_dynamic_v1_dynamic_proto_depIdxs,
		EnumInfos:         file_bilibili_app_dynamic_v1_dynamic_proto_enumTypes,
		MessageInfos:      file_bilibili_app_dynamic_v1_dynamic_proto_msgTypes,
	}.Build()
	File_bilibili_app_dynamic_v1_dynamic_proto = out.File
	file_bilibili_app_dynamic_v1_dynamic_proto_rawDesc = nil
	file_bilibili_app_dynamic_v1_dynamic_proto_goTypes = nil
	file_bilibili_app_dynamic_v1_dynamic_proto_depIdxs = nil
}
