// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/app/dynamic/v2/dynamic.proto

package v2

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddButtonBgStyle int32

const (
	AddButtonBgStyle_fill   AddButtonBgStyle = 0 // 默认填充
	AddButtonBgStyle_stroke AddButtonBgStyle = 1 // 描边
	AddButtonBgStyle_gray   AddButtonBgStyle = 2 // 置灰
)

// Enum value maps for AddButtonBgStyle.
var (
	AddButtonBgStyle_name = map[int32]string{
		0: "fill",
		1: "stroke",
		2: "gray",
	}
	AddButtonBgStyle_value = map[string]int32{
		"fill":   0,
		"stroke": 1,
		"gray":   2,
	}
)

func (x AddButtonBgStyle) Enum() *AddButtonBgStyle {
	p := new(AddButtonBgStyle)
	*p = x
	return p
}

func (x AddButtonBgStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddButtonBgStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[0].Descriptor()
}

func (AddButtonBgStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[0]
}

func (x AddButtonBgStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddButtonBgStyle.Descriptor instead.
func (AddButtonBgStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{0}
}

// 按钮类型
type AddButtonType int32

const (
	AddButtonType_bt_none   AddButtonType = 0 // 占位
	AddButtonType_bt_jump   AddButtonType = 1 // 跳转
	AddButtonType_bt_button AddButtonType = 2 // 按钮
)

// Enum value maps for AddButtonType.
var (
	AddButtonType_name = map[int32]string{
		0: "bt_none",
		1: "bt_jump",
		2: "bt_button",
	}
	AddButtonType_value = map[string]int32{
		"bt_none":   0,
		"bt_jump":   1,
		"bt_button": 2,
	}
)

func (x AddButtonType) Enum() *AddButtonType {
	p := new(AddButtonType)
	*p = x
	return p
}

func (x AddButtonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddButtonType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[1].Descriptor()
}

func (AddButtonType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[1]
}

func (x AddButtonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddButtonType.Descriptor instead.
func (AddButtonType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{1}
}

// 投票状态
type AdditionVoteState int32

const (
	AdditionVoteState_addition_vote_state_none  AdditionVoteState = 0 //
	AdditionVoteState_addition_vote_state_open  AdditionVoteState = 1 //
	AdditionVoteState_addition_vote_state_close AdditionVoteState = 2 //
)

// Enum value maps for AdditionVoteState.
var (
	AdditionVoteState_name = map[int32]string{
		0: "addition_vote_state_none",
		1: "addition_vote_state_open",
		2: "addition_vote_state_close",
	}
	AdditionVoteState_value = map[string]int32{
		"addition_vote_state_none":  0,
		"addition_vote_state_open":  1,
		"addition_vote_state_close": 2,
	}
)

func (x AdditionVoteState) Enum() *AdditionVoteState {
	p := new(AdditionVoteState)
	*p = x
	return p
}

func (x AdditionVoteState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionVoteState) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[2].Descriptor()
}

func (AdditionVoteState) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[2]
}

func (x AdditionVoteState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionVoteState.Descriptor instead.
func (AdditionVoteState) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{2}
}

// 投票类型
type AdditionVoteType int32

const (
	AdditionVoteType_addition_vote_type_none    AdditionVoteType = 0 //
	AdditionVoteType_addition_vote_type_word    AdditionVoteType = 1 //
	AdditionVoteType_addition_vote_type_pic     AdditionVoteType = 2 //
	AdditionVoteType_addition_vote_type_default AdditionVoteType = 3 //
)

// Enum value maps for AdditionVoteType.
var (
	AdditionVoteType_name = map[int32]string{
		0: "addition_vote_type_none",
		1: "addition_vote_type_word",
		2: "addition_vote_type_pic",
		3: "addition_vote_type_default",
	}
	AdditionVoteType_value = map[string]int32{
		"addition_vote_type_none":    0,
		"addition_vote_type_word":    1,
		"addition_vote_type_pic":     2,
		"addition_vote_type_default": 3,
	}
)

func (x AdditionVoteType) Enum() *AdditionVoteType {
	p := new(AdditionVoteType)
	*p = x
	return p
}

func (x AdditionVoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionVoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[3].Descriptor()
}

func (AdditionVoteType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[3]
}

func (x AdditionVoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionVoteType.Descriptor instead.
func (AdditionVoteType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{3}
}

// 附加卡按钮点击类型
type AdditionalButtonClickType int32

const (
	AdditionalButtonClickType_click_none AdditionalButtonClickType = 0 // 通用按钮
	AdditionalButtonClickType_click_up   AdditionalButtonClickType = 1 // 预约卡按钮
)

// Enum value maps for AdditionalButtonClickType.
var (
	AdditionalButtonClickType_name = map[int32]string{
		0: "click_none",
		1: "click_up",
	}
	AdditionalButtonClickType_value = map[string]int32{
		"click_none": 0,
		"click_up":   1,
	}
)

func (x AdditionalButtonClickType) Enum() *AdditionalButtonClickType {
	p := new(AdditionalButtonClickType)
	*p = x
	return p
}

func (x AdditionalButtonClickType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionalButtonClickType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[4].Descriptor()
}

func (AdditionalButtonClickType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[4]
}

func (x AdditionalButtonClickType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionalButtonClickType.Descriptor instead.
func (AdditionalButtonClickType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{4}
}

// 附加卡按钮状态
type AdditionalButtonStatus int32

const (
	AdditionalButtonStatus_none    AdditionalButtonStatus = 0 //
	AdditionalButtonStatus_uncheck AdditionalButtonStatus = 1 //
	AdditionalButtonStatus_check   AdditionalButtonStatus = 2 //
)

// Enum value maps for AdditionalButtonStatus.
var (
	AdditionalButtonStatus_name = map[int32]string{
		0: "none",
		1: "uncheck",
		2: "check",
	}
	AdditionalButtonStatus_value = map[string]int32{
		"none":    0,
		"uncheck": 1,
		"check":   2,
	}
)

func (x AdditionalButtonStatus) Enum() *AdditionalButtonStatus {
	p := new(AdditionalButtonStatus)
	*p = x
	return p
}

func (x AdditionalButtonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionalButtonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[5].Descriptor()
}

func (AdditionalButtonStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[5]
}

func (x AdditionalButtonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionalButtonStatus.Descriptor instead.
func (AdditionalButtonStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{5}
}

type AdditionalShareShowType int32

const (
	AdditionalShareShowType_st_none AdditionalShareShowType = 0 //
	AdditionalShareShowType_st_show AdditionalShareShowType = 1 //
)

// Enum value maps for AdditionalShareShowType.
var (
	AdditionalShareShowType_name = map[int32]string{
		0: "st_none",
		1: "st_show",
	}
	AdditionalShareShowType_value = map[string]int32{
		"st_none": 0,
		"st_show": 1,
	}
)

func (x AdditionalShareShowType) Enum() *AdditionalShareShowType {
	p := new(AdditionalShareShowType)
	*p = x
	return p
}

func (x AdditionalShareShowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionalShareShowType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[6].Descriptor()
}

func (AdditionalShareShowType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[6]
}

func (x AdditionalShareShowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionalShareShowType.Descriptor instead.
func (AdditionalShareShowType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{6}
}

// 枚举-动态附加卡
type AdditionalType int32

const (
	AdditionalType_additional_none                AdditionalType = 0 // 占位
	AdditionalType_additional_type_pgc            AdditionalType = 1 // 附加卡-追番
	AdditionalType_additional_type_goods          AdditionalType = 2 // 附加卡-商品
	AdditionalType_additional_type_vote           AdditionalType = 3 // 附加卡投票
	AdditionalType_additional_type_common         AdditionalType = 4 // 附加通用卡
	AdditionalType_additional_type_esport         AdditionalType = 5 // 附加电竞卡
	AdditionalType_additional_type_up_rcmd        AdditionalType = 6 // 附加UP主推荐卡
	AdditionalType_additional_type_ugc            AdditionalType = 7 // 附加卡-ugc
	AdditionalType_additional_type_up_reservation AdditionalType = 8 // UP主预约卡
)

// Enum value maps for AdditionalType.
var (
	AdditionalType_name = map[int32]string{
		0: "additional_none",
		1: "additional_type_pgc",
		2: "additional_type_goods",
		3: "additional_type_vote",
		4: "additional_type_common",
		5: "additional_type_esport",
		6: "additional_type_up_rcmd",
		7: "additional_type_ugc",
		8: "additional_type_up_reservation",
	}
	AdditionalType_value = map[string]int32{
		"additional_none":                0,
		"additional_type_pgc":            1,
		"additional_type_goods":          2,
		"additional_type_vote":           3,
		"additional_type_common":         4,
		"additional_type_esport":         5,
		"additional_type_up_rcmd":        6,
		"additional_type_ugc":            7,
		"additional_type_up_reservation": 8,
	}
)

func (x AdditionalType) Enum() *AdditionalType {
	p := new(AdditionalType)
	*p = x
	return p
}

func (x AdditionalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionalType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[7].Descriptor()
}

func (AdditionalType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[7]
}

func (x AdditionalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionalType.Descriptor instead.
func (AdditionalType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{7}
}

type CampusTabType int32

const (
	CampusTabType_campus_none      CampusTabType = 0 //
	CampusTabType_campus_school    CampusTabType = 1 //
	CampusTabType_campus_dynamic   CampusTabType = 2 //
	CampusTabType_campus_account   CampusTabType = 3 //
	CampusTabType_campus_billboard CampusTabType = 4 //
	CampusTabType_campus_topic     CampusTabType = 5 //
)

// Enum value maps for CampusTabType.
var (
	CampusTabType_name = map[int32]string{
		0: "campus_none",
		1: "campus_school",
		2: "campus_dynamic",
		3: "campus_account",
		4: "campus_billboard",
		5: "campus_topic",
	}
	CampusTabType_value = map[string]int32{
		"campus_none":      0,
		"campus_school":    1,
		"campus_dynamic":   2,
		"campus_account":   3,
		"campus_billboard": 4,
		"campus_topic":     5,
	}
)

func (x CampusTabType) Enum() *CampusTabType {
	p := new(CampusTabType)
	*p = x
	return p
}

func (x CampusTabType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampusTabType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[8].Descriptor()
}

func (CampusTabType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[8]
}

func (x CampusTabType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampusTabType.Descriptor instead.
func (CampusTabType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{8}
}

type CoverIcon int32

const (
	CoverIcon_cover_icon_none CoverIcon = 0 // 占位 啥都不展示
	CoverIcon_cover_icon_play CoverIcon = 1 // 播放icon
)

// Enum value maps for CoverIcon.
var (
	CoverIcon_name = map[int32]string{
		0: "cover_icon_none",
		1: "cover_icon_play",
	}
	CoverIcon_value = map[string]int32{
		"cover_icon_none": 0,
		"cover_icon_play": 1,
	}
)

func (x CoverIcon) Enum() *CoverIcon {
	p := new(CoverIcon)
	*p = x
	return p
}

func (x CoverIcon) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoverIcon) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[9].Descriptor()
}

func (CoverIcon) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[9]
}

func (x CoverIcon) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoverIcon.Descriptor instead.
func (CoverIcon) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{9}
}

// 文本类型
type DescType int32

const (
	DescType_desc_type_none        DescType = 0  // 占位
	DescType_desc_type_text        DescType = 1  // 文本
	DescType_desc_type_aite        DescType = 2  // @
	DescType_desc_type_lottery     DescType = 3  // 抽奖
	DescType_desc_type_vote        DescType = 4  // 投票
	DescType_desc_type_topic       DescType = 5  // 话题
	DescType_desc_type_goods       DescType = 6  // 商品
	DescType_desc_type_bv          DescType = 7  // bv
	DescType_desc_type_av          DescType = 8  // av
	DescType_desc_type_emoji       DescType = 9  // 表情
	DescType_desc_type_user        DescType = 10 // 外露用户
	DescType_desc_type_cv          DescType = 11 // 专栏
	DescType_desc_type_vc          DescType = 12 // 小视频
	DescType_desc_type_web         DescType = 13 // 网址
	DescType_desc_type_taobao      DescType = 14 // 淘宝
	DescType_desc_type_mail        DescType = 15 // 邮箱
	DescType_desc_type_ogv_season  DescType = 16 // 番剧season
	DescType_desc_type_ogv_ep      DescType = 17 // 番剧ep
	DescType_desc_type_search_word DescType = 18 //
)

// Enum value maps for DescType.
var (
	DescType_name = map[int32]string{
		0:  "desc_type_none",
		1:  "desc_type_text",
		2:  "desc_type_aite",
		3:  "desc_type_lottery",
		4:  "desc_type_vote",
		5:  "desc_type_topic",
		6:  "desc_type_goods",
		7:  "desc_type_bv",
		8:  "desc_type_av",
		9:  "desc_type_emoji",
		10: "desc_type_user",
		11: "desc_type_cv",
		12: "desc_type_vc",
		13: "desc_type_web",
		14: "desc_type_taobao",
		15: "desc_type_mail",
		16: "desc_type_ogv_season",
		17: "desc_type_ogv_ep",
		18: "desc_type_search_word",
	}
	DescType_value = map[string]int32{
		"desc_type_none":        0,
		"desc_type_text":        1,
		"desc_type_aite":        2,
		"desc_type_lottery":     3,
		"desc_type_vote":        4,
		"desc_type_topic":       5,
		"desc_type_goods":       6,
		"desc_type_bv":          7,
		"desc_type_av":          8,
		"desc_type_emoji":       9,
		"desc_type_user":        10,
		"desc_type_cv":          11,
		"desc_type_vc":          12,
		"desc_type_web":         13,
		"desc_type_taobao":      14,
		"desc_type_mail":        15,
		"desc_type_ogv_season":  16,
		"desc_type_ogv_ep":      17,
		"desc_type_search_word": 18,
	}
)

func (x DescType) Enum() *DescType {
	p := new(DescType)
	*p = x
	return p
}

func (x DescType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DescType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[10].Descriptor()
}

func (DescType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[10]
}

func (x DescType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DescType.Descriptor instead.
func (DescType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{10}
}

type DisableState int32

const (
	DisableState_highlight DisableState = 0 // 高亮
	DisableState_gary      DisableState = 1 // 置灰(按钮不可点击)
)

// Enum value maps for DisableState.
var (
	DisableState_name = map[int32]string{
		0: "highlight",
		1: "gary",
	}
	DisableState_value = map[string]int32{
		"highlight": 0,
		"gary":      1,
	}
)

func (x DisableState) Enum() *DisableState {
	p := new(DisableState)
	*p = x
	return p
}

func (x DisableState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisableState) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[11].Descriptor()
}

func (DisableState) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[11]
}

func (x DisableState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisableState.Descriptor instead.
func (DisableState) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{11}
}

// 动态小卡类型
type DynExtendType int32

const (
	DynExtendType_dyn_ext_type_none     DynExtendType = 0 // 占位
	DynExtendType_dyn_ext_type_topic    DynExtendType = 1 // 话题小卡
	DynExtendType_dyn_ext_type_lbs      DynExtendType = 2 // lbs小卡
	DynExtendType_dyn_ext_type_hot      DynExtendType = 3 // 热门小卡
	DynExtendType_dyn_ext_type_game     DynExtendType = 4 // 游戏小卡
	DynExtendType_dyn_ext_type_common   DynExtendType = 5 // 通用小卡
	DynExtendType_dyn_ext_type_biliCut  DynExtendType = 6 // 必剪小卡
	DynExtendType_dyn_ext_type_ogv      DynExtendType = 7 // ogv小卡
	DynExtendType_dyn_ext_type_auto_ogv DynExtendType = 8 // 自动附加ogv小卡
)

// Enum value maps for DynExtendType.
var (
	DynExtendType_name = map[int32]string{
		0: "dyn_ext_type_none",
		1: "dyn_ext_type_topic",
		2: "dyn_ext_type_lbs",
		3: "dyn_ext_type_hot",
		4: "dyn_ext_type_game",
		5: "dyn_ext_type_common",
		6: "dyn_ext_type_biliCut",
		7: "dyn_ext_type_ogv",
		8: "dyn_ext_type_auto_ogv",
	}
	DynExtendType_value = map[string]int32{
		"dyn_ext_type_none":     0,
		"dyn_ext_type_topic":    1,
		"dyn_ext_type_lbs":      2,
		"dyn_ext_type_hot":      3,
		"dyn_ext_type_game":     4,
		"dyn_ext_type_common":   5,
		"dyn_ext_type_biliCut":  6,
		"dyn_ext_type_ogv":      7,
		"dyn_ext_type_auto_ogv": 8,
	}
)

func (x DynExtendType) Enum() *DynExtendType {
	p := new(DynExtendType)
	*p = x
	return p
}

func (x DynExtendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynExtendType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[12].Descriptor()
}

func (DynExtendType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[12]
}

func (x DynExtendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynExtendType.Descriptor instead.
func (DynExtendType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{12}
}

// 动态模块类型
type DynModuleType int32

const (
	DynModuleType_module_none              DynModuleType = 0  // 占位
	DynModuleType_module_author            DynModuleType = 1  // 发布人模块
	DynModuleType_module_dispute           DynModuleType = 2  // 争议小黄条
	DynModuleType_module_desc              DynModuleType = 3  // 描述文案
	DynModuleType_module_dynamic           DynModuleType = 4  // 动态卡片
	DynModuleType_module_forward           DynModuleType = 5  // 转发模块
	DynModuleType_module_likeUser          DynModuleType = 6  // 点赞用户(废弃)
	DynModuleType_module_extend            DynModuleType = 7  // 小卡模块
	DynModuleType_module_additional        DynModuleType = 8  // 附加卡
	DynModuleType_module_stat              DynModuleType = 9  // 计数信息
	DynModuleType_module_fold              DynModuleType = 10 // 折叠
	DynModuleType_module_comment           DynModuleType = 11 // 评论外露(废弃)
	DynModuleType_module_interaction       DynModuleType = 12 // 外露交互模块(点赞、评论)
	DynModuleType_module_author_forward    DynModuleType = 13 // 转发卡的发布人模块
	DynModuleType_module_ad                DynModuleType = 14 // 广告卡模块
	DynModuleType_module_banner            DynModuleType = 15 // 通栏模块
	DynModuleType_module_item_null         DynModuleType = 16 // 获取物料失败模块
	DynModuleType_module_share_info        DynModuleType = 17 // 分享组件
	DynModuleType_module_recommend         DynModuleType = 18 // 相关推荐模块
	DynModuleType_module_stat_forward      DynModuleType = 19 // 转发卡计数信息
	DynModuleType_module_top               DynModuleType = 20 // 顶部模块
	DynModuleType_module_bottom            DynModuleType = 21 // 底部模块
	DynModuleType_module_story             DynModuleType = 22 //
	DynModuleType_module_topic             DynModuleType = 23 //
	DynModuleType_module_topic_details_ext DynModuleType = 24 //
	DynModuleType_module_top_tag           DynModuleType = 25 //
	DynModuleType_module_topic_brief       DynModuleType = 26 //
	DynModuleType_module_title             DynModuleType = 27 //
)

// Enum value maps for DynModuleType.
var (
	DynModuleType_name = map[int32]string{
		0:  "module_none",
		1:  "module_author",
		2:  "module_dispute",
		3:  "module_desc",
		4:  "module_dynamic",
		5:  "module_forward",
		6:  "module_likeUser",
		7:  "module_extend",
		8:  "module_additional",
		9:  "module_stat",
		10: "module_fold",
		11: "module_comment",
		12: "module_interaction",
		13: "module_author_forward",
		14: "module_ad",
		15: "module_banner",
		16: "module_item_null",
		17: "module_share_info",
		18: "module_recommend",
		19: "module_stat_forward",
		20: "module_top",
		21: "module_bottom",
		22: "module_story",
		23: "module_topic",
		24: "module_topic_details_ext",
		25: "module_top_tag",
		26: "module_topic_brief",
		27: "module_title",
	}
	DynModuleType_value = map[string]int32{
		"module_none":              0,
		"module_author":            1,
		"module_dispute":           2,
		"module_desc":              3,
		"module_dynamic":           4,
		"module_forward":           5,
		"module_likeUser":          6,
		"module_extend":            7,
		"module_additional":        8,
		"module_stat":              9,
		"module_fold":              10,
		"module_comment":           11,
		"module_interaction":       12,
		"module_author_forward":    13,
		"module_ad":                14,
		"module_banner":            15,
		"module_item_null":         16,
		"module_share_info":        17,
		"module_recommend":         18,
		"module_stat_forward":      19,
		"module_top":               20,
		"module_bottom":            21,
		"module_story":             22,
		"module_topic":             23,
		"module_topic_details_ext": 24,
		"module_top_tag":           25,
		"module_topic_brief":       26,
		"module_title":             27,
	}
)

func (x DynModuleType) Enum() *DynModuleType {
	p := new(DynModuleType)
	*p = x
	return p
}

func (x DynModuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynModuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[13].Descriptor()
}

func (DynModuleType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[13]
}

func (x DynModuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynModuleType.Descriptor instead.
func (DynModuleType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{13}
}

type DynUriType int32

const (
	DynUriType_dyn_uri_type_none   DynUriType = 0 //
	DynUriType_dyn_uri_type_direct DynUriType = 1 // 直接跳转对应uri
	DynUriType_dyn_uri_type_suffix DynUriType = 2 // 作为后缀拼接
)

// Enum value maps for DynUriType.
var (
	DynUriType_name = map[int32]string{
		0: "dyn_uri_type_none",
		1: "dyn_uri_type_direct",
		2: "dyn_uri_type_suffix",
	}
	DynUriType_value = map[string]int32{
		"dyn_uri_type_none":   0,
		"dyn_uri_type_direct": 1,
		"dyn_uri_type_suffix": 2,
	}
)

func (x DynUriType) Enum() *DynUriType {
	p := new(DynUriType)
	*p = x
	return p
}

func (x DynUriType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynUriType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[14].Descriptor()
}

func (DynUriType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[14]
}

func (x DynUriType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynUriType.Descriptor instead.
func (DynUriType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{14}
}

// 枚举-动态类型
type DynamicType int32

const (
	DynamicType_dyn_none         DynamicType = 0  // 占位
	DynamicType_forward          DynamicType = 1  // 转发
	DynamicType_av               DynamicType = 2  // 稿件: ugc、小视频、短视频、UGC转PGC
	DynamicType_pgc              DynamicType = 3  // pgc：番剧、PGC番剧、PGC电影、PGC电视剧、PGC国创、PGC纪录片
	DynamicType_courses          DynamicType = 4  // 付费更新批次
	DynamicType_fold             DynamicType = 5  // 折叠
	DynamicType_word             DynamicType = 6  // 纯文字
	DynamicType_draw             DynamicType = 7  // 图文
	DynamicType_article          DynamicType = 8  // 专栏 原仅phone端
	DynamicType_music            DynamicType = 9  // 音频 原仅phone端
	DynamicType_common_square    DynamicType = 10 // 通用卡 方形
	DynamicType_common_vertical  DynamicType = 11 // 通用卡 竖形
	DynamicType_live             DynamicType = 12 // 直播卡 只有转发态
	DynamicType_medialist        DynamicType = 13 // 播单 原仅phone端 只有转发态
	DynamicType_courses_season   DynamicType = 14 // 付费更新批次 只有转发态
	DynamicType_ad               DynamicType = 15 // 广告卡
	DynamicType_applet           DynamicType = 16 // 小程序卡
	DynamicType_subscription     DynamicType = 17 // 订阅卡
	DynamicType_live_rcmd        DynamicType = 18 // 直播推荐卡
	DynamicType_banner           DynamicType = 19 // 通栏
	DynamicType_ugc_season       DynamicType = 20 // 合集卡
	DynamicType_subscription_new DynamicType = 21 // 新订阅卡
	DynamicType_story            DynamicType = 22 //
	DynamicType_topic_rcmd       DynamicType = 23 //
)

// Enum value maps for DynamicType.
var (
	DynamicType_name = map[int32]string{
		0:  "dyn_none",
		1:  "forward",
		2:  "av",
		3:  "pgc",
		4:  "courses",
		5:  "fold",
		6:  "word",
		7:  "draw",
		8:  "article",
		9:  "music",
		10: "common_square",
		11: "common_vertical",
		12: "live",
		13: "medialist",
		14: "courses_season",
		15: "ad",
		16: "applet",
		17: "subscription",
		18: "live_rcmd",
		19: "banner",
		20: "ugc_season",
		21: "subscription_new",
		22: "story",
		23: "topic_rcmd",
	}
	DynamicType_value = map[string]int32{
		"dyn_none":         0,
		"forward":          1,
		"av":               2,
		"pgc":              3,
		"courses":          4,
		"fold":             5,
		"word":             6,
		"draw":             7,
		"article":          8,
		"music":            9,
		"common_square":    10,
		"common_vertical":  11,
		"live":             12,
		"medialist":        13,
		"courses_season":   14,
		"ad":               15,
		"applet":           16,
		"subscription":     17,
		"live_rcmd":        18,
		"banner":           19,
		"ugc_season":       20,
		"subscription_new": 21,
		"story":            22,
		"topic_rcmd":       23,
	}
)

func (x DynamicType) Enum() *DynamicType {
	p := new(DynamicType)
	*p = x
	return p
}

func (x DynamicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynamicType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[15].Descriptor()
}

func (DynamicType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[15]
}

func (x DynamicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynamicType.Descriptor instead.
func (DynamicType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{15}
}

// 表情包类型
type EmojiType int32

const (
	EmojiType_emoji_none EmojiType = 0 // 占位
	EmojiType_emoji_old  EmojiType = 1 // emoji旧类型
	EmojiType_emoji_new  EmojiType = 2 // emoji新类型
	EmojiType_vip        EmojiType = 3 // 大会员表情
)

// Enum value maps for EmojiType.
var (
	EmojiType_name = map[int32]string{
		0: "emoji_none",
		1: "emoji_old",
		2: "emoji_new",
		3: "vip",
	}
	EmojiType_value = map[string]int32{
		"emoji_none": 0,
		"emoji_old":  1,
		"emoji_new":  2,
		"vip":        3,
	}
)

func (x EmojiType) Enum() *EmojiType {
	p := new(EmojiType)
	*p = x
	return p
}

func (x EmojiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmojiType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[16].Descriptor()
}

func (EmojiType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[16]
}

func (x EmojiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmojiType.Descriptor instead.
func (EmojiType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{16}
}

// 附加大卡-电竞卡样式
type EspaceStyle int32

const (
	EspaceStyle_moba EspaceStyle = 0 // moba类
)

// Enum value maps for EspaceStyle.
var (
	EspaceStyle_name = map[int32]string{
		0: "moba",
	}
	EspaceStyle_value = map[string]int32{
		"moba": 0,
	}
)

func (x EspaceStyle) Enum() *EspaceStyle {
	p := new(EspaceStyle)
	*p = x
	return p
}

func (x EspaceStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EspaceStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[17].Descriptor()
}

func (EspaceStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[17]
}

func (x EspaceStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EspaceStyle.Descriptor instead.
func (EspaceStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{17}
}

// 折叠类型
type FoldType int32

const (
	FoldType_FoldTypeZore     FoldType = 0 // 占位
	FoldType_FoldTypePublish  FoldType = 1 // 用户发布折叠
	FoldType_FoldTypeFrequent FoldType = 2 // 转发超频折叠
	FoldType_FoldTypeUnite    FoldType = 3 // 联合投稿折叠
	FoldType_FoldTypeLimit    FoldType = 4 // 动态受限折叠
)

// Enum value maps for FoldType.
var (
	FoldType_name = map[int32]string{
		0: "FoldTypeZore",
		1: "FoldTypePublish",
		2: "FoldTypeFrequent",
		3: "FoldTypeUnite",
		4: "FoldTypeLimit",
	}
	FoldType_value = map[string]int32{
		"FoldTypeZore":     0,
		"FoldTypePublish":  1,
		"FoldTypeFrequent": 2,
		"FoldTypeUnite":    3,
		"FoldTypeLimit":    4,
	}
)

func (x FoldType) Enum() *FoldType {
	p := new(FoldType)
	*p = x
	return p
}

func (x FoldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FoldType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[18].Descriptor()
}

func (FoldType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[18]
}

func (x FoldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FoldType.Descriptor instead.
func (FoldType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{18}
}

type FollowType int32

const (
	FollowType_ft_not_follow FollowType = 0 //
	FollowType_ft_follow     FollowType = 1 //
)

// Enum value maps for FollowType.
var (
	FollowType_name = map[int32]string{
		0: "ft_not_follow",
		1: "ft_follow",
	}
	FollowType_value = map[string]int32{
		"ft_not_follow": 0,
		"ft_follow":     1,
	}
)

func (x FollowType) Enum() *FollowType {
	p := new(FollowType)
	*p = x
	return p
}

func (x FollowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FollowType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[19].Descriptor()
}

func (FollowType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[19]
}

func (x FollowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FollowType.Descriptor instead.
func (FollowType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{19}
}

// 文本高亮枚举
type HighlightTextStyle int32

const (
	HighlightTextStyle_style_none      HighlightTextStyle = 0 // 默认
	HighlightTextStyle_style_highlight HighlightTextStyle = 1 // 高亮
)

// Enum value maps for HighlightTextStyle.
var (
	HighlightTextStyle_name = map[int32]string{
		0: "style_none",
		1: "style_highlight",
	}
	HighlightTextStyle_value = map[string]int32{
		"style_none":      0,
		"style_highlight": 1,
	}
)

func (x HighlightTextStyle) Enum() *HighlightTextStyle {
	p := new(HighlightTextStyle)
	*p = x
	return p
}

func (x HighlightTextStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HighlightTextStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[20].Descriptor()
}

func (HighlightTextStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[20]
}

func (x HighlightTextStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HighlightTextStyle.Descriptor instead.
func (HighlightTextStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{20}
}

// 枚举-附加卡样式
type ImageStyle int32

const (
	ImageStyle_add_style_vertical ImageStyle = 0 //
	ImageStyle_add_style_square   ImageStyle = 1 //
)

// Enum value maps for ImageStyle.
var (
	ImageStyle_name = map[int32]string{
		0: "add_style_vertical",
		1: "add_style_square",
	}
	ImageStyle_value = map[string]int32{
		"add_style_vertical": 0,
		"add_style_square":   1,
	}
)

func (x ImageStyle) Enum() *ImageStyle {
	p := new(ImageStyle)
	*p = x
	return p
}

func (x ImageStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[21].Descriptor()
}

func (ImageStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[21]
}

func (x ImageStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageStyle.Descriptor instead.
func (ImageStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{21}
}

type LightFromType int32

const (
	LightFromType_from_login   LightFromType = 0 //
	LightFromType_from_unlogin LightFromType = 1 //
)

// Enum value maps for LightFromType.
var (
	LightFromType_name = map[int32]string{
		0: "from_login",
		1: "from_unlogin",
	}
	LightFromType_value = map[string]int32{
		"from_login":   0,
		"from_unlogin": 1,
	}
)

func (x LightFromType) Enum() *LightFromType {
	p := new(LightFromType)
	*p = x
	return p
}

func (x LightFromType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LightFromType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[22].Descriptor()
}

func (LightFromType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[22]
}

func (x LightFromType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LightFromType.Descriptor instead.
func (LightFromType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{22}
}

// 直播状态
type LiveState int32

const (
	LiveState_live_none     LiveState = 0 // 未直播
	LiveState_live_live     LiveState = 1 // 直播中
	LiveState_live_rotation LiveState = 2 // 轮播中
)

// Enum value maps for LiveState.
var (
	LiveState_name = map[int32]string{
		0: "live_none",
		1: "live_live",
		2: "live_rotation",
	}
	LiveState_value = map[string]int32{
		"live_none":     0,
		"live_live":     1,
		"live_rotation": 2,
	}
)

func (x LiveState) Enum() *LiveState {
	p := new(LiveState)
	*p = x
	return p
}

func (x LiveState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LiveState) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[23].Descriptor()
}

func (LiveState) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[23]
}

func (x LiveState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LiveState.Descriptor instead.
func (LiveState) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{23}
}

// 外露模块类型
type LocalIconType int32

const (
	LocalIconType_local_icon_comment LocalIconType = 0 //
	LocalIconType_local_icon_like    LocalIconType = 1 //
)

// Enum value maps for LocalIconType.
var (
	LocalIconType_name = map[int32]string{
		0: "local_icon_comment",
		1: "local_icon_like",
	}
	LocalIconType_value = map[string]int32{
		"local_icon_comment": 0,
		"local_icon_like":    1,
	}
)

func (x LocalIconType) Enum() *LocalIconType {
	p := new(LocalIconType)
	*p = x
	return p
}

func (x LocalIconType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocalIconType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[24].Descriptor()
}

func (LocalIconType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[24]
}

func (x LocalIconType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocalIconType.Descriptor instead.
func (LocalIconType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{24}
}

type MdlDynCommonType int32

const (
	MdlDynCommonType_mdl_dyn_common_none    MdlDynCommonType = 0 //
	MdlDynCommonType_mdl_dyn_common_square  MdlDynCommonType = 1 //
	MdlDynCommonType_mdl_dyn_common_vertica MdlDynCommonType = 2 //
)

// Enum value maps for MdlDynCommonType.
var (
	MdlDynCommonType_name = map[int32]string{
		0: "mdl_dyn_common_none",
		1: "mdl_dyn_common_square",
		2: "mdl_dyn_common_vertica",
	}
	MdlDynCommonType_value = map[string]int32{
		"mdl_dyn_common_none":    0,
		"mdl_dyn_common_square":  1,
		"mdl_dyn_common_vertica": 2,
	}
)

func (x MdlDynCommonType) Enum() *MdlDynCommonType {
	p := new(MdlDynCommonType)
	*p = x
	return p
}

func (x MdlDynCommonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MdlDynCommonType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[25].Descriptor()
}

func (MdlDynCommonType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[25]
}

func (x MdlDynCommonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MdlDynCommonType.Descriptor instead.
func (MdlDynCommonType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{25}
}

// 图文标签类型
type MdlDynDrawTagType int32

const (
	MdlDynDrawTagType_mdl_draw_tag_none   MdlDynDrawTagType = 0 // 占位
	MdlDynDrawTagType_mdl_draw_tag_common MdlDynDrawTagType = 1 // 普通标签
	MdlDynDrawTagType_mdl_draw_tag_goods  MdlDynDrawTagType = 2 // 商品标签
	MdlDynDrawTagType_mdl_draw_tag_user   MdlDynDrawTagType = 3 // 用户昵称
	MdlDynDrawTagType_mdl_draw_tag_topic  MdlDynDrawTagType = 4 // 话题名称
	MdlDynDrawTagType_mdl_draw_tag_lbs    MdlDynDrawTagType = 5 // lbs标签
)

// Enum value maps for MdlDynDrawTagType.
var (
	MdlDynDrawTagType_name = map[int32]string{
		0: "mdl_draw_tag_none",
		1: "mdl_draw_tag_common",
		2: "mdl_draw_tag_goods",
		3: "mdl_draw_tag_user",
		4: "mdl_draw_tag_topic",
		5: "mdl_draw_tag_lbs",
	}
	MdlDynDrawTagType_value = map[string]int32{
		"mdl_draw_tag_none":   0,
		"mdl_draw_tag_common": 1,
		"mdl_draw_tag_goods":  2,
		"mdl_draw_tag_user":   3,
		"mdl_draw_tag_topic":  4,
		"mdl_draw_tag_lbs":    5,
	}
)

func (x MdlDynDrawTagType) Enum() *MdlDynDrawTagType {
	p := new(MdlDynDrawTagType)
	*p = x
	return p
}

func (x MdlDynDrawTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MdlDynDrawTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[26].Descriptor()
}

func (MdlDynDrawTagType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[26]
}

func (x MdlDynDrawTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MdlDynDrawTagType.Descriptor instead.
func (MdlDynDrawTagType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{26}
}

type MdlDynSubscriptionNewStyle int32

const (
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_nont MdlDynSubscriptionNewStyle = 0 // 占位
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_live MdlDynSubscriptionNewStyle = 1 // 直播
	MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_draw MdlDynSubscriptionNewStyle = 2 // 图文
)

// Enum value maps for MdlDynSubscriptionNewStyle.
var (
	MdlDynSubscriptionNewStyle_name = map[int32]string{
		0: "mdl_dyn_subscription_new_style_nont",
		1: "mdl_dyn_subscription_new_style_live",
		2: "mdl_dyn_subscription_new_style_draw",
	}
	MdlDynSubscriptionNewStyle_value = map[string]int32{
		"mdl_dyn_subscription_new_style_nont": 0,
		"mdl_dyn_subscription_new_style_live": 1,
		"mdl_dyn_subscription_new_style_draw": 2,
	}
)

func (x MdlDynSubscriptionNewStyle) Enum() *MdlDynSubscriptionNewStyle {
	p := new(MdlDynSubscriptionNewStyle)
	*p = x
	return p
}

func (x MdlDynSubscriptionNewStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MdlDynSubscriptionNewStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[27].Descriptor()
}

func (MdlDynSubscriptionNewStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[27]
}

func (x MdlDynSubscriptionNewStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MdlDynSubscriptionNewStyle.Descriptor instead.
func (MdlDynSubscriptionNewStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{27}
}

// 播放器类型
type MediaType int32

const (
	MediaType_MediaTypeNone MediaType = 0 // 本地
	MediaType_MediaTypeUGC  MediaType = 1 // UGC
	MediaType_MediaTypePGC  MediaType = 2 // PGC
	MediaType_MediaTypeLive MediaType = 3 // 直播
	MediaType_MediaTypeVCS  MediaType = 4 // 小视频
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MediaTypeNone",
		1: "MediaTypeUGC",
		2: "MediaTypePGC",
		3: "MediaTypeLive",
		4: "MediaTypeVCS",
	}
	MediaType_value = map[string]int32{
		"MediaTypeNone": 0,
		"MediaTypeUGC":  1,
		"MediaTypePGC":  2,
		"MediaTypeLive": 3,
		"MediaTypeVCS":  4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[28].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[28]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{28}
}

// 右侧操作区域样式枚举
type ModuleAuthorBadgeType int32

const (
	ModuleAuthorBadgeType_module_author_badge_type_none       ModuleAuthorBadgeType = 0 // 占位
	ModuleAuthorBadgeType_module_author_badge_type_threePoint ModuleAuthorBadgeType = 1 // 三点
	ModuleAuthorBadgeType_module_author_badge_type_button     ModuleAuthorBadgeType = 2 // 按钮类型
	ModuleAuthorBadgeType_module_author_badge_type_weight     ModuleAuthorBadgeType = 3 // 提权
)

// Enum value maps for ModuleAuthorBadgeType.
var (
	ModuleAuthorBadgeType_name = map[int32]string{
		0: "module_author_badge_type_none",
		1: "module_author_badge_type_threePoint",
		2: "module_author_badge_type_button",
		3: "module_author_badge_type_weight",
	}
	ModuleAuthorBadgeType_value = map[string]int32{
		"module_author_badge_type_none":       0,
		"module_author_badge_type_threePoint": 1,
		"module_author_badge_type_button":     2,
		"module_author_badge_type_weight":     3,
	}
)

func (x ModuleAuthorBadgeType) Enum() *ModuleAuthorBadgeType {
	p := new(ModuleAuthorBadgeType)
	*p = x
	return p
}

func (x ModuleAuthorBadgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleAuthorBadgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[29].Descriptor()
}

func (ModuleAuthorBadgeType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[29]
}

func (x ModuleAuthorBadgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleAuthorBadgeType.Descriptor instead.
func (ModuleAuthorBadgeType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{29}
}

// 动态列表-通栏类型
type ModuleBannerType int32

const (
	ModuleBannerType_module_banner_type_none ModuleBannerType = 0 //
	ModuleBannerType_module_banner_type_user ModuleBannerType = 1 //
)

// Enum value maps for ModuleBannerType.
var (
	ModuleBannerType_name = map[int32]string{
		0: "module_banner_type_none",
		1: "module_banner_type_user",
	}
	ModuleBannerType_value = map[string]int32{
		"module_banner_type_none": 0,
		"module_banner_type_user": 1,
	}
)

func (x ModuleBannerType) Enum() *ModuleBannerType {
	p := new(ModuleBannerType)
	*p = x
	return p
}

func (x ModuleBannerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleBannerType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[30].Descriptor()
}

func (ModuleBannerType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[30]
}

func (x ModuleBannerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleBannerType.Descriptor instead.
func (ModuleBannerType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{30}
}

// 动态详情模块类型
type ModuleDynamicType int32

const (
	ModuleDynamicType_mdl_dyn_archive          ModuleDynamicType = 0  // 稿件
	ModuleDynamicType_mdl_dyn_pgc              ModuleDynamicType = 1  // pgc
	ModuleDynamicType_mdl_dyn_cour_season      ModuleDynamicType = 2  // 付费课程-系列
	ModuleDynamicType_mdl_dyn_cour_batch       ModuleDynamicType = 3  // 付费课程-批次
	ModuleDynamicType_mdl_dyn_forward          ModuleDynamicType = 4  // 转发卡
	ModuleDynamicType_mdl_dyn_draw             ModuleDynamicType = 5  // 图文
	ModuleDynamicType_mdl_dyn_article          ModuleDynamicType = 6  // 专栏
	ModuleDynamicType_mdl_dyn_music            ModuleDynamicType = 7  // 音频
	ModuleDynamicType_mdl_dyn_common           ModuleDynamicType = 8  // 通用卡方
	ModuleDynamicType_mdl_dyn_live             ModuleDynamicType = 9  // 直播卡
	ModuleDynamicType_mdl_dyn_medialist        ModuleDynamicType = 10 // 播单
	ModuleDynamicType_mdl_dyn_applet           ModuleDynamicType = 11 // 小程序卡
	ModuleDynamicType_mdl_dyn_subscription     ModuleDynamicType = 12 // 订阅卡
	ModuleDynamicType_mdl_dyn_live_rcmd        ModuleDynamicType = 13 // 直播推荐卡
	ModuleDynamicType_mdl_dyn_ugc_season       ModuleDynamicType = 14 // UGC合集
	ModuleDynamicType_mdl_dyn_subscription_new ModuleDynamicType = 15 // 订阅卡
)

// Enum value maps for ModuleDynamicType.
var (
	ModuleDynamicType_name = map[int32]string{
		0:  "mdl_dyn_archive",
		1:  "mdl_dyn_pgc",
		2:  "mdl_dyn_cour_season",
		3:  "mdl_dyn_cour_batch",
		4:  "mdl_dyn_forward",
		5:  "mdl_dyn_draw",
		6:  "mdl_dyn_article",
		7:  "mdl_dyn_music",
		8:  "mdl_dyn_common",
		9:  "mdl_dyn_live",
		10: "mdl_dyn_medialist",
		11: "mdl_dyn_applet",
		12: "mdl_dyn_subscription",
		13: "mdl_dyn_live_rcmd",
		14: "mdl_dyn_ugc_season",
		15: "mdl_dyn_subscription_new",
	}
	ModuleDynamicType_value = map[string]int32{
		"mdl_dyn_archive":          0,
		"mdl_dyn_pgc":              1,
		"mdl_dyn_cour_season":      2,
		"mdl_dyn_cour_batch":       3,
		"mdl_dyn_forward":          4,
		"mdl_dyn_draw":             5,
		"mdl_dyn_article":          6,
		"mdl_dyn_music":            7,
		"mdl_dyn_common":           8,
		"mdl_dyn_live":             9,
		"mdl_dyn_medialist":        10,
		"mdl_dyn_applet":           11,
		"mdl_dyn_subscription":     12,
		"mdl_dyn_live_rcmd":        13,
		"mdl_dyn_ugc_season":       14,
		"mdl_dyn_subscription_new": 15,
	}
)

func (x ModuleDynamicType) Enum() *ModuleDynamicType {
	p := new(ModuleDynamicType)
	*p = x
	return p
}

func (x ModuleDynamicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleDynamicType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[31].Descriptor()
}

func (ModuleDynamicType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[31]
}

func (x ModuleDynamicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleDynamicType.Descriptor instead.
func (ModuleDynamicType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{31}
}

type NetworkType int32

const (
	NetworkType_NT_UNKNOWN NetworkType = 0 //
	NetworkType_WIFI       NetworkType = 1 //
	NetworkType_CELLULAR   NetworkType = 2 //
	NetworkType_OFFLINE    NetworkType = 3 //
	NetworkType_OTHERNET   NetworkType = 4 //
	NetworkType_ETHERNET   NetworkType = 5 //
)

// Enum value maps for NetworkType.
var (
	NetworkType_name = map[int32]string{
		0: "NT_UNKNOWN",
		1: "WIFI",
		2: "CELLULAR",
		3: "OFFLINE",
		4: "OTHERNET",
		5: "ETHERNET",
	}
	NetworkType_value = map[string]int32{
		"NT_UNKNOWN": 0,
		"WIFI":       1,
		"CELLULAR":   2,
		"OFFLINE":    3,
		"OTHERNET":   4,
		"ETHERNET":   5,
	}
)

func (x NetworkType) Enum() *NetworkType {
	p := new(NetworkType)
	*p = x
	return p
}

func (x NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[32].Descriptor()
}

func (NetworkType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[32]
}

func (x NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkType.Descriptor instead.
func (NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{32}
}

// 推荐模块数据类型
type RcmdType int32

const (
	RcmdType_rcmd_archive RcmdType = 0 // 稿件
	RcmdType_rcmd_dynamic RcmdType = 1 // 动态
)

// Enum value maps for RcmdType.
var (
	RcmdType_name = map[int32]string{
		0: "rcmd_archive",
		1: "rcmd_dynamic",
	}
	RcmdType_value = map[string]int32{
		"rcmd_archive": 0,
		"rcmd_dynamic": 1,
	}
)

func (x RcmdType) Enum() *RcmdType {
	p := new(RcmdType)
	*p = x
	return p
}

func (x RcmdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RcmdType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[33].Descriptor()
}

func (RcmdType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[33]
}

func (x RcmdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RcmdType.Descriptor instead.
func (RcmdType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{33}
}

// 刷新方式
type Refresh int32

const (
	Refresh_refresh_new     Refresh = 0 // 刷新列表
	Refresh_refresh_history Refresh = 1 // 请求历史
)

// Enum value maps for Refresh.
var (
	Refresh_name = map[int32]string{
		0: "refresh_new",
		1: "refresh_history",
	}
	Refresh_value = map[string]int32{
		"refresh_new":     0,
		"refresh_history": 1,
	}
)

func (x Refresh) Enum() *Refresh {
	p := new(Refresh)
	*p = x
	return p
}

func (x Refresh) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Refresh) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[34].Descriptor()
}

func (Refresh) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[34]
}

func (x Refresh) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Refresh.Descriptor instead.
func (Refresh) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{34}
}

// 关注关系 枚举
type RelationStatus int32

const (
	// 1-未关注 2-关注 3-被关注 4-互相关注 5-特别关注
	RelationStatus_relation_status_none           RelationStatus = 0
	RelationStatus_relation_status_nofollow       RelationStatus = 1
	RelationStatus_relation_status_follow         RelationStatus = 2
	RelationStatus_relation_status_followed       RelationStatus = 3
	RelationStatus_relation_status_mutual_concern RelationStatus = 4
	RelationStatus_relation_status_special        RelationStatus = 5
)

// Enum value maps for RelationStatus.
var (
	RelationStatus_name = map[int32]string{
		0: "relation_status_none",
		1: "relation_status_nofollow",
		2: "relation_status_follow",
		3: "relation_status_followed",
		4: "relation_status_mutual_concern",
		5: "relation_status_special",
	}
	RelationStatus_value = map[string]int32{
		"relation_status_none":           0,
		"relation_status_nofollow":       1,
		"relation_status_follow":         2,
		"relation_status_followed":       3,
		"relation_status_mutual_concern": 4,
		"relation_status_special":        5,
	}
)

func (x RelationStatus) Enum() *RelationStatus {
	p := new(RelationStatus)
	*p = x
	return p
}

func (x RelationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[35].Descriptor()
}

func (RelationStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[35]
}

func (x RelationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationStatus.Descriptor instead.
func (RelationStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{35}
}

// 评论类型
type RepostType int32

const (
	RepostType_repost_hot     RepostType = 0 // 热门评论
	RepostType_repost_general RepostType = 1 // 普通评论
)

// Enum value maps for RepostType.
var (
	RepostType_name = map[int32]string{
		0: "repost_hot",
		1: "repost_general",
	}
	RepostType_value = map[string]int32{
		"repost_hot":     0,
		"repost_general": 1,
	}
)

func (x RepostType) Enum() *RepostType {
	p := new(RepostType)
	*p = x
	return p
}

func (x RepostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepostType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[36].Descriptor()
}

func (RepostType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[36]
}

func (x RepostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepostType.Descriptor instead.
func (RepostType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{36}
}

type ReserveRelationLotteryType int32

const (
	ReserveRelationLotteryType_reserve_relation_lottery_type_default ReserveRelationLotteryType = 0 //
	ReserveRelationLotteryType_reserve_relation_lottery_type_cron    ReserveRelationLotteryType = 1 //
)

// Enum value maps for ReserveRelationLotteryType.
var (
	ReserveRelationLotteryType_name = map[int32]string{
		0: "reserve_relation_lottery_type_default",
		1: "reserve_relation_lottery_type_cron",
	}
	ReserveRelationLotteryType_value = map[string]int32{
		"reserve_relation_lottery_type_default": 0,
		"reserve_relation_lottery_type_cron":    1,
	}
)

func (x ReserveRelationLotteryType) Enum() *ReserveRelationLotteryType {
	p := new(ReserveRelationLotteryType)
	*p = x
	return p
}

func (x ReserveRelationLotteryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveRelationLotteryType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[37].Descriptor()
}

func (ReserveRelationLotteryType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[37]
}

func (x ReserveRelationLotteryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveRelationLotteryType.Descriptor instead.
func (ReserveRelationLotteryType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{37}
}

type ReserveType int32

const (
	ReserveType_reserve_none   ReserveType = 0 // 占位
	ReserveType_reserve_recall ReserveType = 1 // 预约召回
)

// Enum value maps for ReserveType.
var (
	ReserveType_name = map[int32]string{
		0: "reserve_none",
		1: "reserve_recall",
	}
	ReserveType_value = map[string]int32{
		"reserve_none":   0,
		"reserve_recall": 1,
	}
)

func (x ReserveType) Enum() *ReserveType {
	p := new(ReserveType)
	*p = x
	return p
}

func (x ReserveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[38].Descriptor()
}

func (ReserveType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[38]
}

func (x ReserveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveType.Descriptor instead.
func (ReserveType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{38}
}

type ShowType int32

const (
	ShowType_show_type_none   ShowType = 0 //
	ShowType_show_type_backup ShowType = 1 //
)

// Enum value maps for ShowType.
var (
	ShowType_name = map[int32]string{
		0: "show_type_none",
		1: "show_type_backup",
	}
	ShowType_value = map[string]int32{
		"show_type_none":   0,
		"show_type_backup": 1,
	}
)

func (x ShowType) Enum() *ShowType {
	p := new(ShowType)
	*p = x
	return p
}

func (x ShowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShowType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[39].Descriptor()
}

func (ShowType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[39]
}

func (x ShowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShowType.Descriptor instead.
func (ShowType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{39}
}

type StyleType int32

const (
	StyleType_STYLE_TYPE_NONE   StyleType = 0 //
	StyleType_STYLE_TYPE_LIVE   StyleType = 1 //
	StyleType_STYLE_TYPE_DYN_UP StyleType = 2 //
)

// Enum value maps for StyleType.
var (
	StyleType_name = map[int32]string{
		0: "STYLE_TYPE_NONE",
		1: "STYLE_TYPE_LIVE",
		2: "STYLE_TYPE_DYN_UP",
	}
	StyleType_value = map[string]int32{
		"STYLE_TYPE_NONE":   0,
		"STYLE_TYPE_LIVE":   1,
		"STYLE_TYPE_DYN_UP": 2,
	}
)

func (x StyleType) Enum() *StyleType {
	p := new(StyleType)
	*p = x
	return p
}

func (x StyleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StyleType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[40].Descriptor()
}

func (StyleType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[40]
}

func (x StyleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StyleType.Descriptor instead.
func (StyleType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{40}
}

type TFType int32

const (
	TFType_U_CARD TFType = 0 //
	TFType_U_PKG  TFType = 1 //
	TFType_C_CARD TFType = 2 //
	TFType_C_PKG  TFType = 3 //
	TFType_T_CARD TFType = 4 //
	TFType_T_PKG  TFType = 5 //
)

// Enum value maps for TFType.
var (
	TFType_name = map[int32]string{
		0: "U_CARD",
		1: "U_PKG",
		2: "C_CARD",
		3: "C_PKG",
		4: "T_CARD",
		5: "T_PKG",
	}
	TFType_value = map[string]int32{
		"U_CARD": 0,
		"U_PKG":  1,
		"C_CARD": 2,
		"C_PKG":  3,
		"T_CARD": 4,
		"T_PKG":  5,
	}
)

func (x TFType) Enum() *TFType {
	p := new(TFType)
	*p = x
	return p
}

func (x TFType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TFType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[41].Descriptor()
}

func (TFType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[41]
}

func (x TFType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TFType.Descriptor instead.
func (TFType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{41}
}

// 枚举-三点关注状态
type ThreePointAttentionStatus int32

const (
	ThreePointAttentionStatus_tp_not_attention ThreePointAttentionStatus = 0 //
	ThreePointAttentionStatus_tp_attention     ThreePointAttentionStatus = 1 //
)

// Enum value maps for ThreePointAttentionStatus.
var (
	ThreePointAttentionStatus_name = map[int32]string{
		0: "tp_not_attention",
		1: "tp_attention",
	}
	ThreePointAttentionStatus_value = map[string]int32{
		"tp_not_attention": 0,
		"tp_attention":     1,
	}
)

func (x ThreePointAttentionStatus) Enum() *ThreePointAttentionStatus {
	p := new(ThreePointAttentionStatus)
	*p = x
	return p
}

func (x ThreePointAttentionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreePointAttentionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[42].Descriptor()
}

func (ThreePointAttentionStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[42]
}

func (x ThreePointAttentionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreePointAttentionStatus.Descriptor instead.
func (ThreePointAttentionStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{42}
}

// 三点类型
type ThreePointType int32

const (
	ThreePointType_tp_none          ThreePointType = 0  // 占位
	ThreePointType_background       ThreePointType = 1  // 使用此背景
	ThreePointType_auto_play        ThreePointType = 2  // 自动播放
	ThreePointType_share            ThreePointType = 3  // 分享
	ThreePointType_wait             ThreePointType = 4  // 稍后再播
	ThreePointType_attention        ThreePointType = 5  // 关注
	ThreePointType_report           ThreePointType = 6  // 举报
	ThreePointType_delete           ThreePointType = 7  // 删除
	ThreePointType_dislike          ThreePointType = 8  // 不感兴趣
	ThreePointType_favorite         ThreePointType = 9  // 收藏
	ThreePointType_top              ThreePointType = 10 // 置顶
	ThreePointType_comment          ThreePointType = 11 // 评论
	ThreePointType_hide             ThreePointType = 12 //
	ThreePointType_campus_delete    ThreePointType = 13 //
	ThreePointType_topic_irrelevant ThreePointType = 14 //
)

// Enum value maps for ThreePointType.
var (
	ThreePointType_name = map[int32]string{
		0:  "tp_none",
		1:  "background",
		2:  "auto_play",
		3:  "share",
		4:  "wait",
		5:  "attention",
		6:  "report",
		7:  "delete",
		8:  "dislike",
		9:  "favorite",
		10: "top",
		11: "comment",
		12: "hide",
		13: "campus_delete",
		14: "topic_irrelevant",
	}
	ThreePointType_value = map[string]int32{
		"tp_none":          0,
		"background":       1,
		"auto_play":        2,
		"share":            3,
		"wait":             4,
		"attention":        5,
		"report":           6,
		"delete":           7,
		"dislike":          8,
		"favorite":         9,
		"top":              10,
		"comment":          11,
		"hide":             12,
		"campus_delete":    13,
		"topic_irrelevant": 14,
	}
)

func (x ThreePointType) Enum() *ThreePointType {
	p := new(ThreePointType)
	*p = x
	return p
}

func (x ThreePointType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreePointType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[43].Descriptor()
}

func (ThreePointType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[43]
}

func (x ThreePointType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreePointType.Descriptor instead.
func (ThreePointType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{43}
}

type ThumbType int32

const (
	ThumbType_cancel ThumbType = 0 //
	ThumbType_thumb  ThumbType = 1 //
)

// Enum value maps for ThumbType.
var (
	ThumbType_name = map[int32]string{
		0: "cancel",
		1: "thumb",
	}
	ThumbType_value = map[string]int32{
		"cancel": 0,
		"thumb":  1,
	}
)

func (x ThumbType) Enum() *ThumbType {
	p := new(ThumbType)
	*p = x
	return p
}

func (x ThumbType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThumbType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[44].Descriptor()
}

func (ThumbType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[44]
}

func (x ThumbType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThumbType.Descriptor instead.
func (ThumbType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{44}
}

// 状态
type TopType int32

const (
	TopType_top_none   TopType = 0 // 默认 置顶
	TopType_top_cancel TopType = 1 // 取消置顶
)

// Enum value maps for TopType.
var (
	TopType_name = map[int32]string{
		0: "top_none",
		1: "top_cancel",
	}
	TopType_value = map[string]int32{
		"top_none":   0,
		"top_cancel": 1,
	}
)

func (x TopType) Enum() *TopType {
	p := new(TopType)
	*p = x
	return p
}

func (x TopType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[45].Descriptor()
}

func (TopType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[45]
}

func (x TopType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopType.Descriptor instead.
func (TopType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{45}
}

// 用户类型
type UserItemType int32

const (
	UserItemType_user_item_type_none        UserItemType = 0 //
	UserItemType_user_item_type_live        UserItemType = 1 //
	UserItemType_user_item_type_live_custom UserItemType = 2 //
	UserItemType_user_item_type_normal      UserItemType = 3 //
	UserItemType_user_item_type_extend      UserItemType = 4 //
)

// Enum value maps for UserItemType.
var (
	UserItemType_name = map[int32]string{
		0: "user_item_type_none",
		1: "user_item_type_live",
		2: "user_item_type_live_custom",
		3: "user_item_type_normal",
		4: "user_item_type_extend",
	}
	UserItemType_value = map[string]int32{
		"user_item_type_none":        0,
		"user_item_type_live":        1,
		"user_item_type_live_custom": 2,
		"user_item_type_normal":      3,
		"user_item_type_extend":      4,
	}
)

func (x UserItemType) Enum() *UserItemType {
	p := new(UserItemType)
	*p = x
	return p
}

func (x UserItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[46].Descriptor()
}

func (UserItemType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[46]
}

func (x UserItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserItemType.Descriptor instead.
func (UserItemType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{46}
}

// 番剧类型
type VideoSubType int32

const (
	VideoSubType_VideoSubTypeNone        VideoSubType = 0 // 没有子类型
	VideoSubType_VideoSubTypeBangumi     VideoSubType = 1 // 番剧
	VideoSubType_VideoSubTypeMovie       VideoSubType = 2 // 电影
	VideoSubType_VideoSubTypeDocumentary VideoSubType = 3 // 纪录片
	VideoSubType_VideoSubTypeDomestic    VideoSubType = 4 // 国创
	VideoSubType_VideoSubTypeTeleplay    VideoSubType = 5 // 电视剧
)

// Enum value maps for VideoSubType.
var (
	VideoSubType_name = map[int32]string{
		0: "VideoSubTypeNone",
		1: "VideoSubTypeBangumi",
		2: "VideoSubTypeMovie",
		3: "VideoSubTypeDocumentary",
		4: "VideoSubTypeDomestic",
		5: "VideoSubTypeTeleplay",
	}
	VideoSubType_value = map[string]int32{
		"VideoSubTypeNone":        0,
		"VideoSubTypeBangumi":     1,
		"VideoSubTypeMovie":       2,
		"VideoSubTypeDocumentary": 3,
		"VideoSubTypeDomestic":    4,
		"VideoSubTypeTeleplay":    5,
	}
)

func (x VideoSubType) Enum() *VideoSubType {
	p := new(VideoSubType)
	*p = x
	return p
}

func (x VideoSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[47].Descriptor()
}

func (VideoSubType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[47]
}

func (x VideoSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoSubType.Descriptor instead.
func (VideoSubType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{47}
}

// 视频类型
type VideoType int32

const (
	VideoType_video_type_general  VideoType = 0 //普通视频
	VideoType_video_type_dynamic  VideoType = 1 //动态视频
	VideoType_video_type_playback VideoType = 2 //直播回放视频
	VideoType_video_type_story    VideoType = 3 //
)

// Enum value maps for VideoType.
var (
	VideoType_name = map[int32]string{
		0: "video_type_general",
		1: "video_type_dynamic",
		2: "video_type_playback",
		3: "video_type_story",
	}
	VideoType_value = map[string]int32{
		"video_type_general":  0,
		"video_type_dynamic":  1,
		"video_type_playback": 2,
		"video_type_story":    3,
	}
)

func (x VideoType) Enum() *VideoType {
	p := new(VideoType)
	*p = x
	return p
}

func (x VideoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VideoType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[48].Descriptor()
}

func (VideoType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[48]
}

func (x VideoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VideoType.Descriptor instead.
func (VideoType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{48}
}

// 状态
type VoteStatus int32

const (
	VoteStatus_normal    VoteStatus = 0 // 正常
	VoteStatus_anonymous VoteStatus = 1 // 匿名
)

// Enum value maps for VoteStatus.
var (
	VoteStatus_name = map[int32]string{
		0: "normal",
		1: "anonymous",
	}
	VoteStatus_value = map[string]int32{
		"normal":    0,
		"anonymous": 1,
	}
)

func (x VoteStatus) Enum() *VoteStatus {
	p := new(VoteStatus)
	*p = x
	return p
}

func (x VoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[49].Descriptor()
}

func (VoteStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[49]
}

func (x VoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteStatus.Descriptor instead.
func (VoteStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{49}
}

// 枚举-提权类型
type WeightType int32

const (
	WeightType_weight_none    WeightType = 0 // 默认 占位
	WeightType_weight_dislike WeightType = 1 // 不感兴趣
	WeightType_weight_jump    WeightType = 2 // 跳链
)

// Enum value maps for WeightType.
var (
	WeightType_name = map[int32]string{
		0: "weight_none",
		1: "weight_dislike",
		2: "weight_jump",
	}
	WeightType_value = map[string]int32{
		"weight_none":    0,
		"weight_dislike": 1,
		"weight_jump":    2,
	}
)

func (x WeightType) Enum() *WeightType {
	p := new(WeightType)
	*p = x
	return p
}

func (x WeightType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeightType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[50].Descriptor()
}

func (WeightType) Type() protoreflect.EnumType {
	return &file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes[50]
}

func (x WeightType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeightType.Descriptor instead.
func (WeightType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{50}
}

// 综合页请求广告所需字段，由客户端-网关透传
type AdParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 综合页请求广告所需字段，由客户端-网关透传
	AdExtra string `protobuf:"bytes,1,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	// request_id
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *AdParam) Reset() {
	*x = AdParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdParam) ProtoMessage() {}

func (x *AdParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdParam.ProtoReflect.Descriptor instead.
func (*AdParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{0}
}

func (x *AdParam) GetAdExtra() string {
	if x != nil {
		return x.AdExtra
	}
	return ""
}

func (x *AdParam) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// 动态-附加卡-通用卡
type AdditionCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示图
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
	// 头部icon
	HeadIcon string `protobuf:"bytes,8,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
	// style
	Style ImageStyle `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.ImageStyle" json:"style,omitempty"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,11,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"` // ogv manga
}

func (x *AdditionCommon) Reset() {
	*x = AdditionCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionCommon) ProtoMessage() {}

func (x *AdditionCommon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionCommon.ProtoReflect.Descriptor instead.
func (*AdditionCommon) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{1}
}

func (x *AdditionCommon) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *AdditionCommon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionCommon) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AdditionCommon) GetDescText_1() string {
	if x != nil {
		return x.DescText_1
	}
	return ""
}

func (x *AdditionCommon) GetDescText_2() string {
	if x != nil {
		return x.DescText_2
	}
	return ""
}

func (x *AdditionCommon) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdditionCommon) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *AdditionCommon) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *AdditionCommon) GetStyle() ImageStyle {
	if x != nil {
		return x.Style
	}
	return ImageStyle_add_style_vertical
}

func (x *AdditionCommon) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdditionCommon) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

// 动态-附加卡-电竞卡
type AdditionEsport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 电竞类型
	Style EspaceStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.EspaceStyle" json:"style,omitempty"`
	// Types that are assignable to Item:
	//
	//	*AdditionEsport_AdditionEsportMoba
	Item isAdditionEsport_Item `protobuf_oneof:"item"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,4,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"` // ogv manga
}

func (x *AdditionEsport) Reset() {
	*x = AdditionEsport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionEsport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionEsport) ProtoMessage() {}

func (x *AdditionEsport) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionEsport.ProtoReflect.Descriptor instead.
func (*AdditionEsport) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{2}
}

func (x *AdditionEsport) GetStyle() EspaceStyle {
	if x != nil {
		return x.Style
	}
	return EspaceStyle_moba
}

func (m *AdditionEsport) GetItem() isAdditionEsport_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *AdditionEsport) GetAdditionEsportMoba() *AdditionEsportMoba {
	if x, ok := x.GetItem().(*AdditionEsport_AdditionEsportMoba); ok {
		return x.AdditionEsportMoba
	}
	return nil
}

func (x *AdditionEsport) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdditionEsport) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

type isAdditionEsport_Item interface {
	isAdditionEsport_Item()
}

type AdditionEsport_AdditionEsportMoba struct {
	// moba类
	AdditionEsportMoba *AdditionEsportMoba `protobuf:"bytes,2,opt,name=addition_esport_moba,json=additionEsportMoba,proto3,oneof"`
}

func (*AdditionEsport_AdditionEsportMoba) isAdditionEsport_Item() {}

// 动态-附加卡-电竞卡-moba类
type AdditionEsportMoba struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 战队列表
	MatchTeam []*MatchTeam `protobuf:"bytes,3,rep,name=match_team,json=matchTeam,proto3" json:"match_team,omitempty"`
	// 比赛信息
	AdditionEsportMobaStatus *AdditionEsportMobaStatus `protobuf:"bytes,4,opt,name=addition_esport_moba_status,json=additionEsportMobaStatus,proto3" json:"addition_esport_moba_status,omitempty"`
	// 卡片跳转
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,6,opt,name=button,proto3" json:"button,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,7,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,11,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 附加卡图标
	HeadIcon string `protobuf:"bytes,12,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
}

func (x *AdditionEsportMoba) Reset() {
	*x = AdditionEsportMoba{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionEsportMoba) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionEsportMoba) ProtoMessage() {}

func (x *AdditionEsportMoba) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionEsportMoba.ProtoReflect.Descriptor instead.
func (*AdditionEsportMoba) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{3}
}

func (x *AdditionEsportMoba) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *AdditionEsportMoba) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionEsportMoba) GetMatchTeam() []*MatchTeam {
	if x != nil {
		return x.MatchTeam
	}
	return nil
}

func (x *AdditionEsportMoba) GetAdditionEsportMobaStatus() *AdditionEsportMobaStatus {
	if x != nil {
		return x.AdditionEsportMobaStatus
	}
	return nil
}

func (x *AdditionEsportMoba) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AdditionEsportMoba) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *AdditionEsportMoba) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *AdditionEsportMoba) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdditionEsportMoba) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *AdditionEsportMoba) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

// 动态-附加卡-电竞卡-moba类-比赛信息
type AdditionEsportMobaStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案类
	AdditionEsportMobaStatusDesc []*AdditionEsportMobaStatusDesc `protobuf:"bytes,1,rep,name=addition_esport_moba_status_desc,json=additionEsportMobaStatusDesc,proto3" json:"addition_esport_moba_status_desc,omitempty"`
	// 比赛状态文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 比赛状态状态
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor string `protobuf:"bytes,5,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
}

func (x *AdditionEsportMobaStatus) Reset() {
	*x = AdditionEsportMobaStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionEsportMobaStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionEsportMobaStatus) ProtoMessage() {}

func (x *AdditionEsportMobaStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionEsportMobaStatus.ProtoReflect.Descriptor instead.
func (*AdditionEsportMobaStatus) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{4}
}

func (x *AdditionEsportMobaStatus) GetAdditionEsportMobaStatusDesc() []*AdditionEsportMobaStatusDesc {
	if x != nil {
		return x.AdditionEsportMobaStatusDesc
	}
	return nil
}

func (x *AdditionEsportMobaStatus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionEsportMobaStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdditionEsportMobaStatus) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AdditionEsportMobaStatus) GetNightColor() string {
	if x != nil {
		return x.NightColor
	}
	return ""
}

// 动态-附加卡-电竞卡-moba类-比赛信息-文案类
type AdditionEsportMobaStatusDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor string `protobuf:"bytes,3,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
}

func (x *AdditionEsportMobaStatusDesc) Reset() {
	*x = AdditionEsportMobaStatusDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionEsportMobaStatusDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionEsportMobaStatusDesc) ProtoMessage() {}

func (x *AdditionEsportMobaStatusDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionEsportMobaStatusDesc.ProtoReflect.Descriptor instead.
func (*AdditionEsportMobaStatusDesc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{5}
}

func (x *AdditionEsportMobaStatusDesc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionEsportMobaStatusDesc) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AdditionEsportMobaStatusDesc) GetNightColor() string {
	if x != nil {
		return x.NightColor
	}
	return ""
}

// 动态-附加卡-商品卡
type AdditionGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 推荐文案
	RcmdDesc string `protobuf:"bytes,1,opt,name=rcmd_desc,json=rcmdDesc,proto3" json:"rcmd_desc,omitempty"`
	// 商品信息
	GoodsItems []*GoodsItem `protobuf:"bytes,2,rep,name=goods_items,json=goodsItems,proto3" json:"goods_items,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 头部icon
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// 商品附加卡整卡跳转
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 商品类型
	// 1:淘宝 2:会员购，注：实际是获取的goods_items里面的第一个source_type
	SourceType int32 `protobuf:"varint,6,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
}

func (x *AdditionGoods) Reset() {
	*x = AdditionGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionGoods) ProtoMessage() {}

func (x *AdditionGoods) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionGoods.ProtoReflect.Descriptor instead.
func (*AdditionGoods) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{6}
}

func (x *AdditionGoods) GetRcmdDesc() string {
	if x != nil {
		return x.RcmdDesc
	}
	return ""
}

func (x *AdditionGoods) GetGoodsItems() []*GoodsItem {
	if x != nil {
		return x.GoodsItems
	}
	return nil
}

func (x *AdditionGoods) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *AdditionGoods) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AdditionGoods) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AdditionGoods) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

// up主预约发布卡
type AdditionUP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 高亮文本，描述文字1
	DescText_1 *HighlightText `protobuf:"bytes,2,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,3,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,5,opt,name=button,proto3" json:"button,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,6,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 预约人数(用于预约人数变化)
	ReserveTotal int64 `protobuf:"varint,7,opt,name=reserve_total,json=reserveTotal,proto3" json:"reserve_total,omitempty"`
	// 活动皮肤
	ActSkin *AdditionalActSkin `protobuf:"bytes,8,opt,name=act_skin,json=actSkin,proto3" json:"act_skin,omitempty"`
	// 预约id
	Rid int64 `protobuf:"varint,9,opt,name=rid,proto3" json:"rid,omitempty"`
	LotteryType int32 `protobuf:"varint,10,opt,name=lottery_type,json=lotteryType,proto3" json:"lottery_type,omitempty"`
	DescText3 *HighlightText `protobuf:"bytes,11,opt,name=desc_text3,json=descText3,proto3" json:"desc_text3,omitempty"`
	UpMid int64 `protobuf:"varint,12,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	UserInfo *AdditionUserInfo `protobuf:"bytes,13,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	DynamicId string `protobuf:"bytes,14,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	ShowText2 bool `protobuf:"varint,15,opt,name=show_text2,json=showText2,proto3" json:"show_text2,omitempty"`
	DynType int64 `protobuf:"varint,16,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	BusinessId string `protobuf:"bytes,17,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
}

func (x *AdditionUP) Reset() {
	*x = AdditionUP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionUP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionUP) ProtoMessage() {}

func (x *AdditionUP) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionUP.ProtoReflect.Descriptor instead.
func (*AdditionUP) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{7}
}

func (x *AdditionUP) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionUP) GetDescText_1() *HighlightText {
	if x != nil {
		return x.DescText_1
	}
	return nil
}

func (x *AdditionUP) GetDescText_2() string {
	if x != nil {
		return x.DescText_2
	}
	return ""
}

func (x *AdditionUP) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdditionUP) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *AdditionUP) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *AdditionUP) GetReserveTotal() int64 {
	if x != nil {
		return x.ReserveTotal
	}
	return 0
}

func (x *AdditionUP) GetActSkin() *AdditionalActSkin {
	if x != nil {
		return x.ActSkin
	}
	return nil
}

func (x *AdditionUP) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *AdditionUP) GetLotteryType() int32 {
	if x != nil {
		return x.LotteryType
	}
	return 0
}

func (x *AdditionUP) GetDescText3() *HighlightText {
	if x != nil {
		return x.DescText3
	}
	return nil
}

func (x *AdditionUP) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *AdditionUP) GetUserInfo() *AdditionUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *AdditionUP) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *AdditionUP) GetShowText2() bool {
	if x != nil {
		return x.ShowText2
	}
	return false
}

func (x *AdditionUP) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *AdditionUP) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

// 动态-附加卡-UGC视频附加卡
type AdditionUgc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 接秒开
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	// 时长
	Duration string `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	// 标题支持换行-标题支持单行和双行，本期不支持填充up昵称，支持双行展示，字段默认为true
	LineFeed bool `protobuf:"varint,8,opt,name=line_feed,json=lineFeed,proto3" json:"line_feed,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,9,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *AdditionUgc) Reset() {
	*x = AdditionUgc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionUgc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionUgc) ProtoMessage() {}

func (x *AdditionUgc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionUgc.ProtoReflect.Descriptor instead.
func (*AdditionUgc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{8}
}

func (x *AdditionUgc) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *AdditionUgc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionUgc) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdditionUgc) GetDescText_1() string {
	if x != nil {
		return x.DescText_1
	}
	return ""
}

func (x *AdditionUgc) GetDescText_2() string {
	if x != nil {
		return x.DescText_2
	}
	return ""
}

func (x *AdditionUgc) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AdditionUgc) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AdditionUgc) GetLineFeed() bool {
	if x != nil {
		return x.LineFeed
	}
	return false
}

func (x *AdditionUgc) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

type AdditionUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *AdditionUserInfo) Reset() {
	*x = AdditionUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionUserInfo) ProtoMessage() {}

func (x *AdditionUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionUserInfo.ProtoReflect.Descriptor instead.
func (*AdditionUserInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{9}
}

func (x *AdditionUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdditionUserInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

// 动态-附加卡-投票
type AdditionVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面图
	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示项1
	Text_1 string `protobuf:"bytes,3,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// button文案
	ButtonText string `protobuf:"bytes,4,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AdditionVote) Reset() {
	*x = AdditionVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVote) ProtoMessage() {}

func (x *AdditionVote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVote.ProtoReflect.Descriptor instead.
func (*AdditionVote) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{10}
}

func (x *AdditionVote) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AdditionVote) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionVote) GetText_1() string {
	if x != nil {
		return x.Text_1
	}
	return ""
}

func (x *AdditionVote) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *AdditionVote) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 动态模块-投票
type AdditionVote2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投票类型
	AdditionVoteType AdditionVoteType `protobuf:"varint,1,opt,name=addition_vote_type,json=additionVoteType,proto3,enum=bilibili.app.dynamic.v2.AdditionVoteType" json:"addition_vote_type,omitempty"`
	// 投票ID
	VoteId int64 `protobuf:"varint,2,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 已过期： xxx人参与· 投票已过期。button 展示去查看
	// 未过期： xxx人参与· 剩xx天xx时xx分。button展示去投票
	Label string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// 剩余时间
	Deadline int64 `protobuf:"varint,5,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// 生效文案
	OpenText string `protobuf:"bytes,6,opt,name=open_text,json=openText,proto3" json:"open_text,omitempty"`
	// 过期文案
	CloseText string `protobuf:"bytes,7,opt,name=close_text,json=closeText,proto3" json:"close_text,omitempty"`
	// 已投票
	VotedText string `protobuf:"bytes,8,opt,name=voted_text,json=votedText,proto3" json:"voted_text,omitempty"`
	// 投票状态
	State AdditionVoteState `protobuf:"varint,9,opt,name=state,proto3,enum=bilibili.app.dynamic.v2.AdditionVoteState" json:"state,omitempty"`
	// 投票信息
	//
	// Types that are assignable to Item:
	//
	//	*AdditionVote2_AdditionVoteWord
	//	*AdditionVote2_AdditionVotePic
	//	*AdditionVote2_AdditionVoteDefaule
	Item isAdditionVote2_Item `protobuf_oneof:"item"`
	// 业务类型
	// 0:动态投票 1:话题h5组件
	BizType int32 `protobuf:"varint,13,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	// 投票总人数
	Total int64 `protobuf:"varint,14,opt,name=total,proto3" json:"total,omitempty"`
	// 附加卡类型
	CardType string `protobuf:"bytes,15,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 异常提示
	Tips string `protobuf:"bytes,16,opt,name=tips,proto3" json:"tips,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,17,opt,name=uri,proto3" json:"uri,omitempty"`
	// 是否投票
	IsVoted bool `protobuf:"varint,18,opt,name=is_voted,json=isVoted,proto3" json:"is_voted,omitempty"`
	// 投票最多多选个数，单选为1
	ChoiceCnt int32 `protobuf:"varint,19,opt,name=choice_cnt,json=choiceCnt,proto3" json:"choice_cnt,omitempty"`
	// 是否默认选中分享到动态
	DefauleSelectShare bool `protobuf:"varint,20,opt,name=defaule_select_share,json=defauleSelectShare,proto3" json:"defaule_select_share,omitempty"`
}

func (x *AdditionVote2) Reset() {
	*x = AdditionVote2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVote2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVote2) ProtoMessage() {}

func (x *AdditionVote2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVote2.ProtoReflect.Descriptor instead.
func (*AdditionVote2) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{11}
}

func (x *AdditionVote2) GetAdditionVoteType() AdditionVoteType {
	if x != nil {
		return x.AdditionVoteType
	}
	return AdditionVoteType_addition_vote_type_none
}

func (x *AdditionVote2) GetVoteId() int64 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

func (x *AdditionVote2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionVote2) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AdditionVote2) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *AdditionVote2) GetOpenText() string {
	if x != nil {
		return x.OpenText
	}
	return ""
}

func (x *AdditionVote2) GetCloseText() string {
	if x != nil {
		return x.CloseText
	}
	return ""
}

func (x *AdditionVote2) GetVotedText() string {
	if x != nil {
		return x.VotedText
	}
	return ""
}

func (x *AdditionVote2) GetState() AdditionVoteState {
	if x != nil {
		return x.State
	}
	return AdditionVoteState_addition_vote_state_none
}

func (m *AdditionVote2) GetItem() isAdditionVote2_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *AdditionVote2) GetAdditionVoteWord() *AdditionVoteWord {
	if x, ok := x.GetItem().(*AdditionVote2_AdditionVoteWord); ok {
		return x.AdditionVoteWord
	}
	return nil
}

func (x *AdditionVote2) GetAdditionVotePic() *AdditionVotePic {
	if x, ok := x.GetItem().(*AdditionVote2_AdditionVotePic); ok {
		return x.AdditionVotePic
	}
	return nil
}

func (x *AdditionVote2) GetAdditionVoteDefaule() *AdditionVoteDefaule {
	if x, ok := x.GetItem().(*AdditionVote2_AdditionVoteDefaule); ok {
		return x.AdditionVoteDefaule
	}
	return nil
}

func (x *AdditionVote2) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *AdditionVote2) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AdditionVote2) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *AdditionVote2) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

func (x *AdditionVote2) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AdditionVote2) GetIsVoted() bool {
	if x != nil {
		return x.IsVoted
	}
	return false
}

func (x *AdditionVote2) GetChoiceCnt() int32 {
	if x != nil {
		return x.ChoiceCnt
	}
	return 0
}

func (x *AdditionVote2) GetDefauleSelectShare() bool {
	if x != nil {
		return x.DefauleSelectShare
	}
	return false
}

type isAdditionVote2_Item interface {
	isAdditionVote2_Item()
}

type AdditionVote2_AdditionVoteWord struct {
	AdditionVoteWord *AdditionVoteWord `protobuf:"bytes,10,opt,name=addition_vote_word,json=additionVoteWord,proto3,oneof"`
}

type AdditionVote2_AdditionVotePic struct {
	AdditionVotePic *AdditionVotePic `protobuf:"bytes,11,opt,name=addition_vote_pic,json=additionVotePic,proto3,oneof"`
}

type AdditionVote2_AdditionVoteDefaule struct {
	AdditionVoteDefaule *AdditionVoteDefaule `protobuf:"bytes,12,opt,name=addition_vote_defaule,json=additionVoteDefaule,proto3,oneof"`
}

func (*AdditionVote2_AdditionVoteWord) isAdditionVote2_Item() {}

func (*AdditionVote2_AdditionVotePic) isAdditionVote2_Item() {}

func (*AdditionVote2_AdditionVoteDefaule) isAdditionVote2_Item() {}

// 外露投票
type AdditionVoteDefaule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片 多张
	Cover []string `protobuf:"bytes,1,rep,name=cover,proto3" json:"cover,omitempty"`
}

func (x *AdditionVoteDefaule) Reset() {
	*x = AdditionVoteDefaule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVoteDefaule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVoteDefaule) ProtoMessage() {}

func (x *AdditionVoteDefaule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVoteDefaule.ProtoReflect.Descriptor instead.
func (*AdditionVoteDefaule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{12}
}

func (x *AdditionVoteDefaule) GetCover() []string {
	if x != nil {
		return x.Cover
	}
	return nil
}

// 外露图片类型
type AdditionVotePic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片投票详情
	Item []*AdditionVotePicItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *AdditionVotePic) Reset() {
	*x = AdditionVotePic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVotePic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVotePic) ProtoMessage() {}

func (x *AdditionVotePic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVotePic.ProtoReflect.Descriptor instead.
func (*AdditionVotePic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{13}
}

func (x *AdditionVotePic) GetItem() []*AdditionVotePicItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 图片投票详情
type AdditionVotePicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 选项索引，从1开始
	OptIdx int32 `protobuf:"varint,1,opt,name=opt_idx,json=optIdx,proto3" json:"opt_idx,omitempty"`
	// 图片
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 选中状态
	IsVote bool `protobuf:"varint,3,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	// 人数
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// 占比
	Persent float64 `protobuf:"fixed64,5,opt,name=persent,proto3" json:"persent,omitempty"`
	// 标题文案
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 是否投票人数最多的选项
	IsMaxOption bool `protobuf:"varint,7,opt,name=is_max_option,json=isMaxOption,proto3" json:"is_max_option,omitempty"`
}

func (x *AdditionVotePicItem) Reset() {
	*x = AdditionVotePicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVotePicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVotePicItem) ProtoMessage() {}

func (x *AdditionVotePicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVotePicItem.ProtoReflect.Descriptor instead.
func (*AdditionVotePicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{14}
}

func (x *AdditionVotePicItem) GetOptIdx() int32 {
	if x != nil {
		return x.OptIdx
	}
	return 0
}

func (x *AdditionVotePicItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdditionVotePicItem) GetIsVote() bool {
	if x != nil {
		return x.IsVote
	}
	return false
}

func (x *AdditionVotePicItem) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AdditionVotePicItem) GetPersent() float64 {
	if x != nil {
		return x.Persent
	}
	return 0
}

func (x *AdditionVotePicItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionVotePicItem) GetIsMaxOption() bool {
	if x != nil {
		return x.IsMaxOption
	}
	return false
}

// 外露文字类型
type AdditionVoteWord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 外露文字投票详情
	Item []*AdditionVoteWordItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *AdditionVoteWord) Reset() {
	*x = AdditionVoteWord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVoteWord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVoteWord) ProtoMessage() {}

func (x *AdditionVoteWord) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVoteWord.ProtoReflect.Descriptor instead.
func (*AdditionVoteWord) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{15}
}

func (x *AdditionVoteWord) GetItem() []*AdditionVoteWordItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 外露文字投票详情
type AdditionVoteWordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 选项索引，从1开始
	OptIdx int32 `protobuf:"varint,1,opt,name=opt_idx,json=optIdx,proto3" json:"opt_idx,omitempty"`
	// 文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 选中状态
	IsVote bool `protobuf:"varint,3,opt,name=is_vote,json=isVote,proto3" json:"is_vote,omitempty"`
	// 人数
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// 占比
	Persent float64 `protobuf:"fixed64,5,opt,name=persent,proto3" json:"persent,omitempty"`
	// 是否投票人数最多的选项
	IsMaxOption bool `protobuf:"varint,6,opt,name=is_max_option,json=isMaxOption,proto3" json:"is_max_option,omitempty"`
}

func (x *AdditionVoteWordItem) Reset() {
	*x = AdditionVoteWordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionVoteWordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionVoteWordItem) ProtoMessage() {}

func (x *AdditionVoteWordItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionVoteWordItem.ProtoReflect.Descriptor instead.
func (*AdditionVoteWordItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{16}
}

func (x *AdditionVoteWordItem) GetOptIdx() int32 {
	if x != nil {
		return x.OptIdx
	}
	return 0
}

func (x *AdditionVoteWordItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionVoteWordItem) GetIsVote() bool {
	if x != nil {
		return x.IsVote
	}
	return false
}

func (x *AdditionVoteWordItem) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AdditionVoteWordItem) GetPersent() float64 {
	if x != nil {
		return x.Persent
	}
	return 0
}

func (x *AdditionVoteWordItem) GetIsMaxOption() bool {
	if x != nil {
		return x.IsMaxOption
	}
	return false
}

// 活动皮肤
type AdditionalActSkin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动画SVGA资源
	Svga string `protobuf:"bytes,1,opt,name=svga,proto3" json:"svga,omitempty"`
	// 动画SVGA最后一帧图片资源
	LastImage string `protobuf:"bytes,2,opt,name=last_image,json=lastImage,proto3" json:"last_image,omitempty"`
	// 动画播放次数
	PlayTimes int64 `protobuf:"varint,3,opt,name=play_times,json=playTimes,proto3" json:"play_times,omitempty"`
}

func (x *AdditionalActSkin) Reset() {
	*x = AdditionalActSkin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalActSkin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalActSkin) ProtoMessage() {}

func (x *AdditionalActSkin) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalActSkin.ProtoReflect.Descriptor instead.
func (*AdditionalActSkin) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{17}
}

func (x *AdditionalActSkin) GetSvga() string {
	if x != nil {
		return x.Svga
	}
	return ""
}

func (x *AdditionalActSkin) GetLastImage() string {
	if x != nil {
		return x.LastImage
	}
	return ""
}

func (x *AdditionalActSkin) GetPlayTimes() int64 {
	if x != nil {
		return x.PlayTimes
	}
	return 0
}

// 动态-附加卡-按钮
type AdditionalButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 按钮类型
	Type AddButtonType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.AddButtonType" json:"type,omitempty"`
	// jump-跳转样式
	JumpStyle *AdditionalButtonStyle `protobuf:"bytes,2,opt,name=jump_style,json=jumpStyle,proto3" json:"jump_style,omitempty"`
	// jump-跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// button-未点样式
	Uncheck *AdditionalButtonStyle `protobuf:"bytes,4,opt,name=uncheck,proto3" json:"uncheck,omitempty"`
	// button-已点样式
	Check *AdditionalButtonStyle `protobuf:"bytes,5,opt,name=check,proto3" json:"check,omitempty"`
	// button-当前状态
	Status AdditionalButtonStatus `protobuf:"varint,6,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
	// 按钮点击样式
	ClickType AdditionalButtonClickType `protobuf:"varint,7,opt,name=click_type,json=clickType,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonClickType" json:"click_type,omitempty"`
}

func (x *AdditionalButton) Reset() {
	*x = AdditionalButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalButton) ProtoMessage() {}

func (x *AdditionalButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalButton.ProtoReflect.Descriptor instead.
func (*AdditionalButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{18}
}

func (x *AdditionalButton) GetType() AddButtonType {
	if x != nil {
		return x.Type
	}
	return AddButtonType_bt_none
}

func (x *AdditionalButton) GetJumpStyle() *AdditionalButtonStyle {
	if x != nil {
		return x.JumpStyle
	}
	return nil
}

func (x *AdditionalButton) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *AdditionalButton) GetUncheck() *AdditionalButtonStyle {
	if x != nil {
		return x.Uncheck
	}
	return nil
}

func (x *AdditionalButton) GetCheck() *AdditionalButtonStyle {
	if x != nil {
		return x.Check
	}
	return nil
}

func (x *AdditionalButton) GetStatus() AdditionalButtonStatus {
	if x != nil {
		return x.Status
	}
	return AdditionalButtonStatus_none
}

func (x *AdditionalButton) GetClickType() AdditionalButtonClickType {
	if x != nil {
		return x.ClickType
	}
	return AdditionalButtonClickType_click_none
}

type AdditionalButtonInteractive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否弹窗
	Popups string `protobuf:"bytes,1,opt,name=popups,proto3" json:"popups,omitempty"`
	// 弹窗确认文案
	Confirm string `protobuf:"bytes,2,opt,name=confirm,proto3" json:"confirm,omitempty"`
	// 弹窗取消文案
	Cancel string `protobuf:"bytes,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AdditionalButtonInteractive) Reset() {
	*x = AdditionalButtonInteractive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalButtonInteractive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalButtonInteractive) ProtoMessage() {}

func (x *AdditionalButtonInteractive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalButtonInteractive.ProtoReflect.Descriptor instead.
func (*AdditionalButtonInteractive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{19}
}

func (x *AdditionalButtonInteractive) GetPopups() string {
	if x != nil {
		return x.Popups
	}
	return ""
}

func (x *AdditionalButtonInteractive) GetConfirm() string {
	if x != nil {
		return x.Confirm
	}
	return ""
}

func (x *AdditionalButtonInteractive) GetCancel() string {
	if x != nil {
		return x.Cancel
	}
	return ""
}

func (x *AdditionalButtonInteractive) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AdditionalButtonShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *AdditionalButtonShare) Reset() {
	*x = AdditionalButtonShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalButtonShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalButtonShare) ProtoMessage() {}

func (x *AdditionalButtonShare) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalButtonShare.ProtoReflect.Descriptor instead.
func (*AdditionalButtonShare) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{20}
}

func (x *AdditionalButtonShare) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *AdditionalButtonShare) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AdditionalButtonShare) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 动态-附加卡-按钮样式
type AdditionalButtonStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 按钮点击交互
	Interactive *AdditionalButtonInteractive `protobuf:"bytes,3,opt,name=interactive,proto3" json:"interactive,omitempty"`
	// 当前按钮填充样式
	BgStyle AddButtonBgStyle `protobuf:"varint,4,opt,name=bg_style,json=bgStyle,proto3,enum=bilibili.app.dynamic.v2.AddButtonBgStyle" json:"bg_style,omitempty"`
	// toast文案, 当disable=1时有效
	Toast string `protobuf:"bytes,5,opt,name=toast,proto3" json:"toast,omitempty"`
	// 当前按钮样式,
	// 0:高亮 1:置灰(按钮不可点击)
	Disable DisableState `protobuf:"varint,6,opt,name=disable,proto3,enum=bilibili.app.dynamic.v2.DisableState" json:"disable,omitempty"`
	Share *AdditionalButtonShare `protobuf:"bytes,7,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *AdditionalButtonStyle) Reset() {
	*x = AdditionalButtonStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalButtonStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalButtonStyle) ProtoMessage() {}

func (x *AdditionalButtonStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalButtonStyle.ProtoReflect.Descriptor instead.
func (*AdditionalButtonStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{21}
}

func (x *AdditionalButtonStyle) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AdditionalButtonStyle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdditionalButtonStyle) GetInteractive() *AdditionalButtonInteractive {
	if x != nil {
		return x.Interactive
	}
	return nil
}

func (x *AdditionalButtonStyle) GetBgStyle() AddButtonBgStyle {
	if x != nil {
		return x.BgStyle
	}
	return AddButtonBgStyle_fill
}

func (x *AdditionalButtonStyle) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *AdditionalButtonStyle) GetDisable() DisableState {
	if x != nil {
		return x.Disable
	}
	return DisableState_highlight
}

func (x *AdditionalButtonStyle) GetShare() *AdditionalButtonShare {
	if x != nil {
		return x.Share
	}
	return nil
}

// 动态-附加卡-番剧卡
type AdditionalPGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 头部说明文案
	HeadText string `protobuf:"bytes,1,opt,name=head_text,json=headText,proto3" json:"head_text,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 展示图
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// 描述文字1
	DescText_1 string `protobuf:"bytes,4,opt,name=desc_text_1,json=descText1,proto3" json:"desc_text_1,omitempty"`
	// 描述文字2
	DescText_2 string `protobuf:"bytes,5,opt,name=desc_text_2,json=descText2,proto3" json:"desc_text_2,omitempty"`
	// 点击跳转链接
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,7,opt,name=button,proto3" json:"button,omitempty"`
	// 头部icon
	HeadIcon string `protobuf:"bytes,8,opt,name=head_icon,json=headIcon,proto3" json:"head_icon,omitempty"`
	// style
	Style ImageStyle `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.ImageStyle" json:"style,omitempty"`
	// 动态本身的类型 type
	Type string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AdditionalPGC) Reset() {
	*x = AdditionalPGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalPGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalPGC) ProtoMessage() {}

func (x *AdditionalPGC) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalPGC.ProtoReflect.Descriptor instead.
func (*AdditionalPGC) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{22}
}

func (x *AdditionalPGC) GetHeadText() string {
	if x != nil {
		return x.HeadText
	}
	return ""
}

func (x *AdditionalPGC) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdditionalPGC) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AdditionalPGC) GetDescText_1() string {
	if x != nil {
		return x.DescText_1
	}
	return ""
}

func (x *AdditionalPGC) GetDescText_2() string {
	if x != nil {
		return x.DescText_2
	}
	return ""
}

func (x *AdditionalPGC) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdditionalPGC) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *AdditionalPGC) GetHeadIcon() string {
	if x != nil {
		return x.HeadIcon
	}
	return ""
}

func (x *AdditionalPGC) GetStyle() ImageStyle {
	if x != nil {
		return x.Style
	}
	return ImageStyle_add_style_vertical
}

func (x *AdditionalPGC) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type AlumniDynamicsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *AlumniDynamicsReply) Reset() {
	*x = AlumniDynamicsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlumniDynamicsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlumniDynamicsReply) ProtoMessage() {}

func (x *AlumniDynamicsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlumniDynamicsReply.ProtoReflect.Descriptor instead.
func (*AlumniDynamicsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{23}
}

func (x *AlumniDynamicsReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AlumniDynamicsReply) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

type AlumniDynamicsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	FirstTime int32 `protobuf:"varint,2,opt,name=first_time,json=firstTime,proto3" json:"first_time,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *AlumniDynamicsReq) Reset() {
	*x = AlumniDynamicsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlumniDynamicsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlumniDynamicsReq) ProtoMessage() {}

func (x *AlumniDynamicsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlumniDynamicsReq.ProtoReflect.Descriptor instead.
func (*AlumniDynamicsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{24}
}

func (x *AlumniDynamicsReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *AlumniDynamicsReq) GetFirstTime() int32 {
	if x != nil {
		return x.FirstTime
	}
	return 0
}

func (x *AlumniDynamicsReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *AlumniDynamicsReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *AlumniDynamicsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type CampusBannerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *CampusBannerInfo) Reset() {
	*x = CampusBannerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusBannerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusBannerInfo) ProtoMessage() {}

func (x *CampusBannerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusBannerInfo.ProtoReflect.Descriptor instead.
func (*CampusBannerInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{25}
}

func (x *CampusBannerInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CampusBannerInfo) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type CampusBillBoardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	HelpUri string `protobuf:"bytes,2,opt,name=help_uri,json=helpUri,proto3" json:"help_uri,omitempty"`
	CampusName string `protobuf:"bytes,3,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	BuildTime int64 `protobuf:"varint,4,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	VersionCode string `protobuf:"bytes,5,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	List []*OfficialItem `protobuf:"bytes,6,rep,name=list,proto3" json:"list,omitempty"`
	ShareUri string `protobuf:"bytes,7,opt,name=share_uri,json=shareUri,proto3" json:"share_uri,omitempty"`
	BindNotice int32 `protobuf:"varint,8,opt,name=bind_notice,json=bindNotice,proto3" json:"bind_notice,omitempty"`
	UpdateToast string `protobuf:"bytes,9,opt,name=update_toast,json=updateToast,proto3" json:"update_toast,omitempty"`
	CampusId int64 `protobuf:"varint,10,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
}

func (x *CampusBillBoardReply) Reset() {
	*x = CampusBillBoardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusBillBoardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusBillBoardReply) ProtoMessage() {}

func (x *CampusBillBoardReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusBillBoardReply.ProtoReflect.Descriptor instead.
func (*CampusBillBoardReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{26}
}

func (x *CampusBillBoardReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusBillBoardReply) GetHelpUri() string {
	if x != nil {
		return x.HelpUri
	}
	return ""
}

func (x *CampusBillBoardReply) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *CampusBillBoardReply) GetBuildTime() int64 {
	if x != nil {
		return x.BuildTime
	}
	return 0
}

func (x *CampusBillBoardReply) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *CampusBillBoardReply) GetList() []*OfficialItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CampusBillBoardReply) GetShareUri() string {
	if x != nil {
		return x.ShareUri
	}
	return ""
}

func (x *CampusBillBoardReply) GetBindNotice() int32 {
	if x != nil {
		return x.BindNotice
	}
	return 0
}

func (x *CampusBillBoardReply) GetUpdateToast() string {
	if x != nil {
		return x.UpdateToast
	}
	return ""
}

func (x *CampusBillBoardReply) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

type CampusBillBoardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	VersionCode string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *CampusBillBoardReq) Reset() {
	*x = CampusBillBoardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusBillBoardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusBillBoardReq) ProtoMessage() {}

func (x *CampusBillBoardReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusBillBoardReq.ProtoReflect.Descriptor instead.
func (*CampusBillBoardReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{27}
}

func (x *CampusBillBoardReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusBillBoardReq) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *CampusBillBoardReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type CampusBillboardInternalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	CampusId int64 `protobuf:"varint,2,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	VersionCode string `protobuf:"bytes,3,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
}

func (x *CampusBillboardInternalReq) Reset() {
	*x = CampusBillboardInternalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusBillboardInternalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusBillboardInternalReq) ProtoMessage() {}

func (x *CampusBillboardInternalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusBillboardInternalReq.ProtoReflect.Descriptor instead.
func (*CampusBillboardInternalReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{28}
}

func (x *CampusBillboardInternalReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CampusBillboardInternalReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusBillboardInternalReq) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

type CampusFeedbackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType int32 `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	BizId int64 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	CampusId int64 `protobuf:"varint,3,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CampusFeedbackInfo) Reset() {
	*x = CampusFeedbackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusFeedbackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusFeedbackInfo) ProtoMessage() {}

func (x *CampusFeedbackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusFeedbackInfo.ProtoReflect.Descriptor instead.
func (*CampusFeedbackInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{29}
}

func (x *CampusFeedbackInfo) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *CampusFeedbackInfo) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CampusFeedbackInfo) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusFeedbackInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CampusFeedbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CampusFeedbackReply) Reset() {
	*x = CampusFeedbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusFeedbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusFeedbackReply) ProtoMessage() {}

func (x *CampusFeedbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusFeedbackReply.ProtoReflect.Descriptor instead.
func (*CampusFeedbackReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{30}
}

func (x *CampusFeedbackReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CampusFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*CampusFeedbackInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	From int32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *CampusFeedbackReq) Reset() {
	*x = CampusFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusFeedbackReq) ProtoMessage() {}

func (x *CampusFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusFeedbackReq.ProtoReflect.Descriptor instead.
func (*CampusFeedbackReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{31}
}

func (x *CampusFeedbackReq) GetInfos() []*CampusFeedbackInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *CampusFeedbackReq) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

type CampusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Online int64 `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *CampusInfo) Reset() {
	*x = CampusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusInfo) ProtoMessage() {}

func (x *CampusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusInfo.ProtoReflect.Descriptor instead.
func (*CampusInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{32}
}

func (x *CampusInfo) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusInfo) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *CampusInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CampusInfo) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

type CampusLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CampusLabel) Reset() {
	*x = CampusLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusLabel) ProtoMessage() {}

func (x *CampusLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusLabel.ProtoReflect.Descriptor instead.
func (*CampusLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{33}
}

func (x *CampusLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CampusLabel) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CampusLabel) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CampusMateLikeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ModuleAuthor `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CampusMateLikeListReply) Reset() {
	*x = CampusMateLikeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusMateLikeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusMateLikeListReply) ProtoMessage() {}

func (x *CampusMateLikeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusMateLikeListReply.ProtoReflect.Descriptor instead.
func (*CampusMateLikeListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{34}
}

func (x *CampusMateLikeListReply) GetList() []*ModuleAuthor {
	if x != nil {
		return x.List
	}
	return nil
}

type CampusMateLikeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicId int64 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
}

func (x *CampusMateLikeListReq) Reset() {
	*x = CampusMateLikeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusMateLikeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusMateLikeListReq) ProtoMessage() {}

func (x *CampusMateLikeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusMateLikeListReq.ProtoReflect.Descriptor instead.
func (*CampusMateLikeListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{35}
}

func (x *CampusMateLikeListReq) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

type CampusNoticeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Button *CampusLabel `protobuf:"bytes,3,opt,name=button,proto3" json:"button,omitempty"`
}

func (x *CampusNoticeInfo) Reset() {
	*x = CampusNoticeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusNoticeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusNoticeInfo) ProtoMessage() {}

func (x *CampusNoticeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusNoticeInfo.ProtoReflect.Descriptor instead.
func (*CampusNoticeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{36}
}

func (x *CampusNoticeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusNoticeInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CampusNoticeInfo) GetButton() *CampusLabel {
	if x != nil {
		return x.Button
	}
	return nil
}

type CampusRcmdFeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	GuideBar *GuideBarInfo `protobuf:"bytes,3,opt,name=guide_bar,json=guideBar,proto3" json:"guide_bar,omitempty"`
	HasMore bool `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Update bool `protobuf:"varint,5,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *CampusRcmdFeedReply) Reset() {
	*x = CampusRcmdFeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdFeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdFeedReply) ProtoMessage() {}

func (x *CampusRcmdFeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdFeedReply.ProtoReflect.Descriptor instead.
func (*CampusRcmdFeedReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{37}
}

func (x *CampusRcmdFeedReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CampusRcmdFeedReply) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *CampusRcmdFeedReply) GetGuideBar() *GuideBarInfo {
	if x != nil {
		return x.GuideBar
	}
	return nil
}

func (x *CampusRcmdFeedReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *CampusRcmdFeedReply) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type CampusRcmdFeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	FirstTime int32 `protobuf:"varint,2,opt,name=first_time,json=firstTime,proto3" json:"first_time,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Scroll int32 `protobuf:"varint,6,opt,name=scroll,proto3" json:"scroll,omitempty"`
	ViewDynId string `protobuf:"bytes,7,opt,name=view_dyn_id,json=viewDynId,proto3" json:"view_dyn_id,omitempty"`
}

func (x *CampusRcmdFeedReq) Reset() {
	*x = CampusRcmdFeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdFeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdFeedReq) ProtoMessage() {}

func (x *CampusRcmdFeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdFeedReq.ProtoReflect.Descriptor instead.
func (*CampusRcmdFeedReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{38}
}

func (x *CampusRcmdFeedReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusRcmdFeedReq) GetFirstTime() int32 {
	if x != nil {
		return x.FirstTime
	}
	return 0
}

func (x *CampusRcmdFeedReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *CampusRcmdFeedReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *CampusRcmdFeedReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CampusRcmdFeedReq) GetScroll() int32 {
	if x != nil {
		return x.Scroll
	}
	return 0
}

func (x *CampusRcmdFeedReq) GetViewDynId() string {
	if x != nil {
		return x.ViewDynId
	}
	return ""
}

type CampusRcmdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*CampusRcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CampusRcmdInfo) Reset() {
	*x = CampusRcmdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdInfo) ProtoMessage() {}

func (x *CampusRcmdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdInfo.ProtoReflect.Descriptor instead.
func (*CampusRcmdInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{39}
}

func (x *CampusRcmdInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusRcmdInfo) GetItems() []*CampusRcmdItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CampusRcmdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*RcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	CampusId int64 `protobuf:"varint,3,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	EntryLabel *CampusLabel `protobuf:"bytes,4,opt,name=entry_label,json=entryLabel,proto3" json:"entry_label,omitempty"`
}

func (x *CampusRcmdItem) Reset() {
	*x = CampusRcmdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdItem) ProtoMessage() {}

func (x *CampusRcmdItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdItem.ProtoReflect.Descriptor instead.
func (*CampusRcmdItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{40}
}

func (x *CampusRcmdItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusRcmdItem) GetItems() []*RcmdItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CampusRcmdItem) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusRcmdItem) GetEntryLabel() *CampusLabel {
	if x != nil {
		return x.EntryLabel
	}
	return nil
}

type CampusRcmdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top *CampusRcmdTop `protobuf:"bytes,1,opt,name=top,proto3" json:"top,omitempty"`
	Rcmd *CampusRcmdInfo `protobuf:"bytes,2,opt,name=rcmd,proto3" json:"rcmd,omitempty"`
	CampusTop *CampusTop `protobuf:"bytes,3,opt,name=campus_top,json=campusTop,proto3" json:"campus_top,omitempty"`
	PageType int32 `protobuf:"varint,4,opt,name=page_type,json=pageType,proto3" json:"page_type,omitempty"`
}

func (x *CampusRcmdReply) Reset() {
	*x = CampusRcmdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdReply) ProtoMessage() {}

func (x *CampusRcmdReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdReply.ProtoReflect.Descriptor instead.
func (*CampusRcmdReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{41}
}

func (x *CampusRcmdReply) GetTop() *CampusRcmdTop {
	if x != nil {
		return x.Top
	}
	return nil
}

func (x *CampusRcmdReply) GetRcmd() *CampusRcmdInfo {
	if x != nil {
		return x.Rcmd
	}
	return nil
}

func (x *CampusRcmdReply) GetCampusTop() *CampusTop {
	if x != nil {
		return x.CampusTop
	}
	return nil
}

func (x *CampusRcmdReply) GetPageType() int32 {
	if x != nil {
		return x.PageType
	}
	return 0
}

type CampusRcmdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *CampusRcmdReq) Reset() {
	*x = CampusRcmdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdReq) ProtoMessage() {}

func (x *CampusRcmdReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdReq.ProtoReflect.Descriptor instead.
func (*CampusRcmdReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{42}
}

func (x *CampusRcmdReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusRcmdReq) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *CampusRcmdReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *CampusRcmdReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *CampusRcmdReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type CampusRcmdTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Button *RcmdTopButton `protobuf:"bytes,6,opt,name=button,proto3" json:"button,omitempty"`
	SwitchLabel *CampusLabel `protobuf:"bytes,7,opt,name=switch_label,json=switchLabel,proto3" json:"switch_label,omitempty"`
	NoticeLabel *CampusLabel `protobuf:"bytes,8,opt,name=notice_label,json=noticeLabel,proto3" json:"notice_label,omitempty"`
	Desc2 string `protobuf:"bytes,9,opt,name=desc2,proto3" json:"desc2,omitempty"`
	Desc3 string `protobuf:"bytes,10,opt,name=desc3,proto3" json:"desc3,omitempty"`
	InviteLabel *CampusLabel `protobuf:"bytes,11,opt,name=invite_label,json=inviteLabel,proto3" json:"invite_label,omitempty"`
	ReserveLabel *CampusLabel `protobuf:"bytes,12,opt,name=reserve_label,json=reserveLabel,proto3" json:"reserve_label,omitempty"`
	ReserveNumber int64 `protobuf:"varint,13,opt,name=reserve_number,json=reserveNumber,proto3" json:"reserve_number,omitempty"`
}

func (x *CampusRcmdTop) Reset() {
	*x = CampusRcmdTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRcmdTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRcmdTop) ProtoMessage() {}

func (x *CampusRcmdTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRcmdTop.ProtoReflect.Descriptor instead.
func (*CampusRcmdTop) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{43}
}

func (x *CampusRcmdTop) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusRcmdTop) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *CampusRcmdTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusRcmdTop) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CampusRcmdTop) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CampusRcmdTop) GetButton() *RcmdTopButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *CampusRcmdTop) GetSwitchLabel() *CampusLabel {
	if x != nil {
		return x.SwitchLabel
	}
	return nil
}

func (x *CampusRcmdTop) GetNoticeLabel() *CampusLabel {
	if x != nil {
		return x.NoticeLabel
	}
	return nil
}

func (x *CampusRcmdTop) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *CampusRcmdTop) GetDesc3() string {
	if x != nil {
		return x.Desc3
	}
	return ""
}

func (x *CampusRcmdTop) GetInviteLabel() *CampusLabel {
	if x != nil {
		return x.InviteLabel
	}
	return nil
}

func (x *CampusRcmdTop) GetReserveLabel() *CampusLabel {
	if x != nil {
		return x.ReserveLabel
	}
	return nil
}

func (x *CampusRcmdTop) GetReserveNumber() int64 {
	if x != nil {
		return x.ReserveNumber
	}
	return 0
}

type CampusRedDotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedDot int32 `protobuf:"varint,1,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
}

func (x *CampusRedDotReply) Reset() {
	*x = CampusRedDotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRedDotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRedDotReply) ProtoMessage() {}

func (x *CampusRedDotReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRedDotReply.ProtoReflect.Descriptor instead.
func (*CampusRedDotReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{44}
}

func (x *CampusRedDotReply) GetRedDot() int32 {
	if x != nil {
		return x.RedDot
	}
	return 0
}

type CampusRedDotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
}

func (x *CampusRedDotReq) Reset() {
	*x = CampusRedDotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusRedDotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusRedDotReq) ProtoMessage() {}

func (x *CampusRedDotReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusRedDotReq.ProtoReflect.Descriptor instead.
func (*CampusRedDotReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{45}
}

func (x *CampusRedDotReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

type CampusShowTabInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	RedDot int32 `protobuf:"varint,4,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
}

func (x *CampusShowTabInfo) Reset() {
	*x = CampusShowTabInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusShowTabInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusShowTabInfo) ProtoMessage() {}

func (x *CampusShowTabInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusShowTabInfo.ProtoReflect.Descriptor instead.
func (*CampusShowTabInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{46}
}

func (x *CampusShowTabInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CampusShowTabInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CampusShowTabInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CampusShowTabInfo) GetRedDot() int32 {
	if x != nil {
		return x.RedDot
	}
	return 0
}

type CampusTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Tabs []*CampusShowTabInfo `protobuf:"bytes,3,rep,name=tabs,proto3" json:"tabs,omitempty"`
	SwitchLabel *CampusLabel `protobuf:"bytes,4,opt,name=switch_label,json=switchLabel,proto3" json:"switch_label,omitempty"`
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Banner []*CampusBannerInfo `protobuf:"bytes,6,rep,name=banner,proto3" json:"banner,omitempty"`
	InviteLabel *CampusLabel `protobuf:"bytes,7,opt,name=invite_label,json=inviteLabel,proto3" json:"invite_label,omitempty"`
	Notice *CampusNoticeInfo `protobuf:"bytes,8,opt,name=notice,proto3" json:"notice,omitempty"`
	TopicSquare *TopicSquareInfo `protobuf:"bytes,9,opt,name=topic_square,json=topicSquare,proto3" json:"topic_square,omitempty"`
	CampusBadge string `protobuf:"bytes,10,opt,name=campus_badge,json=campusBadge,proto3" json:"campus_badge,omitempty"`
	CampusBackground string `protobuf:"bytes,11,opt,name=campus_background,json=campusBackground,proto3" json:"campus_background,omitempty"`
}

func (x *CampusTop) Reset() {
	*x = CampusTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusTop) ProtoMessage() {}

func (x *CampusTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusTop.ProtoReflect.Descriptor instead.
func (*CampusTop) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{47}
}

func (x *CampusTop) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusTop) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *CampusTop) GetTabs() []*CampusShowTabInfo {
	if x != nil {
		return x.Tabs
	}
	return nil
}

func (x *CampusTop) GetSwitchLabel() *CampusLabel {
	if x != nil {
		return x.SwitchLabel
	}
	return nil
}

func (x *CampusTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CampusTop) GetBanner() []*CampusBannerInfo {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *CampusTop) GetInviteLabel() *CampusLabel {
	if x != nil {
		return x.InviteLabel
	}
	return nil
}

func (x *CampusTop) GetNotice() *CampusNoticeInfo {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *CampusTop) GetTopicSquare() *TopicSquareInfo {
	if x != nil {
		return x.TopicSquare
	}
	return nil
}

func (x *CampusTop) GetCampusBadge() string {
	if x != nil {
		return x.CampusBadge
	}
	return ""
}

func (x *CampusTop) GetCampusBackground() string {
	if x != nil {
		return x.CampusBackground
	}
	return ""
}

type CampusTopicRcmdFeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *CampusTopicRcmdFeedReply) Reset() {
	*x = CampusTopicRcmdFeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusTopicRcmdFeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusTopicRcmdFeedReply) ProtoMessage() {}

func (x *CampusTopicRcmdFeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusTopicRcmdFeedReply.ProtoReflect.Descriptor instead.
func (*CampusTopicRcmdFeedReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{48}
}

func (x *CampusTopicRcmdFeedReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CampusTopicRcmdFeedReply) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *CampusTopicRcmdFeedReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *CampusTopicRcmdFeedReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type CampusTopicRcmdFeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
}

func (x *CampusTopicRcmdFeedReq) Reset() {
	*x = CampusTopicRcmdFeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampusTopicRcmdFeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampusTopicRcmdFeedReq) ProtoMessage() {}

func (x *CampusTopicRcmdFeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampusTopicRcmdFeedReq.ProtoReflect.Descriptor instead.
func (*CampusTopicRcmdFeedReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{49}
}

func (x *CampusTopicRcmdFeedReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *CampusTopicRcmdFeedReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *CampusTopicRcmdFeedReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *CampusTopicRcmdFeedReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

// 动态卡片列表
type CardVideoDynList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新的动态数
	UpdateNum int64 `protobuf:"varint,2,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,3,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 更新基础信息
	UpdateBaseline string `protobuf:"bytes,4,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *CardVideoDynList) Reset() {
	*x = CardVideoDynList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardVideoDynList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardVideoDynList) ProtoMessage() {}

func (x *CardVideoDynList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardVideoDynList.ProtoReflect.Descriptor instead.
func (*CardVideoDynList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{50}
}

func (x *CardVideoDynList) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CardVideoDynList) GetUpdateNum() int64 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

func (x *CardVideoDynList) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *CardVideoDynList) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *CardVideoDynList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// 视频页-我的追番
type CardVideoFollowList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查看全部(跳转链接)
	ViewAllLink string `protobuf:"bytes,1,opt,name=view_all_link,json=viewAllLink,proto3" json:"view_all_link,omitempty"`
	// 追番列表
	List []*FollowListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CardVideoFollowList) Reset() {
	*x = CardVideoFollowList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardVideoFollowList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardVideoFollowList) ProtoMessage() {}

func (x *CardVideoFollowList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardVideoFollowList.ProtoReflect.Descriptor instead.
func (*CardVideoFollowList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{51}
}

func (x *CardVideoFollowList) GetViewAllLink() string {
	if x != nil {
		return x.ViewAllLink
	}
	return ""
}

func (x *CardVideoFollowList) GetList() []*FollowListItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 视频页-最近访问
type CardVideoUpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题展示文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// up主列表
	List []*UpListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 直播数
	ShowLiveNum int32 `protobuf:"varint,4,opt,name=show_live_num,json=showLiveNum,proto3" json:"show_live_num,omitempty"`
	// 跳转label
	MoreLabel *UpListMoreLabel `protobuf:"bytes,5,opt,name=more_label,json=moreLabel,proto3" json:"more_label,omitempty"`
	// 标题开关(综合页)
	TitleSwitch int32 `protobuf:"varint,6,opt,name=title_switch,json=titleSwitch,proto3" json:"title_switch,omitempty"`
	// 是否展示右上角查看更多label
	ShowMoreLabel bool `protobuf:"varint,7,opt,name=show_more_label,json=showMoreLabel,proto3" json:"show_more_label,omitempty"`
	// 是否在快速消费页查看更多按钮
	ShowInPersonal bool `protobuf:"varint,8,opt,name=show_in_personal,json=showInPersonal,proto3" json:"show_in_personal,omitempty"`
	// 是否展示右侧查看更多按钮
	ShowMoreButton bool `protobuf:"varint,9,opt,name=show_more_button,json=showMoreButton,proto3" json:"show_more_button,omitempty"`
}

func (x *CardVideoUpList) Reset() {
	*x = CardVideoUpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardVideoUpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardVideoUpList) ProtoMessage() {}

func (x *CardVideoUpList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardVideoUpList.ProtoReflect.Descriptor instead.
func (*CardVideoUpList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{52}
}

func (x *CardVideoUpList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardVideoUpList) GetList() []*UpListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CardVideoUpList) GetFootprint() string {
	if x != nil {
		return x.Footprint
	}
	return ""
}

func (x *CardVideoUpList) GetShowLiveNum() int32 {
	if x != nil {
		return x.ShowLiveNum
	}
	return 0
}

func (x *CardVideoUpList) GetMoreLabel() *UpListMoreLabel {
	if x != nil {
		return x.MoreLabel
	}
	return nil
}

func (x *CardVideoUpList) GetTitleSwitch() int32 {
	if x != nil {
		return x.TitleSwitch
	}
	return 0
}

func (x *CardVideoUpList) GetShowMoreLabel() bool {
	if x != nil {
		return x.ShowMoreLabel
	}
	return false
}

func (x *CardVideoUpList) GetShowInPersonal() bool {
	if x != nil {
		return x.ShowInPersonal
	}
	return false
}

func (x *CardVideoUpList) GetShowMoreButton() bool {
	if x != nil {
		return x.ShowMoreButton
	}
	return false
}

type ChannelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int64 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IsAtten bool `protobuf:"varint,4,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
	TypeIcon string `protobuf:"bytes,5,opt,name=type_icon,json=typeIcon,proto3" json:"type_icon,omitempty"`
	Items []*RcmdItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	JumpUri string `protobuf:"bytes,8,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
}

func (x *ChannelInfo) Reset() {
	*x = ChannelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfo) ProtoMessage() {}

func (x *ChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfo.ProtoReflect.Descriptor instead.
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{53}
}

func (x *ChannelInfo) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ChannelInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ChannelInfo) GetIsAtten() bool {
	if x != nil {
		return x.IsAtten
	}
	return false
}

func (x *ChannelInfo) GetTypeIcon() string {
	if x != nil {
		return x.TypeIcon
	}
	return ""
}

func (x *ChannelInfo) GetItems() []*RcmdItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ChannelInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ChannelInfo) GetJumpUri() string {
	if x != nil {
		return x.JumpUri
	}
	return ""
}

// 评论外露展示项
type CmtShowItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 评论内容
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CmtShowItem) Reset() {
	*x = CmtShowItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmtShowItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmtShowItem) ProtoMessage() {}

func (x *CmtShowItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmtShowItem.ProtoReflect.Descriptor instead.
func (*CmtShowItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{54}
}

func (x *CmtShowItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CmtShowItem) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *CmtShowItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CmtShowItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// 精选评论区
type CommentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 该功能能不能用
	CanModify bool `protobuf:"varint,1,opt,name=can_modify,json=canModify,proto3" json:"can_modify,omitempty"`
	// up关闭评论区功能 1允许关闭 0允许开放
	// 精选评论区功能 1允许停止评论精选 0允许评论精选
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CommentDetail) Reset() {
	*x = CommentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentDetail) ProtoMessage() {}

func (x *CommentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentDetail.ProtoReflect.Descriptor instead.
func (*CommentDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{55}
}

func (x *CommentDetail) GetCanModify() bool {
	if x != nil {
		return x.CanModify
	}
	return false
}

func (x *CommentDetail) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 装扮卡片-粉丝勋章信息
type DecoCardFan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否是粉丝
	IsFan int32 `protobuf:"varint,1,opt,name=is_fan,json=isFan,proto3" json:"is_fan,omitempty"`
	// 数量
	Number int32 `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	// 数量 str
	NumberStr string `protobuf:"bytes,3,opt,name=number_str,json=numberStr,proto3" json:"number_str,omitempty"`
	// 颜色
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *DecoCardFan) Reset() {
	*x = DecoCardFan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecoCardFan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecoCardFan) ProtoMessage() {}

func (x *DecoCardFan) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecoCardFan.ProtoReflect.Descriptor instead.
func (*DecoCardFan) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{56}
}

func (x *DecoCardFan) GetIsFan() int32 {
	if x != nil {
		return x.IsFan
	}
	return 0
}

func (x *DecoCardFan) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DecoCardFan) GetNumberStr() string {
	if x != nil {
		return x.NumberStr
	}
	return ""
}

func (x *DecoCardFan) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// 装扮卡片
type DecorateCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 装扮卡片id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 装扮卡片链接
	CardUrl string `protobuf:"bytes,2,opt,name=card_url,json=cardUrl,proto3" json:"card_url,omitempty"`
	// 装扮卡片点击跳转链接
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 粉丝样式
	Fan *DecoCardFan `protobuf:"bytes,4,opt,name=fan,proto3" json:"fan,omitempty"`
}

func (x *DecorateCard) Reset() {
	*x = DecorateCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecorateCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecorateCard) ProtoMessage() {}

func (x *DecorateCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecorateCard.ProtoReflect.Descriptor instead.
func (*DecorateCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{57}
}

func (x *DecorateCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DecorateCard) GetCardUrl() string {
	if x != nil {
		return x.CardUrl
	}
	return ""
}

func (x *DecorateCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *DecorateCard) GetFan() *DecoCardFan {
	if x != nil {
		return x.Fan
	}
	return nil
}

// 文本描述
type Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文本内容
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文本类型
	Type DescType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DescType" json:"type,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// emoji类型
	EmojiType EmojiType `protobuf:"varint,4,opt,name=emoji_type,json=emojiType,proto3,enum=bilibili.app.dynamic.v2.EmojiType" json:"emoji_type,omitempty"`
	// 商品类型
	GoodsType string `protobuf:"bytes,5,opt,name=goods_type,json=goodsType,proto3" json:"goods_type,omitempty"`
	// 前置Icon
	IconUrl string `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// icon_name
	IconName string `protobuf:"bytes,7,opt,name=icon_name,json=iconName,proto3" json:"icon_name,omitempty"`
	// 资源ID
	Rid string `protobuf:"bytes,8,opt,name=rid,proto3" json:"rid,omitempty"`
	// 商品卡特殊字段
	Goods *ModuleDescGoods `protobuf:"bytes,9,opt,name=goods,proto3" json:"goods,omitempty"`
	// 文本原始文案
	OrigText string `protobuf:"bytes,10,opt,name=orig_text,json=origText,proto3" json:"orig_text,omitempty"`
	EmojiSize int32 `protobuf:"varint,11,opt,name=emoji_size,json=emojiSize,proto3" json:"emoji_size,omitempty"`
}

func (x *Description) Reset() {
	*x = Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{58}
}

func (x *Description) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Description) GetType() DescType {
	if x != nil {
		return x.Type
	}
	return DescType_desc_type_none
}

func (x *Description) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Description) GetEmojiType() EmojiType {
	if x != nil {
		return x.EmojiType
	}
	return EmojiType_emoji_none
}

func (x *Description) GetGoodsType() string {
	if x != nil {
		return x.GoodsType
	}
	return ""
}

func (x *Description) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Description) GetIconName() string {
	if x != nil {
		return x.IconName
	}
	return ""
}

func (x *Description) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *Description) GetGoods() *ModuleDescGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Description) GetOrigText() string {
	if x != nil {
		return x.OrigText
	}
	return ""
}

func (x *Description) GetEmojiSize() int32 {
	if x != nil {
		return x.EmojiSize
	}
	return 0
}

// 尺寸信息
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{59}
}

func (x *Dimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetRotate() int64 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

// 动态通用附加卡-follow/取消follow-响应
type DynAdditionCommonFollowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status AdditionalButtonStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
}

func (x *DynAdditionCommonFollowReply) Reset() {
	*x = DynAdditionCommonFollowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAdditionCommonFollowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAdditionCommonFollowReply) ProtoMessage() {}

func (x *DynAdditionCommonFollowReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAdditionCommonFollowReply.ProtoReflect.Descriptor instead.
func (*DynAdditionCommonFollowReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{60}
}

func (x *DynAdditionCommonFollowReply) GetStatus() AdditionalButtonStatus {
	if x != nil {
		return x.Status
	}
	return AdditionalButtonStatus_none
}

// 动态通用附加卡-follow/取消follow-请求
type DynAdditionCommonFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status AdditionalButtonStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.AdditionalButtonStatus" json:"status,omitempty"`
	DynId string `protobuf:"bytes,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	CardType string `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *DynAdditionCommonFollowReq) Reset() {
	*x = DynAdditionCommonFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAdditionCommonFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAdditionCommonFollowReq) ProtoMessage() {}

func (x *DynAdditionCommonFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAdditionCommonFollowReq.ProtoReflect.Descriptor instead.
func (*DynAdditionCommonFollowReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{61}
}

func (x *DynAdditionCommonFollowReq) GetStatus() AdditionalButtonStatus {
	if x != nil {
		return x.Status
	}
	return AdditionalButtonStatus_none
}

func (x *DynAdditionCommonFollowReq) GetDynId() string {
	if x != nil {
		return x.DynId
	}
	return ""
}

func (x *DynAdditionCommonFollowReq) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

// 最近访问-个人feed流列表-返回
type DynAllPersonalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移量
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 已读进度
	ReadOffset string `protobuf:"bytes,4,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	// 顶部预约卡
	AdditionUp *TopAdditionUP `protobuf:"bytes,6,opt,name=addition_up,json=additionUp,proto3" json:"addition_up,omitempty"`
}

func (x *DynAllPersonalReply) Reset() {
	*x = DynAllPersonalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAllPersonalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAllPersonalReply) ProtoMessage() {}

func (x *DynAllPersonalReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAllPersonalReply.ProtoReflect.Descriptor instead.
func (*DynAllPersonalReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{62}
}

func (x *DynAllPersonalReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynAllPersonalReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynAllPersonalReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DynAllPersonalReply) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

func (x *DynAllPersonalReply) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *DynAllPersonalReply) GetAdditionUp() *TopAdditionUP {
	if x != nil {
		return x.AdditionUp
	}
	return nil
}

// 最近访问-个人feed流列表-请求
type DynAllPersonalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者的 UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 偏移量 第一页可传空
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 标明下拉几次
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 是否是预加载 默认是1；客户端预加载。1：是预加载，不更新已读进度，不会影响小红点；0：非预加载，更新已读进度
	IsPreload int32 `protobuf:"varint,4,opt,name=is_preload,json=isPreload,proto3" json:"is_preload,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,7,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开用
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *DynAllPersonalReq) Reset() {
	*x = DynAllPersonalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAllPersonalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAllPersonalReq) ProtoMessage() {}

func (x *DynAllPersonalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAllPersonalReq.ProtoReflect.Descriptor instead.
func (*DynAllPersonalReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{63}
}

func (x *DynAllPersonalReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynAllPersonalReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynAllPersonalReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynAllPersonalReq) GetIsPreload() int32 {
	if x != nil {
		return x.IsPreload
	}
	return 0
}

func (x *DynAllPersonalReq) GetPlayurlParam() *PlayurlParam {
	if x != nil {
		return x.PlayurlParam
	}
	return nil
}

func (x *DynAllPersonalReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynAllPersonalReq) GetFootprint() string {
	if x != nil {
		return x.Footprint
	}
	return ""
}

func (x *DynAllPersonalReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynAllPersonalReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 动态综合页-响应
type DynAllReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片列表
	DynamicList *DynamicList `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	// 顶部up list
	UpList *CardVideoUpList `protobuf:"bytes,2,opt,name=up_list,json=upList,proto3" json:"up_list,omitempty"`
	// 话题广场
	TopicList *TopicList `protobuf:"bytes,3,opt,name=topic_list,json=topicList,proto3" json:"topic_list,omitempty"`
	// 无关注推荐
	Unfollow *Unfollow `protobuf:"bytes,4,opt,name=unfollow,proto3" json:"unfollow,omitempty"`
	// 分区UP推荐
	RegionRcmd *DynRegionRcmd `protobuf:"bytes,5,opt,name=region_rcmd,json=regionRcmd,proto3" json:"region_rcmd,omitempty"`
}

func (x *DynAllReply) Reset() {
	*x = DynAllReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAllReply) ProtoMessage() {}

func (x *DynAllReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAllReply.ProtoReflect.Descriptor instead.
func (*DynAllReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{64}
}

func (x *DynAllReply) GetDynamicList() *DynamicList {
	if x != nil {
		return x.DynamicList
	}
	return nil
}

func (x *DynAllReply) GetUpList() *CardVideoUpList {
	if x != nil {
		return x.UpList
	}
	return nil
}

func (x *DynAllReply) GetTopicList() *TopicList {
	if x != nil {
		return x.TopicList
	}
	return nil
}

func (x *DynAllReply) GetUnfollow() *Unfollow {
	if x != nil {
		return x.Unfollow
	}
	return nil
}

func (x *DynAllReply) GetRegionRcmd() *DynRegionRcmd {
	if x != nil {
		return x.RegionRcmd
	}
	return nil
}

// 动态综合页-请求
type DynAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 透传 update_baseline
	UpdateBaseline string `protobuf:"bytes,1,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 透传 history_offset
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 刷新方式 1向上刷新 2向下翻页
	RefreshType Refresh `protobuf:"varint,4,opt,name=refresh_type,json=refreshType,proto3,enum=bilibili.app.dynamic.v2.Refresh" json:"refresh_type,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 综合页当前更新的最大值
	AssistBaseline string `protobuf:"bytes,6,opt,name=assist_baseline,json=assistBaseline,proto3" json:"assist_baseline,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,7,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 推荐up主入参(new的时候传)
	RcmdUpsParam *RcmdUPsParam `protobuf:"bytes,8,opt,name=rcmd_ups_param,json=rcmdUpsParam,proto3" json:"rcmd_ups_param,omitempty"`
	// 广告参数
	AdParam *AdParam `protobuf:"bytes,9,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
	// 是否冷启
	ColdStart int32 `protobuf:"varint,10,opt,name=cold_start,json=coldStart,proto3" json:"cold_start,omitempty"`
	// 来源
	From string `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,12,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	TabRecallUid int64 `protobuf:"varint,13,opt,name=tab_recall_uid,json=tabRecallUid,proto3" json:"tab_recall_uid,omitempty"`
	TabRecallType int32 `protobuf:"varint,14,opt,name=tab_recall_type,json=tabRecallType,proto3" json:"tab_recall_type,omitempty"`
}

func (x *DynAllReq) Reset() {
	*x = DynAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAllReq) ProtoMessage() {}

func (x *DynAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAllReq.ProtoReflect.Descriptor instead.
func (*DynAllReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{65}
}

func (x *DynAllReq) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *DynAllReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynAllReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynAllReq) GetRefreshType() Refresh {
	if x != nil {
		return x.RefreshType
	}
	return Refresh_refresh_new
}

func (x *DynAllReq) GetPlayurlParam() *PlayurlParam {
	if x != nil {
		return x.PlayurlParam
	}
	return nil
}

func (x *DynAllReq) GetAssistBaseline() string {
	if x != nil {
		return x.AssistBaseline
	}
	return ""
}

func (x *DynAllReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynAllReq) GetRcmdUpsParam() *RcmdUPsParam {
	if x != nil {
		return x.RcmdUpsParam
	}
	return nil
}

func (x *DynAllReq) GetAdParam() *AdParam {
	if x != nil {
		return x.AdParam
	}
	return nil
}

func (x *DynAllReq) GetColdStart() int32 {
	if x != nil {
		return x.ColdStart
	}
	return 0
}

func (x *DynAllReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynAllReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynAllReq) GetTabRecallUid() int64 {
	if x != nil {
		return x.TabRecallUid
	}
	return 0
}

func (x *DynAllReq) GetTabRecallType() int32 {
	if x != nil {
		return x.TabRecallType
	}
	return 0
}

// 最近访问-标记已读-请求
type DynAllUpdOffsetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者的UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 用户已读进度
	ReadOffset string `protobuf:"bytes,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
}

func (x *DynAllUpdOffsetReq) Reset() {
	*x = DynAllUpdOffsetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynAllUpdOffsetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynAllUpdOffsetReq) ProtoMessage() {}

func (x *DynAllUpdOffsetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynAllUpdOffsetReq.ProtoReflect.Descriptor instead.
func (*DynAllUpdOffsetReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{66}
}

func (x *DynAllUpdOffsetReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynAllUpdOffsetReq) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

func (x *DynAllUpdOffsetReq) GetFootprint() string {
	if x != nil {
		return x.Footprint
	}
	return ""
}

// 动态详情页-响应
type DynDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态详情
	Item *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *DynDetailReply) Reset() {
	*x = DynDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailReply) ProtoMessage() {}

func (x *DynDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailReply.ProtoReflect.Descriptor instead.
func (*DynDetailReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{67}
}

func (x *DynDetailReply) GetItem() *DynamicItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 动态详情页-请求
type DynDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// up主uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 动态ID
	DynamicId string `protobuf:"bytes,2,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,3,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	// 广告参数
	AdParam *AdParam `protobuf:"bytes,5,opt,name=ad_param,json=adParam,proto3" json:"ad_param,omitempty"`
	// From来源
	From string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,7,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 分享id
	ShareId string `protobuf:"bytes,8,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	// 分享类型
	// 1:文字 2:图片 3:链接 4:视频 5:音频
	ShareMode int32 `protobuf:"varint,9,opt,name=share_mode,json=shareMode,proto3" json:"share_mode,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,10,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// pattern
	Pattern string `protobuf:"bytes,11,opt,name=pattern,proto3" json:"pattern,omitempty"`
}

func (x *DynDetailReq) Reset() {
	*x = DynDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailReq) ProtoMessage() {}

func (x *DynDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailReq.ProtoReflect.Descriptor instead.
func (*DynDetailReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{68}
}

func (x *DynDetailReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynDetailReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *DynDetailReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *DynDetailReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DynDetailReq) GetAdParam() *AdParam {
	if x != nil {
		return x.AdParam
	}
	return nil
}

func (x *DynDetailReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynDetailReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynDetailReq) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *DynDetailReq) GetShareMode() int32 {
	if x != nil {
		return x.ShareMode
	}
	return 0
}

func (x *DynDetailReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynDetailReq) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

// 批量动态id获取动态详情-响应
type DynDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DynDetailsReply) Reset() {
	*x = DynDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailsReply) ProtoMessage() {}

func (x *DynDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailsReply.ProtoReflect.Descriptor instead.
func (*DynDetailsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{69}
}

func (x *DynDetailsReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 批量动态id获取动态详情-请求
type DynDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态id
	DynamicIds string `protobuf:"bytes,1,opt,name=dynamic_ids,json=dynamicIds,proto3" json:"dynamic_ids,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,2,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *DynDetailsReq) Reset() {
	*x = DynDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynDetailsReq) ProtoMessage() {}

func (x *DynDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynDetailsReq.ProtoReflect.Descriptor instead.
func (*DynDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{70}
}

func (x *DynDetailsReq) GetDynamicIds() string {
	if x != nil {
		return x.DynamicIds
	}
	return ""
}

func (x *DynDetailsReq) GetPlayurlParam() *PlayurlParam {
	if x != nil {
		return x.PlayurlParam
	}
	return nil
}

func (x *DynDetailsReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 动态发布生成临时卡-响应
type DynFakeCardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态卡片
	Item *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *DynFakeCardReply) Reset() {
	*x = DynFakeCardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynFakeCardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynFakeCardReply) ProtoMessage() {}

func (x *DynFakeCardReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynFakeCardReply.ProtoReflect.Descriptor instead.
func (*DynFakeCardReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{71}
}

func (x *DynFakeCardReply) GetItem() *DynamicItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 动态发布生成临时卡-请求
type DynFakeCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片内容json string
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DynFakeCardReq) Reset() {
	*x = DynFakeCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynFakeCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynFakeCardReq) ProtoMessage() {}

func (x *DynFakeCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynFakeCardReq.ProtoReflect.Descriptor instead.
func (*DynFakeCardReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{72}
}

func (x *DynFakeCardReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 轻浏览-响应
type DynLightReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片列表
	DynamicList *DynamicList `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
}

func (x *DynLightReply) Reset() {
	*x = DynLightReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynLightReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynLightReply) ProtoMessage() {}

func (x *DynLightReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynLightReply.ProtoReflect.Descriptor instead.
func (*DynLightReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{73}
}

func (x *DynLightReply) GetDynamicList() *DynamicList {
	if x != nil {
		return x.DynamicList
	}
	return nil
}

// 轻浏览-请求
type DynLightReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 透传 history_offset
	HistoryOffset string `protobuf:"bytes,1,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 来源
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	FromType int32 `protobuf:"varint,6,opt,name=from_type,json=fromType,proto3" json:"from_type,omitempty"`
	FakeUid int64 `protobuf:"varint,7,opt,name=fake_uid,json=fakeUid,proto3" json:"fake_uid,omitempty"`
}

func (x *DynLightReq) Reset() {
	*x = DynLightReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynLightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynLightReq) ProtoMessage() {}

func (x *DynLightReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynLightReq.ProtoReflect.Descriptor instead.
func (*DynLightReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{74}
}

func (x *DynLightReq) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *DynLightReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynLightReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynLightReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynLightReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynLightReq) GetFromType() int32 {
	if x != nil {
		return x.FromType
	}
	return 0
}

func (x *DynLightReq) GetFakeUid() int64 {
	if x != nil {
		return x.FakeUid
	}
	return 0
}

// 查看更多-列表-响应
type DynMixUpListViewMoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MixUpListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	SearchDefaultText string `protobuf:"bytes,2,opt,name=search_default_text,json=searchDefaultText,proto3" json:"search_default_text,omitempty"`
	// 排序类型列表
	SortTypes []*SortType `protobuf:"bytes,3,rep,name=sort_types,json=sortTypes,proto3" json:"sort_types,omitempty"`
	// 是否展示更多的排序策略
	ShowMoreSortTypes bool `protobuf:"varint,4,opt,name=show_more_sort_types,json=showMoreSortTypes,proto3" json:"show_more_sort_types,omitempty"`
	// 默认排序策略
	DefaultSortType int32 `protobuf:"varint,5,opt,name=default_sort_type,json=defaultSortType,proto3" json:"default_sort_type,omitempty"`
}

func (x *DynMixUpListViewMoreReply) Reset() {
	*x = DynMixUpListViewMoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynMixUpListViewMoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynMixUpListViewMoreReply) ProtoMessage() {}

func (x *DynMixUpListViewMoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynMixUpListViewMoreReply.ProtoReflect.Descriptor instead.
func (*DynMixUpListViewMoreReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{75}
}

func (x *DynMixUpListViewMoreReply) GetItems() []*MixUpListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DynMixUpListViewMoreReply) GetSearchDefaultText() string {
	if x != nil {
		return x.SearchDefaultText
	}
	return ""
}

func (x *DynMixUpListViewMoreReply) GetSortTypes() []*SortType {
	if x != nil {
		return x.SortTypes
	}
	return nil
}

func (x *DynMixUpListViewMoreReply) GetShowMoreSortTypes() bool {
	if x != nil {
		return x.ShowMoreSortTypes
	}
	return false
}

func (x *DynMixUpListViewMoreReply) GetDefaultSortType() int32 {
	if x != nil {
		return x.DefaultSortType
	}
	return 0
}

// 查看更多-请求
type DynMixUpListViewMoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序策略
	// 1:推荐排序 2:最常访问 3:最近关注，其他值为默认排序
	SortType int32 `protobuf:"varint,1,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
}

func (x *DynMixUpListViewMoreReq) Reset() {
	*x = DynMixUpListViewMoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynMixUpListViewMoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynMixUpListViewMoreReq) ProtoMessage() {}

func (x *DynMixUpListViewMoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynMixUpListViewMoreReq.ProtoReflect.Descriptor instead.
func (*DynMixUpListViewMoreReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{76}
}

func (x *DynMixUpListViewMoreReq) GetSortType() int32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

// 推荐页-响应
type DynRcmdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 推荐页返回参数
	RegionRcmd *DynRegionRcmd `protobuf:"bytes,1,opt,name=region_rcmd,json=regionRcmd,proto3" json:"region_rcmd,omitempty"`
	DynamicList *DynamicList `protobuf:"bytes,2,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
}

func (x *DynRcmdReply) Reset() {
	*x = DynRcmdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRcmdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRcmdReply) ProtoMessage() {}

func (x *DynRcmdReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRcmdReply.ProtoReflect.Descriptor instead.
func (*DynRcmdReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{77}
}

func (x *DynRcmdReply) GetRegionRcmd() *DynRegionRcmd {
	if x != nil {
		return x.RegionRcmd
	}
	return nil
}

func (x *DynRcmdReply) GetDynamicList() *DynamicList {
	if x != nil {
		return x.DynamicList
	}
	return nil
}

// 推荐页-请求
type DynRcmdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,1,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,2,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	FakeUid int64 `protobuf:"varint,3,opt,name=fake_uid,json=fakeUid,proto3" json:"fake_uid,omitempty"`
	IsRefresh bool `protobuf:"varint,4,opt,name=is_refresh,json=isRefresh,proto3" json:"is_refresh,omitempty"`
}

func (x *DynRcmdReq) Reset() {
	*x = DynRcmdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRcmdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRcmdReq) ProtoMessage() {}

func (x *DynRcmdReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRcmdReq.ProtoReflect.Descriptor instead.
func (*DynRcmdReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{78}
}

func (x *DynRcmdReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynRcmdReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynRcmdReq) GetFakeUid() int64 {
	if x != nil {
		return x.FakeUid
	}
	return 0
}

func (x *DynRcmdReq) GetIsRefresh() bool {
	if x != nil {
		return x.IsRefresh
	}
	return false
}

// 关注推荐up主换一换-响应
type DynRcmdUpExchangeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 无关注推荐
	Unfollow *Unfollow `protobuf:"bytes,1,opt,name=unfollow,proto3" json:"unfollow,omitempty"`
}

func (x *DynRcmdUpExchangeReply) Reset() {
	*x = DynRcmdUpExchangeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRcmdUpExchangeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRcmdUpExchangeReply) ProtoMessage() {}

func (x *DynRcmdUpExchangeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRcmdUpExchangeReply.ProtoReflect.Descriptor instead.
func (*DynRcmdUpExchangeReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{79}
}

func (x *DynRcmdUpExchangeReply) GetUnfollow() *Unfollow {
	if x != nil {
		return x.Unfollow
	}
	return nil
}

// 关注推荐up主换一换-请求
type DynRcmdUpExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登录用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 上一次不感兴趣的ts，单位：秒；该字段透传给搜索
	DislikeTs int64 `protobuf:"varint,2,opt,name=dislikeTs,proto3" json:"dislikeTs,omitempty"`
	// 需要与服务端确认或参照客户端现有参数
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *DynRcmdUpExchangeReq) Reset() {
	*x = DynRcmdUpExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRcmdUpExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRcmdUpExchangeReq) ProtoMessage() {}

func (x *DynRcmdUpExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRcmdUpExchangeReq.ProtoReflect.Descriptor instead.
func (*DynRcmdUpExchangeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{80}
}

func (x *DynRcmdUpExchangeReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynRcmdUpExchangeReq) GetDislikeTs() int64 {
	if x != nil {
		return x.DislikeTs
	}
	return 0
}

func (x *DynRcmdUpExchangeReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// 推荐页返回参数
type DynRegionRcmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分区推荐项目列表
	Items []*DynRegionRcmdItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 分区聚类推荐选项
	Opts *RcmdOption `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *DynRegionRcmd) Reset() {
	*x = DynRegionRcmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRegionRcmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRegionRcmd) ProtoMessage() {}

func (x *DynRegionRcmd) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRegionRcmd.ProtoReflect.Descriptor instead.
func (*DynRegionRcmd) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{81}
}

func (x *DynRegionRcmd) GetItems() []*DynRegionRcmdItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DynRegionRcmd) GetOpts() *RcmdOption {
	if x != nil {
		return x.Opts
	}
	return nil
}

// 分区推荐项目
type DynRegionRcmdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分区id
	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 推荐模块
	Items []*ModuleRcmd `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DynRegionRcmdItem) Reset() {
	*x = DynRegionRcmdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRegionRcmdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRegionRcmdItem) ProtoMessage() {}

func (x *DynRegionRcmdItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRegionRcmdItem.ProtoReflect.Descriptor instead.
func (*DynRegionRcmdItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{82}
}

func (x *DynRegionRcmdItem) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DynRegionRcmdItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynRegionRcmdItem) GetItems() []*ModuleRcmd {
	if x != nil {
		return x.Items
	}
	return nil
}

type DynSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelInfo *SearchChannel `protobuf:"bytes,1,opt,name=channel_info,json=channelInfo,proto3" json:"channel_info,omitempty"`
	SearchTopic *SearchTopic `protobuf:"bytes,2,opt,name=search_topic,json=searchTopic,proto3" json:"search_topic,omitempty"`
	SearchInfo *SearchInfo `protobuf:"bytes,3,opt,name=search_info,json=searchInfo,proto3" json:"search_info,omitempty"`
}

func (x *DynSearchReply) Reset() {
	*x = DynSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSearchReply) ProtoMessage() {}

func (x *DynSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSearchReply.ProtoReflect.Descriptor instead.
func (*DynSearchReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{83}
}

func (x *DynSearchReply) GetChannelInfo() *SearchChannel {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

func (x *DynSearchReply) GetSearchTopic() *SearchTopic {
	if x != nil {
		return x.SearchTopic
	}
	return nil
}

func (x *DynSearchReply) GetSearchInfo() *SearchInfo {
	if x != nil {
		return x.SearchInfo
	}
	return nil
}

type DynSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *DynSearchReq) Reset() {
	*x = DynSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSearchReq) ProtoMessage() {}

func (x *DynSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSearchReq.ProtoReflect.Descriptor instead.
func (*DynSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{84}
}

func (x *DynSearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *DynSearchReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynSearchReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynSearchReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type DynServerDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[int64]*DynamicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DynServerDetailsReply) Reset() {
	*x = DynServerDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynServerDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynServerDetailsReply) ProtoMessage() {}

func (x *DynServerDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynServerDetailsReply.ProtoReflect.Descriptor instead.
func (*DynServerDetailsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{85}
}

func (x *DynServerDetailsReply) GetItems() map[int64]*DynamicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DynServerDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalTime int32 `protobuf:"varint,2,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	MobiApp string `protobuf:"bytes,4,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	Device string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
	Buvid string `protobuf:"bytes,6,opt,name=buvid,proto3" json:"buvid,omitempty"`
	Build int64 `protobuf:"varint,7,opt,name=build,proto3" json:"build,omitempty"`
	Mid int64 `protobuf:"varint,8,opt,name=mid,proto3" json:"mid,omitempty"`
	Platform string `protobuf:"bytes,9,opt,name=platform,proto3" json:"platform,omitempty"`
	IsMaster bool `protobuf:"varint,10,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
}

func (x *DynServerDetailsReq) Reset() {
	*x = DynServerDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynServerDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynServerDetailsReq) ProtoMessage() {}

func (x *DynServerDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynServerDetailsReq.ProtoReflect.Descriptor instead.
func (*DynServerDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{86}
}

func (x *DynServerDetailsReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynServerDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynServerDetailsReq) GetMobiApp() string {
	if x != nil {
		return x.MobiApp
	}
	return ""
}

func (x *DynServerDetailsReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DynServerDetailsReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

func (x *DynServerDetailsReq) GetBuild() int64 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *DynServerDetailsReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DynServerDetailsReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DynServerDetailsReq) GetIsMaster() bool {
	if x != nil {
		return x.IsMaster
	}
	return false
}

// 空间页动态-请求
type DynSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者，也就是空间主人的uid
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 动态偏移history_offset
	HistoryOffset string `protobuf:"bytes,2,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,3,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 向下翻页数，默认从1开始
	Page int64 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// 来源，空间页：space，直播tab：live
	From string `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *DynSpaceReq) Reset() {
	*x = DynSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSpaceReq) ProtoMessage() {}

func (x *DynSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSpaceReq.ProtoReflect.Descriptor instead.
func (*DynSpaceReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{87}
}

func (x *DynSpaceReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynSpaceReq) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *DynSpaceReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynSpaceReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynSpaceReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynSpaceReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// 空间页动态-响应
type DynSpaceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,2,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *DynSpaceRsp) Reset() {
	*x = DynSpaceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSpaceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSpaceRsp) ProtoMessage() {}

func (x *DynSpaceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSpaceRsp.ProtoReflect.Descriptor instead.
func (*DynSpaceRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{88}
}

func (x *DynSpaceRsp) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynSpaceRsp) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *DynSpaceRsp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type DynSpaceSearchDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[int64]*DynamicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DynSpaceSearchDetailsReply) Reset() {
	*x = DynSpaceSearchDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSpaceSearchDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSpaceSearchDetailsReply) ProtoMessage() {}

func (x *DynSpaceSearchDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSpaceSearchDetailsReply.ProtoReflect.Descriptor instead.
func (*DynSpaceSearchDetailsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{89}
}

func (x *DynSpaceSearchDetailsReply) GetItems() map[int64]*DynamicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DynSpaceSearchDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchWords []string `protobuf:"bytes,2,rep,name=search_words,json=searchWords,proto3" json:"search_words,omitempty"`
	LocalTime int32 `protobuf:"varint,3,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	MobiApp string `protobuf:"bytes,5,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	Device string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	Buvid string `protobuf:"bytes,7,opt,name=buvid,proto3" json:"buvid,omitempty"`
	Build int64 `protobuf:"varint,8,opt,name=build,proto3" json:"build,omitempty"`
	Mid int64 `protobuf:"varint,9,opt,name=mid,proto3" json:"mid,omitempty"`
	Platform string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	Ip string `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
	NetType int32 `protobuf:"varint,12,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`
	TfType int32 `protobuf:"varint,13,opt,name=tf_type,json=tfType,proto3" json:"tf_type,omitempty"`
}

func (x *DynSpaceSearchDetailsReq) Reset() {
	*x = DynSpaceSearchDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynSpaceSearchDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynSpaceSearchDetailsReq) ProtoMessage() {}

func (x *DynSpaceSearchDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynSpaceSearchDetailsReq.ProtoReflect.Descriptor instead.
func (*DynSpaceSearchDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{90}
}

func (x *DynSpaceSearchDetailsReq) GetSearchWords() []string {
	if x != nil {
		return x.SearchWords
	}
	return nil
}

func (x *DynSpaceSearchDetailsReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynSpaceSearchDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynSpaceSearchDetailsReq) GetMobiApp() string {
	if x != nil {
		return x.MobiApp
	}
	return ""
}

func (x *DynSpaceSearchDetailsReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DynSpaceSearchDetailsReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

func (x *DynSpaceSearchDetailsReq) GetBuild() int64 {
	if x != nil {
		return x.Build
	}
	return 0
}

func (x *DynSpaceSearchDetailsReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DynSpaceSearchDetailsReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *DynSpaceSearchDetailsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DynSpaceSearchDetailsReq) GetNetType() int32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *DynSpaceSearchDetailsReq) GetTfType() int32 {
	if x != nil {
		return x.TfType
	}
	return 0
}

type DynTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Bubble string `protobuf:"bytes,3,opt,name=bubble,proto3" json:"bubble,omitempty"`
	RedPoint int32 `protobuf:"varint,4,opt,name=red_point,json=redPoint,proto3" json:"red_point,omitempty"`
	CityId int64 `protobuf:"varint,5,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	IsPopup int32 `protobuf:"varint,6,opt,name=is_popup,json=isPopup,proto3" json:"is_popup,omitempty"`
	Popup *Popup `protobuf:"bytes,7,opt,name=popup,proto3" json:"popup,omitempty"`
	DefaultTab bool `protobuf:"varint,8,opt,name=default_tab,json=defaultTab,proto3" json:"default_tab,omitempty"`
	SubTitle string `protobuf:"bytes,9,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	Anchor string `protobuf:"bytes,10,opt,name=anchor,proto3" json:"anchor,omitempty"`
	InternalTest string `protobuf:"bytes,11,opt,name=internal_test,json=internalTest,proto3" json:"internal_test,omitempty"`
	Type int32 `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	BackUp *DynTab `protobuf:"bytes,13,opt,name=back_up,json=backUp,proto3" json:"back_up,omitempty"`
}

func (x *DynTab) Reset() {
	*x = DynTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTab) ProtoMessage() {}

func (x *DynTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTab.ProtoReflect.Descriptor instead.
func (*DynTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{91}
}

func (x *DynTab) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynTab) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynTab) GetBubble() string {
	if x != nil {
		return x.Bubble
	}
	return ""
}

func (x *DynTab) GetRedPoint() int32 {
	if x != nil {
		return x.RedPoint
	}
	return 0
}

func (x *DynTab) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *DynTab) GetIsPopup() int32 {
	if x != nil {
		return x.IsPopup
	}
	return 0
}

func (x *DynTab) GetPopup() *Popup {
	if x != nil {
		return x.Popup
	}
	return nil
}

func (x *DynTab) GetDefaultTab() bool {
	if x != nil {
		return x.DefaultTab
	}
	return false
}

func (x *DynTab) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *DynTab) GetAnchor() string {
	if x != nil {
		return x.Anchor
	}
	return ""
}

func (x *DynTab) GetInternalTest() string {
	if x != nil {
		return x.InternalTest
	}
	return ""
}

func (x *DynTab) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DynTab) GetBackUp() *DynTab {
	if x != nil {
		return x.BackUp
	}
	return nil
}

type DynTabReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynTab []*DynTab `protobuf:"bytes,1,rep,name=dyn_tab,json=dynTab,proto3" json:"dyn_tab,omitempty"`
}

func (x *DynTabReply) Reset() {
	*x = DynTabReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTabReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTabReply) ProtoMessage() {}

func (x *DynTabReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTabReply.ProtoReflect.Descriptor instead.
func (*DynTabReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{92}
}

func (x *DynTabReply) GetDynTab() []*DynTab {
	if x != nil {
		return x.DynTab
	}
	return nil
}

type DynTabReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeenagersMode int32 `protobuf:"varint,1,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
}

func (x *DynTabReq) Reset() {
	*x = DynTabReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynTabReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynTabReq) ProtoMessage() {}

func (x *DynTabReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynTabReq.ProtoReflect.Descriptor instead.
func (*DynTabReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{93}
}

func (x *DynTabReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

// 动态点赞-请求
type DynThumbReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 动态id
	DynId string `protobuf:"bytes,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 动态类型(透传extend中的dyn_type)
	DynType int64 `protobuf:"varint,3,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid string `protobuf:"bytes,4,opt,name=rid,proto3" json:"rid,omitempty"`
	// 点赞类型
	Type ThumbType `protobuf:"varint,5,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ThumbType" json:"type,omitempty"`
}

func (x *DynThumbReq) Reset() {
	*x = DynThumbReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynThumbReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynThumbReq) ProtoMessage() {}

func (x *DynThumbReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynThumbReq.ProtoReflect.Descriptor instead.
func (*DynThumbReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{94}
}

func (x *DynThumbReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynThumbReq) GetDynId() string {
	if x != nil {
		return x.DynId
	}
	return ""
}

func (x *DynThumbReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *DynThumbReq) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *DynThumbReq) GetType() ThumbType {
	if x != nil {
		return x.Type
	}
	return ThumbType_cancel
}

// 最近访问-个人feed流列表-响应
type DynVideoPersonalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移量
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 已读进度
	ReadOffset string `protobuf:"bytes,4,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	// 顶部预约卡
	AdditionUp *TopAdditionUP `protobuf:"bytes,6,opt,name=addition_up,json=additionUp,proto3" json:"addition_up,omitempty"`
}

func (x *DynVideoPersonalReply) Reset() {
	*x = DynVideoPersonalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoPersonalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoPersonalReply) ProtoMessage() {}

func (x *DynVideoPersonalReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoPersonalReply.ProtoReflect.Descriptor instead.
func (*DynVideoPersonalReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{95}
}

func (x *DynVideoPersonalReply) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynVideoPersonalReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoPersonalReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DynVideoPersonalReply) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

func (x *DynVideoPersonalReply) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *DynVideoPersonalReply) GetAdditionUp() *TopAdditionUP {
	if x != nil {
		return x.AdditionUp
	}
	return nil
}

// 最近访问-个人feed流列表-请求
type DynVideoPersonalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者的 UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 偏移量 第一页可传空
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 标明下拉几次
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 是否是预加载
	IsPreload int32 `protobuf:"varint,4,opt,name=is_preload,json=isPreload,proto3" json:"is_preload,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,7,opt,name=footprint,proto3" json:"footprint,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *DynVideoPersonalReq) Reset() {
	*x = DynVideoPersonalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoPersonalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoPersonalReq) ProtoMessage() {}

func (x *DynVideoPersonalReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoPersonalReq.ProtoReflect.Descriptor instead.
func (*DynVideoPersonalReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{96}
}

func (x *DynVideoPersonalReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynVideoPersonalReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoPersonalReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynVideoPersonalReq) GetIsPreload() int32 {
	if x != nil {
		return x.IsPreload
	}
	return 0
}

func (x *DynVideoPersonalReq) GetPlayurlParam() *PlayurlParam {
	if x != nil {
		return x.PlayurlParam
	}
	return nil
}

func (x *DynVideoPersonalReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynVideoPersonalReq) GetFootprint() string {
	if x != nil {
		return x.Footprint
	}
	return ""
}

func (x *DynVideoPersonalReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynVideoPersonalReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 动态视频页-响应
type DynVideoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片列表
	DynamicList *CardVideoDynList `protobuf:"bytes,1,opt,name=dynamic_list,json=dynamicList,proto3" json:"dynamic_list,omitempty"`
	// 动态卡片
	VideoUpList *CardVideoUpList `protobuf:"bytes,2,opt,name=video_up_list,json=videoUpList,proto3" json:"video_up_list,omitempty"`
	// 视频页-我的追番
	VideoFollowList *CardVideoFollowList `protobuf:"bytes,3,opt,name=video_follow_list,json=videoFollowList,proto3" json:"video_follow_list,omitempty"`
}

func (x *DynVideoReply) Reset() {
	*x = DynVideoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoReply) ProtoMessage() {}

func (x *DynVideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoReply.ProtoReflect.Descriptor instead.
func (*DynVideoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{97}
}

func (x *DynVideoReply) GetDynamicList() *CardVideoDynList {
	if x != nil {
		return x.DynamicList
	}
	return nil
}

func (x *DynVideoReply) GetVideoUpList() *CardVideoUpList {
	if x != nil {
		return x.VideoUpList
	}
	return nil
}

func (x *DynVideoReply) GetVideoFollowList() *CardVideoFollowList {
	if x != nil {
		return x.VideoFollowList
	}
	return nil
}

// 动态视频页-请求
type DynVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 透传 update_baseline
	UpdateBaseline string `protobuf:"bytes,1,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 透传 history_offset
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 向下翻页数
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 刷新方式
	// 1:向上刷新 2:向下翻页
	RefreshType Refresh `protobuf:"varint,4,opt,name=refresh_type,json=refreshType,proto3,enum=bilibili.app.dynamic.v2.Refresh" json:"refresh_type,omitempty"`
	// 秒开参数 新版本废弃，统一使用player_args
	PlayurlParam *PlayurlParam `protobuf:"bytes,5,opt,name=playurl_param,json=playurlParam,proto3" json:"playurl_param,omitempty"`
	// 综合页当前更新的最大值
	AssistBaseline string `protobuf:"bytes,6,opt,name=assist_baseline,json=assistBaseline,proto3" json:"assist_baseline,omitempty"`
	// 客户端时区 兼容UTC-14和Etc/GMT+12,时区区间[-12,14] 东八区为8
	LocalTime int32 `protobuf:"varint,7,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	// 来源
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,9,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *DynVideoReq) Reset() {
	*x = DynVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoReq) ProtoMessage() {}

func (x *DynVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoReq.ProtoReflect.Descriptor instead.
func (*DynVideoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{98}
}

func (x *DynVideoReq) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *DynVideoReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *DynVideoReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DynVideoReq) GetRefreshType() Refresh {
	if x != nil {
		return x.RefreshType
	}
	return Refresh_refresh_new
}

func (x *DynVideoReq) GetPlayurlParam() *PlayurlParam {
	if x != nil {
		return x.PlayurlParam
	}
	return nil
}

func (x *DynVideoReq) GetAssistBaseline() string {
	if x != nil {
		return x.AssistBaseline
	}
	return ""
}

func (x *DynVideoReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynVideoReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DynVideoReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 最近访问-标记已读-请求
type DynVideoUpdOffsetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 被访问者的UID
	HostUid int64 `protobuf:"varint,1,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	// 用户已读进度
	ReadOffset string `protobuf:"bytes,2,opt,name=read_offset,json=readOffset,proto3" json:"read_offset,omitempty"`
	// 服务端生成的透传上报字段
	Footprint string `protobuf:"bytes,3,opt,name=footprint,proto3" json:"footprint,omitempty"`
}

func (x *DynVideoUpdOffsetReq) Reset() {
	*x = DynVideoUpdOffsetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoUpdOffsetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoUpdOffsetReq) ProtoMessage() {}

func (x *DynVideoUpdOffsetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoUpdOffsetReq.ProtoReflect.Descriptor instead.
func (*DynVideoUpdOffsetReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{99}
}

func (x *DynVideoUpdOffsetReq) GetHostUid() int64 {
	if x != nil {
		return x.HostUid
	}
	return 0
}

func (x *DynVideoUpdOffsetReq) GetReadOffset() string {
	if x != nil {
		return x.ReadOffset
	}
	return ""
}

func (x *DynVideoUpdOffsetReq) GetFootprint() string {
	if x != nil {
		return x.Footprint
	}
	return ""
}

// 投票操作-响应
type DynVoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投票详情
	Item *AdditionVote2 `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// 投票操作返回状态
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *DynVoteReply) Reset() {
	*x = DynVoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVoteReply) ProtoMessage() {}

func (x *DynVoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVoteReply.ProtoReflect.Descriptor instead.
func (*DynVoteReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{100}
}

func (x *DynVoteReply) GetItem() *AdditionVote2 {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DynVoteReply) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

// 投票操作-请求
type DynVoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投票ID
	VoteId int64 `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	// 选项索引数组
	Votes []int64 `protobuf:"varint,2,rep,packed,name=votes,proto3" json:"votes,omitempty"`
	// 状态
	Status VoteStatus `protobuf:"varint,3,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.VoteStatus" json:"status,omitempty"`
	// 动态ID
	DynamicId string `protobuf:"bytes,4,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 是否分享
	Share bool `protobuf:"varint,5,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *DynVoteReq) Reset() {
	*x = DynVoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVoteReq) ProtoMessage() {}

func (x *DynVoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVoteReq.ProtoReflect.Descriptor instead.
func (*DynVoteReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{101}
}

func (x *DynVoteReq) GetVoteId() int64 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

func (x *DynVoteReq) GetVotes() []int64 {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *DynVoteReq) GetStatus() VoteStatus {
	if x != nil {
		return x.Status
	}
	return VoteStatus_normal
}

func (x *DynVoteReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *DynVoteReq) GetShare() bool {
	if x != nil {
		return x.Share
	}
	return false
}

// 动态卡片
type DynamicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态卡片类型
	CardType DynamicType `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"card_type,omitempty"`
	// 转发类型下，源卡片类型
	ItemType DynamicType `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"item_type,omitempty"`
	// 模块内容
	Modules []*Module `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	// 操作相关字段
	Extend *Extend `protobuf:"bytes,4,opt,name=extend,proto3" json:"extend,omitempty"`
	// 该卡片下面是否含有折叠卡
	HasFold int32 `protobuf:"varint,5,opt,name=has_fold,json=hasFold,proto3" json:"has_fold,omitempty"`
	// 透传到客户端的埋点字段。
	ServerInfo string `protobuf:"bytes,6,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
}

func (x *DynamicItem) Reset() {
	*x = DynamicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicItem) ProtoMessage() {}

func (x *DynamicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicItem.ProtoReflect.Descriptor instead.
func (*DynamicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{102}
}

func (x *DynamicItem) GetCardType() DynamicType {
	if x != nil {
		return x.CardType
	}
	return DynamicType_dyn_none
}

func (x *DynamicItem) GetItemType() DynamicType {
	if x != nil {
		return x.ItemType
	}
	return DynamicType_dyn_none
}

func (x *DynamicItem) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *DynamicItem) GetExtend() *Extend {
	if x != nil {
		return x.Extend
	}
	return nil
}

func (x *DynamicItem) GetHasFold() int32 {
	if x != nil {
		return x.HasFold
	}
	return 0
}

func (x *DynamicItem) GetServerInfo() string {
	if x != nil {
		return x.ServerInfo
	}
	return ""
}

// 动态卡片列表
type DynamicList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 更新的动态数
	UpdateNum int64 `protobuf:"varint,2,opt,name=update_num,json=updateNum,proto3" json:"update_num,omitempty"`
	// 历史偏移
	HistoryOffset string `protobuf:"bytes,3,opt,name=history_offset,json=historyOffset,proto3" json:"history_offset,omitempty"`
	// 更新基础信息
	UpdateBaseline string `protobuf:"bytes,4,opt,name=update_baseline,json=updateBaseline,proto3" json:"update_baseline,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *DynamicList) Reset() {
	*x = DynamicList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicList) ProtoMessage() {}

func (x *DynamicList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicList.ProtoReflect.Descriptor instead.
func (*DynamicList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{103}
}

func (x *DynamicList) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DynamicList) GetUpdateNum() int64 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

func (x *DynamicList) GetHistoryOffset() string {
	if x != nil {
		return x.HistoryOffset
	}
	return ""
}

func (x *DynamicList) GetUpdateBaseline() string {
	if x != nil {
		return x.UpdateBaseline
	}
	return ""
}

func (x *DynamicList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// 动态-拓展小卡模块-通用小卡
type ExtInfoCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType int32 `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
	// 类型
	Type DynExtendType `protobuf:"varint,5,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DynExtendType" json:"type,omitempty"`
	// 客户端埋点用
	SubModule string `protobuf:"bytes,6,opt,name=sub_module,json=subModule,proto3" json:"sub_module,omitempty"`
	// 行动点文案
	ActionText string `protobuf:"bytes,7,opt,name=action_text,json=actionText,proto3" json:"action_text,omitempty"`
	// 行动点链接
	ActionUrl string `protobuf:"bytes,8,opt,name=action_url,json=actionUrl,proto3" json:"action_url,omitempty"`
	// 资源rid
	Rid int64 `protobuf:"varint,9,opt,name=rid,proto3" json:"rid,omitempty"`
	// 轻浏览是否展示
	IsShowLight bool `protobuf:"varint,10,opt,name=is_show_light,json=isShowLight,proto3" json:"is_show_light,omitempty"`
}

func (x *ExtInfoCommon) Reset() {
	*x = ExtInfoCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoCommon) ProtoMessage() {}

func (x *ExtInfoCommon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoCommon.ProtoReflect.Descriptor instead.
func (*ExtInfoCommon) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{104}
}

func (x *ExtInfoCommon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoCommon) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoCommon) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ExtInfoCommon) GetPoiType() int32 {
	if x != nil {
		return x.PoiType
	}
	return 0
}

func (x *ExtInfoCommon) GetType() DynExtendType {
	if x != nil {
		return x.Type
	}
	return DynExtendType_dyn_ext_type_none
}

func (x *ExtInfoCommon) GetSubModule() string {
	if x != nil {
		return x.SubModule
	}
	return ""
}

func (x *ExtInfoCommon) GetActionText() string {
	if x != nil {
		return x.ActionText
	}
	return ""
}

func (x *ExtInfoCommon) GetActionUrl() string {
	if x != nil {
		return x.ActionUrl
	}
	return ""
}

func (x *ExtInfoCommon) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ExtInfoCommon) GetIsShowLight() bool {
	if x != nil {
		return x.IsShowLight
	}
	return false
}

// 动态-拓展小卡模块-游戏小卡
type ExtInfoGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoGame) Reset() {
	*x = ExtInfoGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoGame) ProtoMessage() {}

func (x *ExtInfoGame) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoGame.ProtoReflect.Descriptor instead.
func (*ExtInfoGame) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{105}
}

func (x *ExtInfoGame) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoGame) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoGame) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 动态-拓展小卡模块-热门小卡
type ExtInfoHot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoHot) Reset() {
	*x = ExtInfoHot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoHot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoHot) ProtoMessage() {}

func (x *ExtInfoHot) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoHot.ProtoReflect.Descriptor instead.
func (*ExtInfoHot) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{106}
}

func (x *ExtInfoHot) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoHot) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoHot) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 动态-拓展小卡模块-lbs小卡
type ExtInfoLBS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// poiType
	PoiType int32 `protobuf:"varint,4,opt,name=poi_type,json=poiType,proto3" json:"poi_type,omitempty"`
}

func (x *ExtInfoLBS) Reset() {
	*x = ExtInfoLBS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoLBS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoLBS) ProtoMessage() {}

func (x *ExtInfoLBS) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoLBS.ProtoReflect.Descriptor instead.
func (*ExtInfoLBS) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{107}
}

func (x *ExtInfoLBS) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoLBS) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoLBS) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ExtInfoLBS) GetPoiType() int32 {
	if x != nil {
		return x.PoiType
	}
	return 0
}

// 动态-拓展小卡模块-ogv小卡
type ExtInfoOGV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ogv小卡
	InfoOgv []*InfoOGV `protobuf:"bytes,1,rep,name=info_ogv,json=infoOgv,proto3" json:"info_ogv,omitempty"`
}

func (x *ExtInfoOGV) Reset() {
	*x = ExtInfoOGV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoOGV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoOGV) ProtoMessage() {}

func (x *ExtInfoOGV) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoOGV.ProtoReflect.Descriptor instead.
func (*ExtInfoOGV) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{108}
}

func (x *ExtInfoOGV) GetInfoOgv() []*InfoOGV {
	if x != nil {
		return x.InfoOgv
	}
	return nil
}

// 动态-拓展小卡模块-话题小卡
type ExtInfoTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题-话题名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ExtInfoTopic) Reset() {
	*x = ExtInfoTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtInfoTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtInfoTopic) ProtoMessage() {}

func (x *ExtInfoTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtInfoTopic.ProtoReflect.Descriptor instead.
func (*ExtInfoTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{109}
}

func (x *ExtInfoTopic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtInfoTopic) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtInfoTopic) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 扩展字段，用于动态部分操作使用
type Extend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态id
	DynIdStr string `protobuf:"bytes,1,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
	// 业务方id
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// 源动态id
	OrigDynIdStr string `protobuf:"bytes,3,opt,name=orig_dyn_id_str,json=origDynIdStr,proto3" json:"orig_dyn_id_str,omitempty"`
	// 转发卡：用户名
	OrigName string `protobuf:"bytes,4,opt,name=orig_name,json=origName,proto3" json:"orig_name,omitempty"`
	// 转发卡：图片url
	OrigImgUrl string `protobuf:"bytes,5,opt,name=orig_img_url,json=origImgUrl,proto3" json:"orig_img_url,omitempty"`
	// 转发卡：文字内容
	OrigDesc []*Description `protobuf:"bytes,6,rep,name=orig_desc,json=origDesc,proto3" json:"orig_desc,omitempty"`
	// 填充文字内容
	Desc []*Description `protobuf:"bytes,7,rep,name=desc,proto3" json:"desc,omitempty"`
	// 被转发的源动态类型
	OrigDynType DynamicType `protobuf:"varint,8,opt,name=orig_dyn_type,json=origDynType,proto3,enum=bilibili.app.dynamic.v2.DynamicType" json:"orig_dyn_type,omitempty"`
	// 分享到站外展示类型
	ShareType string `protobuf:"bytes,9,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"`
	// 分享的场景
	ShareScene string `protobuf:"bytes,10,opt,name=share_scene,json=shareScene,proto3" json:"share_scene,omitempty"`
	// 是否快速转发
	IsFastShare bool `protobuf:"varint,11,opt,name=is_fast_share,json=isFastShare,proto3" json:"is_fast_share,omitempty"`
	// r_type 分享和转发
	RType int32 `protobuf:"varint,12,opt,name=r_type,json=rType,proto3" json:"r_type,omitempty"`
	// 数据源的动态类型
	DynType int64 `protobuf:"varint,13,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 用户id
	Uid int64 `protobuf:"varint,14,opt,name=uid,proto3" json:"uid,omitempty"`
	// 卡片跳转
	CardUrl string `protobuf:"bytes,15,opt,name=card_url,json=cardUrl,proto3" json:"card_url,omitempty"`
	// 透传字段
	SourceContent *anypb.Any `protobuf:"bytes,16,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
	// 转发卡：用户头像
	OrigFace string `protobuf:"bytes,17,opt,name=orig_face,json=origFace,proto3" json:"orig_face,omitempty"`
	// 评论跳转
	Reply *ExtendReply `protobuf:"bytes,18,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *Extend) Reset() {
	*x = Extend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extend) ProtoMessage() {}

func (x *Extend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extend.ProtoReflect.Descriptor instead.
func (*Extend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{110}
}

func (x *Extend) GetDynIdStr() string {
	if x != nil {
		return x.DynIdStr
	}
	return ""
}

func (x *Extend) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *Extend) GetOrigDynIdStr() string {
	if x != nil {
		return x.OrigDynIdStr
	}
	return ""
}

func (x *Extend) GetOrigName() string {
	if x != nil {
		return x.OrigName
	}
	return ""
}

func (x *Extend) GetOrigImgUrl() string {
	if x != nil {
		return x.OrigImgUrl
	}
	return ""
}

func (x *Extend) GetOrigDesc() []*Description {
	if x != nil {
		return x.OrigDesc
	}
	return nil
}

func (x *Extend) GetDesc() []*Description {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *Extend) GetOrigDynType() DynamicType {
	if x != nil {
		return x.OrigDynType
	}
	return DynamicType_dyn_none
}

func (x *Extend) GetShareType() string {
	if x != nil {
		return x.ShareType
	}
	return ""
}

func (x *Extend) GetShareScene() string {
	if x != nil {
		return x.ShareScene
	}
	return ""
}

func (x *Extend) GetIsFastShare() bool {
	if x != nil {
		return x.IsFastShare
	}
	return false
}

func (x *Extend) GetRType() int32 {
	if x != nil {
		return x.RType
	}
	return 0
}

func (x *Extend) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *Extend) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Extend) GetCardUrl() string {
	if x != nil {
		return x.CardUrl
	}
	return ""
}

func (x *Extend) GetSourceContent() *anypb.Any {
	if x != nil {
		return x.SourceContent
	}
	return nil
}

func (x *Extend) GetOrigFace() string {
	if x != nil {
		return x.OrigFace
	}
	return ""
}

func (x *Extend) GetReply() *ExtendReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

// 评论扩展
type ExtendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础跳转地址
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// 参数部分
	Params []*ExtendReplyParam `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *ExtendReply) Reset() {
	*x = ExtendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendReply) ProtoMessage() {}

func (x *ExtendReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendReply.ProtoReflect.Descriptor instead.
func (*ExtendReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{111}
}

func (x *ExtendReply) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ExtendReply) GetParams() []*ExtendReplyParam {
	if x != nil {
		return x.Params
	}
	return nil
}

// 评论扩展参数部分
type ExtendReplyParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 参数名
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 参数值
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExtendReplyParam) Reset() {
	*x = ExtendReplyParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendReplyParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendReplyParam) ProtoMessage() {}

func (x *ExtendReplyParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendReplyParam.ProtoReflect.Descriptor instead.
func (*ExtendReplyParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{112}
}

func (x *ExtendReplyParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExtendReplyParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 视频页-我的追番-番剧信息
type FollowListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// season_id
	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// new_ep
	NewEp *NewEP `protobuf:"bytes,5,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
	// 子标题
	SubTitle string `protobuf:"bytes,6,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 卡片位次
	Pos int64 `protobuf:"varint,7,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *FollowListItem) Reset() {
	*x = FollowListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowListItem) ProtoMessage() {}

func (x *FollowListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowListItem.ProtoReflect.Descriptor instead.
func (*FollowListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{113}
}

func (x *FollowListItem) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *FollowListItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FollowListItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FollowListItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FollowListItem) GetNewEp() *NewEP {
	if x != nil {
		return x.NewEp
	}
	return nil
}

func (x *FollowListItem) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *FollowListItem) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

// 动态-附加卡-商品卡-商品
type GoodsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// schemaPackageName(Android用)
	SchemaPackageName string `protobuf:"bytes,2,opt,name=schema_package_name,json=schemaPackageName,proto3" json:"schema_package_name,omitempty"`
	// 商品类型
	// 1:淘宝 2:会员购
	SourceType int32 `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,4,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转文案
	JumpDesc string `protobuf:"bytes,5,opt,name=jump_desc,json=jumpDesc,proto3" json:"jump_desc,omitempty"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 摘要
	Brief string `protobuf:"bytes,7,opt,name=brief,proto3" json:"brief,omitempty"`
	// 价格
	Price string `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	// item_id
	ItemId int64 `protobuf:"varint,9,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// schema_url
	SchemaUrl string `protobuf:"bytes,10,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	// open_white_list
	OpenWhiteList []string `protobuf:"bytes,11,rep,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"`
	// use_web_v2
	UserWebV2 bool `protobuf:"varint,12,opt,name=user_web_v2,json=userWebV2,proto3" json:"user_web_v2,omitempty"`
	// ad mark
	AdMark string `protobuf:"bytes,13,opt,name=ad_mark,json=adMark,proto3" json:"ad_mark,omitempty"`
}

func (x *GoodsItem) Reset() {
	*x = GoodsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsItem) ProtoMessage() {}

func (x *GoodsItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsItem.ProtoReflect.Descriptor instead.
func (*GoodsItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{114}
}

func (x *GoodsItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GoodsItem) GetSchemaPackageName() string {
	if x != nil {
		return x.SchemaPackageName
	}
	return ""
}

func (x *GoodsItem) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *GoodsItem) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *GoodsItem) GetJumpDesc() string {
	if x != nil {
		return x.JumpDesc
	}
	return ""
}

func (x *GoodsItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsItem) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *GoodsItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *GoodsItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GoodsItem) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *GoodsItem) GetOpenWhiteList() []string {
	if x != nil {
		return x.OpenWhiteList
	}
	return nil
}

func (x *GoodsItem) GetUserWebV2() bool {
	if x != nil {
		return x.UserWebV2
	}
	return false
}

func (x *GoodsItem) GetAdMark() string {
	if x != nil {
		return x.AdMark
	}
	return ""
}

type GuideBarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Position int32 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	JumpPage int32 `protobuf:"varint,5,opt,name=jump_page,json=jumpPage,proto3" json:"jump_page,omitempty"`
	JumpPosition int32 `protobuf:"varint,6,opt,name=jump_position,json=jumpPosition,proto3" json:"jump_position,omitempty"`
}

func (x *GuideBarInfo) Reset() {
	*x = GuideBarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideBarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideBarInfo) ProtoMessage() {}

func (x *GuideBarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideBarInfo.ProtoReflect.Descriptor instead.
func (*GuideBarInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{115}
}

func (x *GuideBarInfo) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *GuideBarInfo) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GuideBarInfo) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *GuideBarInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GuideBarInfo) GetJumpPage() int32 {
	if x != nil {
		return x.JumpPage
	}
	return 0
}

func (x *GuideBarInfo) GetJumpPosition() int32 {
	if x != nil {
		return x.JumpPosition
	}
	return 0
}

// 高亮文本
type HighlightText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示文本
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 高亮类型
	TextStyle HighlightTextStyle `protobuf:"varint,2,opt,name=text_style,json=textStyle,proto3,enum=bilibili.app.dynamic.v2.HighlightTextStyle" json:"text_style,omitempty"`
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *HighlightText) Reset() {
	*x = HighlightText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighlightText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighlightText) ProtoMessage() {}

func (x *HighlightText) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighlightText.ProtoReflect.Descriptor instead.
func (*HighlightText) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{116}
}

func (x *HighlightText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *HighlightText) GetTextStyle() HighlightTextStyle {
	if x != nil {
		return x.TextStyle
	}
	return HighlightTextStyle_style_none
}

func (x *HighlightText) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *HighlightText) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type IconBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconBgUrl string `protobuf:"bytes,1,opt,name=icon_bg_url,json=iconBgUrl,proto3" json:"icon_bg_url,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *IconBadge) Reset() {
	*x = IconBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconBadge) ProtoMessage() {}

func (x *IconBadge) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconBadge.ProtoReflect.Descriptor instead.
func (*IconBadge) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{117}
}

func (x *IconBadge) GetIconBgUrl() string {
	if x != nil {
		return x.IconBgUrl
	}
	return ""
}

func (x *IconBadge) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type IconButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	IconHead string `protobuf:"bytes,2,opt,name=icon_head,json=iconHead,proto3" json:"icon_head,omitempty"`
	IconTail string `protobuf:"bytes,3,opt,name=icon_tail,json=iconTail,proto3" json:"icon_tail,omitempty"`
	JumpUri string `protobuf:"bytes,4,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
}

func (x *IconButton) Reset() {
	*x = IconButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconButton) ProtoMessage() {}

func (x *IconButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconButton.ProtoReflect.Descriptor instead.
func (*IconButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{118}
}

func (x *IconButton) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *IconButton) GetIconHead() string {
	if x != nil {
		return x.IconHead
	}
	return ""
}

func (x *IconButton) GetIconTail() string {
	if x != nil {
		return x.IconTail
	}
	return ""
}

func (x *IconButton) GetJumpUri() string {
	if x != nil {
		return x.JumpUri
	}
	return ""
}

// 动态-拓展小卡模块-ogv小卡-(one of 片单、榜单、分区)
type InfoOGV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 小图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 客户端埋点用
	SubModule string `protobuf:"bytes,4,opt,name=sub_module,json=subModule,proto3" json:"sub_module,omitempty"`
}

func (x *InfoOGV) Reset() {
	*x = InfoOGV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoOGV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoOGV) ProtoMessage() {}

func (x *InfoOGV) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoOGV.ProtoReflect.Descriptor instead.
func (*InfoOGV) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{119}
}

func (x *InfoOGV) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InfoOGV) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *InfoOGV) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *InfoOGV) GetSubModule() string {
	if x != nil {
		return x.SubModule
	}
	return ""
}

type InteractionFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *InteractionFace) Reset() {
	*x = InteractionFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionFace) ProtoMessage() {}

func (x *InteractionFace) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionFace.ProtoReflect.Descriptor instead.
func (*InteractionFace) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{120}
}

func (x *InteractionFace) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *InteractionFace) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

// 外露交互模块
type InteractionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 外露模块类型
	IconType LocalIconType `protobuf:"varint,1,opt,name=icon_type,json=iconType,proto3,enum=bilibili.app.dynamic.v2.LocalIconType" json:"icon_type,omitempty"`
	// 外露模块文案
	Desc []*Description `protobuf:"bytes,2,rep,name=desc,proto3" json:"desc,omitempty"`
	// 外露模块uri相关 根据type不同用法不同
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 动态id
	DynamicId string `protobuf:"bytes,4,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 评论mid
	CommentMid int64 `protobuf:"varint,6,opt,name=comment_mid,json=commentMid,proto3" json:"comment_mid,omitempty"`
	Faces []*InteractionFace `protobuf:"bytes,7,rep,name=faces,proto3" json:"faces,omitempty"`
	Stat *InteractionStat `protobuf:"bytes,8,opt,name=stat,proto3" json:"stat,omitempty"`
	Icon string `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *InteractionItem) Reset() {
	*x = InteractionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionItem) ProtoMessage() {}

func (x *InteractionItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionItem.ProtoReflect.Descriptor instead.
func (*InteractionItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{121}
}

func (x *InteractionItem) GetIconType() LocalIconType {
	if x != nil {
		return x.IconType
	}
	return LocalIconType_local_icon_comment
}

func (x *InteractionItem) GetDesc() []*Description {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *InteractionItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *InteractionItem) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *InteractionItem) GetCommentMid() int64 {
	if x != nil {
		return x.CommentMid
	}
	return 0
}

func (x *InteractionItem) GetFaces() []*InteractionFace {
	if x != nil {
		return x.Faces
	}
	return nil
}

func (x *InteractionItem) GetStat() *InteractionStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *InteractionItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type InteractionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Like int64 `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *InteractionStat) Reset() {
	*x = InteractionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionStat) ProtoMessage() {}

func (x *InteractionStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionStat.ProtoReflect.Descriptor instead.
func (*InteractionStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{122}
}

func (x *InteractionStat) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

// 点赞动画
type LikeAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始动画
	Begin string `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	// 过程动画
	Proc string `protobuf:"bytes,2,opt,name=proc,proto3" json:"proc,omitempty"`
	// 结束动画
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// id
	LikeIconId int64 `protobuf:"varint,4,opt,name=like_icon_id,json=likeIconId,proto3" json:"like_icon_id,omitempty"`
}

func (x *LikeAnimation) Reset() {
	*x = LikeAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAnimation) ProtoMessage() {}

func (x *LikeAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeAnimation.ProtoReflect.Descriptor instead.
func (*LikeAnimation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{123}
}

func (x *LikeAnimation) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *LikeAnimation) GetProc() string {
	if x != nil {
		return x.Proc
	}
	return ""
}

func (x *LikeAnimation) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LikeAnimation) GetLikeIconId() int64 {
	if x != nil {
		return x.LikeIconId
	}
	return 0
}

// 点赞拓展信息
type LikeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 点赞动画
	Animation *LikeAnimation `protobuf:"bytes,1,opt,name=animation,proto3" json:"animation,omitempty"`
	// 是否点赞
	IsLike bool `protobuf:"varint,2,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
}

func (x *LikeInfo) Reset() {
	*x = LikeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeInfo) ProtoMessage() {}

func (x *LikeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeInfo.ProtoReflect.Descriptor instead.
func (*LikeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{124}
}

func (x *LikeInfo) GetAnimation() *LikeAnimation {
	if x != nil {
		return x.Animation
	}
	return nil
}

func (x *LikeInfo) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

// 点赞列表-响应
type LikeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户模块列表
	List []*ModuleAuthor `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 是否还有更多数据
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 点赞总数
	TotalCount int64 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *LikeListReply) Reset() {
	*x = LikeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeListReply) ProtoMessage() {}

func (x *LikeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeListReply.ProtoReflect.Descriptor instead.
func (*LikeListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{125}
}

func (x *LikeListReply) GetList() []*ModuleAuthor {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *LikeListReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *LikeListReply) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 点赞列表-请求
type LikeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态ID
	DynamicId string `protobuf:"bytes,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	// 上一页最后一个uid
	UidOffset int64 `protobuf:"varint,4,opt,name=uid_offset,json=uidOffset,proto3" json:"uid_offset,omitempty"`
	// 下拉页数
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *LikeListReq) Reset() {
	*x = LikeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeListReq) ProtoMessage() {}

func (x *LikeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeListReq.ProtoReflect.Descriptor instead.
func (*LikeListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{126}
}

func (x *LikeListReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *LikeListReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *LikeListReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *LikeListReq) GetUidOffset() int64 {
	if x != nil {
		return x.UidOffset
	}
	return 0
}

func (x *LikeListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

// 点赞用户
type LikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Uname string `protobuf:"bytes,2,opt,name=uname,proto3" json:"uname,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *LikeUser) Reset() {
	*x = LikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeUser) ProtoMessage() {}

func (x *LikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeUser.ProtoReflect.Descriptor instead.
func (*LikeUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{127}
}

func (x *LikeUser) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LikeUser) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *LikeUser) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 直播信息
type LiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否在直播
	// 0:未直播 1:正在直播 (废弃)
	IsLiving int32 `protobuf:"varint,1,opt,name=is_living,json=isLiving,proto3" json:"is_living,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,3,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
}

func (x *LiveInfo) Reset() {
	*x = LiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveInfo) ProtoMessage() {}

func (x *LiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveInfo.ProtoReflect.Descriptor instead.
func (*LiveInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{128}
}

func (x *LiveInfo) GetIsLiving() int32 {
	if x != nil {
		return x.IsLiving
	}
	return 0
}

func (x *LiveInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *LiveInfo) GetLiveState() LiveState {
	if x != nil {
		return x.LiveState
	}
	return LiveState_live_none
}

type LivePendant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	PendantId int64 `protobuf:"varint,3,opt,name=pendant_id,json=pendantId,proto3" json:"pendant_id,omitempty"`
}

func (x *LivePendant) Reset() {
	*x = LivePendant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivePendant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivePendant) ProtoMessage() {}

func (x *LivePendant) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivePendant.ProtoReflect.Descriptor instead.
func (*LivePendant) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{129}
}

func (x *LivePendant) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LivePendant) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *LivePendant) GetPendantId() int64 {
	if x != nil {
		return x.PendantId
	}
	return 0
}

// 动态-附加卡-电竞卡-战队
type MatchTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 战队ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 战队名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 战队图标
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 日间色值
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// 夜间色值
	NightColor string `protobuf:"bytes,5,opt,name=night_color,json=nightColor,proto3" json:"night_color,omitempty"`
}

func (x *MatchTeam) Reset() {
	*x = MatchTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchTeam) ProtoMessage() {}

func (x *MatchTeam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchTeam.ProtoReflect.Descriptor instead.
func (*MatchTeam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{130}
}

func (x *MatchTeam) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MatchTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MatchTeam) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MatchTeam) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *MatchTeam) GetNightColor() string {
	if x != nil {
		return x.NightColor
	}
	return ""
}

// 动态列表渲染部分-详情模块-小程序/小游戏
type MdlDynApplet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 小程序id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 主标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	// 小程序icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 小程序标题
	Label string `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮文案
	ButtonTitle string `protobuf:"bytes,9,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
}

func (x *MdlDynApplet) Reset() {
	*x = MdlDynApplet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynApplet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynApplet) ProtoMessage() {}

func (x *MdlDynApplet) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynApplet.ProtoReflect.Descriptor instead.
func (*MdlDynApplet) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{131}
}

func (x *MdlDynApplet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynApplet) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynApplet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynApplet) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *MdlDynApplet) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynApplet) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MdlDynApplet) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MdlDynApplet) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

// 动态-详情模块-稿件
type MdlDynArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,7,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,8,opt,name=cid,proto3" json:"cid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,9,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v2.MediaType" json:"media_type,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,10,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标，多个角标之前有间距
	Badge []*VideoBadge `protobuf:"bytes,11,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,12,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// stype
	Stype VideoType `protobuf:"varint,13,opt,name=stype,proto3,enum=bilibili.app.dynamic.v2.VideoType" json:"stype,omitempty"`
	// 是否PGC
	IsPGC bool `protobuf:"varint,14,opt,name=isPGC,proto3" json:"isPGC,omitempty"`
	// inline播放地址
	InlineURL string `protobuf:"bytes,15,opt,name=inlineURL,proto3" json:"inlineURL,omitempty"`
	// PGC的epid
	EpisodeId int64 `protobuf:"varint,16,opt,name=EpisodeId,proto3" json:"EpisodeId,omitempty"`
	// 子类型
	SubType int32 `protobuf:"varint,17,opt,name=SubType,proto3" json:"SubType,omitempty"`
	// PGC的ssid
	PgcSeasonId int64 `protobuf:"varint,18,opt,name=PgcSeasonId,proto3" json:"PgcSeasonId,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,19,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,20,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,21,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,22,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 新角标，多个角标之前没有间距
	BadgeCategory []*VideoBadge `protobuf:"bytes,23,rep,name=badge_category,json=badgeCategory,proto3" json:"badge_category,omitempty"`
	// 当前是否是pgc正片
	IsFeature bool `protobuf:"varint,24,opt,name=is_feature,json=isFeature,proto3" json:"is_feature,omitempty"`
	// 是否是预约召回
	ReserveType ReserveType `protobuf:"varint,25,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
	// bvid
	Bvid string `protobuf:"bytes,26,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 播放数
	View int32 `protobuf:"varint,27,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *MdlDynArchive) Reset() {
	*x = MdlDynArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynArchive) ProtoMessage() {}

func (x *MdlDynArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynArchive.ProtoReflect.Descriptor instead.
func (*MdlDynArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{132}
}

func (x *MdlDynArchive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynArchive) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynArchive) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *MdlDynArchive) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *MdlDynArchive) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *MdlDynArchive) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

func (x *MdlDynArchive) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MdlDynArchive) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MediaTypeNone
}

func (x *MdlDynArchive) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *MdlDynArchive) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynArchive) GetCanPlay() bool {
	if x != nil {
		return x.CanPlay
	}
	return false
}

func (x *MdlDynArchive) GetStype() VideoType {
	if x != nil {
		return x.Stype
	}
	return VideoType_video_type_general
}

func (x *MdlDynArchive) GetIsPGC() bool {
	if x != nil {
		return x.IsPGC
	}
	return false
}

func (x *MdlDynArchive) GetInlineURL() string {
	if x != nil {
		return x.InlineURL
	}
	return ""
}

func (x *MdlDynArchive) GetEpisodeId() int64 {
	if x != nil {
		return x.EpisodeId
	}
	return 0
}

func (x *MdlDynArchive) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *MdlDynArchive) GetPgcSeasonId() int64 {
	if x != nil {
		return x.PgcSeasonId
	}
	return 0
}

func (x *MdlDynArchive) GetPlayIcon() string {
	if x != nil {
		return x.PlayIcon
	}
	return ""
}

func (x *MdlDynArchive) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MdlDynArchive) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *MdlDynArchive) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *MdlDynArchive) GetBadgeCategory() []*VideoBadge {
	if x != nil {
		return x.BadgeCategory
	}
	return nil
}

func (x *MdlDynArchive) GetIsFeature() bool {
	if x != nil {
		return x.IsFeature
	}
	return false
}

func (x *MdlDynArchive) GetReserveType() ReserveType {
	if x != nil {
		return x.ReserveType
	}
	return ReserveType_reserve_none
}

func (x *MdlDynArchive) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *MdlDynArchive) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

// 动态列表渲染部分-详情模块-专栏模块
type MdlDynArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 专栏id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 文案部分
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 配图
	Covers []string `protobuf:"bytes,5,rep,name=covers,proto3" json:"covers,omitempty"`
	// 阅读量标签
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// 模板类型
	TemplateID int32 `protobuf:"varint,7,opt,name=templateID,proto3" json:"templateID,omitempty"`
}

func (x *MdlDynArticle) Reset() {
	*x = MdlDynArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynArticle) ProtoMessage() {}

func (x *MdlDynArticle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynArticle.ProtoReflect.Descriptor instead.
func (*MdlDynArticle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{133}
}

func (x *MdlDynArticle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynArticle) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynArticle) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MdlDynArticle) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *MdlDynArticle) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MdlDynArticle) GetTemplateID() int32 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

// 动态列表渲染部分-详情模块-通用
type MdlDynCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 物料id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 描述 漫画卡标题下第一行
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 标签1 漫画卡标题下第二行
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// 所属业务类型
	BizType int32 `protobuf:"varint,7,opt,name=bizType,proto3" json:"bizType,omitempty"`
	// 镜像数据ID
	SketchID int64 `protobuf:"varint,8,opt,name=sketchID,proto3" json:"sketchID,omitempty"`
	// 卡片样式
	Style MdlDynCommonType `protobuf:"varint,9,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.MdlDynCommonType" json:"style,omitempty"`
	// 角标
	Badge []*VideoBadge `protobuf:"bytes,10,rep,name=badge,proto3" json:"badge,omitempty"`
	Button *AdditionalButton `protobuf:"bytes,11,opt,name=button,proto3" json:"button,omitempty"`
}

func (x *MdlDynCommon) Reset() {
	*x = MdlDynCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynCommon) ProtoMessage() {}

func (x *MdlDynCommon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynCommon.ProtoReflect.Descriptor instead.
func (*MdlDynCommon) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{134}
}

func (x *MdlDynCommon) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *MdlDynCommon) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynCommon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynCommon) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MdlDynCommon) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynCommon) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MdlDynCommon) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *MdlDynCommon) GetSketchID() int64 {
	if x != nil {
		return x.SketchID
	}
	return 0
}

func (x *MdlDynCommon) GetStyle() MdlDynCommonType {
	if x != nil {
		return x.Style
	}
	return MdlDynCommonType_mdl_dyn_common_none
}

func (x *MdlDynCommon) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynCommon) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

// 动态-详情模块-付费课程批次
type MdlDynCourBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1(本集标题)
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 展示项 2(更新了多少个视频)
	Text_2 string `protobuf:"bytes,5,opt,name=text_2,json=text2,proto3" json:"text_2,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,7,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
}

func (x *MdlDynCourBatch) Reset() {
	*x = MdlDynCourBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynCourBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynCourBatch) ProtoMessage() {}

func (x *MdlDynCourBatch) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynCourBatch.ProtoReflect.Descriptor instead.
func (*MdlDynCourBatch) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{135}
}

func (x *MdlDynCourBatch) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynCourBatch) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynCourBatch) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynCourBatch) GetText_1() string {
	if x != nil {
		return x.Text_1
	}
	return ""
}

func (x *MdlDynCourBatch) GetText_2() string {
	if x != nil {
		return x.Text_2
	}
	return ""
}

func (x *MdlDynCourBatch) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynCourBatch) GetPlayIcon() string {
	if x != nil {
		return x.PlayIcon
	}
	return ""
}

// 动态-详情模块-付费课程系列
type MdlDynCourSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 展示项 1(更新信息)
	Text_1 string `protobuf:"bytes,4,opt,name=text_1,json=text1,proto3" json:"text_1,omitempty"`
	// 描述信息
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,7,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
}

func (x *MdlDynCourSeason) Reset() {
	*x = MdlDynCourSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynCourSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynCourSeason) ProtoMessage() {}

func (x *MdlDynCourSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynCourSeason.ProtoReflect.Descriptor instead.
func (*MdlDynCourSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{136}
}

func (x *MdlDynCourSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynCourSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynCourSeason) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynCourSeason) GetText_1() string {
	if x != nil {
		return x.Text_1
	}
	return ""
}

func (x *MdlDynCourSeason) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MdlDynCourSeason) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynCourSeason) GetPlayIcon() string {
	if x != nil {
		return x.PlayIcon
	}
	return ""
}

// 动态列表渲染部分-详情模块-图文模块
type MdlDynDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片
	Items []*MdlDynDrawItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 图文ID
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MdlDynDraw) Reset() {
	*x = MdlDynDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynDraw) ProtoMessage() {}

func (x *MdlDynDraw) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynDraw.ProtoReflect.Descriptor instead.
func (*MdlDynDraw) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{137}
}

func (x *MdlDynDraw) GetItems() []*MdlDynDrawItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MdlDynDraw) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynDraw) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 动态列表渲染部分-详情模块-图文
type MdlDynDrawItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片链接
	Src string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	// 图片宽度
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	// 图片高度
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// 图片大小
	Size float32 `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`
	// 图片标签
	Tags []*MdlDynDrawTag `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *MdlDynDrawItem) Reset() {
	*x = MdlDynDrawItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynDrawItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynDrawItem) ProtoMessage() {}

func (x *MdlDynDrawItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynDrawItem.ProtoReflect.Descriptor instead.
func (*MdlDynDrawItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{138}
}

func (x *MdlDynDrawItem) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *MdlDynDrawItem) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MdlDynDrawItem) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MdlDynDrawItem) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MdlDynDrawItem) GetTags() []*MdlDynDrawTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

// 动态列表渲染部分-详情模块-图文-标签
type MdlDynDrawTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标签类型
	Type MdlDynDrawTagType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.MdlDynDrawTagType" json:"type,omitempty"`
	// 标签详情
	Item *MdlDynDrawTagItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *MdlDynDrawTag) Reset() {
	*x = MdlDynDrawTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynDrawTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynDrawTag) ProtoMessage() {}

func (x *MdlDynDrawTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynDrawTag.ProtoReflect.Descriptor instead.
func (*MdlDynDrawTag) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{139}
}

func (x *MdlDynDrawTag) GetType() MdlDynDrawTagType {
	if x != nil {
		return x.Type
	}
	return MdlDynDrawTagType_mdl_draw_tag_none
}

func (x *MdlDynDrawTag) GetItem() *MdlDynDrawTagItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 动态列表部分-详情模块-图文-标签详情
type MdlDynDrawTagItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 跳转链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 标签内容
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 坐标-x
	X int64 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	// 坐标-y
	Y int64 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	// 方向
	Orientation int32 `protobuf:"varint,5,opt,name=orientation,proto3" json:"orientation,omitempty"`
	// 来源
	// 0:未知 1:淘宝 2:自营
	Source int32 `protobuf:"varint,6,opt,name=source,proto3" json:"source,omitempty"`
	// 商品id
	ItemId int64 `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 用户mid
	Mid int64 `protobuf:"varint,8,opt,name=mid,proto3" json:"mid,omitempty"`
	// 话题id
	Tid int64 `protobuf:"varint,9,opt,name=tid,proto3" json:"tid,omitempty"`
	// lbs信息
	Poi string `protobuf:"bytes,10,opt,name=poi,proto3" json:"poi,omitempty"`
	// 商品标签链接
	SchemaUrl string `protobuf:"bytes,11,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
}

func (x *MdlDynDrawTagItem) Reset() {
	*x = MdlDynDrawTagItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynDrawTagItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynDrawTagItem) ProtoMessage() {}

func (x *MdlDynDrawTagItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynDrawTagItem.ProtoReflect.Descriptor instead.
func (*MdlDynDrawTagItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{140}
}

func (x *MdlDynDrawTagItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MdlDynDrawTagItem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MdlDynDrawTagItem) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetOrientation() int32 {
	if x != nil {
		return x.Orientation
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *MdlDynDrawTagItem) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

func (x *MdlDynDrawTagItem) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

// 动态列表渲染部分-详情模块-转发模块
type MdlDynForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态转发核心模块 套娃
	Item *DynamicItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// 透传类型
	// 0:分享 1:转发
	Rtype int32 `protobuf:"varint,2,opt,name=rtype,proto3" json:"rtype,omitempty"`
}

func (x *MdlDynForward) Reset() {
	*x = MdlDynForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynForward) ProtoMessage() {}

func (x *MdlDynForward) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynForward.ProtoReflect.Descriptor instead.
func (*MdlDynForward) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{141}
}

func (x *MdlDynForward) GetItem() *DynamicItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MdlDynForward) GetRtype() int32 {
	if x != nil {
		return x.Rtype
	}
	return 0
}

// 动态列表渲染部分-详情模块-直播
type MdlDynLive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 直播间标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 直播间封面
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	// 标题1 例: 陪伴学习
	CoverLabel string `protobuf:"bytes,5,opt,name=cover_label,json=coverLabel,proto3" json:"cover_label,omitempty"`
	// 标题2 例: 54.6万人气
	CoverLabel2 string `protobuf:"bytes,6,opt,name=cover_label2,json=coverLabel2,proto3" json:"cover_label2,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,7,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 直播角标
	Badge *VideoBadge `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`
	// 是否是预约召回
	ReserveType ReserveType `protobuf:"varint,9,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
}

func (x *MdlDynLive) Reset() {
	*x = MdlDynLive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynLive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynLive) ProtoMessage() {}

func (x *MdlDynLive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynLive.ProtoReflect.Descriptor instead.
func (*MdlDynLive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{142}
}

func (x *MdlDynLive) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynLive) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynLive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynLive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynLive) GetCoverLabel() string {
	if x != nil {
		return x.CoverLabel
	}
	return ""
}

func (x *MdlDynLive) GetCoverLabel2() string {
	if x != nil {
		return x.CoverLabel2
	}
	return ""
}

func (x *MdlDynLive) GetLiveState() LiveState {
	if x != nil {
		return x.LiveState
	}
	return LiveState_live_none
}

func (x *MdlDynLive) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynLive) GetReserveType() ReserveType {
	if x != nil {
		return x.ReserveType
	}
	return ReserveType_reserve_none
}

// 动态列表渲染部分-详情模块-直播推荐
type MdlDynLiveRcmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 直播数据
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// 是否是预约召回
	ReserveType ReserveType `protobuf:"varint,2,opt,name=reserve_type,json=reserveType,proto3,enum=bilibili.app.dynamic.v2.ReserveType" json:"reserve_type,omitempty"`
	Pendant *LivePendant `protobuf:"bytes,3,opt,name=pendant,proto3" json:"pendant,omitempty"`
}

func (x *MdlDynLiveRcmd) Reset() {
	*x = MdlDynLiveRcmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynLiveRcmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynLiveRcmd) ProtoMessage() {}

func (x *MdlDynLiveRcmd) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynLiveRcmd.ProtoReflect.Descriptor instead.
func (*MdlDynLiveRcmd) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{143}
}

func (x *MdlDynLiveRcmd) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MdlDynLiveRcmd) GetReserveType() ReserveType {
	if x != nil {
		return x.ReserveType
	}
	return ReserveType_reserve_none
}

func (x *MdlDynLiveRcmd) GetPendant() *LivePendant {
	if x != nil {
		return x.Pendant
	}
	return nil
}

// 动态列表渲染部分-详情模块-播单
type MdlDynMedialist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 播单id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 主标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	SubTitle string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 封面类型
	CoverType int32 `protobuf:"varint,6,opt,name=cover_type,json=coverType,proto3" json:"cover_type,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *MdlDynMedialist) Reset() {
	*x = MdlDynMedialist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynMedialist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynMedialist) ProtoMessage() {}

func (x *MdlDynMedialist) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynMedialist.ProtoReflect.Descriptor instead.
func (*MdlDynMedialist) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{144}
}

func (x *MdlDynMedialist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynMedialist) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynMedialist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynMedialist) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *MdlDynMedialist) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynMedialist) GetCoverType() int32 {
	if x != nil {
		return x.CoverType
	}
	return 0
}

func (x *MdlDynMedialist) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

// 动态列表渲染部分-详情模块-音频模块
type MdlDynMusic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 音频id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// upId
	UpId int64 `protobuf:"varint,3,opt,name=up_id,json=upId,proto3" json:"up_id,omitempty"`
	// 歌名
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 专辑封面
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 展示项1
	Label1 string `protobuf:"bytes,6,opt,name=label1,proto3" json:"label1,omitempty"`
	// upper
	Upper string `protobuf:"bytes,7,opt,name=upper,proto3" json:"upper,omitempty"`
}

func (x *MdlDynMusic) Reset() {
	*x = MdlDynMusic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynMusic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynMusic) ProtoMessage() {}

func (x *MdlDynMusic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynMusic.ProtoReflect.Descriptor instead.
func (*MdlDynMusic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{145}
}

func (x *MdlDynMusic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynMusic) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynMusic) GetUpId() int64 {
	if x != nil {
		return x.UpId
	}
	return 0
}

func (x *MdlDynMusic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynMusic) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynMusic) GetLabel1() string {
	if x != nil {
		return x.Label1
	}
	return ""
}

func (x *MdlDynMusic) GetUpper() string {
	if x != nil {
		return x.Upper
	}
	return ""
}

// 动态-详情模块-pgc
type MdlDynPGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,7,opt,name=cid,proto3" json:"cid,omitempty"`
	// season_id
	SeasonId int64 `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// epid
	Epid int64 `protobuf:"varint,9,opt,name=epid,proto3" json:"epid,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,10,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频源类型
	MediaType MediaType `protobuf:"varint,11,opt,name=media_type,json=mediaType,proto3,enum=bilibili.app.dynamic.v2.MediaType" json:"media_type,omitempty"`
	// 番剧类型
	SubType VideoSubType `protobuf:"varint,12,opt,name=sub_type,json=subType,proto3,enum=bilibili.app.dynamic.v2.VideoSubType" json:"sub_type,omitempty"`
	// 番剧是否为预览视频
	IsPreview bool `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,14,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 角标，多个角标之前有间距
	Badge []*VideoBadge `protobuf:"bytes,15,rep,name=badge,proto3" json:"badge,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,16,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// season
	Season *PGCSeason `protobuf:"bytes,17,opt,name=season,proto3" json:"season,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,18,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,19,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,20,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 新角标，多个角标之前没有间距
	BadgeCategory []*VideoBadge `protobuf:"bytes,21,rep,name=badge_category,json=badgeCategory,proto3" json:"badge_category,omitempty"`
	// 当前是否是pgc正片
	IsFeature bool `protobuf:"varint,22,opt,name=is_feature,json=isFeature,proto3" json:"is_feature,omitempty"`
}

func (x *MdlDynPGC) Reset() {
	*x = MdlDynPGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynPGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynPGC) ProtoMessage() {}

func (x *MdlDynPGC) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynPGC.ProtoReflect.Descriptor instead.
func (*MdlDynPGC) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{146}
}

func (x *MdlDynPGC) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynPGC) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynPGC) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynPGC) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *MdlDynPGC) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *MdlDynPGC) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *MdlDynPGC) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MdlDynPGC) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *MdlDynPGC) GetEpid() int64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *MdlDynPGC) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *MdlDynPGC) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MediaTypeNone
}

func (x *MdlDynPGC) GetSubType() VideoSubType {
	if x != nil {
		return x.SubType
	}
	return VideoSubType_VideoSubTypeNone
}

func (x *MdlDynPGC) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *MdlDynPGC) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *MdlDynPGC) GetBadge() []*VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynPGC) GetCanPlay() bool {
	if x != nil {
		return x.CanPlay
	}
	return false
}

func (x *MdlDynPGC) GetSeason() *PGCSeason {
	if x != nil {
		return x.Season
	}
	return nil
}

func (x *MdlDynPGC) GetPlayIcon() string {
	if x != nil {
		return x.PlayIcon
	}
	return ""
}

func (x *MdlDynPGC) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MdlDynPGC) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *MdlDynPGC) GetBadgeCategory() []*VideoBadge {
	if x != nil {
		return x.BadgeCategory
	}
	return nil
}

func (x *MdlDynPGC) GetIsFeature() bool {
	if x != nil {
		return x.IsFeature
	}
	return false
}

// 动态列表渲染部分-详情模块-订阅卡
type MdlDynSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片物料id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 广告创意id
	AdId int64 `protobuf:"varint,2,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	// 广告标题
	AdTitle string `protobuf:"bytes,6,opt,name=ad_title,json=adTitle,proto3" json:"ad_title,omitempty"`
	// 角标
	Badge *VideoBadge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
	// 小提示
	Tips string `protobuf:"bytes,8,opt,name=tips,proto3" json:"tips,omitempty"`
}

func (x *MdlDynSubscription) Reset() {
	*x = MdlDynSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynSubscription) ProtoMessage() {}

func (x *MdlDynSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynSubscription.ProtoReflect.Descriptor instead.
func (*MdlDynSubscription) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{147}
}

func (x *MdlDynSubscription) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynSubscription) GetAdId() int64 {
	if x != nil {
		return x.AdId
	}
	return 0
}

func (x *MdlDynSubscription) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynSubscription) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynSubscription) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynSubscription) GetAdTitle() string {
	if x != nil {
		return x.AdTitle
	}
	return ""
}

func (x *MdlDynSubscription) GetBadge() *VideoBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *MdlDynSubscription) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

// 动态新附加卡
type MdlDynSubscriptionNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 样式类型
	Style MdlDynSubscriptionNewStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle" json:"style,omitempty"`
	// 新订阅卡数据
	//
	// Types that are assignable to Item:
	//
	//	*MdlDynSubscriptionNew_DynSubscription
	//	*MdlDynSubscriptionNew_DynLiveRcmd
	Item isMdlDynSubscriptionNew_Item `protobuf_oneof:"item"`
}

func (x *MdlDynSubscriptionNew) Reset() {
	*x = MdlDynSubscriptionNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynSubscriptionNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynSubscriptionNew) ProtoMessage() {}

func (x *MdlDynSubscriptionNew) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynSubscriptionNew.ProtoReflect.Descriptor instead.
func (*MdlDynSubscriptionNew) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{148}
}

func (x *MdlDynSubscriptionNew) GetStyle() MdlDynSubscriptionNewStyle {
	if x != nil {
		return x.Style
	}
	return MdlDynSubscriptionNewStyle_mdl_dyn_subscription_new_style_nont
}

func (m *MdlDynSubscriptionNew) GetItem() isMdlDynSubscriptionNew_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *MdlDynSubscriptionNew) GetDynSubscription() *MdlDynSubscription {
	if x, ok := x.GetItem().(*MdlDynSubscriptionNew_DynSubscription); ok {
		return x.DynSubscription
	}
	return nil
}

func (x *MdlDynSubscriptionNew) GetDynLiveRcmd() *MdlDynLiveRcmd {
	if x, ok := x.GetItem().(*MdlDynSubscriptionNew_DynLiveRcmd); ok {
		return x.DynLiveRcmd
	}
	return nil
}

type isMdlDynSubscriptionNew_Item interface {
	isMdlDynSubscriptionNew_Item()
}

type MdlDynSubscriptionNew_DynSubscription struct {
	DynSubscription *MdlDynSubscription `protobuf:"bytes,2,opt,name=dyn_subscription,json=dynSubscription,proto3,oneof"`
}

type MdlDynSubscriptionNew_DynLiveRcmd struct {
	// 直播推荐
	DynLiveRcmd *MdlDynLiveRcmd `protobuf:"bytes,3,opt,name=dyn_live_rcmd,json=dynLiveRcmd,proto3,oneof"`
}

func (*MdlDynSubscriptionNew_DynSubscription) isMdlDynSubscriptionNew_Item() {}

func (*MdlDynSubscriptionNew_DynLiveRcmd) isMdlDynSubscriptionNew_Item() {}

// 动态列表渲染部分-UGC合集
type MdlDynUGCSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 视频封面展示项 2
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	// 封面视频展示项 3
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	// 卡片物料id
	Id int64 `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	// inline播放地址
	InlineURL string `protobuf:"bytes,8,opt,name=inlineURL,proto3" json:"inlineURL,omitempty"`
	// 是否能够自动播放
	CanPlay bool `protobuf:"varint,9,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	// 播放按钮
	PlayIcon string `protobuf:"bytes,10,opt,name=play_icon,json=playIcon,proto3" json:"play_icon,omitempty"`
	// avid
	Avid int64 `protobuf:"varint,11,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,12,opt,name=cid,proto3" json:"cid,omitempty"`
	// 尺寸信息
	Dimension *Dimension `protobuf:"bytes,13,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 时长
	Duration int64 `protobuf:"varint,14,opt,name=duration,proto3" json:"duration,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,15,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *MdlDynUGCSeason) Reset() {
	*x = MdlDynUGCSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MdlDynUGCSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdlDynUGCSeason) ProtoMessage() {}

func (x *MdlDynUGCSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdlDynUGCSeason.ProtoReflect.Descriptor instead.
func (*MdlDynUGCSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{149}
}

func (x *MdlDynUGCSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MdlDynUGCSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MdlDynUGCSeason) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MdlDynUGCSeason) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *MdlDynUGCSeason) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *MdlDynUGCSeason) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *MdlDynUGCSeason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MdlDynUGCSeason) GetInlineURL() string {
	if x != nil {
		return x.InlineURL
	}
	return ""
}

func (x *MdlDynUGCSeason) GetCanPlay() bool {
	if x != nil {
		return x.CanPlay
	}
	return false
}

func (x *MdlDynUGCSeason) GetPlayIcon() string {
	if x != nil {
		return x.PlayIcon
	}
	return ""
}

func (x *MdlDynUGCSeason) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

func (x *MdlDynUGCSeason) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MdlDynUGCSeason) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *MdlDynUGCSeason) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MdlDynUGCSeason) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

// 查看更多-列表单条数据
type MixUpListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 特别关注
	// 0:否 1:是
	SpecialAttention int32 `protobuf:"varint,2,opt,name=special_attention,json=specialAttention,proto3" json:"special_attention,omitempty"`
	// 小红点状态
	// 0:没有 1:有
	ReddotState int32 `protobuf:"varint,3,opt,name=reddot_state,json=reddotState,proto3" json:"reddot_state,omitempty"`
	// 直播信息
	LiveInfo *MixUpListLiveItem `protobuf:"bytes,4,opt,name=live_info,json=liveInfo,proto3" json:"live_info,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,6,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,9,opt,name=relation,proto3" json:"relation,omitempty"`
	PermireState int32 `protobuf:"varint,10,opt,name=permire_state,json=permireState,proto3" json:"permire_state,omitempty"`
	Uri string `protobuf:"bytes,11,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *MixUpListItem) Reset() {
	*x = MixUpListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixUpListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixUpListItem) ProtoMessage() {}

func (x *MixUpListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixUpListItem.ProtoReflect.Descriptor instead.
func (*MixUpListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{150}
}

func (x *MixUpListItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MixUpListItem) GetSpecialAttention() int32 {
	if x != nil {
		return x.SpecialAttention
	}
	return 0
}

func (x *MixUpListItem) GetReddotState() int32 {
	if x != nil {
		return x.ReddotState
	}
	return 0
}

func (x *MixUpListItem) GetLiveInfo() *MixUpListLiveItem {
	if x != nil {
		return x.LiveInfo
	}
	return nil
}

func (x *MixUpListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MixUpListItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *MixUpListItem) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *MixUpListItem) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *MixUpListItem) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *MixUpListItem) GetPermireState() int32 {
	if x != nil {
		return x.PermireState
	}
	return 0
}

func (x *MixUpListItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type MixUpListLiveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 直播状态
	// 0:未直播 1:直播中
	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 房间号
	RoomId int64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *MixUpListLiveItem) Reset() {
	*x = MixUpListLiveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixUpListLiveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixUpListLiveItem) ProtoMessage() {}

func (x *MixUpListLiveItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixUpListLiveItem.ProtoReflect.Descriptor instead.
func (*MixUpListLiveItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{151}
}

func (x *MixUpListLiveItem) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *MixUpListLiveItem) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *MixUpListLiveItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态模块
type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	ModuleType DynModuleType `protobuf:"varint,1,opt,name=module_type,json=moduleType,proto3,enum=bilibili.app.dynamic.v2.DynModuleType" json:"module_type,omitempty"`
	// Types that are assignable to ModuleItem:
	//
	//	*Module_ModuleAuthor
	//	*Module_ModuleDispute
	//	*Module_ModuleDesc
	//	*Module_ModuleDynamic
	//	*Module_ModuleLikeUser
	//	*Module_ModuleExtend
	//	*Module_ModuleAdditional
	//	*Module_ModuleStat
	//	*Module_ModuleFold
	//	*Module_ModuleComment
	//	*Module_ModuleInteraction
	//	*Module_ModuleAuthorForward
	//	*Module_ModuleAd
	//	*Module_ModuleBanner
	//	*Module_ModuleItemNull
	//	*Module_ModuleShareInfo
	//	*Module_ModuleRecommend
	//	*Module_ModuleTop
	//	*Module_ModuleButtom
	//	*Module_ModuleStatForward
	//	*Module_ModuleStory
	//	*Module_ModuleTopic
	//	*Module_ModuleTopicDetailsExt
	//	*Module_ModuleTopTag
	//	*Module_ModuleTopicBrief
	//	*Module_ModuleTitle
	ModuleItem isModule_ModuleItem `protobuf_oneof:"module_item"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{152}
}

func (x *Module) GetModuleType() DynModuleType {
	if x != nil {
		return x.ModuleType
	}
	return DynModuleType_module_none
}

func (m *Module) GetModuleItem() isModule_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (x *Module) GetModuleAuthor() *ModuleAuthor {
	if x, ok := x.GetModuleItem().(*Module_ModuleAuthor); ok {
		return x.ModuleAuthor
	}
	return nil
}

func (x *Module) GetModuleDispute() *ModuleDispute {
	if x, ok := x.GetModuleItem().(*Module_ModuleDispute); ok {
		return x.ModuleDispute
	}
	return nil
}

func (x *Module) GetModuleDesc() *ModuleDesc {
	if x, ok := x.GetModuleItem().(*Module_ModuleDesc); ok {
		return x.ModuleDesc
	}
	return nil
}

func (x *Module) GetModuleDynamic() *ModuleDynamic {
	if x, ok := x.GetModuleItem().(*Module_ModuleDynamic); ok {
		return x.ModuleDynamic
	}
	return nil
}

func (x *Module) GetModuleLikeUser() *ModuleLikeUser {
	if x, ok := x.GetModuleItem().(*Module_ModuleLikeUser); ok {
		return x.ModuleLikeUser
	}
	return nil
}

func (x *Module) GetModuleExtend() *ModuleExtend {
	if x, ok := x.GetModuleItem().(*Module_ModuleExtend); ok {
		return x.ModuleExtend
	}
	return nil
}

func (x *Module) GetModuleAdditional() *ModuleAdditional {
	if x, ok := x.GetModuleItem().(*Module_ModuleAdditional); ok {
		return x.ModuleAdditional
	}
	return nil
}

func (x *Module) GetModuleStat() *ModuleStat {
	if x, ok := x.GetModuleItem().(*Module_ModuleStat); ok {
		return x.ModuleStat
	}
	return nil
}

func (x *Module) GetModuleFold() *ModuleFold {
	if x, ok := x.GetModuleItem().(*Module_ModuleFold); ok {
		return x.ModuleFold
	}
	return nil
}

func (x *Module) GetModuleComment() *ModuleComment {
	if x, ok := x.GetModuleItem().(*Module_ModuleComment); ok {
		return x.ModuleComment
	}
	return nil
}

func (x *Module) GetModuleInteraction() *ModuleInteraction {
	if x, ok := x.GetModuleItem().(*Module_ModuleInteraction); ok {
		return x.ModuleInteraction
	}
	return nil
}

func (x *Module) GetModuleAuthorForward() *ModuleAuthorForward {
	if x, ok := x.GetModuleItem().(*Module_ModuleAuthorForward); ok {
		return x.ModuleAuthorForward
	}
	return nil
}

func (x *Module) GetModuleAd() *ModuleAd {
	if x, ok := x.GetModuleItem().(*Module_ModuleAd); ok {
		return x.ModuleAd
	}
	return nil
}

func (x *Module) GetModuleBanner() *ModuleBanner {
	if x, ok := x.GetModuleItem().(*Module_ModuleBanner); ok {
		return x.ModuleBanner
	}
	return nil
}

func (x *Module) GetModuleItemNull() *ModuleItemNull {
	if x, ok := x.GetModuleItem().(*Module_ModuleItemNull); ok {
		return x.ModuleItemNull
	}
	return nil
}

func (x *Module) GetModuleShareInfo() *ModuleShareInfo {
	if x, ok := x.GetModuleItem().(*Module_ModuleShareInfo); ok {
		return x.ModuleShareInfo
	}
	return nil
}

func (x *Module) GetModuleRecommend() *ModuleRecommend {
	if x, ok := x.GetModuleItem().(*Module_ModuleRecommend); ok {
		return x.ModuleRecommend
	}
	return nil
}

func (x *Module) GetModuleTop() *ModuleTop {
	if x, ok := x.GetModuleItem().(*Module_ModuleTop); ok {
		return x.ModuleTop
	}
	return nil
}

func (x *Module) GetModuleButtom() *ModuleButtom {
	if x, ok := x.GetModuleItem().(*Module_ModuleButtom); ok {
		return x.ModuleButtom
	}
	return nil
}

func (x *Module) GetModuleStatForward() *ModuleStat {
	if x, ok := x.GetModuleItem().(*Module_ModuleStatForward); ok {
		return x.ModuleStatForward
	}
	return nil
}

func (x *Module) GetModuleStory() *ModuleStory {
	if x, ok := x.GetModuleItem().(*Module_ModuleStory); ok {
		return x.ModuleStory
	}
	return nil
}

func (x *Module) GetModuleTopic() *ModuleTopic {
	if x, ok := x.GetModuleItem().(*Module_ModuleTopic); ok {
		return x.ModuleTopic
	}
	return nil
}

func (x *Module) GetModuleTopicDetailsExt() *ModuleTopicDetailsExt {
	if x, ok := x.GetModuleItem().(*Module_ModuleTopicDetailsExt); ok {
		return x.ModuleTopicDetailsExt
	}
	return nil
}

func (x *Module) GetModuleTopTag() *ModuleTopTag {
	if x, ok := x.GetModuleItem().(*Module_ModuleTopTag); ok {
		return x.ModuleTopTag
	}
	return nil
}

func (x *Module) GetModuleTopicBrief() *ModuleTopicBrief {
	if x, ok := x.GetModuleItem().(*Module_ModuleTopicBrief); ok {
		return x.ModuleTopicBrief
	}
	return nil
}

func (x *Module) GetModuleTitle() *ModuleTitle {
	if x, ok := x.GetModuleItem().(*Module_ModuleTitle); ok {
		return x.ModuleTitle
	}
	return nil
}

type isModule_ModuleItem interface {
	isModule_ModuleItem()
}

type Module_ModuleAuthor struct {
	// 用户模块 1
	ModuleAuthor *ModuleAuthor `protobuf:"bytes,2,opt,name=module_author,json=moduleAuthor,proto3,oneof"`
}

type Module_ModuleDispute struct {
	// 争议黄条模块 2
	ModuleDispute *ModuleDispute `protobuf:"bytes,3,opt,name=module_dispute,json=moduleDispute,proto3,oneof"`
}

type Module_ModuleDesc struct {
	// 动态正文模块 3
	ModuleDesc *ModuleDesc `protobuf:"bytes,4,opt,name=module_desc,json=moduleDesc,proto3,oneof"`
}

type Module_ModuleDynamic struct {
	// 动态卡模块 4
	ModuleDynamic *ModuleDynamic `protobuf:"bytes,5,opt,name=module_dynamic,json=moduleDynamic,proto3,oneof"`
}

type Module_ModuleLikeUser struct {
	// 点赞外露(废弃)
	ModuleLikeUser *ModuleLikeUser `protobuf:"bytes,6,opt,name=module_likeUser,json=moduleLikeUser,proto3,oneof"`
}

type Module_ModuleExtend struct {
	// 小卡模块 6
	ModuleExtend *ModuleExtend `protobuf:"bytes,7,opt,name=module_extend,json=moduleExtend,proto3,oneof"`
}

type Module_ModuleAdditional struct {
	// 大卡模块 5
	ModuleAdditional *ModuleAdditional `protobuf:"bytes,8,opt,name=module_additional,json=moduleAdditional,proto3,oneof"`
}

type Module_ModuleStat struct {
	// 计数模块 8
	ModuleStat *ModuleStat `protobuf:"bytes,9,opt,name=module_stat,json=moduleStat,proto3,oneof"`
}

type Module_ModuleFold struct {
	// 折叠模块 9
	ModuleFold *ModuleFold `protobuf:"bytes,10,opt,name=module_fold,json=moduleFold,proto3,oneof"`
}

type Module_ModuleComment struct {
	// 评论外露(废弃)
	ModuleComment *ModuleComment `protobuf:"bytes,11,opt,name=module_comment,json=moduleComment,proto3,oneof"`
}

type Module_ModuleInteraction struct {
	// 外露交互模块(点赞、评论) 7
	ModuleInteraction *ModuleInteraction `protobuf:"bytes,12,opt,name=module_interaction,json=moduleInteraction,proto3,oneof"`
}

type Module_ModuleAuthorForward struct {
	// 转发卡-原卡用户模块
	ModuleAuthorForward *ModuleAuthorForward `protobuf:"bytes,13,opt,name=module_author_forward,json=moduleAuthorForward,proto3,oneof"`
}

type Module_ModuleAd struct {
	// 广告卡
	ModuleAd *ModuleAd `protobuf:"bytes,14,opt,name=module_ad,json=moduleAd,proto3,oneof"`
}

type Module_ModuleBanner struct {
	// 通栏
	ModuleBanner *ModuleBanner `protobuf:"bytes,15,opt,name=module_banner,json=moduleBanner,proto3,oneof"`
}

type Module_ModuleItemNull struct {
	// 获取物料失败
	ModuleItemNull *ModuleItemNull `protobuf:"bytes,16,opt,name=module_item_null,json=moduleItemNull,proto3,oneof"`
}

type Module_ModuleShareInfo struct {
	// 分享组件
	ModuleShareInfo *ModuleShareInfo `protobuf:"bytes,17,opt,name=module_share_info,json=moduleShareInfo,proto3,oneof"`
}

type Module_ModuleRecommend struct {
	// 相关推荐模块
	ModuleRecommend *ModuleRecommend `protobuf:"bytes,18,opt,name=module_recommend,json=moduleRecommend,proto3,oneof"`
}

type Module_ModuleTop struct {
	// 顶部模块
	ModuleTop *ModuleTop `protobuf:"bytes,19,opt,name=module_top,json=moduleTop,proto3,oneof"`
}

type Module_ModuleButtom struct {
	// 底部模块
	ModuleButtom *ModuleButtom `protobuf:"bytes,20,opt,name=module_buttom,json=moduleButtom,proto3,oneof"`
}

type Module_ModuleStatForward struct {
	// 转发卡计数模块
	ModuleStatForward *ModuleStat `protobuf:"bytes,21,opt,name=module_stat_forward,json=moduleStatForward,proto3,oneof"`
}

type Module_ModuleStory struct {
	ModuleStory *ModuleStory `protobuf:"bytes,22,opt,name=module_story,json=moduleStory,proto3,oneof"`
}

type Module_ModuleTopic struct {
	ModuleTopic *ModuleTopic `protobuf:"bytes,23,opt,name=module_topic,json=moduleTopic,proto3,oneof"`
}

type Module_ModuleTopicDetailsExt struct {
	ModuleTopicDetailsExt *ModuleTopicDetailsExt `protobuf:"bytes,24,opt,name=module_topic_details_ext,json=moduleTopicDetailsExt,proto3,oneof"`
}

type Module_ModuleTopTag struct {
	ModuleTopTag *ModuleTopTag `protobuf:"bytes,25,opt,name=module_top_tag,json=moduleTopTag,proto3,oneof"`
}

type Module_ModuleTopicBrief struct {
	ModuleTopicBrief *ModuleTopicBrief `protobuf:"bytes,26,opt,name=module_topic_brief,json=moduleTopicBrief,proto3,oneof"`
}

type Module_ModuleTitle struct {
	ModuleTitle *ModuleTitle `protobuf:"bytes,27,opt,name=module_title,json=moduleTitle,proto3,oneof"`
}

func (*Module_ModuleAuthor) isModule_ModuleItem() {}

func (*Module_ModuleDispute) isModule_ModuleItem() {}

func (*Module_ModuleDesc) isModule_ModuleItem() {}

func (*Module_ModuleDynamic) isModule_ModuleItem() {}

func (*Module_ModuleLikeUser) isModule_ModuleItem() {}

func (*Module_ModuleExtend) isModule_ModuleItem() {}

func (*Module_ModuleAdditional) isModule_ModuleItem() {}

func (*Module_ModuleStat) isModule_ModuleItem() {}

func (*Module_ModuleFold) isModule_ModuleItem() {}

func (*Module_ModuleComment) isModule_ModuleItem() {}

func (*Module_ModuleInteraction) isModule_ModuleItem() {}

func (*Module_ModuleAuthorForward) isModule_ModuleItem() {}

func (*Module_ModuleAd) isModule_ModuleItem() {}

func (*Module_ModuleBanner) isModule_ModuleItem() {}

func (*Module_ModuleItemNull) isModule_ModuleItem() {}

func (*Module_ModuleShareInfo) isModule_ModuleItem() {}

func (*Module_ModuleRecommend) isModule_ModuleItem() {}

func (*Module_ModuleTop) isModule_ModuleItem() {}

func (*Module_ModuleButtom) isModule_ModuleItem() {}

func (*Module_ModuleStatForward) isModule_ModuleItem() {}

func (*Module_ModuleStory) isModule_ModuleItem() {}

func (*Module_ModuleTopic) isModule_ModuleItem() {}

func (*Module_ModuleTopicDetailsExt) isModule_ModuleItem() {}

func (*Module_ModuleTopTag) isModule_ModuleItem() {}

func (*Module_ModuleTopicBrief) isModule_ModuleItem() {}

func (*Module_ModuleTitle) isModule_ModuleItem() {}

// 动态列表-用户模块-广告卡
type ModuleAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告透传信息
	SourceContent *anypb.Any `protobuf:"bytes,1,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
	// 用户模块
	ModuleAuthor *ModuleAuthor `protobuf:"bytes,2,opt,name=module_author,json=moduleAuthor,proto3" json:"module_author,omitempty"`
	AdContentType int32 `protobuf:"varint,3,opt,name=ad_content_type,json=adContentType,proto3" json:"ad_content_type,omitempty"`
	CoverLeftText1 string `protobuf:"bytes,4,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	CoverLeftText2 string `protobuf:"bytes,5,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	CoverLeftText3 string `protobuf:"bytes,6,opt,name=cover_left_text3,json=coverLeftText3,proto3" json:"cover_left_text3,omitempty"`
}

func (x *ModuleAd) Reset() {
	*x = ModuleAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAd) ProtoMessage() {}

func (x *ModuleAd) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAd.ProtoReflect.Descriptor instead.
func (*ModuleAd) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{153}
}

func (x *ModuleAd) GetSourceContent() *anypb.Any {
	if x != nil {
		return x.SourceContent
	}
	return nil
}

func (x *ModuleAd) GetModuleAuthor() *ModuleAuthor {
	if x != nil {
		return x.ModuleAuthor
	}
	return nil
}

func (x *ModuleAd) GetAdContentType() int32 {
	if x != nil {
		return x.AdContentType
	}
	return 0
}

func (x *ModuleAd) GetCoverLeftText1() string {
	if x != nil {
		return x.CoverLeftText1
	}
	return ""
}

func (x *ModuleAd) GetCoverLeftText2() string {
	if x != nil {
		return x.CoverLeftText2
	}
	return ""
}

func (x *ModuleAd) GetCoverLeftText3() string {
	if x != nil {
		return x.CoverLeftText3
	}
	return ""
}

// 动态-附加卡模块
type ModuleAdditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type AdditionalType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.AdditionalType" json:"type,omitempty"`
	// Types that are assignable to Item:
	//
	//	*ModuleAdditional_Pgc
	//	*ModuleAdditional_Goods
	//	*ModuleAdditional_Vote
	//	*ModuleAdditional_Common
	//	*ModuleAdditional_Esport
	//	*ModuleAdditional_Vote2
	//	*ModuleAdditional_Ugc
	//	*ModuleAdditional_Up
	Item isModuleAdditional_Item `protobuf_oneof:"item"`
	// 附加卡物料ID
	Rid int64 `protobuf:"varint,7,opt,name=rid,proto3" json:"rid,omitempty"`
	NeedWriteCalender bool `protobuf:"varint,11,opt,name=need_write_calender,json=needWriteCalender,proto3" json:"need_write_calender,omitempty"`
}

func (x *ModuleAdditional) Reset() {
	*x = ModuleAdditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAdditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAdditional) ProtoMessage() {}

func (x *ModuleAdditional) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAdditional.ProtoReflect.Descriptor instead.
func (*ModuleAdditional) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{154}
}

func (x *ModuleAdditional) GetType() AdditionalType {
	if x != nil {
		return x.Type
	}
	return AdditionalType_additional_none
}

func (m *ModuleAdditional) GetItem() isModuleAdditional_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *ModuleAdditional) GetPgc() *AdditionalPGC {
	if x, ok := x.GetItem().(*ModuleAdditional_Pgc); ok {
		return x.Pgc
	}
	return nil
}

func (x *ModuleAdditional) GetGoods() *AdditionGoods {
	if x, ok := x.GetItem().(*ModuleAdditional_Goods); ok {
		return x.Goods
	}
	return nil
}

func (x *ModuleAdditional) GetVote() *AdditionVote {
	if x, ok := x.GetItem().(*ModuleAdditional_Vote); ok {
		return x.Vote
	}
	return nil
}

func (x *ModuleAdditional) GetCommon() *AdditionCommon {
	if x, ok := x.GetItem().(*ModuleAdditional_Common); ok {
		return x.Common
	}
	return nil
}

func (x *ModuleAdditional) GetEsport() *AdditionEsport {
	if x, ok := x.GetItem().(*ModuleAdditional_Esport); ok {
		return x.Esport
	}
	return nil
}

func (x *ModuleAdditional) GetVote2() *AdditionVote2 {
	if x, ok := x.GetItem().(*ModuleAdditional_Vote2); ok {
		return x.Vote2
	}
	return nil
}

func (x *ModuleAdditional) GetUgc() *AdditionUgc {
	if x, ok := x.GetItem().(*ModuleAdditional_Ugc); ok {
		return x.Ugc
	}
	return nil
}

func (x *ModuleAdditional) GetUp() *AdditionUP {
	if x, ok := x.GetItem().(*ModuleAdditional_Up); ok {
		return x.Up
	}
	return nil
}

func (x *ModuleAdditional) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ModuleAdditional) GetNeedWriteCalender() bool {
	if x != nil {
		return x.NeedWriteCalender
	}
	return false
}

type isModuleAdditional_Item interface {
	isModuleAdditional_Item()
}

type ModuleAdditional_Pgc struct {
	// 废弃
	Pgc *AdditionalPGC `protobuf:"bytes,2,opt,name=pgc,proto3,oneof"`
}

type ModuleAdditional_Goods struct {
	Goods *AdditionGoods `protobuf:"bytes,3,opt,name=goods,proto3,oneof"`
}

type ModuleAdditional_Vote struct {
	// 废弃
	Vote *AdditionVote `protobuf:"bytes,4,opt,name=vote,proto3,oneof"`
}

type ModuleAdditional_Common struct {
	Common *AdditionCommon `protobuf:"bytes,5,opt,name=common,proto3,oneof"`
}

type ModuleAdditional_Esport struct {
	Esport *AdditionEsport `protobuf:"bytes,6,opt,name=esport,proto3,oneof"`
}

type ModuleAdditional_Vote2 struct {
	// 投票
	Vote2 *AdditionVote2 `protobuf:"bytes,8,opt,name=vote2,proto3,oneof"`
}

type ModuleAdditional_Ugc struct {
	Ugc *AdditionUgc `protobuf:"bytes,9,opt,name=ugc,proto3,oneof"`
}

type ModuleAdditional_Up struct {
	// up主预约发布卡
	Up *AdditionUP `protobuf:"bytes,10,opt,name=up,proto3,oneof"`
}

func (*ModuleAdditional_Pgc) isModuleAdditional_Item() {}

func (*ModuleAdditional_Goods) isModuleAdditional_Item() {}

func (*ModuleAdditional_Vote) isModuleAdditional_Item() {}

func (*ModuleAdditional_Common) isModuleAdditional_Item() {}

func (*ModuleAdditional_Esport) isModuleAdditional_Item() {}

func (*ModuleAdditional_Vote2) isModuleAdditional_Item() {}

func (*ModuleAdditional_Ugc) isModuleAdditional_Item() {}

func (*ModuleAdditional_Up) isModuleAdditional_Item() {}

// 动态-发布人模块
type ModuleAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 时间标签
	PtimeLabelText string `protobuf:"bytes,2,opt,name=ptime_label_text,json=ptimeLabelText,proto3" json:"ptime_label_text,omitempty"`
	// 用户详情
	Author *UserInfo `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// 装扮卡片
	DecorateCard *DecorateCard `protobuf:"bytes,4,opt,name=decorate_card,json=decorateCard,proto3" json:"decorate_card,omitempty"`
	// 点击跳转链接
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 右侧操作区域 - 三点样式
	TpList []*ThreePointItem `protobuf:"bytes,6,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
	// 右侧操作区域样式枚举
	BadgeType ModuleAuthorBadgeType `protobuf:"varint,7,opt,name=badge_type,json=badgeType,proto3,enum=bilibili.app.dynamic.v2.ModuleAuthorBadgeType" json:"badge_type,omitempty"`
	// 右侧操作区域 - 按钮样式
	BadgeButton *ModuleAuthorBadgeButton `protobuf:"bytes,8,opt,name=badge_button,json=badgeButton,proto3" json:"badge_button,omitempty"`
	// 是否关注
	// 1:关注 0:不关注 默认0，注：点赞列表使用，其他场景不使用该字段
	Attend int32 `protobuf:"varint,9,opt,name=attend,proto3" json:"attend,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,10,opt,name=relation,proto3" json:"relation,omitempty"`
	// 右侧操作区域 - 提权样式
	Weight *Weight `protobuf:"bytes,11,opt,name=weight,proto3" json:"weight,omitempty"`
	// 是否展示关注
	ShowFollow bool `protobuf:"varint,12,opt,name=show_follow,json=showFollow,proto3" json:"show_follow,omitempty"`
	// 是否置顶
	IsTop bool `protobuf:"varint,13,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	// ip属地
	PtimeLocationText string `protobuf:"bytes,14,opt,name=ptime_location_text,json=ptimeLocationText,proto3" json:"ptime_location_text,omitempty"`
	ShowLevel bool `protobuf:"varint,15,opt,name=show_level,json=showLevel,proto3" json:"show_level,omitempty"`
}

func (x *ModuleAuthor) Reset() {
	*x = ModuleAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAuthor) ProtoMessage() {}

func (x *ModuleAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAuthor.ProtoReflect.Descriptor instead.
func (*ModuleAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{155}
}

func (x *ModuleAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ModuleAuthor) GetPtimeLabelText() string {
	if x != nil {
		return x.PtimeLabelText
	}
	return ""
}

func (x *ModuleAuthor) GetAuthor() *UserInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ModuleAuthor) GetDecorateCard() *DecorateCard {
	if x != nil {
		return x.DecorateCard
	}
	return nil
}

func (x *ModuleAuthor) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ModuleAuthor) GetTpList() []*ThreePointItem {
	if x != nil {
		return x.TpList
	}
	return nil
}

func (x *ModuleAuthor) GetBadgeType() ModuleAuthorBadgeType {
	if x != nil {
		return x.BadgeType
	}
	return ModuleAuthorBadgeType_module_author_badge_type_none
}

func (x *ModuleAuthor) GetBadgeButton() *ModuleAuthorBadgeButton {
	if x != nil {
		return x.BadgeButton
	}
	return nil
}

func (x *ModuleAuthor) GetAttend() int32 {
	if x != nil {
		return x.Attend
	}
	return 0
}

func (x *ModuleAuthor) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *ModuleAuthor) GetWeight() *Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *ModuleAuthor) GetShowFollow() bool {
	if x != nil {
		return x.ShowFollow
	}
	return false
}

func (x *ModuleAuthor) GetIsTop() bool {
	if x != nil {
		return x.IsTop
	}
	return false
}

func (x *ModuleAuthor) GetPtimeLocationText() string {
	if x != nil {
		return x.PtimeLocationText
	}
	return ""
}

func (x *ModuleAuthor) GetShowLevel() bool {
	if x != nil {
		return x.ShowLevel
	}
	return false
}

// 动态列表渲染部分-用户模块-按钮
type ModuleAuthorBadgeButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 状态
	State int32 `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	// 物料ID
	Id int64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ModuleAuthorBadgeButton) Reset() {
	*x = ModuleAuthorBadgeButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAuthorBadgeButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAuthorBadgeButton) ProtoMessage() {}

func (x *ModuleAuthorBadgeButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAuthorBadgeButton.ProtoReflect.Descriptor instead.
func (*ModuleAuthorBadgeButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{156}
}

func (x *ModuleAuthorBadgeButton) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModuleAuthorBadgeButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleAuthorBadgeButton) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ModuleAuthorBadgeButton) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 动态列表-用户模块-转发模板
type ModuleAuthorForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示标题
	Title []*ModuleAuthorForwardTitle `protobuf:"bytes,1,rep,name=title,proto3" json:"title,omitempty"`
	// 源卡片跳转链接
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 时间标签
	PtimeLabelText string `protobuf:"bytes,4,opt,name=ptime_label_text,json=ptimeLabelText,proto3" json:"ptime_label_text,omitempty"`
	// 是否展示关注
	ShowFollow bool `protobuf:"varint,5,opt,name=show_follow,json=showFollow,proto3" json:"show_follow,omitempty"`
	// 源up主头像
	FaceUrl string `protobuf:"bytes,6,opt,name=face_url,json=faceUrl,proto3" json:"face_url,omitempty"`
	// 双向关系
	Relation *Relation `protobuf:"bytes,7,opt,name=relation,proto3" json:"relation,omitempty"`
	// 右侧操作区域 - 三点样式
	TpList []*ThreePointItem `protobuf:"bytes,8,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
}

func (x *ModuleAuthorForward) Reset() {
	*x = ModuleAuthorForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAuthorForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAuthorForward) ProtoMessage() {}

func (x *ModuleAuthorForward) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAuthorForward.ProtoReflect.Descriptor instead.
func (*ModuleAuthorForward) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{157}
}

func (x *ModuleAuthorForward) GetTitle() []*ModuleAuthorForwardTitle {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ModuleAuthorForward) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModuleAuthorForward) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModuleAuthorForward) GetPtimeLabelText() string {
	if x != nil {
		return x.PtimeLabelText
	}
	return ""
}

func (x *ModuleAuthorForward) GetShowFollow() bool {
	if x != nil {
		return x.ShowFollow
	}
	return false
}

func (x *ModuleAuthorForward) GetFaceUrl() string {
	if x != nil {
		return x.FaceUrl
	}
	return ""
}

func (x *ModuleAuthorForward) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *ModuleAuthorForward) GetTpList() []*ThreePointItem {
	if x != nil {
		return x.TpList
	}
	return nil
}

// 动态列表-用户模块-转发模板-title部分
type ModuleAuthorForwardTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ModuleAuthorForwardTitle) Reset() {
	*x = ModuleAuthorForwardTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleAuthorForwardTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleAuthorForwardTitle) ProtoMessage() {}

func (x *ModuleAuthorForwardTitle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleAuthorForwardTitle.ProtoReflect.Descriptor instead.
func (*ModuleAuthorForwardTitle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{158}
}

func (x *ModuleAuthorForwardTitle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ModuleAuthorForwardTitle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 动态列表-通栏
type ModuleBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 卡片类型
	Type ModuleBannerType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ModuleBannerType" json:"type,omitempty"`
	// 卡片
	//
	// Types that are assignable to Item:
	//
	//	*ModuleBanner_User
	Item isModuleBanner_Item `protobuf_oneof:"item"`
	// 不感兴趣文案
	DislikeText string `protobuf:"bytes,4,opt,name=dislike_text,json=dislikeText,proto3" json:"dislike_text,omitempty"`
	// 不感兴趣图标
	DislikeIcon string `protobuf:"bytes,5,opt,name=dislike_icon,json=dislikeIcon,proto3" json:"dislike_icon,omitempty"`
}

func (x *ModuleBanner) Reset() {
	*x = ModuleBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBanner) ProtoMessage() {}

func (x *ModuleBanner) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBanner.ProtoReflect.Descriptor instead.
func (*ModuleBanner) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{159}
}

func (x *ModuleBanner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleBanner) GetType() ModuleBannerType {
	if x != nil {
		return x.Type
	}
	return ModuleBannerType_module_banner_type_none
}

func (m *ModuleBanner) GetItem() isModuleBanner_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *ModuleBanner) GetUser() *ModuleBannerUser {
	if x, ok := x.GetItem().(*ModuleBanner_User); ok {
		return x.User
	}
	return nil
}

func (x *ModuleBanner) GetDislikeText() string {
	if x != nil {
		return x.DislikeText
	}
	return ""
}

func (x *ModuleBanner) GetDislikeIcon() string {
	if x != nil {
		return x.DislikeIcon
	}
	return ""
}

type isModuleBanner_Item interface {
	isModuleBanner_Item()
}

type ModuleBanner_User struct {
	User *ModuleBannerUser `protobuf:"bytes,3,opt,name=user,proto3,oneof"`
}

func (*ModuleBanner_User) isModuleBanner_Item() {}

// 动态通栏-用户
type ModuleBannerUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片列表
	List []*ModuleBannerUserItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ModuleBannerUser) Reset() {
	*x = ModuleBannerUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleBannerUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBannerUser) ProtoMessage() {}

func (x *ModuleBannerUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBannerUser.ProtoReflect.Descriptor instead.
func (*ModuleBannerUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{160}
}

func (x *ModuleBannerUser) GetList() []*ModuleBannerUserItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 动态通栏-推荐用户卡
type ModuleBannerUserItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// up主头像
	Face string `protobuf:"bytes,1,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,4,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,5,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,6,opt,name=vip,proto3" json:"vip,omitempty"`
	// 标签信息
	Label string `protobuf:"bytes,7,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,8,opt,name=button,proto3" json:"button,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,9,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *ModuleBannerUserItem) Reset() {
	*x = ModuleBannerUserItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleBannerUserItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBannerUserItem) ProtoMessage() {}

func (x *ModuleBannerUserItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBannerUserItem.ProtoReflect.Descriptor instead.
func (*ModuleBannerUserItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{161}
}

func (x *ModuleBannerUserItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *ModuleBannerUserItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleBannerUserItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ModuleBannerUserItem) GetLiveState() LiveState {
	if x != nil {
		return x.LiveState
	}
	return LiveState_live_none
}

func (x *ModuleBannerUserItem) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *ModuleBannerUserItem) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *ModuleBannerUserItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ModuleBannerUserItem) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *ModuleBannerUserItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 底部模块
type ModuleButtom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 计数模块
	ModuleStat *ModuleStat `protobuf:"bytes,1,opt,name=module_stat,json=moduleStat,proto3" json:"module_stat,omitempty"`
}

func (x *ModuleButtom) Reset() {
	*x = ModuleButtom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleButtom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleButtom) ProtoMessage() {}

func (x *ModuleButtom) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleButtom.ProtoReflect.Descriptor instead.
func (*ModuleButtom) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{162}
}

func (x *ModuleButtom) GetModuleStat() *ModuleStat {
	if x != nil {
		return x.ModuleStat
	}
	return nil
}

// 评论外露模块
type ModuleComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论外露展示项
	CmtShowItem []*CmtShowItem `protobuf:"bytes,1,rep,name=cmtShowItem,proto3" json:"cmtShowItem,omitempty"`
}

func (x *ModuleComment) Reset() {
	*x = ModuleComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleComment) ProtoMessage() {}

func (x *ModuleComment) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleComment.ProtoReflect.Descriptor instead.
func (*ModuleComment) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{163}
}

func (x *ModuleComment) GetCmtShowItem() []*CmtShowItem {
	if x != nil {
		return x.CmtShowItem
	}
	return nil
}

// 动态-描述文字模块
type ModuleDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 描述信息(已按高亮拆分)
	Desc []*Description `protobuf:"bytes,1,rep,name=desc,proto3" json:"desc,omitempty"`
	// 点击跳转链接
	JumpUri string `protobuf:"bytes,2,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	// 文本原本
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ModuleDesc) Reset() {
	*x = ModuleDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDesc) ProtoMessage() {}

func (x *ModuleDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDesc.ProtoReflect.Descriptor instead.
func (*ModuleDesc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{164}
}

func (x *ModuleDesc) GetDesc() []*Description {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ModuleDesc) GetJumpUri() string {
	if x != nil {
		return x.JumpUri
	}
	return ""
}

func (x *ModuleDesc) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 正文商品卡参数
type ModuleDescGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品类型
	// 1:淘宝 2:会员购
	SourceType int32 `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// schema_url
	SchemaUrl string `protobuf:"bytes,3,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	// item_id
	ItemId int64 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// open_white_list
	OpenWhiteList []string `protobuf:"bytes,5,rep,name=open_white_list,json=openWhiteList,proto3" json:"open_white_list,omitempty"`
	// use_web_v2
	UserWebV2 bool `protobuf:"varint,6,opt,name=user_web_v2,json=userWebV2,proto3" json:"user_web_v2,omitempty"`
	// ad mark
	AdMark string `protobuf:"bytes,7,opt,name=ad_mark,json=adMark,proto3" json:"ad_mark,omitempty"`
	// schemaPackageName(Android用)
	SchemaPackageName string `protobuf:"bytes,8,opt,name=schema_package_name,json=schemaPackageName,proto3" json:"schema_package_name,omitempty"`
}

func (x *ModuleDescGoods) Reset() {
	*x = ModuleDescGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDescGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDescGoods) ProtoMessage() {}

func (x *ModuleDescGoods) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDescGoods.ProtoReflect.Descriptor instead.
func (*ModuleDescGoods) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{165}
}

func (x *ModuleDescGoods) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *ModuleDescGoods) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ModuleDescGoods) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *ModuleDescGoods) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ModuleDescGoods) GetOpenWhiteList() []string {
	if x != nil {
		return x.OpenWhiteList
	}
	return nil
}

func (x *ModuleDescGoods) GetUserWebV2() bool {
	if x != nil {
		return x.UserWebV2
	}
	return false
}

func (x *ModuleDescGoods) GetAdMark() string {
	if x != nil {
		return x.AdMark
	}
	return ""
}

func (x *ModuleDescGoods) GetSchemaPackageName() string {
	if x != nil {
		return x.SchemaPackageName
	}
	return ""
}

// 动态-争议小黄条模块
type ModuleDispute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述内容
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *ModuleDispute) Reset() {
	*x = ModuleDispute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDispute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDispute) ProtoMessage() {}

func (x *ModuleDispute) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDispute.ProtoReflect.Descriptor instead.
func (*ModuleDispute) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{166}
}

func (x *ModuleDispute) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleDispute) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ModuleDispute) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态-详情模块
type ModuleDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type ModuleDynamicType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ModuleDynamicType" json:"type,omitempty"`
	// Types that are assignable to ModuleItem:
	//
	//	*ModuleDynamic_DynArchive
	//	*ModuleDynamic_DynPgc
	//	*ModuleDynamic_DynCourSeason
	//	*ModuleDynamic_DynCourBatch
	//	*ModuleDynamic_DynForward
	//	*ModuleDynamic_DynDraw
	//	*ModuleDynamic_DynArticle
	//	*ModuleDynamic_DynMusic
	//	*ModuleDynamic_DynCommon
	//	*ModuleDynamic_DynCommonLive
	//	*ModuleDynamic_DynMedialist
	//	*ModuleDynamic_DynApplet
	//	*ModuleDynamic_DynSubscription
	//	*ModuleDynamic_DynLiveRcmd
	//	*ModuleDynamic_DynUgcSeason
	//	*ModuleDynamic_DynSubscriptionNew
	ModuleItem isModuleDynamic_ModuleItem `protobuf_oneof:"module_item"`
}

func (x *ModuleDynamic) Reset() {
	*x = ModuleDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleDynamic) ProtoMessage() {}

func (x *ModuleDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleDynamic.ProtoReflect.Descriptor instead.
func (*ModuleDynamic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{167}
}

func (x *ModuleDynamic) GetType() ModuleDynamicType {
	if x != nil {
		return x.Type
	}
	return ModuleDynamicType_mdl_dyn_archive
}

func (m *ModuleDynamic) GetModuleItem() isModuleDynamic_ModuleItem {
	if m != nil {
		return m.ModuleItem
	}
	return nil
}

func (x *ModuleDynamic) GetDynArchive() *MdlDynArchive {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynArchive); ok {
		return x.DynArchive
	}
	return nil
}

func (x *ModuleDynamic) GetDynPgc() *MdlDynPGC {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynPgc); ok {
		return x.DynPgc
	}
	return nil
}

func (x *ModuleDynamic) GetDynCourSeason() *MdlDynCourSeason {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynCourSeason); ok {
		return x.DynCourSeason
	}
	return nil
}

func (x *ModuleDynamic) GetDynCourBatch() *MdlDynCourBatch {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynCourBatch); ok {
		return x.DynCourBatch
	}
	return nil
}

func (x *ModuleDynamic) GetDynForward() *MdlDynForward {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynForward); ok {
		return x.DynForward
	}
	return nil
}

func (x *ModuleDynamic) GetDynDraw() *MdlDynDraw {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynDraw); ok {
		return x.DynDraw
	}
	return nil
}

func (x *ModuleDynamic) GetDynArticle() *MdlDynArticle {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynArticle); ok {
		return x.DynArticle
	}
	return nil
}

func (x *ModuleDynamic) GetDynMusic() *MdlDynMusic {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynMusic); ok {
		return x.DynMusic
	}
	return nil
}

func (x *ModuleDynamic) GetDynCommon() *MdlDynCommon {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynCommon); ok {
		return x.DynCommon
	}
	return nil
}

func (x *ModuleDynamic) GetDynCommonLive() *MdlDynLive {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynCommonLive); ok {
		return x.DynCommonLive
	}
	return nil
}

func (x *ModuleDynamic) GetDynMedialist() *MdlDynMedialist {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynMedialist); ok {
		return x.DynMedialist
	}
	return nil
}

func (x *ModuleDynamic) GetDynApplet() *MdlDynApplet {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynApplet); ok {
		return x.DynApplet
	}
	return nil
}

func (x *ModuleDynamic) GetDynSubscription() *MdlDynSubscription {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynSubscription); ok {
		return x.DynSubscription
	}
	return nil
}

func (x *ModuleDynamic) GetDynLiveRcmd() *MdlDynLiveRcmd {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynLiveRcmd); ok {
		return x.DynLiveRcmd
	}
	return nil
}

func (x *ModuleDynamic) GetDynUgcSeason() *MdlDynUGCSeason {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynUgcSeason); ok {
		return x.DynUgcSeason
	}
	return nil
}

func (x *ModuleDynamic) GetDynSubscriptionNew() *MdlDynSubscriptionNew {
	if x, ok := x.GetModuleItem().(*ModuleDynamic_DynSubscriptionNew); ok {
		return x.DynSubscriptionNew
	}
	return nil
}

type isModuleDynamic_ModuleItem interface {
	isModuleDynamic_ModuleItem()
}

type ModuleDynamic_DynArchive struct {
	// 稿件
	DynArchive *MdlDynArchive `protobuf:"bytes,2,opt,name=dyn_archive,json=dynArchive,proto3,oneof"`
}

type ModuleDynamic_DynPgc struct {
	// pgc
	DynPgc *MdlDynPGC `protobuf:"bytes,3,opt,name=dyn_pgc,json=dynPgc,proto3,oneof"`
}

type ModuleDynamic_DynCourSeason struct {
	// 付费课程-系列
	DynCourSeason *MdlDynCourSeason `protobuf:"bytes,4,opt,name=dyn_cour_season,json=dynCourSeason,proto3,oneof"`
}

type ModuleDynamic_DynCourBatch struct {
	// 付费课程-批次
	DynCourBatch *MdlDynCourBatch `protobuf:"bytes,5,opt,name=dyn_cour_batch,json=dynCourBatch,proto3,oneof"`
}

type ModuleDynamic_DynForward struct {
	// 转发卡
	DynForward *MdlDynForward `protobuf:"bytes,6,opt,name=dyn_forward,json=dynForward,proto3,oneof"`
}

type ModuleDynamic_DynDraw struct {
	// 图文
	DynDraw *MdlDynDraw `protobuf:"bytes,7,opt,name=dyn_draw,json=dynDraw,proto3,oneof"`
}

type ModuleDynamic_DynArticle struct {
	// 专栏
	DynArticle *MdlDynArticle `protobuf:"bytes,8,opt,name=dyn_article,json=dynArticle,proto3,oneof"`
}

type ModuleDynamic_DynMusic struct {
	// 音频
	DynMusic *MdlDynMusic `protobuf:"bytes,9,opt,name=dyn_music,json=dynMusic,proto3,oneof"`
}

type ModuleDynamic_DynCommon struct {
	// 通用卡方
	DynCommon *MdlDynCommon `protobuf:"bytes,10,opt,name=dyn_common,json=dynCommon,proto3,oneof"`
}

type ModuleDynamic_DynCommonLive struct {
	// 直播卡
	DynCommonLive *MdlDynLive `protobuf:"bytes,11,opt,name=dyn_common_live,json=dynCommonLive,proto3,oneof"`
}

type ModuleDynamic_DynMedialist struct {
	// 播单
	DynMedialist *MdlDynMedialist `protobuf:"bytes,12,opt,name=dyn_medialist,json=dynMedialist,proto3,oneof"`
}

type ModuleDynamic_DynApplet struct {
	// 小程序卡
	DynApplet *MdlDynApplet `protobuf:"bytes,13,opt,name=dyn_applet,json=dynApplet,proto3,oneof"`
}

type ModuleDynamic_DynSubscription struct {
	// 订阅卡
	DynSubscription *MdlDynSubscription `protobuf:"bytes,14,opt,name=dyn_subscription,json=dynSubscription,proto3,oneof"`
}

type ModuleDynamic_DynLiveRcmd struct {
	// 直播推荐卡
	DynLiveRcmd *MdlDynLiveRcmd `protobuf:"bytes,15,opt,name=dyn_live_rcmd,json=dynLiveRcmd,proto3,oneof"`
}

type ModuleDynamic_DynUgcSeason struct {
	// UGC合集
	DynUgcSeason *MdlDynUGCSeason `protobuf:"bytes,16,opt,name=dyn_ugc_season,json=dynUgcSeason,proto3,oneof"`
}

type ModuleDynamic_DynSubscriptionNew struct {
	// 订阅卡
	DynSubscriptionNew *MdlDynSubscriptionNew `protobuf:"bytes,17,opt,name=dyn_subscription_new,json=dynSubscriptionNew,proto3,oneof"`
}

func (*ModuleDynamic_DynArchive) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynPgc) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynCourSeason) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynCourBatch) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynForward) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynDraw) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynArticle) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynMusic) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynCommon) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynCommonLive) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynMedialist) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynApplet) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynSubscription) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynLiveRcmd) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynUgcSeason) isModuleDynamic_ModuleItem() {}

func (*ModuleDynamic_DynSubscriptionNew) isModuleDynamic_ModuleItem() {}

// 动态-小卡模块
type ModuleExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 详情
	Extend []*ModuleExtendItem `protobuf:"bytes,1,rep,name=extend,proto3" json:"extend,omitempty"`
	// 模块整体跳转uri
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"` // 废弃
}

func (x *ModuleExtend) Reset() {
	*x = ModuleExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleExtend) ProtoMessage() {}

func (x *ModuleExtend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleExtend.ProtoReflect.Descriptor instead.
func (*ModuleExtend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{168}
}

func (x *ModuleExtend) GetExtend() []*ModuleExtendItem {
	if x != nil {
		return x.Extend
	}
	return nil
}

func (x *ModuleExtend) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态-拓展小卡模块
type ModuleExtendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type DynExtendType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.DynExtendType" json:"type,omitempty"`
	// 卡片详情
	//
	// Types that are assignable to Extend:
	//
	//	*ModuleExtendItem_ExtInfoTopic
	//	*ModuleExtendItem_ExtInfoLbs
	//	*ModuleExtendItem_ExtInfoHot
	//	*ModuleExtendItem_ExtInfoGame
	//	*ModuleExtendItem_ExtInfoCommon
	//	*ModuleExtendItem_ExtInfoOgv
	Extend isModuleExtendItem_Extend `protobuf_oneof:"extend"`
}

func (x *ModuleExtendItem) Reset() {
	*x = ModuleExtendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleExtendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleExtendItem) ProtoMessage() {}

func (x *ModuleExtendItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleExtendItem.ProtoReflect.Descriptor instead.
func (*ModuleExtendItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{169}
}

func (x *ModuleExtendItem) GetType() DynExtendType {
	if x != nil {
		return x.Type
	}
	return DynExtendType_dyn_ext_type_none
}

func (m *ModuleExtendItem) GetExtend() isModuleExtendItem_Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoTopic() *ExtInfoTopic {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoTopic); ok {
		return x.ExtInfoTopic
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoLbs() *ExtInfoLBS {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoLbs); ok {
		return x.ExtInfoLbs
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoHot() *ExtInfoHot {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoHot); ok {
		return x.ExtInfoHot
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoGame() *ExtInfoGame {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoGame); ok {
		return x.ExtInfoGame
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoCommon() *ExtInfoCommon {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoCommon); ok {
		return x.ExtInfoCommon
	}
	return nil
}

func (x *ModuleExtendItem) GetExtInfoOgv() *ExtInfoOGV {
	if x, ok := x.GetExtend().(*ModuleExtendItem_ExtInfoOgv); ok {
		return x.ExtInfoOgv
	}
	return nil
}

type isModuleExtendItem_Extend interface {
	isModuleExtendItem_Extend()
}

type ModuleExtendItem_ExtInfoTopic struct {
	// 废弃
	ExtInfoTopic *ExtInfoTopic `protobuf:"bytes,2,opt,name=ext_info_topic,json=extInfoTopic,proto3,oneof"`
}

type ModuleExtendItem_ExtInfoLbs struct {
	// 废弃
	ExtInfoLbs *ExtInfoLBS `protobuf:"bytes,3,opt,name=ext_info_lbs,json=extInfoLbs,proto3,oneof"`
}

type ModuleExtendItem_ExtInfoHot struct {
	// 废弃
	ExtInfoHot *ExtInfoHot `protobuf:"bytes,4,opt,name=ext_info_hot,json=extInfoHot,proto3,oneof"`
}

type ModuleExtendItem_ExtInfoGame struct {
	// 废弃
	ExtInfoGame *ExtInfoGame `protobuf:"bytes,5,opt,name=ext_info_game,json=extInfoGame,proto3,oneof"`
}

type ModuleExtendItem_ExtInfoCommon struct {
	ExtInfoCommon *ExtInfoCommon `protobuf:"bytes,6,opt,name=ext_info_common,json=extInfoCommon,proto3,oneof"`
}

type ModuleExtendItem_ExtInfoOgv struct {
	ExtInfoOgv *ExtInfoOGV `protobuf:"bytes,7,opt,name=ext_info_ogv,json=extInfoOgv,proto3,oneof"`
}

func (*ModuleExtendItem_ExtInfoTopic) isModuleExtendItem_Extend() {}

func (*ModuleExtendItem_ExtInfoLbs) isModuleExtendItem_Extend() {}

func (*ModuleExtendItem_ExtInfoHot) isModuleExtendItem_Extend() {}

func (*ModuleExtendItem_ExtInfoGame) isModuleExtendItem_Extend() {}

func (*ModuleExtendItem_ExtInfoCommon) isModuleExtendItem_Extend() {}

func (*ModuleExtendItem_ExtInfoOgv) isModuleExtendItem_Extend() {}

// 动态-折叠模块
type ModuleFold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 折叠分类
	FoldType FoldType `protobuf:"varint,1,opt,name=fold_type,json=foldType,proto3,enum=bilibili.app.dynamic.v2.FoldType" json:"fold_type,omitempty"`
	// 折叠文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 被折叠的动态
	FoldIds string `protobuf:"bytes,3,opt,name=fold_ids,json=foldIds,proto3" json:"fold_ids,omitempty"`
	// 被折叠的用户信息
	FoldUsers []*UserInfo `protobuf:"bytes,4,rep,name=fold_users,json=foldUsers,proto3" json:"fold_users,omitempty"`
}

func (x *ModuleFold) Reset() {
	*x = ModuleFold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleFold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleFold) ProtoMessage() {}

func (x *ModuleFold) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleFold.ProtoReflect.Descriptor instead.
func (*ModuleFold) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{170}
}

func (x *ModuleFold) GetFoldType() FoldType {
	if x != nil {
		return x.FoldType
	}
	return FoldType_FoldTypeZore
}

func (x *ModuleFold) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ModuleFold) GetFoldIds() string {
	if x != nil {
		return x.FoldIds
	}
	return ""
}

func (x *ModuleFold) GetFoldUsers() []*UserInfo {
	if x != nil {
		return x.FoldUsers
	}
	return nil
}

// 外露交互模块
type ModuleInteraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 外露交互模块
	InteractionItem []*InteractionItem `protobuf:"bytes,1,rep,name=interaction_item,json=interactionItem,proto3" json:"interaction_item,omitempty"`
}

func (x *ModuleInteraction) Reset() {
	*x = ModuleInteraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInteraction) ProtoMessage() {}

func (x *ModuleInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInteraction.ProtoReflect.Descriptor instead.
func (*ModuleInteraction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{171}
}

func (x *ModuleInteraction) GetInteractionItem() []*InteractionItem {
	if x != nil {
		return x.InteractionItem
	}
	return nil
}

// 获取物料失败模块
type ModuleItemNull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ModuleItemNull) Reset() {
	*x = ModuleItemNull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleItemNull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleItemNull) ProtoMessage() {}

func (x *ModuleItemNull) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleItemNull.ProtoReflect.Descriptor instead.
func (*ModuleItemNull) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{172}
}

func (x *ModuleItemNull) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModuleItemNull) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 动态-点赞用户模块
type ModuleLikeUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 点赞用户
	LikeUsers []*LikeUser `protobuf:"bytes,1,rep,name=like_users,json=likeUsers,proto3" json:"like_users,omitempty"`
	// 文案
	DisplayText string `protobuf:"bytes,2,opt,name=display_text,json=displayText,proto3" json:"display_text,omitempty"`
}

func (x *ModuleLikeUser) Reset() {
	*x = ModuleLikeUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleLikeUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleLikeUser) ProtoMessage() {}

func (x *ModuleLikeUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleLikeUser.ProtoReflect.Descriptor instead.
func (*ModuleLikeUser) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{173}
}

func (x *ModuleLikeUser) GetLikeUsers() []*LikeUser {
	if x != nil {
		return x.LikeUsers
	}
	return nil
}

func (x *ModuleLikeUser) GetDisplayText() string {
	if x != nil {
		return x.DisplayText
	}
	return ""
}

// 推荐模块
type ModuleRcmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户头像
	Author *RcmdAuthor `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 推荐卡片列表
	Items []*RcmdItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// 透传到客户端的埋点字段
	ServerInfo string `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
}

func (x *ModuleRcmd) Reset() {
	*x = ModuleRcmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleRcmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleRcmd) ProtoMessage() {}

func (x *ModuleRcmd) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleRcmd.ProtoReflect.Descriptor instead.
func (*ModuleRcmd) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{174}
}

func (x *ModuleRcmd) GetAuthor() *RcmdAuthor {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ModuleRcmd) GetItems() []*RcmdItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ModuleRcmd) GetServerInfo() string {
	if x != nil {
		return x.ServerInfo
	}
	return ""
}

// 相关推荐模块
type ModuleRecommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块标题
	ModuleTitle string `protobuf:"bytes,1,opt,name=module_title,json=moduleTitle,proto3" json:"module_title,omitempty"`
	// 图片
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// 标签
	Tag string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 序列化的广告信息
	Ad []*anypb.Any `protobuf:"bytes,6,rep,name=ad,proto3" json:"ad,omitempty"`
}

func (x *ModuleRecommend) Reset() {
	*x = ModuleRecommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleRecommend) ProtoMessage() {}

func (x *ModuleRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleRecommend.ProtoReflect.Descriptor instead.
func (*ModuleRecommend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{175}
}

func (x *ModuleRecommend) GetModuleTitle() string {
	if x != nil {
		return x.ModuleTitle
	}
	return ""
}

func (x *ModuleRecommend) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ModuleRecommend) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ModuleRecommend) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleRecommend) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ModuleRecommend) GetAd() []*anypb.Any {
	if x != nil {
		return x.Ad
	}
	return nil
}

// 分享模块
type ModuleShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 分享组件列表
	ShareChannels []*ShareChannel `protobuf:"bytes,2,rep,name=share_channels,json=shareChannels,proto3" json:"share_channels,omitempty"`
	// share_origin
	ShareOrigin string `protobuf:"bytes,3,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	// 业务id
	Oid string `protobuf:"bytes,4,opt,name=oid,proto3" json:"oid,omitempty"`
	// sid
	Sid string `protobuf:"bytes,5,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ModuleShareInfo) Reset() {
	*x = ModuleShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleShareInfo) ProtoMessage() {}

func (x *ModuleShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleShareInfo.ProtoReflect.Descriptor instead.
func (*ModuleShareInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{176}
}

func (x *ModuleShareInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleShareInfo) GetShareChannels() []*ShareChannel {
	if x != nil {
		return x.ShareChannels
	}
	return nil
}

func (x *ModuleShareInfo) GetShareOrigin() string {
	if x != nil {
		return x.ShareOrigin
	}
	return ""
}

func (x *ModuleShareInfo) GetOid() string {
	if x != nil {
		return x.Oid
	}
	return ""
}

func (x *ModuleShareInfo) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

// 动态-计数模块
type ModuleStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 转发数
	Repost int64 `protobuf:"varint,1,opt,name=repost,proto3" json:"repost,omitempty"`
	// 点赞数
	Like int64 `protobuf:"varint,2,opt,name=like,proto3" json:"like,omitempty"`
	// 评论数
	Reply int64 `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`
	// 点赞拓展信息
	LikeInfo *LikeInfo `protobuf:"bytes,4,opt,name=like_info,json=likeInfo,proto3" json:"like_info,omitempty"`
	// 禁评
	NoComment bool `protobuf:"varint,5,opt,name=no_comment,json=noComment,proto3" json:"no_comment,omitempty"`
	// 禁转
	NoForward bool `protobuf:"varint,6,opt,name=no_forward,json=noForward,proto3" json:"no_forward,omitempty"`
	// 点击评论跳转链接
	ReplyUrl string `protobuf:"bytes,7,opt,name=reply_url,json=replyUrl,proto3" json:"reply_url,omitempty"`
	// 禁评文案
	NoCommentText string `protobuf:"bytes,8,opt,name=no_comment_text,json=noCommentText,proto3" json:"no_comment_text,omitempty"`
	// 禁转文案
	NoForwardText string `protobuf:"bytes,9,opt,name=no_forward_text,json=noForwardText,proto3" json:"no_forward_text,omitempty"`
}

func (x *ModuleStat) Reset() {
	*x = ModuleStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleStat) ProtoMessage() {}

func (x *ModuleStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleStat.ProtoReflect.Descriptor instead.
func (*ModuleStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{177}
}

func (x *ModuleStat) GetRepost() int64 {
	if x != nil {
		return x.Repost
	}
	return 0
}

func (x *ModuleStat) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *ModuleStat) GetReply() int64 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *ModuleStat) GetLikeInfo() *LikeInfo {
	if x != nil {
		return x.LikeInfo
	}
	return nil
}

func (x *ModuleStat) GetNoComment() bool {
	if x != nil {
		return x.NoComment
	}
	return false
}

func (x *ModuleStat) GetNoForward() bool {
	if x != nil {
		return x.NoForward
	}
	return false
}

func (x *ModuleStat) GetReplyUrl() string {
	if x != nil {
		return x.ReplyUrl
	}
	return ""
}

func (x *ModuleStat) GetNoCommentText() string {
	if x != nil {
		return x.NoCommentText
	}
	return ""
}

func (x *ModuleStat) GetNoForwardText() string {
	if x != nil {
		return x.NoForwardText
	}
	return ""
}

type ModuleStory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*StoryItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	ShowPublishEntrance bool `protobuf:"varint,3,opt,name=show_publish_entrance,json=showPublishEntrance,proto3" json:"show_publish_entrance,omitempty"`
	FoldState int64 `protobuf:"varint,4,opt,name=fold_state,json=foldState,proto3" json:"fold_state,omitempty"`
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	PublishText string `protobuf:"bytes,7,opt,name=publish_text,json=publishText,proto3" json:"publish_text,omitempty"`
}

func (x *ModuleStory) Reset() {
	*x = ModuleStory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleStory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleStory) ProtoMessage() {}

func (x *ModuleStory) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleStory.ProtoReflect.Descriptor instead.
func (*ModuleStory) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{178}
}

func (x *ModuleStory) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleStory) GetItems() []*StoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ModuleStory) GetShowPublishEntrance() bool {
	if x != nil {
		return x.ShowPublishEntrance
	}
	return false
}

func (x *ModuleStory) GetFoldState() int64 {
	if x != nil {
		return x.FoldState
	}
	return 0
}

func (x *ModuleStory) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ModuleStory) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ModuleStory) GetPublishText() string {
	if x != nil {
		return x.PublishText
	}
	return ""
}

type ModuleTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	RightBtn *IconButton `protobuf:"bytes,2,opt,name=right_btn,json=rightBtn,proto3" json:"right_btn,omitempty"`
}

func (x *ModuleTitle) Reset() {
	*x = ModuleTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTitle) ProtoMessage() {}

func (x *ModuleTitle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTitle.ProtoReflect.Descriptor instead.
func (*ModuleTitle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{179}
}

func (x *ModuleTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModuleTitle) GetRightBtn() *IconButton {
	if x != nil {
		return x.RightBtn
	}
	return nil
}

// 顶部模块
type ModuleTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 三点模块
	TpList []*ThreePointItem `protobuf:"bytes,1,rep,name=tp_list,json=tpList,proto3" json:"tp_list,omitempty"`
}

func (x *ModuleTop) Reset() {
	*x = ModuleTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTop) ProtoMessage() {}

func (x *ModuleTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTop.ProtoReflect.Descriptor instead.
func (*ModuleTop) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{180}
}

func (x *ModuleTop) GetTpList() []*ThreePointItem {
	if x != nil {
		return x.TpList
	}
	return nil
}

type ModuleTopTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagName string `protobuf:"bytes,1,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
}

func (x *ModuleTopTag) Reset() {
	*x = ModuleTopTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTopTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTopTag) ProtoMessage() {}

func (x *ModuleTopTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTopTag.ProtoReflect.Descriptor instead.
func (*ModuleTopTag) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{181}
}

func (x *ModuleTopTag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type ModuleTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ModuleTopic) Reset() {
	*x = ModuleTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTopic) ProtoMessage() {}

func (x *ModuleTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTopic.ProtoReflect.Descriptor instead.
func (*ModuleTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{182}
}

func (x *ModuleTopic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleTopic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleTopic) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ModuleTopicBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *TopicItem `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *ModuleTopicBrief) Reset() {
	*x = ModuleTopicBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTopicBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTopicBrief) ProtoMessage() {}

func (x *ModuleTopicBrief) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTopicBrief.ProtoReflect.Descriptor instead.
func (*ModuleTopicBrief) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{183}
}

func (x *ModuleTopicBrief) GetTopic() *TopicItem {
	if x != nil {
		return x.Topic
	}
	return nil
}

type ModuleTopicDetailsExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentGuide string `protobuf:"bytes,1,opt,name=comment_guide,json=commentGuide,proto3" json:"comment_guide,omitempty"`
}

func (x *ModuleTopicDetailsExt) Reset() {
	*x = ModuleTopicDetailsExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleTopicDetailsExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleTopicDetailsExt) ProtoMessage() {}

func (x *ModuleTopicDetailsExt) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleTopicDetailsExt.ProtoReflect.Descriptor instead.
func (*ModuleTopicDetailsExt) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{184}
}

func (x *ModuleTopicDetailsExt) GetCommentGuide() string {
	if x != nil {
		return x.CommentGuide
	}
	return ""
}

// 认证名牌
type Nameplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// nid
	Nid int64 `protobuf:"varint,1,opt,name=nid,proto3" json:"nid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片地址
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 小图地址
	ImageSmall string `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	// 等级
	Level string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	// 获取条件
	Condition string `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *Nameplate) Reset() {
	*x = Nameplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nameplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nameplate) ProtoMessage() {}

func (x *Nameplate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nameplate.ProtoReflect.Descriptor instead.
func (*Nameplate) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{185}
}

func (x *Nameplate) GetNid() int64 {
	if x != nil {
		return x.Nid
	}
	return 0
}

func (x *Nameplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Nameplate) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Nameplate) GetImageSmall() string {
	if x != nil {
		return x.ImageSmall
	}
	return ""
}

func (x *Nameplate) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Nameplate) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

// 最新ep
type NewEP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 最新话epid
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 更新至XX话
	IndexShow string `protobuf:"bytes,2,opt,name=index_show,json=indexShow,proto3" json:"index_show,omitempty"`
	// 更新剧集的封面
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *NewEP) Reset() {
	*x = NewEP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEP) ProtoMessage() {}

func (x *NewEP) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEP.ProtoReflect.Descriptor instead.
func (*NewEP) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{186}
}

func (x *NewEP) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewEP) GetIndexShow() string {
	if x != nil {
		return x.IndexShow
	}
	return ""
}

func (x *NewEP) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 空响应
type NoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReply) Reset() {
	*x = NoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReply) ProtoMessage() {}

func (x *NoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReply.ProtoReflect.Descriptor instead.
func (*NoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{187}
}

// 空请求
type NoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReq) Reset() {
	*x = NoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReq) ProtoMessage() {}

func (x *NoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReq.ProtoReflect.Descriptor instead.
func (*NoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{188}
}

type OfficialAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Relation *Relation `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	DescText1 string `protobuf:"bytes,5,opt,name=desc_text1,json=descText1,proto3" json:"desc_text1,omitempty"`
	DescText2 string `protobuf:"bytes,6,opt,name=desc_text2,json=descText2,proto3" json:"desc_text2,omitempty"`
}

func (x *OfficialAccountInfo) Reset() {
	*x = OfficialAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialAccountInfo) ProtoMessage() {}

func (x *OfficialAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialAccountInfo.ProtoReflect.Descriptor instead.
func (*OfficialAccountInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{189}
}

func (x *OfficialAccountInfo) GetAuthor() *UserInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *OfficialAccountInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *OfficialAccountInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OfficialAccountInfo) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *OfficialAccountInfo) GetDescText1() string {
	if x != nil {
		return x.DescText1
	}
	return ""
}

func (x *OfficialAccountInfo) GetDescText2() string {
	if x != nil {
		return x.DescText2
	}
	return ""
}

type OfficialAccountsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*OfficialAccountInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *OfficialAccountsReply) Reset() {
	*x = OfficialAccountsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialAccountsReply) ProtoMessage() {}

func (x *OfficialAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialAccountsReply.ProtoReflect.Descriptor instead.
func (*OfficialAccountsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{190}
}

func (x *OfficialAccountsReply) GetItems() []*OfficialAccountInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OfficialAccountsReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *OfficialAccountsReply) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type OfficialAccountsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *OfficialAccountsReq) Reset() {
	*x = OfficialAccountsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialAccountsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialAccountsReq) ProtoMessage() {}

func (x *OfficialAccountsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialAccountsReq.ProtoReflect.Descriptor instead.
func (*OfficialAccountsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{191}
}

func (x *OfficialAccountsReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *OfficialAccountsReq) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *OfficialAccountsReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type OfficialDynamicsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*OfficialItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *OfficialDynamicsReply) Reset() {
	*x = OfficialDynamicsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialDynamicsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialDynamicsReply) ProtoMessage() {}

func (x *OfficialDynamicsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialDynamicsReply.ProtoReflect.Descriptor instead.
func (*OfficialDynamicsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{192}
}

func (x *OfficialDynamicsReply) GetItems() []*OfficialItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OfficialDynamicsReply) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OfficialDynamicsReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *OfficialDynamicsReply) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type OfficialDynamicsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *OfficialDynamicsReq) Reset() {
	*x = OfficialDynamicsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialDynamicsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialDynamicsReq) ProtoMessage() {}

func (x *OfficialDynamicsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialDynamicsReq.ProtoReflect.Descriptor instead.
func (*OfficialDynamicsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{193}
}

func (x *OfficialDynamicsReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *OfficialDynamicsReq) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

func (x *OfficialDynamicsReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type OfficialItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to RcmdItem:
	//
	//	*OfficialItem_RcmdArchive
	//	*OfficialItem_RcmdDynamic
	RcmdItem isOfficialItem_RcmdItem `protobuf_oneof:"rcmd_item"`
}

func (x *OfficialItem) Reset() {
	*x = OfficialItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialItem) ProtoMessage() {}

func (x *OfficialItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialItem.ProtoReflect.Descriptor instead.
func (*OfficialItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{194}
}

func (x *OfficialItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (m *OfficialItem) GetRcmdItem() isOfficialItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (x *OfficialItem) GetRcmdArchive() *OfficialRcmdArchive {
	if x, ok := x.GetRcmdItem().(*OfficialItem_RcmdArchive); ok {
		return x.RcmdArchive
	}
	return nil
}

func (x *OfficialItem) GetRcmdDynamic() *OfficialRcmdDynamic {
	if x, ok := x.GetRcmdItem().(*OfficialItem_RcmdDynamic); ok {
		return x.RcmdDynamic
	}
	return nil
}

type isOfficialItem_RcmdItem interface {
	isOfficialItem_RcmdItem()
}

type OfficialItem_RcmdArchive struct {
	RcmdArchive *OfficialRcmdArchive `protobuf:"bytes,2,opt,name=rcmd_archive,json=rcmdArchive,proto3,oneof"`
}

type OfficialItem_RcmdDynamic struct {
	RcmdDynamic *OfficialRcmdDynamic `protobuf:"bytes,3,opt,name=rcmd_dynamic,json=rcmdDynamic,proto3,oneof"`
}

func (*OfficialItem_RcmdArchive) isOfficialItem_RcmdItem() {}

func (*OfficialItem_RcmdDynamic) isOfficialItem_RcmdItem() {}

type OfficialRcmdArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	CoverRightText string `protobuf:"bytes,3,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	DescIcon1 int32 `protobuf:"varint,4,opt,name=desc_icon1,json=descIcon1,proto3" json:"desc_icon1,omitempty"`
	DescText1 string `protobuf:"bytes,5,opt,name=desc_text1,json=descText1,proto3" json:"desc_text1,omitempty"`
	DescIcon2 int32 `protobuf:"varint,6,opt,name=desc_icon2,json=descIcon2,proto3" json:"desc_icon2,omitempty"`
	DescText2 string `protobuf:"bytes,7,opt,name=desc_text2,json=descText2,proto3" json:"desc_text2,omitempty"`
	Reason string `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	ShowThreePoint bool `protobuf:"varint,9,opt,name=show_three_point,json=showThreePoint,proto3" json:"show_three_point,omitempty"`
	Uri string `protobuf:"bytes,10,opt,name=uri,proto3" json:"uri,omitempty"`
	Aid int64 `protobuf:"varint,11,opt,name=aid,proto3" json:"aid,omitempty"`
	Mid int64 `protobuf:"varint,12,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	DynamicId int64 `protobuf:"varint,14,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	Cid int64 `protobuf:"varint,15,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *OfficialRcmdArchive) Reset() {
	*x = OfficialRcmdArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialRcmdArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialRcmdArchive) ProtoMessage() {}

func (x *OfficialRcmdArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialRcmdArchive.ProtoReflect.Descriptor instead.
func (*OfficialRcmdArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{195}
}

func (x *OfficialRcmdArchive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfficialRcmdArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *OfficialRcmdArchive) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

func (x *OfficialRcmdArchive) GetDescIcon1() int32 {
	if x != nil {
		return x.DescIcon1
	}
	return 0
}

func (x *OfficialRcmdArchive) GetDescText1() string {
	if x != nil {
		return x.DescText1
	}
	return ""
}

func (x *OfficialRcmdArchive) GetDescIcon2() int32 {
	if x != nil {
		return x.DescIcon2
	}
	return 0
}

func (x *OfficialRcmdArchive) GetDescText2() string {
	if x != nil {
		return x.DescText2
	}
	return ""
}

func (x *OfficialRcmdArchive) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OfficialRcmdArchive) GetShowThreePoint() bool {
	if x != nil {
		return x.ShowThreePoint
	}
	return false
}

func (x *OfficialRcmdArchive) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OfficialRcmdArchive) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *OfficialRcmdArchive) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *OfficialRcmdArchive) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfficialRcmdArchive) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *OfficialRcmdArchive) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type OfficialRcmdDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	CoverRightTopText string `protobuf:"bytes,3,opt,name=cover_right_top_text,json=coverRightTopText,proto3" json:"cover_right_top_text,omitempty"`
	DescIcon1 int32 `protobuf:"varint,4,opt,name=desc_icon1,json=descIcon1,proto3" json:"desc_icon1,omitempty"`
	DescText1 string `protobuf:"bytes,5,opt,name=desc_text1,json=descText1,proto3" json:"desc_text1,omitempty"`
	DescIcon2 int32 `protobuf:"varint,6,opt,name=desc_icon2,json=descIcon2,proto3" json:"desc_icon2,omitempty"`
	DescText2 string `protobuf:"bytes,7,opt,name=desc_text2,json=descText2,proto3" json:"desc_text2,omitempty"`
	Reason string `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	Uri string `protobuf:"bytes,9,opt,name=uri,proto3" json:"uri,omitempty"`
	DynamicId int64 `protobuf:"varint,10,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	Mid int64 `protobuf:"varint,11,opt,name=mid,proto3" json:"mid,omitempty"`
	UserName string `protobuf:"bytes,12,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Rid int64 `protobuf:"varint,13,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *OfficialRcmdDynamic) Reset() {
	*x = OfficialRcmdDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialRcmdDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialRcmdDynamic) ProtoMessage() {}

func (x *OfficialRcmdDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialRcmdDynamic.ProtoReflect.Descriptor instead.
func (*OfficialRcmdDynamic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{196}
}

func (x *OfficialRcmdDynamic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetCoverRightTopText() string {
	if x != nil {
		return x.CoverRightTopText
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetDescIcon1() int32 {
	if x != nil {
		return x.DescIcon1
	}
	return 0
}

func (x *OfficialRcmdDynamic) GetDescText1() string {
	if x != nil {
		return x.DescText1
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetDescIcon2() int32 {
	if x != nil {
		return x.DescIcon2
	}
	return 0
}

func (x *OfficialRcmdDynamic) GetDescText2() string {
	if x != nil {
		return x.DescText2
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *OfficialRcmdDynamic) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *OfficialRcmdDynamic) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OfficialRcmdDynamic) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

// 认证信息
type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 127:未认证 0:个人 1:机构
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 认证描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 是否关注
	IsAtten int32 `protobuf:"varint,3,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{197}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfficialVerify) GetIsAtten() int32 {
	if x != nil {
		return x.IsAtten
	}
	return 0
}

// PGC单季信息
type PGCSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否完结
	IsFinish int32 `protobuf:"varint,1,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 类型
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PGCSeason) Reset() {
	*x = PGCSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGCSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGCSeason) ProtoMessage() {}

func (x *PGCSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGCSeason.ProtoReflect.Descriptor instead.
func (*PGCSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{198}
}

func (x *PGCSeason) GetIsFinish() int32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *PGCSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PGCSeason) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 秒开通用参数
type PlayurlParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 清晰度
	Qn int32 `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int32 `protobuf:"varint,2,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型
	Fnval int32 `protobuf:"varint,3,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制使用域名
	ForceHost int32 `protobuf:"varint,4,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4k
	Fourk int32 `protobuf:"varint,5,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *PlayurlParam) Reset() {
	*x = PlayurlParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayurlParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayurlParam) ProtoMessage() {}

func (x *PlayurlParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayurlParam.ProtoReflect.Descriptor instead.
func (*PlayurlParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{199}
}

func (x *PlayurlParam) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayurlParam) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayurlParam) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayurlParam) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayurlParam) GetFourk() int32 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

type Popup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Popup) Reset() {
	*x = Popup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Popup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Popup) ProtoMessage() {}

func (x *Popup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Popup.ProtoReflect.Descriptor instead.
func (*Popup) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{200}
}

func (x *Popup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Popup) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Popup) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RcmdArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 视频封面展示项 1
	CoverLeftIcon_1 CoverIcon `protobuf:"varint,3,opt,name=cover_left_icon_1,json=coverLeftIcon1,proto3,enum=bilibili.app.dynamic.v2.CoverIcon" json:"cover_left_icon_1,omitempty"`
	// 视频封面展示项 1
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	// 秒开地址
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 是否PGC
	IsPgc bool `protobuf:"varint,6,opt,name=is_pgc,json=isPgc,proto3" json:"is_pgc,omitempty"`
	// aid
	Aid int64 `protobuf:"varint,7,opt,name=aid,proto3" json:"aid,omitempty"`
	Badge *IconBadge `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`
	CoverLeftIcon2 int32 `protobuf:"varint,9,opt,name=cover_left_icon2,json=coverLeftIcon2,proto3" json:"cover_left_icon2,omitempty"`
	CoverLeftText2 string `protobuf:"bytes,10,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	CoverLeftIcon3 int32 `protobuf:"varint,11,opt,name=cover_left_icon3,json=coverLeftIcon3,proto3" json:"cover_left_icon3,omitempty"`
	CoverLeftText3 string `protobuf:"bytes,12,opt,name=cover_left_text3,json=coverLeftText3,proto3" json:"cover_left_text3,omitempty"`
}

func (x *RcmdArchive) Reset() {
	*x = RcmdArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdArchive) ProtoMessage() {}

func (x *RcmdArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdArchive.ProtoReflect.Descriptor instead.
func (*RcmdArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{201}
}

func (x *RcmdArchive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RcmdArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RcmdArchive) GetCoverLeftIcon_1() CoverIcon {
	if x != nil {
		return x.CoverLeftIcon_1
	}
	return CoverIcon_cover_icon_none
}

func (x *RcmdArchive) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *RcmdArchive) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RcmdArchive) GetIsPgc() bool {
	if x != nil {
		return x.IsPgc
	}
	return false
}

func (x *RcmdArchive) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *RcmdArchive) GetBadge() *IconBadge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *RcmdArchive) GetCoverLeftIcon2() int32 {
	if x != nil {
		return x.CoverLeftIcon2
	}
	return 0
}

func (x *RcmdArchive) GetCoverLeftText2() string {
	if x != nil {
		return x.CoverLeftText2
	}
	return ""
}

func (x *RcmdArchive) GetCoverLeftIcon3() int32 {
	if x != nil {
		return x.CoverLeftIcon3
	}
	return 0
}

func (x *RcmdArchive) GetCoverLeftText3() string {
	if x != nil {
		return x.CoverLeftText3
	}
	return ""
}

// 推荐UP主用户模块
type RcmdAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户详情
	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// 描述：粉丝数、推荐理由
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 关注状态
	Relation *Relation `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *RcmdAuthor) Reset() {
	*x = RcmdAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdAuthor) ProtoMessage() {}

func (x *RcmdAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdAuthor.ProtoReflect.Descriptor instead.
func (*RcmdAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{202}
}

func (x *RcmdAuthor) GetAuthor() *UserInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *RcmdAuthor) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RcmdAuthor) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

// 推荐卡片列表
type RcmdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	Type RcmdType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.RcmdType" json:"type,omitempty"`
	// 卡片列表
	//
	// Types that are assignable to RcmdItem:
	//
	//	*RcmdItem_RcmdArchive
	RcmdItem isRcmdItem_RcmdItem `protobuf_oneof:"rcmd_item"`
}

func (x *RcmdItem) Reset() {
	*x = RcmdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdItem) ProtoMessage() {}

func (x *RcmdItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdItem.ProtoReflect.Descriptor instead.
func (*RcmdItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{203}
}

func (x *RcmdItem) GetType() RcmdType {
	if x != nil {
		return x.Type
	}
	return RcmdType_rcmd_archive
}

func (m *RcmdItem) GetRcmdItem() isRcmdItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (x *RcmdItem) GetRcmdArchive() *RcmdArchive {
	if x, ok := x.GetRcmdItem().(*RcmdItem_RcmdArchive); ok {
		return x.RcmdArchive
	}
	return nil
}

type isRcmdItem_RcmdItem interface {
	isRcmdItem_RcmdItem()
}

type RcmdItem_RcmdArchive struct {
	RcmdArchive *RcmdArchive `protobuf:"bytes,2,opt,name=rcmd_archive,json=rcmdArchive,proto3,oneof"`
}

func (*RcmdItem_RcmdArchive) isRcmdItem_RcmdItem() {}

// 分区聚类推荐选项
type RcmdOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频是否展示标题
	ShowTitle bool `protobuf:"varint,1,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
}

func (x *RcmdOption) Reset() {
	*x = RcmdOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdOption) ProtoMessage() {}

func (x *RcmdOption) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdOption.ProtoReflect.Descriptor instead.
func (*RcmdOption) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{204}
}

func (x *RcmdOption) GetShowTitle() bool {
	if x != nil {
		return x.ShowTitle
	}
	return false
}

type RcmdTopButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *RcmdTopButton) Reset() {
	*x = RcmdTopButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdTopButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdTopButton) ProtoMessage() {}

func (x *RcmdTopButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdTopButton.ProtoReflect.Descriptor instead.
func (*RcmdTopButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{205}
}

func (x *RcmdTopButton) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RcmdTopButton) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 推荐up主入参
type RcmdUPsParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DislikeTs int64 `protobuf:"varint,1,opt,name=dislike_ts,json=dislikeTs,proto3" json:"dislike_ts,omitempty"`
}

func (x *RcmdUPsParam) Reset() {
	*x = RcmdUPsParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdUPsParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdUPsParam) ProtoMessage() {}

func (x *RcmdUPsParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdUPsParam.ProtoReflect.Descriptor instead.
func (*RcmdUPsParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{206}
}

func (x *RcmdUPsParam) GetDislikeTs() int64 {
	if x != nil {
		return x.DislikeTs
	}
	return 0
}

// 关注关系
type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关注状态
	Status RelationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.RelationStatus" json:"status,omitempty"`
	// 关注
	IsFollow int32 `protobuf:"varint,2,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	// 被关注
	IsFollowed int32 `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	// 文案
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{207}
}

func (x *Relation) GetStatus() RelationStatus {
	if x != nil {
		return x.Status
	}
	return RelationStatus_relation_status_none
}

func (x *Relation) GetIsFollow() int32 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *Relation) GetIsFollowed() int32 {
	if x != nil {
		return x.IsFollowed
	}
	return 0
}

func (x *Relation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 转发列表-请求
type RepostListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态ID
	DynamicId string `protobuf:"bytes,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	// 偏移,使用上一页回包中的offset字段；第一页不传。
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// 来源
	From string `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	// 评论类型
	RepostType RepostType `protobuf:"varint,6,opt,name=repost_type,json=repostType,proto3,enum=bilibili.app.dynamic.v2.RepostType" json:"repost_type,omitempty"`
}

func (x *RepostListReq) Reset() {
	*x = RepostListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepostListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepostListReq) ProtoMessage() {}

func (x *RepostListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepostListReq.ProtoReflect.Descriptor instead.
func (*RepostListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{208}
}

func (x *RepostListReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *RepostListReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *RepostListReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RepostListReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *RepostListReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RepostListReq) GetRepostType() RepostType {
	if x != nil {
		return x.RepostType
	}
	return RepostType_repost_hot
}

// 转发列表-响应
type RepostListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 列表
	List []*DynamicItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 转发总数
	TotalCount int64 `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 评论类型
	RepostType RepostType `protobuf:"varint,5,opt,name=repost_type,json=repostType,proto3,enum=bilibili.app.dynamic.v2.RepostType" json:"repost_type,omitempty"`
}

func (x *RepostListRsp) Reset() {
	*x = RepostListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepostListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepostListRsp) ProtoMessage() {}

func (x *RepostListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepostListRsp.ProtoReflect.Descriptor instead.
func (*RepostListRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{209}
}

func (x *RepostListRsp) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RepostListRsp) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *RepostListRsp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *RepostListRsp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *RepostListRsp) GetRepostType() RepostType {
	if x != nil {
		return x.RepostType
	}
	return RepostType_repost_hot
}

// 新版动态转发点赞列表-请求
type ReactionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态ID
	DynamicId int64 `protobuf:"varint,1,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	// 动态类型
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务方资源id
	Rid int64 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	// 偏移,使用上一页回包中的offset字段；第一页不传。
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ReactionListReq) Reset() {
	*x = ReactionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionListReq) ProtoMessage() {}

func (x *ReactionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionListReq.ProtoReflect.Descriptor instead.
func (*ReactionListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{210}
}

func (x *ReactionListReq) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *ReactionListReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *ReactionListReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *ReactionListReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

// 新版动态转发点赞列表-响应
type ReactionListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 列表
	List []*ReactionListItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// 偏移
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// 是否还有更多
	HasMore bool `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *ReactionListReply) Reset() {
	*x = ReactionListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionListReply) ProtoMessage() {}

func (x *ReactionListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionListReply.ProtoReflect.Descriptor instead.
func (*ReactionListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{211}
}

func (x *ReactionListReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReactionListReply) GetList() []*ReactionListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReactionListReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *ReactionListReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type ReactionListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户信息
	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// 关注关系
	Relation *Relation `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	// 显示文字
	ActText string `protobuf:"bytes,3,opt,name=act_text,json=actText,proto3" json:"act_text,omitempty"`
	RcmdReason string `protobuf:"bytes,4,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
}

func (x *ReactionListItem) Reset() {
	*x = ReactionListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionListItem) ProtoMessage() {}

func (x *ReactionListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionListItem.ProtoReflect.Descriptor instead.
func (*ReactionListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{212}
}

func (x *ReactionListItem) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReactionListItem) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *ReactionListItem) GetActText() string {
	if x != nil {
		return x.ActText
	}
	return ""
}

func (x *ReactionListItem) GetRcmdReason() string {
	if x != nil {
		return x.RcmdReason
	}
	return ""
}

type SchoolRecommendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CampusInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SchoolRecommendReply) Reset() {
	*x = SchoolRecommendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolRecommendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRecommendReply) ProtoMessage() {}

func (x *SchoolRecommendReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRecommendReply.ProtoReflect.Descriptor instead.
func (*SchoolRecommendReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{213}
}

func (x *SchoolRecommendReply) GetItems() []*CampusInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type SchoolRecommendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float32 `protobuf:"fixed32,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float32 `protobuf:"fixed32,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *SchoolRecommendReq) Reset() {
	*x = SchoolRecommendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolRecommendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolRecommendReq) ProtoMessage() {}

func (x *SchoolRecommendReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolRecommendReq.ProtoReflect.Descriptor instead.
func (*SchoolRecommendReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{214}
}

func (x *SchoolRecommendReq) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *SchoolRecommendReq) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type SchoolSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CampusInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Toast *SearchToast `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *SchoolSearchReply) Reset() {
	*x = SchoolSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolSearchReply) ProtoMessage() {}

func (x *SchoolSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolSearchReply.ProtoReflect.Descriptor instead.
func (*SchoolSearchReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{215}
}

func (x *SchoolSearchReply) GetItems() []*CampusInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SchoolSearchReply) GetToast() *SearchToast {
	if x != nil {
		return x.Toast
	}
	return nil
}

type SchoolSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SchoolSearchReq) Reset() {
	*x = SchoolSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolSearchReq) ProtoMessage() {}

func (x *SchoolSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolSearchReq.ProtoReflect.Descriptor instead.
func (*SchoolSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{216}
}

func (x *SchoolSearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	MoreButton *SearchTopicButton `protobuf:"bytes,2,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	Channels []*ChannelInfo `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *SearchChannel) Reset() {
	*x = SearchChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchChannel) ProtoMessage() {}

func (x *SearchChannel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchChannel.ProtoReflect.Descriptor instead.
func (*SearchChannel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{217}
}

func (x *SearchChannel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchChannel) GetMoreButton() *SearchTopicButton {
	if x != nil {
		return x.MoreButton
	}
	return nil
}

func (x *SearchChannel) GetChannels() []*ChannelInfo {
	if x != nil {
		return x.Channels
	}
	return nil
}

type SearchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	List []*DynamicItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	TrackId string `protobuf:"bytes,3,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Total int64 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	HasMore bool `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SearchInfo) Reset() {
	*x = SearchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInfo) ProtoMessage() {}

func (x *SearchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInfo.ProtoReflect.Descriptor instead.
func (*SearchInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{218}
}

func (x *SearchInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchInfo) GetList() []*DynamicItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SearchInfo) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *SearchInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchInfo) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SearchToast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DescText1 string `protobuf:"bytes,1,opt,name=desc_text1,json=descText1,proto3" json:"desc_text1,omitempty"`
	DescText2 string `protobuf:"bytes,2,opt,name=desc_text2,json=descText2,proto3" json:"desc_text2,omitempty"`
}

func (x *SearchToast) Reset() {
	*x = SearchToast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchToast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchToast) ProtoMessage() {}

func (x *SearchToast) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchToast.ProtoReflect.Descriptor instead.
func (*SearchToast) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{219}
}

func (x *SearchToast) GetDescText1() string {
	if x != nil {
		return x.DescText1
	}
	return ""
}

func (x *SearchToast) GetDescText2() string {
	if x != nil {
		return x.DescText2
	}
	return ""
}

type SearchTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	MoreButton *SearchTopicButton `protobuf:"bytes,2,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	Items []*SearchTopicItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SearchTopic) Reset() {
	*x = SearchTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopic) ProtoMessage() {}

func (x *SearchTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopic.ProtoReflect.Descriptor instead.
func (*SearchTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{220}
}

func (x *SearchTopic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTopic) GetMoreButton() *SearchTopicButton {
	if x != nil {
		return x.MoreButton
	}
	return nil
}

func (x *SearchTopic) GetItems() []*SearchTopicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchTopicButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	JumpUri string `protobuf:"bytes,2,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
}

func (x *SearchTopicButton) Reset() {
	*x = SearchTopicButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicButton) ProtoMessage() {}

func (x *SearchTopicButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicButton.ProtoReflect.Descriptor instead.
func (*SearchTopicButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{221}
}

func (x *SearchTopicButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTopicButton) GetJumpUri() string {
	if x != nil {
		return x.JumpUri
	}
	return ""
}

type SearchTopicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	IsActivity bool `protobuf:"varint,5,opt,name=is_activity,json=isActivity,proto3" json:"is_activity,omitempty"`
}

func (x *SearchTopicItem) Reset() {
	*x = SearchTopicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicItem) ProtoMessage() {}

func (x *SearchTopicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicItem.ProtoReflect.Descriptor instead.
func (*SearchTopicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{222}
}

func (x *SearchTopicItem) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *SearchTopicItem) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *SearchTopicItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SearchTopicItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SearchTopicItem) GetIsActivity() bool {
	if x != nil {
		return x.IsActivity
	}
	return false
}

type SetDecisionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SetDecisionReq) Reset() {
	*x = SetDecisionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDecisionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDecisionReq) ProtoMessage() {}

func (x *SetDecisionReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDecisionReq.ProtoReflect.Descriptor instead.
func (*SetDecisionReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{223}
}

func (x *SetDecisionReq) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type SetRecentCampusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
}

func (x *SetRecentCampusReq) Reset() {
	*x = SetRecentCampusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRecentCampusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRecentCampusReq) ProtoMessage() {}

func (x *SetRecentCampusReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRecentCampusReq.ProtoReflect.Descriptor instead.
func (*SetRecentCampusReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{224}
}

func (x *SetRecentCampusReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *SetRecentCampusReq) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

// 分享渠道组件
type ShareChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分享名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 分享按钮图片
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	// 分享渠道
	Channel string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	// 预约卡分享图信息，仅分享有预约信息的动态时存在
	Reserve *ShareReserve `protobuf:"bytes,4,opt,name=reserve,proto3" json:"reserve,omitempty"`
}

func (x *ShareChannel) Reset() {
	*x = ShareChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareChannel) ProtoMessage() {}

func (x *ShareChannel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareChannel.ProtoReflect.Descriptor instead.
func (*ShareChannel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{225}
}

func (x *ShareChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShareChannel) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ShareChannel) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ShareChannel) GetReserve() *ShareReserve {
	if x != nil {
		return x.Reserve
	}
	return nil
}

// 预约卡分享图信息
type ShareReserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述(时间+类型)
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 二维码附带icon
	QrCodeIcon string `protobuf:"bytes,3,opt,name=qr_code_icon,json=qrCodeIcon,proto3" json:"qr_code_icon,omitempty"`
	// 二维码附带文本
	QrCodeText string `protobuf:"bytes,4,opt,name=qr_code_text,json=qrCodeText,proto3" json:"qr_code_text,omitempty"`
	// 二维码url
	QrCodeUrl string `protobuf:"bytes,5,opt,name=qr_code_url,json=qrCodeUrl,proto3" json:"qr_code_url,omitempty"`
	UserInfo *AdditionUserInfo `protobuf:"bytes,6,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *ShareReserve) Reset() {
	*x = ShareReserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReserve) ProtoMessage() {}

func (x *ShareReserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReserve.ProtoReflect.Descriptor instead.
func (*ShareReserve) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{226}
}

func (x *ShareReserve) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShareReserve) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShareReserve) GetQrCodeIcon() string {
	if x != nil {
		return x.QrCodeIcon
	}
	return ""
}

func (x *ShareReserve) GetQrCodeText() string {
	if x != nil {
		return x.QrCodeText
	}
	return ""
}

func (x *ShareReserve) GetQrCodeUrl() string {
	if x != nil {
		return x.QrCodeUrl
	}
	return ""
}

func (x *ShareReserve) GetUserInfo() *AdditionUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 排序类型
type SortType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序策略
	// 1:推荐排序 2:最常访问 3:最近关注
	SortType int32 `protobuf:"varint,1,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	// 排序策略名称
	SortTypeName string `protobuf:"bytes,2,opt,name=sort_type_name,json=sortTypeName,proto3" json:"sort_type_name,omitempty"`
}

func (x *SortType) Reset() {
	*x = SortType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortType) ProtoMessage() {}

func (x *SortType) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortType.ProtoReflect.Descriptor instead.
func (*SortType) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{227}
}

func (x *SortType) GetSortType() int32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *SortType) GetSortTypeName() string {
	if x != nil {
		return x.SortTypeName
	}
	return ""
}

type StoryArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Dimension *Dimension `protobuf:"bytes,4,opt,name=dimension,proto3" json:"dimension,omitempty"`
}

func (x *StoryArchive) Reset() {
	*x = StoryArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryArchive) ProtoMessage() {}

func (x *StoryArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryArchive.ProtoReflect.Descriptor instead.
func (*StoryArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{228}
}

func (x *StoryArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *StoryArchive) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *StoryArchive) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *StoryArchive) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

type StoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author *UserInfo `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Status int64 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to RcmdItem:
	//
	//	*StoryItem_StoryArchive
	RcmdItem isStoryItem_RcmdItem `protobuf_oneof:"rcmd_item"`
}

func (x *StoryItem) Reset() {
	*x = StoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryItem) ProtoMessage() {}

func (x *StoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryItem.ProtoReflect.Descriptor instead.
func (*StoryItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{229}
}

func (x *StoryItem) GetAuthor() *UserInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *StoryItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StoryItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StoryItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (m *StoryItem) GetRcmdItem() isStoryItem_RcmdItem {
	if m != nil {
		return m.RcmdItem
	}
	return nil
}

func (x *StoryItem) GetStoryArchive() *StoryArchive {
	if x, ok := x.GetRcmdItem().(*StoryItem_StoryArchive); ok {
		return x.StoryArchive
	}
	return nil
}

type isStoryItem_RcmdItem interface {
	isStoryItem_RcmdItem()
}

type StoryItem_StoryArchive struct {
	StoryArchive *StoryArchive `protobuf:"bytes,5,opt,name=story_archive,json=storyArchive,proto3,oneof"`
}

func (*StoryItem_StoryArchive) isStoryItem_RcmdItem() {}

type SubscribeCampusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	CampusName string `protobuf:"bytes,2,opt,name=campus_name,json=campusName,proto3" json:"campus_name,omitempty"`
}

func (x *SubscribeCampusReq) Reset() {
	*x = SubscribeCampusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeCampusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCampusReq) ProtoMessage() {}

func (x *SubscribeCampusReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCampusReq.ProtoReflect.Descriptor instead.
func (*SubscribeCampusReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{230}
}

func (x *SubscribeCampusReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *SubscribeCampusReq) GetCampusName() string {
	if x != nil {
		return x.CampusName
	}
	return ""
}

// 三点-关注
type ThreePointAttention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// attention icon
	AttentionIcon string `protobuf:"bytes,1,opt,name=attention_icon,json=attentionIcon,proto3" json:"attention_icon,omitempty"`
	// 关注时显示的文案
	AttentionText string `protobuf:"bytes,2,opt,name=attention_text,json=attentionText,proto3" json:"attention_text,omitempty"`
	// not attention icon
	NotAttentionIcon string `protobuf:"bytes,3,opt,name=not_attention_icon,json=notAttentionIcon,proto3" json:"not_attention_icon,omitempty"`
	// 未关注时显示的文案
	NotAttentionText string `protobuf:"bytes,4,opt,name=not_attention_text,json=notAttentionText,proto3" json:"not_attention_text,omitempty"`
	// 当前关注状态
	Status ThreePointAttentionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=bilibili.app.dynamic.v2.ThreePointAttentionStatus" json:"status,omitempty"`
}

func (x *ThreePointAttention) Reset() {
	*x = ThreePointAttention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointAttention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointAttention) ProtoMessage() {}

func (x *ThreePointAttention) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointAttention.ProtoReflect.Descriptor instead.
func (*ThreePointAttention) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{231}
}

func (x *ThreePointAttention) GetAttentionIcon() string {
	if x != nil {
		return x.AttentionIcon
	}
	return ""
}

func (x *ThreePointAttention) GetAttentionText() string {
	if x != nil {
		return x.AttentionText
	}
	return ""
}

func (x *ThreePointAttention) GetNotAttentionIcon() string {
	if x != nil {
		return x.NotAttentionIcon
	}
	return ""
}

func (x *ThreePointAttention) GetNotAttentionText() string {
	if x != nil {
		return x.NotAttentionText
	}
	return ""
}

func (x *ThreePointAttention) GetStatus() ThreePointAttentionStatus {
	if x != nil {
		return x.Status
	}
	return ThreePointAttentionStatus_tp_not_attention
}

// 三点-自动播放 旧版不维护
type ThreePointAutoPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// open icon
	OpenIcon string `protobuf:"bytes,1,opt,name=open_icon,json=openIcon,proto3" json:"open_icon,omitempty"`
	// 开启时显示文案
	OpenText string `protobuf:"bytes,2,opt,name=open_text,json=openText,proto3" json:"open_text,omitempty"`
	// close icon
	CloseIcon string `protobuf:"bytes,3,opt,name=close_icon,json=closeIcon,proto3" json:"close_icon,omitempty"`
	// 关闭时显示文案
	CloseText string `protobuf:"bytes,4,opt,name=close_text,json=closeText,proto3" json:"close_text,omitempty"`
	// 开启时显示文案v2
	OpenTextV2 string `protobuf:"bytes,5,opt,name=open_text_v2,json=openTextV2,proto3" json:"open_text_v2,omitempty"`
	// 关闭时显示文案v2
	CloseTextV2 string `protobuf:"bytes,6,opt,name=close_text_v2,json=closeTextV2,proto3" json:"close_text_v2,omitempty"`
	// 仅wifi/免流 icon
	OnlyIcon string `protobuf:"bytes,7,opt,name=only_icon,json=onlyIcon,proto3" json:"only_icon,omitempty"`
	// 仅wifi/免流 文案
	OnlyText string `protobuf:"bytes,8,opt,name=only_text,json=onlyText,proto3" json:"only_text,omitempty"`
	// open icon v2
	OpenIconV2 string `protobuf:"bytes,9,opt,name=open_icon_v2,json=openIconV2,proto3" json:"open_icon_v2,omitempty"`
	// close icon v2
	CloseIconV2 string `protobuf:"bytes,10,opt,name=close_icon_v2,json=closeIconV2,proto3" json:"close_icon_v2,omitempty"`
}

func (x *ThreePointAutoPlay) Reset() {
	*x = ThreePointAutoPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointAutoPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointAutoPlay) ProtoMessage() {}

func (x *ThreePointAutoPlay) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointAutoPlay.ProtoReflect.Descriptor instead.
func (*ThreePointAutoPlay) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{232}
}

func (x *ThreePointAutoPlay) GetOpenIcon() string {
	if x != nil {
		return x.OpenIcon
	}
	return ""
}

func (x *ThreePointAutoPlay) GetOpenText() string {
	if x != nil {
		return x.OpenText
	}
	return ""
}

func (x *ThreePointAutoPlay) GetCloseIcon() string {
	if x != nil {
		return x.CloseIcon
	}
	return ""
}

func (x *ThreePointAutoPlay) GetCloseText() string {
	if x != nil {
		return x.CloseText
	}
	return ""
}

func (x *ThreePointAutoPlay) GetOpenTextV2() string {
	if x != nil {
		return x.OpenTextV2
	}
	return ""
}

func (x *ThreePointAutoPlay) GetCloseTextV2() string {
	if x != nil {
		return x.CloseTextV2
	}
	return ""
}

func (x *ThreePointAutoPlay) GetOnlyIcon() string {
	if x != nil {
		return x.OnlyIcon
	}
	return ""
}

func (x *ThreePointAutoPlay) GetOnlyText() string {
	if x != nil {
		return x.OnlyText
	}
	return ""
}

func (x *ThreePointAutoPlay) GetOpenIconV2() string {
	if x != nil {
		return x.OpenIconV2
	}
	return ""
}

func (x *ThreePointAutoPlay) GetCloseIconV2() string {
	if x != nil {
		return x.CloseIconV2
	}
	return ""
}

// 三点-评论
type ThreePointComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 精选评论区功能
	UpSelection *CommentDetail `protobuf:"bytes,1,opt,name=up_selection,json=upSelection,proto3" json:"up_selection,omitempty"`
	// up关闭评论区功能
	UpClose *CommentDetail `protobuf:"bytes,2,opt,name=up_close,json=upClose,proto3" json:"up_close,omitempty"`
	// icon
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ThreePointComment) Reset() {
	*x = ThreePointComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointComment) ProtoMessage() {}

func (x *ThreePointComment) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointComment.ProtoReflect.Descriptor instead.
func (*ThreePointComment) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{233}
}

func (x *ThreePointComment) GetUpSelection() *CommentDetail {
	if x != nil {
		return x.UpSelection
	}
	return nil
}

func (x *ThreePointComment) GetUpClose() *CommentDetail {
	if x != nil {
		return x.UpClose
	}
	return nil
}

func (x *ThreePointComment) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointComment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 三点-默认结构(使用此背景、举报、删除)
type ThreePointDefault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// id
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Toast *ThreePointDefaultToast `protobuf:"bytes,5,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *ThreePointDefault) Reset() {
	*x = ThreePointDefault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointDefault) ProtoMessage() {}

func (x *ThreePointDefault) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointDefault.ProtoReflect.Descriptor instead.
func (*ThreePointDefault) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{234}
}

func (x *ThreePointDefault) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointDefault) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointDefault) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ThreePointDefault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThreePointDefault) GetToast() *ThreePointDefaultToast {
	if x != nil {
		return x.Toast
	}
	return nil
}

type ThreePointDefaultToast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ThreePointDefaultToast) Reset() {
	*x = ThreePointDefaultToast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointDefaultToast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointDefaultToast) ProtoMessage() {}

func (x *ThreePointDefaultToast) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointDefaultToast.ProtoReflect.Descriptor instead.
func (*ThreePointDefaultToast) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{235}
}

func (x *ThreePointDefaultToast) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointDefaultToast) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 三点-不感兴趣
type ThreePointDislike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ThreePointDislike) Reset() {
	*x = ThreePointDislike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointDislike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointDislike) ProtoMessage() {}

func (x *ThreePointDislike) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointDislike.ProtoReflect.Descriptor instead.
func (*ThreePointDislike) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{236}
}

func (x *ThreePointDislike) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointDislike) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 三点-收藏
type ThreePointFavorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 物料ID
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	// 是否订阅
	IsFavourite bool `protobuf:"varint,4,opt,name=is_favourite,json=isFavourite,proto3" json:"is_favourite,omitempty"`
	// 取消收藏图标
	CancelIcon string `protobuf:"bytes,5,opt,name=cancel_icon,json=cancelIcon,proto3" json:"cancel_icon,omitempty"`
	// 取消收藏文案
	CancelTitle string `protobuf:"bytes,6,opt,name=cancel_title,json=cancelTitle,proto3" json:"cancel_title,omitempty"`
}

func (x *ThreePointFavorite) Reset() {
	*x = ThreePointFavorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointFavorite) ProtoMessage() {}

func (x *ThreePointFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointFavorite.ProtoReflect.Descriptor instead.
func (*ThreePointFavorite) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{237}
}

func (x *ThreePointFavorite) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointFavorite) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointFavorite) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThreePointFavorite) GetIsFavourite() bool {
	if x != nil {
		return x.IsFavourite
	}
	return false
}

func (x *ThreePointFavorite) GetCancelIcon() string {
	if x != nil {
		return x.CancelIcon
	}
	return ""
}

func (x *ThreePointFavorite) GetCancelTitle() string {
	if x != nil {
		return x.CancelTitle
	}
	return ""
}

type ThreePointHide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Interactive *ThreePointHideInteractive `protobuf:"bytes,3,opt,name=interactive,proto3" json:"interactive,omitempty"`
	BlookFid int64 `protobuf:"varint,4,opt,name=blook_fid,json=blookFid,proto3" json:"blook_fid,omitempty"`
	BlookType string `protobuf:"bytes,5,opt,name=blook_type,json=blookType,proto3" json:"blook_type,omitempty"`
}

func (x *ThreePointHide) Reset() {
	*x = ThreePointHide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointHide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointHide) ProtoMessage() {}

func (x *ThreePointHide) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointHide.ProtoReflect.Descriptor instead.
func (*ThreePointHide) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{238}
}

func (x *ThreePointHide) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointHide) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointHide) GetInteractive() *ThreePointHideInteractive {
	if x != nil {
		return x.Interactive
	}
	return nil
}

func (x *ThreePointHide) GetBlookFid() int64 {
	if x != nil {
		return x.BlookFid
	}
	return 0
}

func (x *ThreePointHide) GetBlookType() string {
	if x != nil {
		return x.BlookType
	}
	return ""
}

type ThreePointHideInteractive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Confirm string `protobuf:"bytes,2,opt,name=confirm,proto3" json:"confirm,omitempty"`
	Cancel string `protobuf:"bytes,3,opt,name=cancel,proto3" json:"cancel,omitempty"`
	Toast string `protobuf:"bytes,4,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *ThreePointHideInteractive) Reset() {
	*x = ThreePointHideInteractive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointHideInteractive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointHideInteractive) ProtoMessage() {}

func (x *ThreePointHideInteractive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointHideInteractive.ProtoReflect.Descriptor instead.
func (*ThreePointHideInteractive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{239}
}

func (x *ThreePointHideInteractive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointHideInteractive) GetConfirm() string {
	if x != nil {
		return x.Confirm
	}
	return ""
}

func (x *ThreePointHideInteractive) GetCancel() string {
	if x != nil {
		return x.Cancel
	}
	return ""
}

func (x *ThreePointHideInteractive) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

// 三点Item
type ThreePointItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type ThreePointType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.ThreePointType" json:"type,omitempty"`
	// Types that are assignable to Item:
	//
	//	*ThreePointItem_Default
	//	*ThreePointItem_AutoPlayer
	//	*ThreePointItem_Share
	//	*ThreePointItem_Attention
	//	*ThreePointItem_Wait
	//	*ThreePointItem_Dislike
	//	*ThreePointItem_Favorite
	//	*ThreePointItem_Top
	//	*ThreePointItem_Comment
	//	*ThreePointItem_Hide
	//	*ThreePointItem_TopicIrrelevant
	Item isThreePointItem_Item `protobuf_oneof:"item"`
}

func (x *ThreePointItem) Reset() {
	*x = ThreePointItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointItem) ProtoMessage() {}

func (x *ThreePointItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointItem.ProtoReflect.Descriptor instead.
func (*ThreePointItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{240}
}

func (x *ThreePointItem) GetType() ThreePointType {
	if x != nil {
		return x.Type
	}
	return ThreePointType_tp_none
}

func (m *ThreePointItem) GetItem() isThreePointItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *ThreePointItem) GetDefault() *ThreePointDefault {
	if x, ok := x.GetItem().(*ThreePointItem_Default); ok {
		return x.Default
	}
	return nil
}

func (x *ThreePointItem) GetAutoPlayer() *ThreePointAutoPlay {
	if x, ok := x.GetItem().(*ThreePointItem_AutoPlayer); ok {
		return x.AutoPlayer
	}
	return nil
}

func (x *ThreePointItem) GetShare() *ThreePointShare {
	if x, ok := x.GetItem().(*ThreePointItem_Share); ok {
		return x.Share
	}
	return nil
}

func (x *ThreePointItem) GetAttention() *ThreePointAttention {
	if x, ok := x.GetItem().(*ThreePointItem_Attention); ok {
		return x.Attention
	}
	return nil
}

func (x *ThreePointItem) GetWait() *ThreePointWait {
	if x, ok := x.GetItem().(*ThreePointItem_Wait); ok {
		return x.Wait
	}
	return nil
}

func (x *ThreePointItem) GetDislike() *ThreePointDislike {
	if x, ok := x.GetItem().(*ThreePointItem_Dislike); ok {
		return x.Dislike
	}
	return nil
}

func (x *ThreePointItem) GetFavorite() *ThreePointFavorite {
	if x, ok := x.GetItem().(*ThreePointItem_Favorite); ok {
		return x.Favorite
	}
	return nil
}

func (x *ThreePointItem) GetTop() *ThreePointTop {
	if x, ok := x.GetItem().(*ThreePointItem_Top); ok {
		return x.Top
	}
	return nil
}

func (x *ThreePointItem) GetComment() *ThreePointComment {
	if x, ok := x.GetItem().(*ThreePointItem_Comment); ok {
		return x.Comment
	}
	return nil
}

func (x *ThreePointItem) GetHide() *ThreePointHide {
	if x, ok := x.GetItem().(*ThreePointItem_Hide); ok {
		return x.Hide
	}
	return nil
}

func (x *ThreePointItem) GetTopicIrrelevant() *ThreePointTopicIrrelevant {
	if x, ok := x.GetItem().(*ThreePointItem_TopicIrrelevant); ok {
		return x.TopicIrrelevant
	}
	return nil
}

type isThreePointItem_Item interface {
	isThreePointItem_Item()
}

type ThreePointItem_Default struct {
	// 默认结构
	Default *ThreePointDefault `protobuf:"bytes,2,opt,name=default,proto3,oneof"`
}

type ThreePointItem_AutoPlayer struct {
	// 自动播放
	AutoPlayer *ThreePointAutoPlay `protobuf:"bytes,3,opt,name=auto_player,json=autoPlayer,proto3,oneof"`
}

type ThreePointItem_Share struct {
	// 分享
	Share *ThreePointShare `protobuf:"bytes,4,opt,name=share,proto3,oneof"`
}

type ThreePointItem_Attention struct {
	// 关注
	Attention *ThreePointAttention `protobuf:"bytes,5,opt,name=attention,proto3,oneof"`
}

type ThreePointItem_Wait struct {
	// 稍后在看
	Wait *ThreePointWait `protobuf:"bytes,6,opt,name=wait,proto3,oneof"`
}

type ThreePointItem_Dislike struct {
	// 不感兴趣
	Dislike *ThreePointDislike `protobuf:"bytes,7,opt,name=dislike,proto3,oneof"`
}

type ThreePointItem_Favorite struct {
	// 收藏
	Favorite *ThreePointFavorite `protobuf:"bytes,8,opt,name=favorite,proto3,oneof"`
}

type ThreePointItem_Top struct {
	// 置顶
	Top *ThreePointTop `protobuf:"bytes,9,opt,name=top,proto3,oneof"`
}

type ThreePointItem_Comment struct {
	// 评论
	Comment *ThreePointComment `protobuf:"bytes,10,opt,name=comment,proto3,oneof"`
}

type ThreePointItem_Hide struct {
	Hide *ThreePointHide `protobuf:"bytes,11,opt,name=hide,proto3,oneof"`
}

type ThreePointItem_TopicIrrelevant struct {
	TopicIrrelevant *ThreePointTopicIrrelevant `protobuf:"bytes,12,opt,name=topic_irrelevant,json=topicIrrelevant,proto3,oneof"`
}

func (*ThreePointItem_Default) isThreePointItem_Item() {}

func (*ThreePointItem_AutoPlayer) isThreePointItem_Item() {}

func (*ThreePointItem_Share) isThreePointItem_Item() {}

func (*ThreePointItem_Attention) isThreePointItem_Item() {}

func (*ThreePointItem_Wait) isThreePointItem_Item() {}

func (*ThreePointItem_Dislike) isThreePointItem_Item() {}

func (*ThreePointItem_Favorite) isThreePointItem_Item() {}

func (*ThreePointItem_Top) isThreePointItem_Item() {}

func (*ThreePointItem_Comment) isThreePointItem_Item() {}

func (*ThreePointItem_Hide) isThreePointItem_Item() {}

func (*ThreePointItem_TopicIrrelevant) isThreePointItem_Item() {}

// 三点-分享
type ThreePointShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 分享渠道
	Channel []*ThreePointShareChannel `protobuf:"bytes,3,rep,name=channel,proto3" json:"channel,omitempty"`
	// 分享渠道名
	ChannelName string `protobuf:"bytes,4,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	// 预约卡分享图信息，仅分享有预约信息的动态时存在
	Reserve *ShareReserve `protobuf:"bytes,5,opt,name=reserve,proto3" json:"reserve,omitempty"`
}

func (x *ThreePointShare) Reset() {
	*x = ThreePointShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointShare) ProtoMessage() {}

func (x *ThreePointShare) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointShare.ProtoReflect.Descriptor instead.
func (*ThreePointShare) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{241}
}

func (x *ThreePointShare) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointShare) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointShare) GetChannel() []*ThreePointShareChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ThreePointShare) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ThreePointShare) GetReserve() *ShareReserve {
	if x != nil {
		return x.Reserve
	}
	return nil
}

// 三点-分享渠道
type ThreePointShareChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 名称
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ThreePointShareChannel) Reset() {
	*x = ThreePointShareChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointShareChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointShareChannel) ProtoMessage() {}

func (x *ThreePointShareChannel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointShareChannel.ProtoReflect.Descriptor instead.
func (*ThreePointShareChannel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{242}
}

func (x *ThreePointShareChannel) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointShareChannel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 三点-置顶
type ThreePointTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// icon
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 状态
	Type TopType `protobuf:"varint,3,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.TopType" json:"type,omitempty"`
}

func (x *ThreePointTop) Reset() {
	*x = ThreePointTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointTop) ProtoMessage() {}

func (x *ThreePointTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointTop.ProtoReflect.Descriptor instead.
func (*ThreePointTop) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{243}
}

func (x *ThreePointTop) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointTop) GetType() TopType {
	if x != nil {
		return x.Type
	}
	return TopType_top_none
}

type ThreePointTopicIrrelevant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Toast string `protobuf:"bytes,3,opt,name=toast,proto3" json:"toast,omitempty"`
	TopicId int64 `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	ResId int64 `protobuf:"varint,5,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`
	ResType int64 `protobuf:"varint,6,opt,name=res_type,json=resType,proto3" json:"res_type,omitempty"`
	Reason string `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ThreePointTopicIrrelevant) Reset() {
	*x = ThreePointTopicIrrelevant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointTopicIrrelevant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointTopicIrrelevant) ProtoMessage() {}

func (x *ThreePointTopicIrrelevant) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointTopicIrrelevant.ProtoReflect.Descriptor instead.
func (*ThreePointTopicIrrelevant) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{244}
}

func (x *ThreePointTopicIrrelevant) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ThreePointTopicIrrelevant) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointTopicIrrelevant) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *ThreePointTopicIrrelevant) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *ThreePointTopicIrrelevant) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ThreePointTopicIrrelevant) GetResType() int64 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *ThreePointTopicIrrelevant) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 三点-稍后在看
type ThreePointWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// addition icon
	AdditionIcon string `protobuf:"bytes,1,opt,name=addition_icon,json=additionIcon,proto3" json:"addition_icon,omitempty"`
	// 已添加时的文案
	AdditionText string `protobuf:"bytes,2,opt,name=addition_text,json=additionText,proto3" json:"addition_text,omitempty"`
	// no addition icon
	NoAdditionIcon string `protobuf:"bytes,3,opt,name=no_addition_icon,json=noAdditionIcon,proto3" json:"no_addition_icon,omitempty"`
	// 未添加时的文案
	NoAdditionText string `protobuf:"bytes,4,opt,name=no_addition_text,json=noAdditionText,proto3" json:"no_addition_text,omitempty"`
	// avid
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ThreePointWait) Reset() {
	*x = ThreePointWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointWait) ProtoMessage() {}

func (x *ThreePointWait) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointWait.ProtoReflect.Descriptor instead.
func (*ThreePointWait) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{245}
}

func (x *ThreePointWait) GetAdditionIcon() string {
	if x != nil {
		return x.AdditionIcon
	}
	return ""
}

func (x *ThreePointWait) GetAdditionText() string {
	if x != nil {
		return x.AdditionText
	}
	return ""
}

func (x *ThreePointWait) GetNoAdditionIcon() string {
	if x != nil {
		return x.NoAdditionIcon
	}
	return ""
}

func (x *ThreePointWait) GetNoAdditionText() string {
	if x != nil {
		return x.NoAdditionText
	}
	return ""
}

func (x *ThreePointWait) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 顶部预约卡
type TopAdditionUP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 预约卡
	Up []*AdditionUP `protobuf:"bytes,1,rep,name=up,proto3" json:"up,omitempty"`
	// 折叠数量，大于多少个进行折叠
	HasFold int32 `protobuf:"varint,2,opt,name=has_fold,json=hasFold,proto3" json:"has_fold,omitempty"`
}

func (x *TopAdditionUP) Reset() {
	*x = TopAdditionUP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopAdditionUP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopAdditionUP) ProtoMessage() {}

func (x *TopAdditionUP) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopAdditionUP.ProtoReflect.Descriptor instead.
func (*TopAdditionUP) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{246}
}

func (x *TopAdditionUP) GetUp() []*AdditionUP {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *TopAdditionUP) GetHasFold() int32 {
	if x != nil {
		return x.HasFold
	}
	return 0
}

// 话题广场操作按钮
type TopicButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 按钮图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 按钮文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转
	JumpUri string `protobuf:"bytes,3,opt,name=jump_uri,json=jumpUri,proto3" json:"jump_uri,omitempty"`
	RedDot bool `protobuf:"varint,4,opt,name=red_dot,json=redDot,proto3" json:"red_dot,omitempty"`
}

func (x *TopicButton) Reset() {
	*x = TopicButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicButton) ProtoMessage() {}

func (x *TopicButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicButton.ProtoReflect.Descriptor instead.
func (*TopicButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{247}
}

func (x *TopicButton) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TopicButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopicButton) GetJumpUri() string {
	if x != nil {
		return x.JumpUri
	}
	return ""
}

func (x *TopicButton) GetRedDot() bool {
	if x != nil {
		return x.RedDot
	}
	return false
}

type TopicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Desc2 string `protobuf:"bytes,5,opt,name=desc2,proto3" json:"desc2,omitempty"`
	RcmdDesc string `protobuf:"bytes,6,opt,name=rcmd_desc,json=rcmdDesc,proto3" json:"rcmd_desc,omitempty"`
}

func (x *TopicItem) Reset() {
	*x = TopicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicItem) ProtoMessage() {}

func (x *TopicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicItem.ProtoReflect.Descriptor instead.
func (*TopicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{248}
}

func (x *TopicItem) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicItem) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TopicItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TopicItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TopicItem) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *TopicItem) GetRcmdDesc() string {
	if x != nil {
		return x.RcmdDesc
	}
	return ""
}

// 综合页-话题广场
type TopicList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 话题列表
	TopicListItem []*TopicListItem `protobuf:"bytes,2,rep,name=topic_list_item,json=topicListItem,proto3" json:"topic_list_item,omitempty"`
	// 发起活动
	ActButton *TopicButton `protobuf:"bytes,3,opt,name=act_button,json=actButton,proto3" json:"act_button,omitempty"`
	// 查看更多
	MoreButton *TopicButton `protobuf:"bytes,4,opt,name=more_button,json=moreButton,proto3" json:"more_button,omitempty"`
	// 透传服务端上报
	ServerInfo string `protobuf:"bytes,5,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
}

func (x *TopicList) Reset() {
	*x = TopicList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicList) ProtoMessage() {}

func (x *TopicList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicList.ProtoReflect.Descriptor instead.
func (*TopicList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{249}
}

func (x *TopicList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopicList) GetTopicListItem() []*TopicListItem {
	if x != nil {
		return x.TopicListItem
	}
	return nil
}

func (x *TopicList) GetActButton() *TopicButton {
	if x != nil {
		return x.ActButton
	}
	return nil
}

func (x *TopicList) GetMoreButton() *TopicButton {
	if x != nil {
		return x.MoreButton
	}
	return nil
}

func (x *TopicList) GetServerInfo() string {
	if x != nil {
		return x.ServerInfo
	}
	return ""
}

// 综合页-话题广场-话题
type TopicListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 前置图标
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	// 前置图标文案
	IconTitle string `protobuf:"bytes,2,opt,name=icon_title,json=iconTitle,proto3" json:"icon_title,omitempty"`
	// 话题id
	TopicId int64 `protobuf:"varint,3,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	// 话题名
	TopicName string `protobuf:"bytes,4,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// 卡片位次
	Pos int64 `protobuf:"varint,6,opt,name=pos,proto3" json:"pos,omitempty"`
	// 透传服务端上报
	ServerInfo string `protobuf:"bytes,7,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	HeadIconUrl string `protobuf:"bytes,8,opt,name=head_icon_url,json=headIconUrl,proto3" json:"head_icon_url,omitempty"`
	UpMid int64 `protobuf:"varint,9,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	TailIconUrl string `protobuf:"bytes,10,opt,name=tail_icon_url,json=tailIconUrl,proto3" json:"tail_icon_url,omitempty"`
	Extension string `protobuf:"bytes,11,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *TopicListItem) Reset() {
	*x = TopicListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicListItem) ProtoMessage() {}

func (x *TopicListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicListItem.ProtoReflect.Descriptor instead.
func (*TopicListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{250}
}

func (x *TopicListItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TopicListItem) GetIconTitle() string {
	if x != nil {
		return x.IconTitle
	}
	return ""
}

func (x *TopicListItem) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicListItem) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TopicListItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TopicListItem) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *TopicListItem) GetServerInfo() string {
	if x != nil {
		return x.ServerInfo
	}
	return ""
}

func (x *TopicListItem) GetHeadIconUrl() string {
	if x != nil {
		return x.HeadIconUrl
	}
	return ""
}

func (x *TopicListItem) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *TopicListItem) GetTailIconUrl() string {
	if x != nil {
		return x.TailIconUrl
	}
	return ""
}

func (x *TopicListItem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type TopicListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TopicItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *TopicListReply) Reset() {
	*x = TopicListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicListReply) ProtoMessage() {}

func (x *TopicListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicListReply.ProtoReflect.Descriptor instead.
func (*TopicListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{251}
}

func (x *TopicListReply) GetItems() []*TopicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TopicListReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *TopicListReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type TopicListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *TopicListReq) Reset() {
	*x = TopicListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicListReq) ProtoMessage() {}

func (x *TopicListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicListReq.ProtoReflect.Descriptor instead.
func (*TopicListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{252}
}

func (x *TopicListReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

func (x *TopicListReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type TopicRcmdCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Button *CampusLabel `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
	Desc1 string `protobuf:"bytes,5,opt,name=desc1,proto3" json:"desc1,omitempty"`
	Desc2 string `protobuf:"bytes,6,opt,name=desc2,proto3" json:"desc2,omitempty"`
	UpdateDesc string `protobuf:"bytes,7,opt,name=update_desc,json=updateDesc,proto3" json:"update_desc,omitempty"`
}

func (x *TopicRcmdCard) Reset() {
	*x = TopicRcmdCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicRcmdCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicRcmdCard) ProtoMessage() {}

func (x *TopicRcmdCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicRcmdCard.ProtoReflect.Descriptor instead.
func (*TopicRcmdCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{253}
}

func (x *TopicRcmdCard) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicRcmdCard) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TopicRcmdCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TopicRcmdCard) GetButton() *CampusLabel {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *TopicRcmdCard) GetDesc1() string {
	if x != nil {
		return x.Desc1
	}
	return ""
}

func (x *TopicRcmdCard) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *TopicRcmdCard) GetUpdateDesc() string {
	if x != nil {
		return x.UpdateDesc
	}
	return ""
}

type TopicSquareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Button *CampusLabel `protobuf:"bytes,2,opt,name=button,proto3" json:"button,omitempty"`
	Rcmd *TopicRcmdCard `protobuf:"bytes,3,opt,name=rcmd,proto3" json:"rcmd,omitempty"`
}

func (x *TopicSquareInfo) Reset() {
	*x = TopicSquareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSquareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSquareInfo) ProtoMessage() {}

func (x *TopicSquareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSquareInfo.ProtoReflect.Descriptor instead.
func (*TopicSquareInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{254}
}

func (x *TopicSquareInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopicSquareInfo) GetButton() *CampusLabel {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *TopicSquareInfo) GetRcmd() *TopicRcmdCard {
	if x != nil {
		return x.Rcmd
	}
	return nil
}

type TopicSquareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TopicSquareInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *TopicSquareReply) Reset() {
	*x = TopicSquareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSquareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSquareReply) ProtoMessage() {}

func (x *TopicSquareReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSquareReply.ProtoReflect.Descriptor instead.
func (*TopicSquareReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{255}
}

func (x *TopicSquareReply) GetInfo() *TopicSquareInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type TopicSquareReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampusId int64 `protobuf:"varint,1,opt,name=campus_id,json=campusId,proto3" json:"campus_id,omitempty"`
}

func (x *TopicSquareReq) Reset() {
	*x = TopicSquareReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSquareReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSquareReq) ProtoMessage() {}

func (x *TopicSquareReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSquareReq.ProtoReflect.Descriptor instead.
func (*TopicSquareReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{256}
}

func (x *TopicSquareReq) GetCampusId() int64 {
	if x != nil {
		return x.CampusId
	}
	return 0
}

// 综合页-无关注列表
type Unfollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题展示文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 无关注列表
	List []*UnfollowUserItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	// trackID
	TrackId string `protobuf:"bytes,3,opt,name=TrackId,proto3" json:"TrackId,omitempty"`
}

func (x *Unfollow) Reset() {
	*x = Unfollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unfollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unfollow) ProtoMessage() {}

func (x *Unfollow) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unfollow.ProtoReflect.Descriptor instead.
func (*Unfollow) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{257}
}

func (x *Unfollow) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Unfollow) GetList() []*UnfollowUserItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Unfollow) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

// 综合页-无关注列表
type UnfollowUserItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有更新
	HasUpdate bool `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	// up主头像
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 排序字段 从1开始
	Pos int32 `protobuf:"varint,5,opt,name=pos,proto3" json:"pos,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,6,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	// up介绍
	Sign string `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
	// 标签信息
	Label string `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	// 按钮
	Button *AdditionalButton `protobuf:"bytes,11,opt,name=button,proto3" json:"button,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,12,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *UnfollowUserItem) Reset() {
	*x = UnfollowUserItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfollowUserItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfollowUserItem) ProtoMessage() {}

func (x *UnfollowUserItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfollowUserItem.ProtoReflect.Descriptor instead.
func (*UnfollowUserItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{258}
}

func (x *UnfollowUserItem) GetHasUpdate() bool {
	if x != nil {
		return x.HasUpdate
	}
	return false
}

func (x *UnfollowUserItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UnfollowUserItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnfollowUserItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UnfollowUserItem) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *UnfollowUserItem) GetLiveState() LiveState {
	if x != nil {
		return x.LiveState
	}
	return LiveState_live_none
}

func (x *UnfollowUserItem) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *UnfollowUserItem) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *UnfollowUserItem) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UnfollowUserItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UnfollowUserItem) GetButton() *AdditionalButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *UnfollowUserItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 动态顶部up列表-up主信息
type UpListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有更新
	HasUpdate bool `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	// up主头像
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	// up主昵称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// up主uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 排序字段 从1开始
	Pos int64 `protobuf:"varint,5,opt,name=pos,proto3" json:"pos,omitempty"`
	// 用户类型
	UserItemType UserItemType `protobuf:"varint,6,opt,name=user_item_type,json=userItemType,proto3,enum=bilibili.app.dynamic.v2.UserItemType" json:"user_item_type,omitempty"`
	// 直播头像样式-日
	DisplayStyleDay *UserItemStyle `protobuf:"bytes,7,opt,name=display_style_day,json=displayStyleDay,proto3" json:"display_style_day,omitempty"`
	// 直播头像样式-夜
	DisplayStyleNight *UserItemStyle `protobuf:"bytes,8,opt,name=display_style_night,json=displayStyleNight,proto3" json:"display_style_night,omitempty"`
	// 直播埋点
	StyleId int64 `protobuf:"varint,9,opt,name=style_id,json=styleId,proto3" json:"style_id,omitempty"`
	// 直播状态
	LiveState LiveState `protobuf:"varint,10,opt,name=live_state,json=liveState,proto3,enum=bilibili.app.dynamic.v2.LiveState" json:"live_state,omitempty"`
	// 分割线
	Separator bool `protobuf:"varint,11,opt,name=separator,proto3" json:"separator,omitempty"`
	// 跳转
	Uri string `protobuf:"bytes,12,opt,name=uri,proto3" json:"uri,omitempty"`
	// UP主预约上报使用
	IsRecall bool `protobuf:"varint,13,opt,name=is_recall,json=isRecall,proto3" json:"is_recall,omitempty"`
}

func (x *UpListItem) Reset() {
	*x = UpListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpListItem) ProtoMessage() {}

func (x *UpListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpListItem.ProtoReflect.Descriptor instead.
func (*UpListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{259}
}

func (x *UpListItem) GetHasUpdate() bool {
	if x != nil {
		return x.HasUpdate
	}
	return false
}

func (x *UpListItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UpListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpListItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpListItem) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *UpListItem) GetUserItemType() UserItemType {
	if x != nil {
		return x.UserItemType
	}
	return UserItemType_user_item_type_none
}

func (x *UpListItem) GetDisplayStyleDay() *UserItemStyle {
	if x != nil {
		return x.DisplayStyleDay
	}
	return nil
}

func (x *UpListItem) GetDisplayStyleNight() *UserItemStyle {
	if x != nil {
		return x.DisplayStyleNight
	}
	return nil
}

func (x *UpListItem) GetStyleId() int64 {
	if x != nil {
		return x.StyleId
	}
	return 0
}

func (x *UpListItem) GetLiveState() LiveState {
	if x != nil {
		return x.LiveState
	}
	return LiveState_live_none
}

func (x *UpListItem) GetSeparator() bool {
	if x != nil {
		return x.Separator
	}
	return false
}

func (x *UpListItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *UpListItem) GetIsRecall() bool {
	if x != nil {
		return x.IsRecall
	}
	return false
}

// 最常访问-查看更多
type UpListMoreLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *UpListMoreLabel) Reset() {
	*x = UpListMoreLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpListMoreLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpListMoreLabel) ProtoMessage() {}

func (x *UpListMoreLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpListMoreLabel.ProtoReflect.Descriptor instead.
func (*UpListMoreLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{260}
}

func (x *UpListMoreLabel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpListMoreLabel) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 用户信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 认证信息
	Official *OfficialVerify `protobuf:"bytes,4,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *VipInfo `protobuf:"bytes,5,opt,name=vip,proto3" json:"vip,omitempty"`
	// 直播信息
	Live *LiveInfo `protobuf:"bytes,6,opt,name=live,proto3" json:"live,omitempty"`
	// 空间页跳转链接
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// 挂件信息
	Pendant *UserPendant `protobuf:"bytes,8,opt,name=pendant,proto3" json:"pendant,omitempty"`
	// 认证名牌
	Nameplate *Nameplate `protobuf:"bytes,9,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	// 用户等级
	Level int32 `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	// 用户简介
	Sign string `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
	FaceNft int32 `protobuf:"varint,12,opt,name=face_nft,json=faceNft,proto3" json:"face_nft,omitempty"`
	FaceNftNew int32 `protobuf:"varint,13,opt,name=face_nft_new,json=faceNftNew,proto3" json:"face_nft_new,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{261}
}

func (x *UserInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *UserInfo) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *UserInfo) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *UserInfo) GetLive() *LiveInfo {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *UserInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *UserInfo) GetPendant() *UserPendant {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *UserInfo) GetNameplate() *Nameplate {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

func (x *UserInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UserInfo) GetFaceNft() int32 {
	if x != nil {
		return x.FaceNft
	}
	return 0
}

func (x *UserInfo) GetFaceNftNew() int32 {
	if x != nil {
		return x.FaceNftNew
	}
	return 0
}

// 直播头像样式
type UserItemStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RectText string `protobuf:"bytes,1,opt,name=rect_text,json=rectText,proto3" json:"rect_text,omitempty"`
	RectTextColor string `protobuf:"bytes,2,opt,name=rect_text_color,json=rectTextColor,proto3" json:"rect_text_color,omitempty"`
	RectIcon string `protobuf:"bytes,3,opt,name=rect_icon,json=rectIcon,proto3" json:"rect_icon,omitempty"`
	RectBgColor string `protobuf:"bytes,4,opt,name=rect_bg_color,json=rectBgColor,proto3" json:"rect_bg_color,omitempty"`
	OuterAnimation string `protobuf:"bytes,5,opt,name=outer_animation,json=outerAnimation,proto3" json:"outer_animation,omitempty"`
}

func (x *UserItemStyle) Reset() {
	*x = UserItemStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserItemStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserItemStyle) ProtoMessage() {}

func (x *UserItemStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserItemStyle.ProtoReflect.Descriptor instead.
func (*UserItemStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{262}
}

func (x *UserItemStyle) GetRectText() string {
	if x != nil {
		return x.RectText
	}
	return ""
}

func (x *UserItemStyle) GetRectTextColor() string {
	if x != nil {
		return x.RectTextColor
	}
	return ""
}

func (x *UserItemStyle) GetRectIcon() string {
	if x != nil {
		return x.RectIcon
	}
	return ""
}

func (x *UserItemStyle) GetRectBgColor() string {
	if x != nil {
		return x.RectBgColor
	}
	return ""
}

func (x *UserItemStyle) GetOuterAnimation() string {
	if x != nil {
		return x.OuterAnimation
	}
	return ""
}

// 头像挂件信息
type UserPendant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 图片链接
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 有效期
	Expire int64 `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *UserPendant) Reset() {
	*x = UserPendant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPendant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPendant) ProtoMessage() {}

func (x *UserPendant) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPendant.ProtoReflect.Descriptor instead.
func (*UserPendant) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{263}
}

func (x *UserPendant) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UserPendant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPendant) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UserPendant) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

// 角标信息
type VideoBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 文案颜色-日间
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 文案颜色-夜间
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景颜色-日间
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 背景颜色-夜间
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 边框颜色-日间
	BorderColor string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 边框颜色-夜间
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 样式
	BgStyle int32 `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
	// 背景透明度-日间
	BgAlpha int32 `protobuf:"varint,9,opt,name=bg_alpha,json=bgAlpha,proto3" json:"bg_alpha,omitempty"`
	// 背景透明度-夜间
	BgAlphaNight int32 `protobuf:"varint,10,opt,name=bg_alpha_night,json=bgAlphaNight,proto3" json:"bg_alpha_night,omitempty"`
}

func (x *VideoBadge) Reset() {
	*x = VideoBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBadge) ProtoMessage() {}

func (x *VideoBadge) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBadge.ProtoReflect.Descriptor instead.
func (*VideoBadge) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{264}
}

func (x *VideoBadge) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VideoBadge) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *VideoBadge) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *VideoBadge) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *VideoBadge) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *VideoBadge) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *VideoBadge) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *VideoBadge) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

func (x *VideoBadge) GetBgAlpha() int32 {
	if x != nil {
		return x.BgAlpha
	}
	return 0
}

func (x *VideoBadge) GetBgAlphaNight() int32 {
	if x != nil {
		return x.BgAlphaNight
	}
	return 0
}

// 大会员信息
type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 大会员类型
	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	// 大会员状态
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 到期时间
	DueDate int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	// 标签
	Label *VipLabel `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	// 主题
	ThemeType int32 `protobuf:"varint,5,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	// 大会员角标
	// 0:无角标 1:粉色大会员角标 2:绿色小会员角标
	AvatarSubscript int32 `protobuf:"varint,6,opt,name=avatar_subscript,json=avatarSubscript,proto3" json:"avatar_subscript,omitempty"`
	// 昵称色值，可能为空，色值示例：#FFFB9E60
	NicknameColor string `protobuf:"bytes,7,opt,name=nickname_color,json=nicknameColor,proto3" json:"nickname_color,omitempty"`
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{265}
}

func (x *VipInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipInfo) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *VipInfo) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *VipInfo) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *VipInfo) GetAvatarSubscript() int32 {
	if x != nil {
		return x.AvatarSubscript
	}
	return 0
}

func (x *VipInfo) GetNicknameColor() string {
	if x != nil {
		return x.NicknameColor
	}
	return ""
}

// 大会员标签
type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片地址
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// 文本值
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 对应颜色类型
	LabelTheme string `protobuf:"bytes,3,opt,name=label_theme,json=labelTheme,proto3" json:"label_theme,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{266}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *VipLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VipLabel) GetLabelTheme() string {
	if x != nil {
		return x.LabelTheme
	}
	return ""
}

// 提权样式
type Weight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提权展示标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 下拉框内容
	Items []*WeightItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// icon
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Weight) Reset() {
	*x = Weight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weight) ProtoMessage() {}

func (x *Weight) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weight.ProtoReflect.Descriptor instead.
func (*Weight) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{267}
}

func (x *Weight) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Weight) GetItems() []*WeightItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Weight) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 热门默认跳转按钮
type WeightButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JumpUrl string `protobuf:"bytes,1,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 展示文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *WeightButton) Reset() {
	*x = WeightButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightButton) ProtoMessage() {}

func (x *WeightButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightButton.ProtoReflect.Descriptor instead.
func (*WeightButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{268}
}

func (x *WeightButton) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *WeightButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 提权不感兴趣
type WeightDislike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 负反馈业务类型 作为客户端调用负反馈接口的参数
	FeedBackType string `protobuf:"bytes,1,opt,name=feed_back_type,json=feedBackType,proto3" json:"feed_back_type,omitempty"`
	// 展示文案
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *WeightDislike) Reset() {
	*x = WeightDislike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightDislike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightDislike) ProtoMessage() {}

func (x *WeightDislike) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightDislike.ProtoReflect.Descriptor instead.
func (*WeightDislike) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{269}
}

func (x *WeightDislike) GetFeedBackType() string {
	if x != nil {
		return x.FeedBackType
	}
	return ""
}

func (x *WeightDislike) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 提权样式
type WeightItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Type WeightType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.dynamic.v2.WeightType" json:"type,omitempty"`
	// Types that are assignable to Item:
	//
	//	*WeightItem_Button
	//	*WeightItem_Dislike
	Item isWeightItem_Item `protobuf_oneof:"item"`
}

func (x *WeightItem) Reset() {
	*x = WeightItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightItem) ProtoMessage() {}

func (x *WeightItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightItem.ProtoReflect.Descriptor instead.
func (*WeightItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP(), []int{270}
}

func (x *WeightItem) GetType() WeightType {
	if x != nil {
		return x.Type
	}
	return WeightType_weight_none
}

func (m *WeightItem) GetItem() isWeightItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *WeightItem) GetButton() *WeightButton {
	if x, ok := x.GetItem().(*WeightItem_Button); ok {
		return x.Button
	}
	return nil
}

func (x *WeightItem) GetDislike() *WeightDislike {
	if x, ok := x.GetItem().(*WeightItem_Dislike); ok {
		return x.Dislike
	}
	return nil
}

type isWeightItem_Item interface {
	isWeightItem_Item()
}

type WeightItem_Button struct {
	// 热门默认跳转按钮
	Button *WeightButton `protobuf:"bytes,2,opt,name=button,proto3,oneof"`
}

type WeightItem_Dislike struct {
	// 提权不感兴趣
	Dislike *WeightDislike `protobuf:"bytes,3,opt,name=dislike,proto3,oneof"`
}

func (*WeightItem_Button) isWeightItem_Item() {}

func (*WeightItem_Dislike) isWeightItem_Item() {}

var File_bilibili_app_dynamic_v2_dynamic_proto protoreflect.FileDescriptor

var file_bilibili_app_dynamic_v2_dynamic_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a,
	0x07, 0x41, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63,
	0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x62, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x62, 0x61, 0x48, 0x00, 0x52,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d,
	0x6f, 0x62, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xbc, 0x03, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d,
	0x6f, 0x62, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x70, 0x0a, 0x1b, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x62,
	0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x62, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x6f, 0x62, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x41, 0x0a,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x18,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f,
	0x62, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7d, 0x0a, 0x20, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x62, 0x61,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x62, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x52, 0x1c, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x62, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x6b, 0x0a, 0x1c,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f,
	0x62, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x63, 0x6d, 0x64, 0x44, 0x65, 0x73, 0x63, 0x12, 0x43, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xbd, 0x05, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x50,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1e,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x41, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x69,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x53,
	0x6b, 0x69, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x53, 0x6b, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x33, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x09, 0x64,
	0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x6d,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70, 0x4d, 0x69, 0x64, 0x12,
	0x46, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x67,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x22, 0x8b,
	0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xe5, 0x06, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x32, 0x12, 0x57,
	0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x12, 0x56, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x50, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x63, 0x12, 0x62, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x70, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0x2b, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x69, 0x63, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x55, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x4d, 0x61, 0x78, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x53, 0x6b, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x76, 0x67, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x76, 0x67, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0xe4, 0x03, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x48,
	0x0a, 0x07, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52,
	0x07, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x47,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x1b, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x70,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x70, 0x75, 0x70,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x53, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xfa, 0x02, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x56,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42, 0x67, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x47, 0x43, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x65, 0x61, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x41, 0x0a,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x65, 0x0a, 0x13,
	0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x61, 0x73, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xe3,
	0x02, 0x0a, 0x14, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x65, 0x6c, 0x70, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42,
	0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x6e, 0x0a, 0x1a,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7b, 0x0a, 0x12,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x11, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x41, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x47,
	0x0a, 0x0b, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x54, 0x0a, 0x17, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x4d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a,
	0x15, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x10, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x75, 0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x8b, 0x02, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x1e,
	0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x22, 0x65,
	0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x0f,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x38, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d,
	0x64, 0x54, 0x6f, 0x70, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x3b, 0x0a, 0x04, 0x72, 0x63, 0x6d,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x72, 0x63, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x52, 0x09,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0xc4, 0x04, 0x0a, 0x0d,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x54, 0x6f, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x54, 0x6f, 0x70, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x47, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x65, 0x73, 0x63, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x33, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x49, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x2c, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44,
	0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x5f, 0x64,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x74,
	0x22, 0x2e, 0x0a, 0x0f, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64,
	0x22, 0x66, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x22, 0xd4, 0x04, 0x0a, 0x09, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x74, 0x61, 0x62, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x0b, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x41, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22,
	0x9d, 0x01, 0x0a, 0x18, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x63, 0x6d, 0x64, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xbd, 0x01, 0x0a, 0x16, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x63, 0x6d, 0x64, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xd6, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x79, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a,
	0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x8a, 0x03, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x69,
	0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x09, 0x6d, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x77,
	0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73,
	0x68, 0x6f, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x83, 0x02,
	0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70,
	0x55, 0x72, 0x69, 0x22, 0x61, 0x0a, 0x0b, 0x43, 0x6d, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71,
	0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x73, 0x46, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x52, 0x03, 0x66, 0x61, 0x6e,
	0x22, 0x92, 0x03, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x41, 0x0a,
	0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69,
	0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x1c, 0x44, 0x79, 0x6e, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x44, 0x79, 0x6e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xab, 0x02,
	0x0a, 0x13, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x50, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x22, 0xe7, 0x02, 0x0a, 0x11,
	0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4a, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x75,
	0x72, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0xe4, 0x02, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41,
	0x0a, 0x07, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x75, 0x6e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x63,
	0x6d, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x22, 0x95, 0x05, 0x0a,
	0x09, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x43, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x72, 0x63, 0x6d, 0x64,
	0x5f, 0x75, 0x70, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x55,
	0x50, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x72, 0x63, 0x6d, 0x64, 0x55, 0x70, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x61, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x5f, 0x72, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x74, 0x61, 0x62, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x61, 0x62, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x55, 0x70,
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f,
	0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x74, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x81, 0x03, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12,
	0x3b, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x07, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x22, 0x4b, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xec, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x64, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x22, 0x4c, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x46, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x2a,
	0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x46, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x0d, 0x44, 0x79,
	0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x84, 0x02, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x55, 0x69, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x19,
	0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x6f, 0x72,
	0x65, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x17, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78,
	0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x47, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x57, 0x0a, 0x16, 0x44, 0x79,
	0x6e, 0x52, 0x63, 0x6d, 0x64, 0x55, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x75, 0x6e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x22, 0x5a, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x55, 0x70,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22,
	0x8a, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d,
	0x64, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x11,
	0x44, 0x79, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x44, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x22, 0xc8, 0x01, 0x0a, 0x15, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x5e, 0x0a, 0x0a, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaf, 0x02, 0x0a, 0x13,
	0x44, 0x79, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x41, 0x70, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22, 0xe7, 0x01,
	0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d,
	0x6f, 0x72, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x1a, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x5e, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x02, 0x0a, 0x18, 0x44, 0x79, 0x6e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x69,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69,
	0x41, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x75, 0x76, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x76, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x98, 0x03, 0x0a, 0x06, 0x44, 0x79,
	0x6e, 0x54, 0x61, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73,
	0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6f, 0x70, 0x75, 0x70, 0x52, 0x05, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x06, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x70, 0x22, 0x47, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x22, 0x32, 0x0a,
	0x09, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65,
	0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xad, 0x02, 0x0a, 0x15, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x50, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x22,
	0xe9, 0x02, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4a, 0x0a,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x74,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f,
	0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x0d,
	0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a,
	0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x70, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f,
	0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x6f, 0x6f, 0x74, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x32, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x44,
	0x79, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x0b, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x49,
	0x0a, 0x0b, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x42,
	0x53, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6f, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x6f, 0x69, 0x54, 0x79, 0x70, 0x65, 0x22, 0x49, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x4f, 0x47, 0x56, 0x12, 0x3b, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f,
	0x67, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x47, 0x56, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f,
	0x4f, 0x67, 0x76, 0x22, 0x4a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22,
	0xcd, 0x05, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x79,
	0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x79, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0f, 0x6f, 0x72, 0x69,
	0x67, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x41, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x48, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x44,
	0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x46, 0x61, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x62, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x41, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x3a, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xd1, 0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x35, 0x0a,
	0x06, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x50, 0x52, 0x05, 0x6e,
	0x65, 0x77, 0x45, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76,
	0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x57, 0x65, 0x62,
	0x56, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x22, 0xa8, 0x01, 0x0a, 0x0c,
	0x47, 0x75, 0x69, 0x64, 0x65, 0x42, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x48, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x42,
	0x67, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x75, 0x0a, 0x0a, 0x49, 0x63, 0x6f, 0x6e,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x54, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x69, 0x22,
	0x64, 0x0a, 0x07, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x47, 0x56, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x22, 0xf4,
	0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x43, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x52, 0x05, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x6d, 0x0a, 0x0d,
	0x4c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x08, 0x4c,
	0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x8c, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x69, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x69, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x44,
	0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x22, 0x7c, 0x0a, 0x08, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x41, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x54, 0x0a, 0x0b, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x4d, 0x64, 0x6c, 0x44, 0x79,
	0x6e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0xe6, 0x07, 0x0a, 0x0d, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x76, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x61, 0x76, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x50, 0x47, 0x43, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x47,
	0x43, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x1c, 0x0a, 0x09, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x67, 0x63, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x67,
	0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x4a, 0x0a, 0x0e,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x17,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x4d, 0x64, 0x6c,
	0x44, 0x79, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x22, 0xfd, 0x02, 0x0a, 0x0c, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x65,
	0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6b, 0x65,
	0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x0f, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43,
	0x6f, 0x75, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x65, 0x78, 0x74, 0x32, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xd3, 0x01, 0x0a,
	0x10, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x63,
	0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x0a, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77,
	0x12, 0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e,
	0x44, 0x72, 0x61, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44,
	0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xfd, 0x01, 0x0a, 0x11, 0x4d, 0x64, 0x6c, 0x44, 0x79,
	0x6e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x22, 0x5f, 0x0a, 0x0d, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x72, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe5, 0x02, 0x0a, 0x0a, 0x4d, 0x64, 0x6c, 0x44,
	0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x32, 0x12, 0x41, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xb3, 0x01, 0x0a, 0x0e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x63,
	0x6d, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x65,
	0x6e, 0x64, 0x61, 0x6e, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x0f, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x9e,
	0x01, 0x0a, 0x0b, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x13, 0x0a, 0x05, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x70, 0x70, 0x65, 0x72, 0x22,
	0xd6, 0x06, 0x0a, 0x09, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x50, 0x47, 0x43, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x29, 0x0a, 0x11, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x3a, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x4a, 0x0a,
	0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0d, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x12, 0x4d, 0x64, 0x6c,
	0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x22, 0x93, 0x02, 0x0a,
	0x15, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x58, 0x0a, 0x10, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x79, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x64,
	0x79, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c,
	0x44, 0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x63, 0x6d, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x63, 0x6d, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0xd5, 0x03, 0x0a, 0x0f, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x55, 0x47, 0x43,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12,
	0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55,
	0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x52, 0x4c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x76, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x76, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xd1, 0x03, 0x0a, 0x0d, 0x4d,
	0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x64, 0x64, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x64, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47,
	0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x69, 0x78, 0x55,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6c,
	0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x56,
	0x0a, 0x11, 0x4d, 0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xaa, 0x11, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x47, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x79, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x4f, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x12, 0x52, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x46,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x64,
	0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x4f,
	0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x5b, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x15,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x40, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x41, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x53, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e,
	0x75, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x56, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a,
	0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x6f, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x55, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x49,
	0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0c, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x69, 0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x65, 0x78, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x12,
	0x4d, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x67, 0x48, 0x00,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x67, 0x12, 0x59,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x62,
	0x72, 0x69, 0x65, 0x66, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x49, 0x0a, 0x0c, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0xb9, 0x02, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64,
	0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a,
	0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x0c, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x22,
	0x89, 0x05, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3a, 0x0a, 0x03, 0x70, 0x67, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x50, 0x47, 0x43, 0x48, 0x00, 0x52, 0x03, 0x70, 0x67, 0x63, 0x12, 0x3e, 0x0a,
	0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x48, 0x00, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x3b, 0x0a,
	0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x41, 0x0a,
	0x06, 0x65, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x65, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x3e, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x32, 0x48, 0x00, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x32,
	0x12, 0x38, 0x0a, 0x03, 0x75, 0x67, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x67, 0x63, 0x48, 0x00, 0x52, 0x03, 0x75, 0x67, 0x63, 0x12, 0x35, 0x0a, 0x02, 0x75, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x50, 0x48, 0x00, 0x52, 0x02, 0x75,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x72, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x5f, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x6e, 0x65, 0x65, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xe0, 0x05, 0x0a, 0x0c,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x0c, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72,
	0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x74, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x12,
	0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68,
	0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74,
	0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x69,
	0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe9, 0x02, 0x0a, 0x13, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x47, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x74,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x49, 0x63, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x55, 0x0a, 0x10,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x14, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09,
	0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76,
	0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x54, 0x0a,
	0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x44, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x22, 0x57, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x63, 0x6d, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x49,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6d, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0b, 0x63, 0x6d, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x75, 0x0a, 0x0a,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x65, 0x62, 0x5f,
	0x76, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x57, 0x65,
	0x62, 0x56, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x0d,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xbb, 0x0a, 0x0a, 0x0d, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x3e, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x64,
	0x79, 0x6e, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79,
	0x6e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x70, 0x67,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x50, 0x47, 0x43, 0x48, 0x00, 0x52, 0x06, 0x64,
	0x79, 0x6e, 0x50, 0x67, 0x63, 0x12, 0x53, 0x0a, 0x0f, 0x64, 0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x72, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43,
	0x6f, 0x75, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x79, 0x6e,
	0x43, 0x6f, 0x75, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0e, 0x64, 0x79,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c,
	0x44, 0x79, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0c,
	0x64, 0x79, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x49, 0x0a, 0x0b,
	0x64, 0x79, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44,
	0x79, 0x6e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x79, 0x6e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x64,
	0x72, 0x61, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x12, 0x49, 0x0a, 0x0b, 0x64, 0x79, 0x6e,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x09, 0x64, 0x79, 0x6e, 0x5f, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x79, 0x6e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x46, 0x0a, 0x0a, 0x64, 0x79, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x4d, 0x0a, 0x0f, 0x64, 0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x6c, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x64, 0x79, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65,
	0x12, 0x4f, 0x0a, 0x0d, 0x64, 0x79, 0x6e, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x79, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x64, 0x79, 0x6e,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64,
	0x6c, 0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0f, 0x64, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x64, 0x79, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x72, 0x63, 0x6d, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x63, 0x6d, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x63,
	0x6d, 0x64, 0x12, 0x50, 0x0a, 0x0e, 0x64, 0x79, 0x6e, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x55, 0x47, 0x43, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x55, 0x67, 0x63, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x14, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x64, 0x6c,
	0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x65, 0x77, 0x48, 0x00, 0x52, 0x12, 0x64, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x42, 0x0d, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x63, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xa0, 0x04, 0x0a,
	0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a,
	0x0e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x42, 0x53, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x62, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x6f, 0x74, 0x12, 0x4a,
	0x0a, 0x0d, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x67, 0x76, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x47, 0x56, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x4f, 0x67, 0x76, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22,
	0xbd, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x3e,
	0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x6f, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x68, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x38, 0x0a, 0x0e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0x75, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x63, 0x6d, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x02, 0x61, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x02, 0x61, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0xb9, 0x02, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x69,
	0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x72,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x5f,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x65, 0x78, 0x74, 0x22,
	0x65, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x74, 0x6e, 0x22, 0x4d, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x6f, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x74,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x70, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x43, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x4c, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x22, 0x3c, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64,
	0x65, 0x22, 0x9c, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4c, 0x0a, 0x05, 0x4e, 0x65, 0x77, 0x45, 0x50, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x09,
	0x0a, 0x07, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73,
	0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x42, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6b, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x4f,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22,
	0x6b, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xd5, 0x01, 0x0a,
	0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x51, 0x0a, 0x0c, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x63, 0x6d, 0x64, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x63, 0x6d,
	0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x63, 0x6d, 0x64,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x63, 0x6d, 0x64, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x22, 0xa4, 0x03, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x63, 0x6d, 0x64, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x31,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x49, 0x63, 0x6f, 0x6e,
	0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0xf8, 0x02, 0x0a, 0x13,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x63, 0x6d, 0x64, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x2f, 0x0a, 0x14, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74,
	0x6f, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x31, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x22, 0x52, 0x0a, 0x09, 0x50,
	0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x7f, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x75, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b,
	0x22, 0x43, 0x0a, 0x05, 0x50, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xd0, 0x03, 0x0a, 0x0b, 0x52, 0x63, 0x6d, 0x64, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e,
	0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31,
	0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x70, 0x67, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x50, 0x67, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x63, 0x6f, 0x6e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x33, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x22, 0x9a, 0x01, 0x0a, 0x0a, 0x52, 0x63, 0x6d,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x08, 0x52, 0x63, 0x6d, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x72, 0x63, 0x6d,
	0x64, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x2b, 0x0a, 0x0a, 0x52, 0x63, 0x6d, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x35,
	0x0a, 0x0d, 0x52, 0x63, 0x6d, 0x64, 0x54, 0x6f, 0x70, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x0c, 0x52, 0x63, 0x6d, 0x64, 0x55, 0x50, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x54, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x44, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x0f,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3d, 0x0a,
	0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x63,
	0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x38, 0x0a, 0x12, 0x53,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x61,
	0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0xb4, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x6d, 0x6f, 0x72, 0x65, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x73, 0x63, 0x54, 0x65, 0x78, 0x74, 0x32, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4b,
	0x0a, 0x0b, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52,
	0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72,
	0x69, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x52, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0c, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x71, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4d, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x40, 0x0a, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x01,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x52, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e,
	0x6f, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x6f, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xd2, 0x02, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x76, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x56, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x76, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x56, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c,
	0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x76, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x63,
	0x6f, 0x6e, 0x56, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x76, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x56, 0x32, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x54, 0x68, 0x72,
	0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x49,
	0x0a, 0x0c, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x75, 0x70,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x08, 0x75, 0x70, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x07, 0x75, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x22,
	0x42, 0x0a, 0x16, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0x3d, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x48, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x6f, 0x6b, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x6f, 0x6b, 0x46, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x19, 0x54, 0x68, 0x72,
	0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x22, 0xf3, 0x06, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x00,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x4c,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x04,
	0x77, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x57,
	0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x68, 0x69, 0x64,
	0x65, 0x12, 0x5f, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x72, 0x72, 0x65, 0x6c,
	0x65, 0x76, 0x61, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x72, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x72, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xea, 0x01, 0x0a, 0x0f, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x6f, 0x0a, 0x0d, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc0, 0x01, 0x0a,
	0x19, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x72, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0xbe, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x61,
	0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x5f, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x50, 0x12, 0x33, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x50, 0x52, 0x02, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x6f,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c,
	0x64, 0x22, 0x6b, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75,
	0x6d, 0x70, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75,
	0x6d, 0x70, 0x55, 0x72, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x73, 0x63, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73,
	0x63, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x63, 0x6d, 0x64, 0x44, 0x65, 0x73, 0x63, 0x22,
	0x9e, 0x02, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xbe, 0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x65, 0x61,
	0x64, 0x49, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x6d,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70, 0x4d, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x7d, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x43, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x63, 0x6d, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0xa1,
	0x01, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x72, 0x63, 0x6d, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x63, 0x6d, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x72, 0x63,
	0x6d, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x6e,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0xb8,
	0x03, 0x0a, 0x10, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x41,
	0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x43, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x9b, 0x04, 0x0a, 0x0a, 0x55, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x52, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x44, 0x61, 0x79, 0x12, 0x56, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x22, 0xef, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76,
	0x69, 0x70, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x3e, 0x0a, 0x07, 0x70,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x66, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x4e,
	0x66, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x6e,
	0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x66,
	0x74, 0x4e, 0x65, 0x77, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x74, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x0a, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x24, 0x0a, 0x0e,
	0x62, 0x67, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x67, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x4e, 0x69, 0x67,
	0x68, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x07, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x53, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x2a, 0x32, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x42, 0x67, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x79, 0x10, 0x02, 0x2a, 0x38, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x62,
	0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x74, 0x5f, 0x6a,
	0x75, 0x6d, 0x70, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x62, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x10, 0x02, 0x2a, 0x6e, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x10, 0x02, 0x2a, 0x88, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x10, 0x02, 0x12,
	0x1e, 0x0a, 0x1a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x03, 0x2a,
	0x39, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x70, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x10, 0x02, 0x2a, 0x33, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x10, 0x01, 0x2a, 0x85, 0x02, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x67, 0x63, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x65, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x70, 0x5f,
	0x72, 0x63, 0x6d, 0x64, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x67, 0x63, 0x10, 0x07, 0x12,
	0x22, 0x0a, 0x1e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x08, 0x2a, 0x83, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x61,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f,
	0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x62, 0x69, 0x6c, 0x6c,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x10, 0x05, 0x2a, 0x35, 0x0a, 0x09, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x10, 0x01,
	0x2a, 0x94, 0x03, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x61, 0x69, 0x74, 0x65, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x6f,
	0x74, 0x65, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x10, 0x06, 0x12, 0x10,
	0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x62, 0x76, 0x10, 0x07,
	0x12, 0x10, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x76,
	0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x64,
	0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x76, 0x10, 0x0b, 0x12, 0x10, 0x0a,
	0x0c, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x76, 0x63, 0x10, 0x0c, 0x12,
	0x11, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x65, 0x62,
	0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x74, 0x61, 0x6f, 0x62, 0x61, 0x6f, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x0f, 0x12, 0x18, 0x0a, 0x14,
	0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x67, 0x76, 0x5f, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6f, 0x67, 0x76, 0x5f, 0x65, 0x70, 0x10, 0x11, 0x12, 0x19, 0x0a, 0x15,
	0x64, 0x65, 0x73, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x12, 0x2a, 0x27, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x67, 0x61, 0x72, 0x79, 0x10, 0x01,
	0x2a, 0xe5, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x64, 0x79, 0x6e,
	0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6c, 0x62, 0x73, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x79, 0x6e, 0x5f, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x68, 0x6f, 0x74, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x18, 0x0a,
	0x14, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x62, 0x69,
	0x6c, 0x69, 0x43, 0x75, 0x74, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x64, 0x79, 0x6e, 0x5f, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x67, 0x76, 0x10, 0x07, 0x12, 0x19, 0x0a,
	0x15, 0x64, 0x79, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x6f, 0x67, 0x76, 0x10, 0x08, 0x2a, 0xc9, 0x04, 0x0a, 0x0d, 0x44, 0x79, 0x6e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x55, 0x73, 0x65, 0x72, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x0b,
	0x12, 0x16, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x64,
	0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x10, 0x10, 0x12, 0x15, 0x0a, 0x11, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x10, 0x12, 0x12, 0x17, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10,
	0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x10,
	0x14, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x10, 0x16, 0x12, 0x10, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x10, 0x17, 0x12, 0x1c, 0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x5f, 0x65, 0x78, 0x74, 0x10, 0x18, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x67, 0x10, 0x19, 0x12, 0x16, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66,
	0x10, 0x1a, 0x12, 0x10, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x10, 0x1b, 0x2a, 0x55, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x55, 0x72, 0x69, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x64, 0x79, 0x6e,
	0x5f, 0x75, 0x72, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x64, 0x79, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x10, 0x02, 0x2a, 0xd3, 0x02, 0x0a, 0x0b,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x64,
	0x79, 0x6e, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x61, 0x76, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x70, 0x67, 0x63, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x6f, 0x6c, 0x64, 0x10, 0x05, 0x12, 0x08,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x64, 0x72, 0x61, 0x77,
	0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x10, 0x08, 0x12,
	0x09, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x10, 0x0a, 0x12, 0x13, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10, 0x0e, 0x12,
	0x06, 0x0a, 0x02, 0x61, 0x64, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x74, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x11, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x63,
	0x6d, 0x64, 0x10, 0x12, 0x12, 0x0a, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x10, 0x13,
	0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x67, 0x63, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10, 0x14,
	0x12, 0x14, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x65, 0x77, 0x10, 0x15, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10,
	0x16, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x10,
	0x17, 0x2a, 0x42, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x6f, 0x6c, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x6e, 0x65, 0x77, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x76, 0x69, 0x70, 0x10, 0x03, 0x2a, 0x17, 0x0a, 0x0b, 0x45, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x6d, 0x6f, 0x62, 0x61, 0x10, 0x00, 0x2a, 0x6d,
	0x0a, 0x08, 0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x6f,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5a, 0x6f, 0x72, 0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x6f, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x6f,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x04, 0x2a, 0x2e, 0x0a,
	0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x66,
	0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x66, 0x74, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x01, 0x2a, 0x39, 0x0a,
	0x12, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x68, 0x69, 0x67,
	0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x0d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x6e,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x09, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x02, 0x2a, 0x3c, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x63,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x10, 0x01, 0x2a, 0x62, 0x0a, 0x10, 0x4d, 0x64, 0x6c, 0x44, 0x79, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x6d, 0x64, 0x6c, 0x5f, 0x64,
	0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x6d,
	0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x10, 0x02, 0x2a, 0xa0, 0x01, 0x0a, 0x11, 0x4d, 0x64, 0x6c, 0x44,
	0x79, 0x6e, 0x44, 0x72, 0x61, 0x77, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61,
	0x77, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x62, 0x73, 0x10, 0x05, 0x2a, 0x97, 0x01, 0x0a, 0x1a, 0x4d,
	0x64, 0x6c, 0x44, 0x79, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x6d, 0x64, 0x6c,
	0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x74,
	0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x6d,
	0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x64, 0x72,
	0x61, 0x77, 0x10, 0x02, 0x2a, 0x67, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x47, 0x43, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x47, 0x43, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x56, 0x43, 0x53, 0x10, 0x04, 0x2a, 0xad, 0x01,
	0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0x03, 0x2a, 0x4c, 0x0a,
	0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x10, 0x01, 0x2a, 0xf1, 0x02, 0x0a, 0x11,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79,
	0x6e, 0x5f, 0x70, 0x67, 0x63, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x6d, 0x64, 0x6c, 0x5f, 0x64,
	0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x72,
	0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x6d, 0x64, 0x6c, 0x5f,
	0x64, 0x79, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x10, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x64, 0x6c, 0x5f, 0x64,
	0x79, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x6d,
	0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x10, 0x09, 0x12, 0x15, 0x0a,
	0x11, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x6d, 0x64, 0x6c, 0x5f,
	0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x6d, 0x64, 0x6c,
	0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10,
	0x0e, 0x12, 0x1c, 0x0a, 0x18, 0x6d, 0x64, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x10, 0x0f, 0x2a,
	0x5e, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x45, 0x4c, 0x4c,
	0x55, 0x4c, 0x41, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x10, 0x05, 0x2a,
	0x2e, 0x0a, 0x08, 0x52, 0x63, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x72,
	0x63, 0x6d, 0x64, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x10, 0x01, 0x2a,
	0x2f, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x0f, 0x0a, 0x0b, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6e, 0x65, 0x77, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x01,
	0x2a, 0xc3, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1c, 0x0a,
	0x18, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6e, 0x6f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x10, 0x05, 0x2a, 0x30, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x68,
	0x6f, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x01, 0x2a, 0x6f, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x26, 0x0a, 0x22, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x2a, 0x34,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x10, 0x01, 0x2a, 0x4c, 0x0a, 0x09, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x54, 0x59, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x59, 0x4e, 0x5f, 0x55, 0x50,
	0x10, 0x02, 0x2a, 0x4d, 0x0a, 0x06, 0x54, 0x46, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x5f, 0x50, 0x4b,
	0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x5f, 0x50, 0x4b, 0x47, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x5f, 0x50, 0x4b, 0x47, 0x10,
	0x05, 0x2a, 0x43, 0x0a, 0x19, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x10, 0x74, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x74, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x2a, 0xdc, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x74, 0x70, 0x5f,
	0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10,
	0x07, 0x12, 0x0b, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x10, 0x08, 0x12, 0x0c,
	0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03,
	0x74, 0x6f, 0x70, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x0d, 0x12,
	0x14, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x72, 0x72, 0x65, 0x6c, 0x65, 0x76,
	0x61, 0x6e, 0x74, 0x10, 0x0e, 0x2a, 0x22, 0x0a, 0x09, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x10, 0x01, 0x2a, 0x27, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x10, 0x01, 0x2a, 0x96, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x03,
	0x12, 0x19, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x10, 0x04, 0x2a, 0xa5, 0x01, 0x0a, 0x0c,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x10, 0x05, 0x2a, 0x6a, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x03, 0x2a,
	0x27, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a,
	0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x10, 0x01, 0x2a, 0x42, 0x0a, 0x0a, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x10, 0x02, 0x32, 0xf7, 0x21, 0x0a,
	0x07, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x58, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x11, 0x44, 0x79, 0x6e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x85,
	0x01, 0x0a, 0x17, 0x44, 0x79, 0x6e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0b, 0x44, 0x79,
	0x6e, 0x46, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x46, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x46, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x73, 0x0a,
	0x11, 0x44, 0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x55, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x52, 0x63, 0x6d, 0x64, 0x55, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x52,
	0x63, 0x6d, 0x64, 0x55, 0x70, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41, 0x6c,
	0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x60,
	0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x41, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x41,
	0x6c, 0x6c, 0x55, 0x70, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x55, 0x0a, 0x07, 0x44, 0x79, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7c, 0x0a, 0x14, 0x44, 0x79, 0x6e, 0x4d, 0x69,
	0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x4d, 0x69, 0x78,
	0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x4d,
	0x69, 0x78, 0x55, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x79, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x5b, 0x0a, 0x09, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x08,
	0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x08, 0x44, 0x79,
	0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x5c, 0x0a, 0x0e, 0x44, 0x79, 0x6e, 0x55, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x63, 0x6d, 0x64, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x70, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x79, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x09, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x79, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x58, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x41, 0x6c, 0x75,
	0x6d, 0x6e, 0x69, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x12, 0x2a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0a, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52,
	0x63, 0x6d, 0x64, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x60, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x60, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x79, 0x6e,
	0x54, 0x61, 0x62, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79,
	0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x79, 0x6e, 0x54, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a,
	0x0c, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x6d, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x7f, 0x0a, 0x15, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x31, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x33,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x10, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x10, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x64, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a,
	0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x52, 0x63, 0x6d, 0x64, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x52, 0x63, 0x6d, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x0b, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5b, 0x0a, 0x09,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x76, 0x0a, 0x12, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6a, 0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6d, 0x0a,
	0x0f, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75,
	0x73, 0x42, 0x69, 0x6c, 0x6c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69,
	0x6c, 0x6c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7d, 0x0a, 0x17,
	0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c, 0x6c, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x42, 0x69, 0x6c,
	0x6c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x79, 0x0a, 0x13, 0x43,
	0x61, 0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x63, 0x6d, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x6d,
	0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x63, 0x6d, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x75, 0x73, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x63, 0x6d, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_dynamic_v2_dynamic_proto_rawDescOnce sync.Once
	file_bilibili_app_dynamic_v2_dynamic_proto_rawDescData = file_bilibili_app_dynamic_v2_dynamic_proto_rawDesc
)

func file_bilibili_app_dynamic_v2_dynamic_proto_rawDescGZIP() []byte {
	file_bilibili_app_dynamic_v2_dynamic_proto_rawDescOnce.Do(func() {
		file_bilibili_app_dynamic_v2_dynamic_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_dynamic_v2_dynamic_proto_rawDescData)
	})
	return file_bilibili_app_dynamic_v2_dynamic_proto_rawDescData
}

var file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes = make([]protoimpl.EnumInfo, 51)
var file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes = make([]protoimpl.MessageInfo, 273)
var file_bilibili_app_dynamic_v2_dynamic_proto_goTypes = []interface{}{
	(AddButtonBgStyle)(0),                // 0: bilibili.app.dynamic.v2.AddButtonBgStyle
	(AddButtonType)(0),                   // 1: bilibili.app.dynamic.v2.AddButtonType
	(AdditionVoteState)(0),               // 2: bilibili.app.dynamic.v2.AdditionVoteState
	(AdditionVoteType)(0),                // 3: bilibili.app.dynamic.v2.AdditionVoteType
	(AdditionalButtonClickType)(0),       // 4: bilibili.app.dynamic.v2.AdditionalButtonClickType
	(AdditionalButtonStatus)(0),          // 5: bilibili.app.dynamic.v2.AdditionalButtonStatus
	(AdditionalShareShowType)(0),         // 6: bilibili.app.dynamic.v2.AdditionalShareShowType
	(AdditionalType)(0),                  // 7: bilibili.app.dynamic.v2.AdditionalType
	(CampusTabType)(0),                   // 8: bilibili.app.dynamic.v2.CampusTabType
	(CoverIcon)(0),                       // 9: bilibili.app.dynamic.v2.CoverIcon
	(DescType)(0),                        // 10: bilibili.app.dynamic.v2.DescType
	(DisableState)(0),                    // 11: bilibili.app.dynamic.v2.DisableState
	(DynExtendType)(0),                   // 12: bilibili.app.dynamic.v2.DynExtendType
	(DynModuleType)(0),                   // 13: bilibili.app.dynamic.v2.DynModuleType
	(DynUriType)(0),                      // 14: bilibili.app.dynamic.v2.DynUriType
	(DynamicType)(0),                     // 15: bilibili.app.dynamic.v2.DynamicType
	(EmojiType)(0),                       // 16: bilibili.app.dynamic.v2.EmojiType
	(EspaceStyle)(0),                     // 17: bilibili.app.dynamic.v2.EspaceStyle
	(FoldType)(0),                        // 18: bilibili.app.dynamic.v2.FoldType
	(FollowType)(0),                      // 19: bilibili.app.dynamic.v2.FollowType
	(HighlightTextStyle)(0),              // 20: bilibili.app.dynamic.v2.HighlightTextStyle
	(ImageStyle)(0),                      // 21: bilibili.app.dynamic.v2.ImageStyle
	(LightFromType)(0),                   // 22: bilibili.app.dynamic.v2.LightFromType
	(LiveState)(0),                       // 23: bilibili.app.dynamic.v2.LiveState
	(LocalIconType)(0),                   // 24: bilibili.app.dynamic.v2.LocalIconType
	(MdlDynCommonType)(0),                // 25: bilibili.app.dynamic.v2.MdlDynCommonType
	(MdlDynDrawTagType)(0),               // 26: bilibili.app.dynamic.v2.MdlDynDrawTagType
	(MdlDynSubscriptionNewStyle)(0),      // 27: bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle
	(MediaType)(0),                       // 28: bilibili.app.dynamic.v2.MediaType
	(ModuleAuthorBadgeType)(0),           // 29: bilibili.app.dynamic.v2.ModuleAuthorBadgeType
	(ModuleBannerType)(0),                // 30: bilibili.app.dynamic.v2.ModuleBannerType
	(ModuleDynamicType)(0),               // 31: bilibili.app.dynamic.v2.ModuleDynamicType
	(NetworkType)(0),                     // 32: bilibili.app.dynamic.v2.NetworkType
	(RcmdType)(0),                        // 33: bilibili.app.dynamic.v2.RcmdType
	(Refresh)(0),                         // 34: bilibili.app.dynamic.v2.Refresh
	(RelationStatus)(0),                  // 35: bilibili.app.dynamic.v2.RelationStatus
	(RepostType)(0),                      // 36: bilibili.app.dynamic.v2.RepostType
	(ReserveRelationLotteryType)(0),      // 37: bilibili.app.dynamic.v2.ReserveRelationLotteryType
	(ReserveType)(0),                     // 38: bilibili.app.dynamic.v2.ReserveType
	(ShowType)(0),                        // 39: bilibili.app.dynamic.v2.ShowType
	(StyleType)(0),                       // 40: bilibili.app.dynamic.v2.StyleType
	(TFType)(0),                          // 41: bilibili.app.dynamic.v2.TFType
	(ThreePointAttentionStatus)(0),       // 42: bilibili.app.dynamic.v2.ThreePointAttentionStatus
	(ThreePointType)(0),                  // 43: bilibili.app.dynamic.v2.ThreePointType
	(ThumbType)(0),                       // 44: bilibili.app.dynamic.v2.ThumbType
	(TopType)(0),                         // 45: bilibili.app.dynamic.v2.TopType
	(UserItemType)(0),                    // 46: bilibili.app.dynamic.v2.UserItemType
	(VideoSubType)(0),                    // 47: bilibili.app.dynamic.v2.VideoSubType
	(VideoType)(0),                       // 48: bilibili.app.dynamic.v2.VideoType
	(VoteStatus)(0),                      // 49: bilibili.app.dynamic.v2.VoteStatus
	(WeightType)(0),                      // 50: bilibili.app.dynamic.v2.WeightType
	(*AdParam)(nil),                      // 51: bilibili.app.dynamic.v2.AdParam
	(*AdditionCommon)(nil),               // 52: bilibili.app.dynamic.v2.AdditionCommon
	(*AdditionEsport)(nil),               // 53: bilibili.app.dynamic.v2.AdditionEsport
	(*AdditionEsportMoba)(nil),           // 54: bilibili.app.dynamic.v2.AdditionEsportMoba
	(*AdditionEsportMobaStatus)(nil),     // 55: bilibili.app.dynamic.v2.AdditionEsportMobaStatus
	(*AdditionEsportMobaStatusDesc)(nil), // 56: bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc
	(*AdditionGoods)(nil),                // 57: bilibili.app.dynamic.v2.AdditionGoods
	(*AdditionUP)(nil),                   // 58: bilibili.app.dynamic.v2.AdditionUP
	(*AdditionUgc)(nil),                  // 59: bilibili.app.dynamic.v2.AdditionUgc
	(*AdditionUserInfo)(nil),             // 60: bilibili.app.dynamic.v2.AdditionUserInfo
	(*AdditionVote)(nil),                 // 61: bilibili.app.dynamic.v2.AdditionVote
	(*AdditionVote2)(nil),                // 62: bilibili.app.dynamic.v2.AdditionVote2
	(*AdditionVoteDefaule)(nil),          // 63: bilibili.app.dynamic.v2.AdditionVoteDefaule
	(*AdditionVotePic)(nil),              // 64: bilibili.app.dynamic.v2.AdditionVotePic
	(*AdditionVotePicItem)(nil),          // 65: bilibili.app.dynamic.v2.AdditionVotePicItem
	(*AdditionVoteWord)(nil),             // 66: bilibili.app.dynamic.v2.AdditionVoteWord
	(*AdditionVoteWordItem)(nil),         // 67: bilibili.app.dynamic.v2.AdditionVoteWordItem
	(*AdditionalActSkin)(nil),            // 68: bilibili.app.dynamic.v2.AdditionalActSkin
	(*AdditionalButton)(nil),             // 69: bilibili.app.dynamic.v2.AdditionalButton
	(*AdditionalButtonInteractive)(nil),  // 70: bilibili.app.dynamic.v2.AdditionalButtonInteractive
	(*AdditionalButtonShare)(nil),        // 71: bilibili.app.dynamic.v2.AdditionalButtonShare
	(*AdditionalButtonStyle)(nil),        // 72: bilibili.app.dynamic.v2.AdditionalButtonStyle
	(*AdditionalPGC)(nil),                // 73: bilibili.app.dynamic.v2.AdditionalPGC
	(*AlumniDynamicsReply)(nil),          // 74: bilibili.app.dynamic.v2.AlumniDynamicsReply
	(*AlumniDynamicsReq)(nil),            // 75: bilibili.app.dynamic.v2.AlumniDynamicsReq
	(*CampusBannerInfo)(nil),             // 76: bilibili.app.dynamic.v2.CampusBannerInfo
	(*CampusBillBoardReply)(nil),         // 77: bilibili.app.dynamic.v2.CampusBillBoardReply
	(*CampusBillBoardReq)(nil),           // 78: bilibili.app.dynamic.v2.CampusBillBoardReq
	(*CampusBillboardInternalReq)(nil),   // 79: bilibili.app.dynamic.v2.CampusBillboardInternalReq
	(*CampusFeedbackInfo)(nil),           // 80: bilibili.app.dynamic.v2.CampusFeedbackInfo
	(*CampusFeedbackReply)(nil),          // 81: bilibili.app.dynamic.v2.CampusFeedbackReply
	(*CampusFeedbackReq)(nil),            // 82: bilibili.app.dynamic.v2.CampusFeedbackReq
	(*CampusInfo)(nil),                   // 83: bilibili.app.dynamic.v2.CampusInfo
	(*CampusLabel)(nil),                  // 84: bilibili.app.dynamic.v2.CampusLabel
	(*CampusMateLikeListReply)(nil),      // 85: bilibili.app.dynamic.v2.CampusMateLikeListReply
	(*CampusMateLikeListReq)(nil),        // 86: bilibili.app.dynamic.v2.CampusMateLikeListReq
	(*CampusNoticeInfo)(nil),             // 87: bilibili.app.dynamic.v2.CampusNoticeInfo
	(*CampusRcmdFeedReply)(nil),          // 88: bilibili.app.dynamic.v2.CampusRcmdFeedReply
	(*CampusRcmdFeedReq)(nil),            // 89: bilibili.app.dynamic.v2.CampusRcmdFeedReq
	(*CampusRcmdInfo)(nil),               // 90: bilibili.app.dynamic.v2.CampusRcmdInfo
	(*CampusRcmdItem)(nil),               // 91: bilibili.app.dynamic.v2.CampusRcmdItem
	(*CampusRcmdReply)(nil),              // 92: bilibili.app.dynamic.v2.CampusRcmdReply
	(*CampusRcmdReq)(nil),                // 93: bilibili.app.dynamic.v2.CampusRcmdReq
	(*CampusRcmdTop)(nil),                // 94: bilibili.app.dynamic.v2.CampusRcmdTop
	(*CampusRedDotReply)(nil),            // 95: bilibili.app.dynamic.v2.CampusRedDotReply
	(*CampusRedDotReq)(nil),              // 96: bilibili.app.dynamic.v2.CampusRedDotReq
	(*CampusShowTabInfo)(nil),            // 97: bilibili.app.dynamic.v2.CampusShowTabInfo
	(*CampusTop)(nil),                    // 98: bilibili.app.dynamic.v2.CampusTop
	(*CampusTopicRcmdFeedReply)(nil),     // 99: bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply
	(*CampusTopicRcmdFeedReq)(nil),       // 100: bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq
	(*CardVideoDynList)(nil),             // 101: bilibili.app.dynamic.v2.CardVideoDynList
	(*CardVideoFollowList)(nil),          // 102: bilibili.app.dynamic.v2.CardVideoFollowList
	(*CardVideoUpList)(nil),              // 103: bilibili.app.dynamic.v2.CardVideoUpList
	(*ChannelInfo)(nil),                  // 104: bilibili.app.dynamic.v2.ChannelInfo
	(*CmtShowItem)(nil),                  // 105: bilibili.app.dynamic.v2.CmtShowItem
	(*CommentDetail)(nil),                // 106: bilibili.app.dynamic.v2.CommentDetail
	(*DecoCardFan)(nil),                  // 107: bilibili.app.dynamic.v2.DecoCardFan
	(*DecorateCard)(nil),                 // 108: bilibili.app.dynamic.v2.DecorateCard
	(*Description)(nil),                  // 109: bilibili.app.dynamic.v2.Description
	(*Dimension)(nil),                    // 110: bilibili.app.dynamic.v2.Dimension
	(*DynAdditionCommonFollowReply)(nil), // 111: bilibili.app.dynamic.v2.DynAdditionCommonFollowReply
	(*DynAdditionCommonFollowReq)(nil),   // 112: bilibili.app.dynamic.v2.DynAdditionCommonFollowReq
	(*DynAllPersonalReply)(nil),          // 113: bilibili.app.dynamic.v2.DynAllPersonalReply
	(*DynAllPersonalReq)(nil),            // 114: bilibili.app.dynamic.v2.DynAllPersonalReq
	(*DynAllReply)(nil),                  // 115: bilibili.app.dynamic.v2.DynAllReply
	(*DynAllReq)(nil),                    // 116: bilibili.app.dynamic.v2.DynAllReq
	(*DynAllUpdOffsetReq)(nil),           // 117: bilibili.app.dynamic.v2.DynAllUpdOffsetReq
	(*DynDetailReply)(nil),               // 118: bilibili.app.dynamic.v2.DynDetailReply
	(*DynDetailReq)(nil),                 // 119: bilibili.app.dynamic.v2.DynDetailReq
	(*DynDetailsReply)(nil),              // 120: bilibili.app.dynamic.v2.DynDetailsReply
	(*DynDetailsReq)(nil),                // 121: bilibili.app.dynamic.v2.DynDetailsReq
	(*DynFakeCardReply)(nil),             // 122: bilibili.app.dynamic.v2.DynFakeCardReply
	(*DynFakeCardReq)(nil),               // 123: bilibili.app.dynamic.v2.DynFakeCardReq
	(*DynLightReply)(nil),                // 124: bilibili.app.dynamic.v2.DynLightReply
	(*DynLightReq)(nil),                  // 125: bilibili.app.dynamic.v2.DynLightReq
	(*DynMixUpListViewMoreReply)(nil),    // 126: bilibili.app.dynamic.v2.DynMixUpListViewMoreReply
	(*DynMixUpListViewMoreReq)(nil),      // 127: bilibili.app.dynamic.v2.DynMixUpListViewMoreReq
	(*DynRcmdReply)(nil),                 // 128: bilibili.app.dynamic.v2.DynRcmdReply
	(*DynRcmdReq)(nil),                   // 129: bilibili.app.dynamic.v2.DynRcmdReq
	(*DynRcmdUpExchangeReply)(nil),       // 130: bilibili.app.dynamic.v2.DynRcmdUpExchangeReply
	(*DynRcmdUpExchangeReq)(nil),         // 131: bilibili.app.dynamic.v2.DynRcmdUpExchangeReq
	(*DynRegionRcmd)(nil),                // 132: bilibili.app.dynamic.v2.DynRegionRcmd
	(*DynRegionRcmdItem)(nil),            // 133: bilibili.app.dynamic.v2.DynRegionRcmdItem
	(*DynSearchReply)(nil),               // 134: bilibili.app.dynamic.v2.DynSearchReply
	(*DynSearchReq)(nil),                 // 135: bilibili.app.dynamic.v2.DynSearchReq
	(*DynServerDetailsReply)(nil),        // 136: bilibili.app.dynamic.v2.DynServerDetailsReply
	(*DynServerDetailsReq)(nil),          // 137: bilibili.app.dynamic.v2.DynServerDetailsReq
	(*DynSpaceReq)(nil),                  // 138: bilibili.app.dynamic.v2.DynSpaceReq
	(*DynSpaceRsp)(nil),                  // 139: bilibili.app.dynamic.v2.DynSpaceRsp
	(*DynSpaceSearchDetailsReply)(nil),   // 140: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply
	(*DynSpaceSearchDetailsReq)(nil),     // 141: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq
	(*DynTab)(nil),                       // 142: bilibili.app.dynamic.v2.DynTab
	(*DynTabReply)(nil),                  // 143: bilibili.app.dynamic.v2.DynTabReply
	(*DynTabReq)(nil),                    // 144: bilibili.app.dynamic.v2.DynTabReq
	(*DynThumbReq)(nil),                  // 145: bilibili.app.dynamic.v2.DynThumbReq
	(*DynVideoPersonalReply)(nil),        // 146: bilibili.app.dynamic.v2.DynVideoPersonalReply
	(*DynVideoPersonalReq)(nil),          // 147: bilibili.app.dynamic.v2.DynVideoPersonalReq
	(*DynVideoReply)(nil),                // 148: bilibili.app.dynamic.v2.DynVideoReply
	(*DynVideoReq)(nil),                  // 149: bilibili.app.dynamic.v2.DynVideoReq
	(*DynVideoUpdOffsetReq)(nil),         // 150: bilibili.app.dynamic.v2.DynVideoUpdOffsetReq
	(*DynVoteReply)(nil),                 // 151: bilibili.app.dynamic.v2.DynVoteReply
	(*DynVoteReq)(nil),                   // 152: bilibili.app.dynamic.v2.DynVoteReq
	(*DynamicItem)(nil),                  // 153: bilibili.app.dynamic.v2.DynamicItem
	(*DynamicList)(nil),                  // 154: bilibili.app.dynamic.v2.DynamicList
	(*ExtInfoCommon)(nil),                // 155: bilibili.app.dynamic.v2.ExtInfoCommon
	(*ExtInfoGame)(nil),                  // 156: bilibili.app.dynamic.v2.ExtInfoGame
	(*ExtInfoHot)(nil),                   // 157: bilibili.app.dynamic.v2.ExtInfoHot
	(*ExtInfoLBS)(nil),                   // 158: bilibili.app.dynamic.v2.ExtInfoLBS
	(*ExtInfoOGV)(nil),                   // 159: bilibili.app.dynamic.v2.ExtInfoOGV
	(*ExtInfoTopic)(nil),                 // 160: bilibili.app.dynamic.v2.ExtInfoTopic
	(*Extend)(nil),                       // 161: bilibili.app.dynamic.v2.Extend
	(*ExtendReply)(nil),                  // 162: bilibili.app.dynamic.v2.ExtendReply
	(*ExtendReplyParam)(nil),             // 163: bilibili.app.dynamic.v2.ExtendReplyParam
	(*FollowListItem)(nil),               // 164: bilibili.app.dynamic.v2.FollowListItem
	(*GoodsItem)(nil),                    // 165: bilibili.app.dynamic.v2.GoodsItem
	(*GuideBarInfo)(nil),                 // 166: bilibili.app.dynamic.v2.GuideBarInfo
	(*HighlightText)(nil),                // 167: bilibili.app.dynamic.v2.HighlightText
	(*IconBadge)(nil),                    // 168: bilibili.app.dynamic.v2.IconBadge
	(*IconButton)(nil),                   // 169: bilibili.app.dynamic.v2.IconButton
	(*InfoOGV)(nil),                      // 170: bilibili.app.dynamic.v2.InfoOGV
	(*InteractionFace)(nil),              // 171: bilibili.app.dynamic.v2.InteractionFace
	(*InteractionItem)(nil),              // 172: bilibili.app.dynamic.v2.InteractionItem
	(*InteractionStat)(nil),              // 173: bilibili.app.dynamic.v2.InteractionStat
	(*LikeAnimation)(nil),                // 174: bilibili.app.dynamic.v2.LikeAnimation
	(*LikeInfo)(nil),                     // 175: bilibili.app.dynamic.v2.LikeInfo
	(*LikeListReply)(nil),                // 176: bilibili.app.dynamic.v2.LikeListReply
	(*LikeListReq)(nil),                  // 177: bilibili.app.dynamic.v2.LikeListReq
	(*LikeUser)(nil),                     // 178: bilibili.app.dynamic.v2.LikeUser
	(*LiveInfo)(nil),                     // 179: bilibili.app.dynamic.v2.LiveInfo
	(*LivePendant)(nil),                  // 180: bilibili.app.dynamic.v2.LivePendant
	(*MatchTeam)(nil),                    // 181: bilibili.app.dynamic.v2.MatchTeam
	(*MdlDynApplet)(nil),                 // 182: bilibili.app.dynamic.v2.MdlDynApplet
	(*MdlDynArchive)(nil),                // 183: bilibili.app.dynamic.v2.MdlDynArchive
	(*MdlDynArticle)(nil),                // 184: bilibili.app.dynamic.v2.MdlDynArticle
	(*MdlDynCommon)(nil),                 // 185: bilibili.app.dynamic.v2.MdlDynCommon
	(*MdlDynCourBatch)(nil),              // 186: bilibili.app.dynamic.v2.MdlDynCourBatch
	(*MdlDynCourSeason)(nil),             // 187: bilibili.app.dynamic.v2.MdlDynCourSeason
	(*MdlDynDraw)(nil),                   // 188: bilibili.app.dynamic.v2.MdlDynDraw
	(*MdlDynDrawItem)(nil),               // 189: bilibili.app.dynamic.v2.MdlDynDrawItem
	(*MdlDynDrawTag)(nil),                // 190: bilibili.app.dynamic.v2.MdlDynDrawTag
	(*MdlDynDrawTagItem)(nil),            // 191: bilibili.app.dynamic.v2.MdlDynDrawTagItem
	(*MdlDynForward)(nil),                // 192: bilibili.app.dynamic.v2.MdlDynForward
	(*MdlDynLive)(nil),                   // 193: bilibili.app.dynamic.v2.MdlDynLive
	(*MdlDynLiveRcmd)(nil),               // 194: bilibili.app.dynamic.v2.MdlDynLiveRcmd
	(*MdlDynMedialist)(nil),              // 195: bilibili.app.dynamic.v2.MdlDynMedialist
	(*MdlDynMusic)(nil),                  // 196: bilibili.app.dynamic.v2.MdlDynMusic
	(*MdlDynPGC)(nil),                    // 197: bilibili.app.dynamic.v2.MdlDynPGC
	(*MdlDynSubscription)(nil),           // 198: bilibili.app.dynamic.v2.MdlDynSubscription
	(*MdlDynSubscriptionNew)(nil),        // 199: bilibili.app.dynamic.v2.MdlDynSubscriptionNew
	(*MdlDynUGCSeason)(nil),              // 200: bilibili.app.dynamic.v2.MdlDynUGCSeason
	(*MixUpListItem)(nil),                // 201: bilibili.app.dynamic.v2.MixUpListItem
	(*MixUpListLiveItem)(nil),            // 202: bilibili.app.dynamic.v2.MixUpListLiveItem
	(*Module)(nil),                       // 203: bilibili.app.dynamic.v2.Module
	(*ModuleAd)(nil),                     // 204: bilibili.app.dynamic.v2.ModuleAd
	(*ModuleAdditional)(nil),             // 205: bilibili.app.dynamic.v2.ModuleAdditional
	(*ModuleAuthor)(nil),                 // 206: bilibili.app.dynamic.v2.ModuleAuthor
	(*ModuleAuthorBadgeButton)(nil),      // 207: bilibili.app.dynamic.v2.ModuleAuthorBadgeButton
	(*ModuleAuthorForward)(nil),          // 208: bilibili.app.dynamic.v2.ModuleAuthorForward
	(*ModuleAuthorForwardTitle)(nil),     // 209: bilibili.app.dynamic.v2.ModuleAuthorForwardTitle
	(*ModuleBanner)(nil),                 // 210: bilibili.app.dynamic.v2.ModuleBanner
	(*ModuleBannerUser)(nil),             // 211: bilibili.app.dynamic.v2.ModuleBannerUser
	(*ModuleBannerUserItem)(nil),         // 212: bilibili.app.dynamic.v2.ModuleBannerUserItem
	(*ModuleButtom)(nil),                 // 213: bilibili.app.dynamic.v2.ModuleButtom
	(*ModuleComment)(nil),                // 214: bilibili.app.dynamic.v2.ModuleComment
	(*ModuleDesc)(nil),                   // 215: bilibili.app.dynamic.v2.ModuleDesc
	(*ModuleDescGoods)(nil),              // 216: bilibili.app.dynamic.v2.ModuleDescGoods
	(*ModuleDispute)(nil),                // 217: bilibili.app.dynamic.v2.ModuleDispute
	(*ModuleDynamic)(nil),                // 218: bilibili.app.dynamic.v2.ModuleDynamic
	(*ModuleExtend)(nil),                 // 219: bilibili.app.dynamic.v2.ModuleExtend
	(*ModuleExtendItem)(nil),             // 220: bilibili.app.dynamic.v2.ModuleExtendItem
	(*ModuleFold)(nil),                   // 221: bilibili.app.dynamic.v2.ModuleFold
	(*ModuleInteraction)(nil),            // 222: bilibili.app.dynamic.v2.ModuleInteraction
	(*ModuleItemNull)(nil),               // 223: bilibili.app.dynamic.v2.ModuleItemNull
	(*ModuleLikeUser)(nil),               // 224: bilibili.app.dynamic.v2.ModuleLikeUser
	(*ModuleRcmd)(nil),                   // 225: bilibili.app.dynamic.v2.ModuleRcmd
	(*ModuleRecommend)(nil),              // 226: bilibili.app.dynamic.v2.ModuleRecommend
	(*ModuleShareInfo)(nil),              // 227: bilibili.app.dynamic.v2.ModuleShareInfo
	(*ModuleStat)(nil),                   // 228: bilibili.app.dynamic.v2.ModuleStat
	(*ModuleStory)(nil),                  // 229: bilibili.app.dynamic.v2.ModuleStory
	(*ModuleTitle)(nil),                  // 230: bilibili.app.dynamic.v2.ModuleTitle
	(*ModuleTop)(nil),                    // 231: bilibili.app.dynamic.v2.ModuleTop
	(*ModuleTopTag)(nil),                 // 232: bilibili.app.dynamic.v2.ModuleTopTag
	(*ModuleTopic)(nil),                  // 233: bilibili.app.dynamic.v2.ModuleTopic
	(*ModuleTopicBrief)(nil),             // 234: bilibili.app.dynamic.v2.ModuleTopicBrief
	(*ModuleTopicDetailsExt)(nil),        // 235: bilibili.app.dynamic.v2.ModuleTopicDetailsExt
	(*Nameplate)(nil),                    // 236: bilibili.app.dynamic.v2.Nameplate
	(*NewEP)(nil),                        // 237: bilibili.app.dynamic.v2.NewEP
	(*NoReply)(nil),                      // 238: bilibili.app.dynamic.v2.NoReply
	(*NoReq)(nil),                        // 239: bilibili.app.dynamic.v2.NoReq
	(*OfficialAccountInfo)(nil),          // 240: bilibili.app.dynamic.v2.OfficialAccountInfo
	(*OfficialAccountsReply)(nil),        // 241: bilibili.app.dynamic.v2.OfficialAccountsReply
	(*OfficialAccountsReq)(nil),          // 242: bilibili.app.dynamic.v2.OfficialAccountsReq
	(*OfficialDynamicsReply)(nil),        // 243: bilibili.app.dynamic.v2.OfficialDynamicsReply
	(*OfficialDynamicsReq)(nil),          // 244: bilibili.app.dynamic.v2.OfficialDynamicsReq
	(*OfficialItem)(nil),                 // 245: bilibili.app.dynamic.v2.OfficialItem
	(*OfficialRcmdArchive)(nil),          // 246: bilibili.app.dynamic.v2.OfficialRcmdArchive
	(*OfficialRcmdDynamic)(nil),          // 247: bilibili.app.dynamic.v2.OfficialRcmdDynamic
	(*OfficialVerify)(nil),               // 248: bilibili.app.dynamic.v2.OfficialVerify
	(*PGCSeason)(nil),                    // 249: bilibili.app.dynamic.v2.PGCSeason
	(*PlayurlParam)(nil),                 // 250: bilibili.app.dynamic.v2.PlayurlParam
	(*Popup)(nil),                        // 251: bilibili.app.dynamic.v2.Popup
	(*RcmdArchive)(nil),                  // 252: bilibili.app.dynamic.v2.RcmdArchive
	(*RcmdAuthor)(nil),                   // 253: bilibili.app.dynamic.v2.RcmdAuthor
	(*RcmdItem)(nil),                     // 254: bilibili.app.dynamic.v2.RcmdItem
	(*RcmdOption)(nil),                   // 255: bilibili.app.dynamic.v2.RcmdOption
	(*RcmdTopButton)(nil),                // 256: bilibili.app.dynamic.v2.RcmdTopButton
	(*RcmdUPsParam)(nil),                 // 257: bilibili.app.dynamic.v2.RcmdUPsParam
	(*Relation)(nil),                     // 258: bilibili.app.dynamic.v2.Relation
	(*RepostListReq)(nil),                // 259: bilibili.app.dynamic.v2.RepostListReq
	(*RepostListRsp)(nil),                // 260: bilibili.app.dynamic.v2.RepostListRsp
	(*ReactionListReq)(nil),              // 261: bilibili.app.dynamic.v2.ReactionListReq
	(*ReactionListReply)(nil),            // 262: bilibili.app.dynamic.v2.ReactionListReply
	(*ReactionListItem)(nil),             // 263: bilibili.app.dynamic.v2.ReactionListItem
	(*SchoolRecommendReply)(nil),         // 264: bilibili.app.dynamic.v2.SchoolRecommendReply
	(*SchoolRecommendReq)(nil),           // 265: bilibili.app.dynamic.v2.SchoolRecommendReq
	(*SchoolSearchReply)(nil),            // 266: bilibili.app.dynamic.v2.SchoolSearchReply
	(*SchoolSearchReq)(nil),              // 267: bilibili.app.dynamic.v2.SchoolSearchReq
	(*SearchChannel)(nil),                // 268: bilibili.app.dynamic.v2.SearchChannel
	(*SearchInfo)(nil),                   // 269: bilibili.app.dynamic.v2.SearchInfo
	(*SearchToast)(nil),                  // 270: bilibili.app.dynamic.v2.SearchToast
	(*SearchTopic)(nil),                  // 271: bilibili.app.dynamic.v2.SearchTopic
	(*SearchTopicButton)(nil),            // 272: bilibili.app.dynamic.v2.SearchTopicButton
	(*SearchTopicItem)(nil),              // 273: bilibili.app.dynamic.v2.SearchTopicItem
	(*SetDecisionReq)(nil),               // 274: bilibili.app.dynamic.v2.SetDecisionReq
	(*SetRecentCampusReq)(nil),           // 275: bilibili.app.dynamic.v2.SetRecentCampusReq
	(*ShareChannel)(nil),                 // 276: bilibili.app.dynamic.v2.ShareChannel
	(*ShareReserve)(nil),                 // 277: bilibili.app.dynamic.v2.ShareReserve
	(*SortType)(nil),                     // 278: bilibili.app.dynamic.v2.SortType
	(*StoryArchive)(nil),                 // 279: bilibili.app.dynamic.v2.StoryArchive
	(*StoryItem)(nil),                    // 280: bilibili.app.dynamic.v2.StoryItem
	(*SubscribeCampusReq)(nil),           // 281: bilibili.app.dynamic.v2.SubscribeCampusReq
	(*ThreePointAttention)(nil),          // 282: bilibili.app.dynamic.v2.ThreePointAttention
	(*ThreePointAutoPlay)(nil),           // 283: bilibili.app.dynamic.v2.ThreePointAutoPlay
	(*ThreePointComment)(nil),            // 284: bilibili.app.dynamic.v2.ThreePointComment
	(*ThreePointDefault)(nil),            // 285: bilibili.app.dynamic.v2.ThreePointDefault
	(*ThreePointDefaultToast)(nil),       // 286: bilibili.app.dynamic.v2.ThreePointDefaultToast
	(*ThreePointDislike)(nil),            // 287: bilibili.app.dynamic.v2.ThreePointDislike
	(*ThreePointFavorite)(nil),           // 288: bilibili.app.dynamic.v2.ThreePointFavorite
	(*ThreePointHide)(nil),               // 289: bilibili.app.dynamic.v2.ThreePointHide
	(*ThreePointHideInteractive)(nil),    // 290: bilibili.app.dynamic.v2.ThreePointHideInteractive
	(*ThreePointItem)(nil),               // 291: bilibili.app.dynamic.v2.ThreePointItem
	(*ThreePointShare)(nil),              // 292: bilibili.app.dynamic.v2.ThreePointShare
	(*ThreePointShareChannel)(nil),       // 293: bilibili.app.dynamic.v2.ThreePointShareChannel
	(*ThreePointTop)(nil),                // 294: bilibili.app.dynamic.v2.ThreePointTop
	(*ThreePointTopicIrrelevant)(nil),    // 295: bilibili.app.dynamic.v2.ThreePointTopicIrrelevant
	(*ThreePointWait)(nil),               // 296: bilibili.app.dynamic.v2.ThreePointWait
	(*TopAdditionUP)(nil),                // 297: bilibili.app.dynamic.v2.TopAdditionUP
	(*TopicButton)(nil),                  // 298: bilibili.app.dynamic.v2.TopicButton
	(*TopicItem)(nil),                    // 299: bilibili.app.dynamic.v2.TopicItem
	(*TopicList)(nil),                    // 300: bilibili.app.dynamic.v2.TopicList
	(*TopicListItem)(nil),                // 301: bilibili.app.dynamic.v2.TopicListItem
	(*TopicListReply)(nil),               // 302: bilibili.app.dynamic.v2.TopicListReply
	(*TopicListReq)(nil),                 // 303: bilibili.app.dynamic.v2.TopicListReq
	(*TopicRcmdCard)(nil),                // 304: bilibili.app.dynamic.v2.TopicRcmdCard
	(*TopicSquareInfo)(nil),              // 305: bilibili.app.dynamic.v2.TopicSquareInfo
	(*TopicSquareReply)(nil),             // 306: bilibili.app.dynamic.v2.TopicSquareReply
	(*TopicSquareReq)(nil),               // 307: bilibili.app.dynamic.v2.TopicSquareReq
	(*Unfollow)(nil),                     // 308: bilibili.app.dynamic.v2.Unfollow
	(*UnfollowUserItem)(nil),             // 309: bilibili.app.dynamic.v2.UnfollowUserItem
	(*UpListItem)(nil),                   // 310: bilibili.app.dynamic.v2.UpListItem
	(*UpListMoreLabel)(nil),              // 311: bilibili.app.dynamic.v2.UpListMoreLabel
	(*UserInfo)(nil),                     // 312: bilibili.app.dynamic.v2.UserInfo
	(*UserItemStyle)(nil),                // 313: bilibili.app.dynamic.v2.UserItemStyle
	(*UserPendant)(nil),                  // 314: bilibili.app.dynamic.v2.UserPendant
	(*VideoBadge)(nil),                   // 315: bilibili.app.dynamic.v2.VideoBadge
	(*VipInfo)(nil),                      // 316: bilibili.app.dynamic.v2.VipInfo
	(*VipLabel)(nil),                     // 317: bilibili.app.dynamic.v2.VipLabel
	(*Weight)(nil),                       // 318: bilibili.app.dynamic.v2.Weight
	(*WeightButton)(nil),                 // 319: bilibili.app.dynamic.v2.WeightButton
	(*WeightDislike)(nil),                // 320: bilibili.app.dynamic.v2.WeightDislike
	(*WeightItem)(nil),                   // 321: bilibili.app.dynamic.v2.WeightItem
	nil,                                  // 322: bilibili.app.dynamic.v2.DynServerDetailsReply.ItemsEntry
	nil,                                  // 323: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.ItemsEntry
	(*v1.PlayerArgs)(nil),                // 324: bilibili.app.archive.middleware.v1.PlayerArgs
	(*anypb.Any)(nil),                    // 325: google.protobuf.Any
}
var file_bilibili_app_dynamic_v2_dynamic_proto_depIdxs = []int32{
	69,  // 0: bilibili.app.dynamic.v2.AdditionCommon.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	21,  // 1: bilibili.app.dynamic.v2.AdditionCommon.style:type_name -> bilibili.app.dynamic.v2.ImageStyle
	17,  // 2: bilibili.app.dynamic.v2.AdditionEsport.style:type_name -> bilibili.app.dynamic.v2.EspaceStyle
	54,  // 3: bilibili.app.dynamic.v2.AdditionEsport.addition_esport_moba:type_name -> bilibili.app.dynamic.v2.AdditionEsportMoba
	181, // 4: bilibili.app.dynamic.v2.AdditionEsportMoba.match_team:type_name -> bilibili.app.dynamic.v2.MatchTeam
	55,  // 5: bilibili.app.dynamic.v2.AdditionEsportMoba.addition_esport_moba_status:type_name -> bilibili.app.dynamic.v2.AdditionEsportMobaStatus
	69,  // 6: bilibili.app.dynamic.v2.AdditionEsportMoba.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	56,  // 7: bilibili.app.dynamic.v2.AdditionEsportMobaStatus.addition_esport_moba_status_desc:type_name -> bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc
	165, // 8: bilibili.app.dynamic.v2.AdditionGoods.goods_items:type_name -> bilibili.app.dynamic.v2.GoodsItem
	167, // 9: bilibili.app.dynamic.v2.AdditionUP.desc_text_1:type_name -> bilibili.app.dynamic.v2.HighlightText
	69,  // 10: bilibili.app.dynamic.v2.AdditionUP.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	68,  // 11: bilibili.app.dynamic.v2.AdditionUP.act_skin:type_name -> bilibili.app.dynamic.v2.AdditionalActSkin
	167, // 12: bilibili.app.dynamic.v2.AdditionUP.desc_text3:type_name -> bilibili.app.dynamic.v2.HighlightText
	60,  // 13: bilibili.app.dynamic.v2.AdditionUP.user_info:type_name -> bilibili.app.dynamic.v2.AdditionUserInfo
	3,   // 14: bilibili.app.dynamic.v2.AdditionVote2.addition_vote_type:type_name -> bilibili.app.dynamic.v2.AdditionVoteType
	2,   // 15: bilibili.app.dynamic.v2.AdditionVote2.state:type_name -> bilibili.app.dynamic.v2.AdditionVoteState
	66,  // 16: bilibili.app.dynamic.v2.AdditionVote2.addition_vote_word:type_name -> bilibili.app.dynamic.v2.AdditionVoteWord
	64,  // 17: bilibili.app.dynamic.v2.AdditionVote2.addition_vote_pic:type_name -> bilibili.app.dynamic.v2.AdditionVotePic
	63,  // 18: bilibili.app.dynamic.v2.AdditionVote2.addition_vote_defaule:type_name -> bilibili.app.dynamic.v2.AdditionVoteDefaule
	65,  // 19: bilibili.app.dynamic.v2.AdditionVotePic.item:type_name -> bilibili.app.dynamic.v2.AdditionVotePicItem
	67,  // 20: bilibili.app.dynamic.v2.AdditionVoteWord.item:type_name -> bilibili.app.dynamic.v2.AdditionVoteWordItem
	1,   // 21: bilibili.app.dynamic.v2.AdditionalButton.type:type_name -> bilibili.app.dynamic.v2.AddButtonType
	72,  // 22: bilibili.app.dynamic.v2.AdditionalButton.jump_style:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStyle
	72,  // 23: bilibili.app.dynamic.v2.AdditionalButton.uncheck:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStyle
	72,  // 24: bilibili.app.dynamic.v2.AdditionalButton.check:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStyle
	5,   // 25: bilibili.app.dynamic.v2.AdditionalButton.status:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStatus
	4,   // 26: bilibili.app.dynamic.v2.AdditionalButton.click_type:type_name -> bilibili.app.dynamic.v2.AdditionalButtonClickType
	70,  // 27: bilibili.app.dynamic.v2.AdditionalButtonStyle.interactive:type_name -> bilibili.app.dynamic.v2.AdditionalButtonInteractive
	0,   // 28: bilibili.app.dynamic.v2.AdditionalButtonStyle.bg_style:type_name -> bilibili.app.dynamic.v2.AddButtonBgStyle
	11,  // 29: bilibili.app.dynamic.v2.AdditionalButtonStyle.disable:type_name -> bilibili.app.dynamic.v2.DisableState
	71,  // 30: bilibili.app.dynamic.v2.AdditionalButtonStyle.share:type_name -> bilibili.app.dynamic.v2.AdditionalButtonShare
	69,  // 31: bilibili.app.dynamic.v2.AdditionalPGC.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	21,  // 32: bilibili.app.dynamic.v2.AdditionalPGC.style:type_name -> bilibili.app.dynamic.v2.ImageStyle
	153, // 33: bilibili.app.dynamic.v2.AlumniDynamicsReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	324, // 34: bilibili.app.dynamic.v2.AlumniDynamicsReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	245, // 35: bilibili.app.dynamic.v2.CampusBillBoardReply.list:type_name -> bilibili.app.dynamic.v2.OfficialItem
	324, // 36: bilibili.app.dynamic.v2.CampusBillBoardReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	80,  // 37: bilibili.app.dynamic.v2.CampusFeedbackReq.infos:type_name -> bilibili.app.dynamic.v2.CampusFeedbackInfo
	206, // 38: bilibili.app.dynamic.v2.CampusMateLikeListReply.list:type_name -> bilibili.app.dynamic.v2.ModuleAuthor
	84,  // 39: bilibili.app.dynamic.v2.CampusNoticeInfo.button:type_name -> bilibili.app.dynamic.v2.CampusLabel
	153, // 40: bilibili.app.dynamic.v2.CampusRcmdFeedReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	166, // 41: bilibili.app.dynamic.v2.CampusRcmdFeedReply.guide_bar:type_name -> bilibili.app.dynamic.v2.GuideBarInfo
	324, // 42: bilibili.app.dynamic.v2.CampusRcmdFeedReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	91,  // 43: bilibili.app.dynamic.v2.CampusRcmdInfo.items:type_name -> bilibili.app.dynamic.v2.CampusRcmdItem
	254, // 44: bilibili.app.dynamic.v2.CampusRcmdItem.items:type_name -> bilibili.app.dynamic.v2.RcmdItem
	84,  // 45: bilibili.app.dynamic.v2.CampusRcmdItem.entry_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	94,  // 46: bilibili.app.dynamic.v2.CampusRcmdReply.top:type_name -> bilibili.app.dynamic.v2.CampusRcmdTop
	90,  // 47: bilibili.app.dynamic.v2.CampusRcmdReply.rcmd:type_name -> bilibili.app.dynamic.v2.CampusRcmdInfo
	98,  // 48: bilibili.app.dynamic.v2.CampusRcmdReply.campus_top:type_name -> bilibili.app.dynamic.v2.CampusTop
	324, // 49: bilibili.app.dynamic.v2.CampusRcmdReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	256, // 50: bilibili.app.dynamic.v2.CampusRcmdTop.button:type_name -> bilibili.app.dynamic.v2.RcmdTopButton
	84,  // 51: bilibili.app.dynamic.v2.CampusRcmdTop.switch_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	84,  // 52: bilibili.app.dynamic.v2.CampusRcmdTop.notice_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	84,  // 53: bilibili.app.dynamic.v2.CampusRcmdTop.invite_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	84,  // 54: bilibili.app.dynamic.v2.CampusRcmdTop.reserve_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	97,  // 55: bilibili.app.dynamic.v2.CampusTop.tabs:type_name -> bilibili.app.dynamic.v2.CampusShowTabInfo
	84,  // 56: bilibili.app.dynamic.v2.CampusTop.switch_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	76,  // 57: bilibili.app.dynamic.v2.CampusTop.banner:type_name -> bilibili.app.dynamic.v2.CampusBannerInfo
	84,  // 58: bilibili.app.dynamic.v2.CampusTop.invite_label:type_name -> bilibili.app.dynamic.v2.CampusLabel
	87,  // 59: bilibili.app.dynamic.v2.CampusTop.notice:type_name -> bilibili.app.dynamic.v2.CampusNoticeInfo
	305, // 60: bilibili.app.dynamic.v2.CampusTop.topic_square:type_name -> bilibili.app.dynamic.v2.TopicSquareInfo
	153, // 61: bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	324, // 62: bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	153, // 63: bilibili.app.dynamic.v2.CardVideoDynList.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	164, // 64: bilibili.app.dynamic.v2.CardVideoFollowList.list:type_name -> bilibili.app.dynamic.v2.FollowListItem
	310, // 65: bilibili.app.dynamic.v2.CardVideoUpList.list:type_name -> bilibili.app.dynamic.v2.UpListItem
	311, // 66: bilibili.app.dynamic.v2.CardVideoUpList.more_label:type_name -> bilibili.app.dynamic.v2.UpListMoreLabel
	254, // 67: bilibili.app.dynamic.v2.ChannelInfo.items:type_name -> bilibili.app.dynamic.v2.RcmdItem
	107, // 68: bilibili.app.dynamic.v2.DecorateCard.fan:type_name -> bilibili.app.dynamic.v2.DecoCardFan
	10,  // 69: bilibili.app.dynamic.v2.Description.type:type_name -> bilibili.app.dynamic.v2.DescType
	16,  // 70: bilibili.app.dynamic.v2.Description.emoji_type:type_name -> bilibili.app.dynamic.v2.EmojiType
	216, // 71: bilibili.app.dynamic.v2.Description.goods:type_name -> bilibili.app.dynamic.v2.ModuleDescGoods
	5,   // 72: bilibili.app.dynamic.v2.DynAdditionCommonFollowReply.status:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStatus
	5,   // 73: bilibili.app.dynamic.v2.DynAdditionCommonFollowReq.status:type_name -> bilibili.app.dynamic.v2.AdditionalButtonStatus
	153, // 74: bilibili.app.dynamic.v2.DynAllPersonalReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	258, // 75: bilibili.app.dynamic.v2.DynAllPersonalReply.relation:type_name -> bilibili.app.dynamic.v2.Relation
	297, // 76: bilibili.app.dynamic.v2.DynAllPersonalReply.addition_up:type_name -> bilibili.app.dynamic.v2.TopAdditionUP
	250, // 77: bilibili.app.dynamic.v2.DynAllPersonalReq.playurl_param:type_name -> bilibili.app.dynamic.v2.PlayurlParam
	324, // 78: bilibili.app.dynamic.v2.DynAllPersonalReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	154, // 79: bilibili.app.dynamic.v2.DynAllReply.dynamic_list:type_name -> bilibili.app.dynamic.v2.DynamicList
	103, // 80: bilibili.app.dynamic.v2.DynAllReply.up_list:type_name -> bilibili.app.dynamic.v2.CardVideoUpList
	300, // 81: bilibili.app.dynamic.v2.DynAllReply.topic_list:type_name -> bilibili.app.dynamic.v2.TopicList
	308, // 82: bilibili.app.dynamic.v2.DynAllReply.unfollow:type_name -> bilibili.app.dynamic.v2.Unfollow
	132, // 83: bilibili.app.dynamic.v2.DynAllReply.region_rcmd:type_name -> bilibili.app.dynamic.v2.DynRegionRcmd
	34,  // 84: bilibili.app.dynamic.v2.DynAllReq.refresh_type:type_name -> bilibili.app.dynamic.v2.Refresh
	250, // 85: bilibili.app.dynamic.v2.DynAllReq.playurl_param:type_name -> bilibili.app.dynamic.v2.PlayurlParam
	257, // 86: bilibili.app.dynamic.v2.DynAllReq.rcmd_ups_param:type_name -> bilibili.app.dynamic.v2.RcmdUPsParam
	51,  // 87: bilibili.app.dynamic.v2.DynAllReq.ad_param:type_name -> bilibili.app.dynamic.v2.AdParam
	324, // 88: bilibili.app.dynamic.v2.DynAllReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	153, // 89: bilibili.app.dynamic.v2.DynDetailReply.item:type_name -> bilibili.app.dynamic.v2.DynamicItem
	51,  // 90: bilibili.app.dynamic.v2.DynDetailReq.ad_param:type_name -> bilibili.app.dynamic.v2.AdParam
	324, // 91: bilibili.app.dynamic.v2.DynDetailReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	153, // 92: bilibili.app.dynamic.v2.DynDetailsReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	250, // 93: bilibili.app.dynamic.v2.DynDetailsReq.playurl_param:type_name -> bilibili.app.dynamic.v2.PlayurlParam
	324, // 94: bilibili.app.dynamic.v2.DynDetailsReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	153, // 95: bilibili.app.dynamic.v2.DynFakeCardReply.item:type_name -> bilibili.app.dynamic.v2.DynamicItem
	154, // 96: bilibili.app.dynamic.v2.DynLightReply.dynamic_list:type_name -> bilibili.app.dynamic.v2.DynamicList
	324, // 97: bilibili.app.dynamic.v2.DynLightReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	201, // 98: bilibili.app.dynamic.v2.DynMixUpListViewMoreReply.items:type_name -> bilibili.app.dynamic.v2.MixUpListItem
	278, // 99: bilibili.app.dynamic.v2.DynMixUpListViewMoreReply.sort_types:type_name -> bilibili.app.dynamic.v2.SortType
	132, // 100: bilibili.app.dynamic.v2.DynRcmdReply.region_rcmd:type_name -> bilibili.app.dynamic.v2.DynRegionRcmd
	154, // 101: bilibili.app.dynamic.v2.DynRcmdReply.dynamic_list:type_name -> bilibili.app.dynamic.v2.DynamicList
	324, // 102: bilibili.app.dynamic.v2.DynRcmdReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	308, // 103: bilibili.app.dynamic.v2.DynRcmdUpExchangeReply.unfollow:type_name -> bilibili.app.dynamic.v2.Unfollow
	133, // 104: bilibili.app.dynamic.v2.DynRegionRcmd.items:type_name -> bilibili.app.dynamic.v2.DynRegionRcmdItem
	255, // 105: bilibili.app.dynamic.v2.DynRegionRcmd.opts:type_name -> bilibili.app.dynamic.v2.RcmdOption
	225, // 106: bilibili.app.dynamic.v2.DynRegionRcmdItem.items:type_name -> bilibili.app.dynamic.v2.ModuleRcmd
	268, // 107: bilibili.app.dynamic.v2.DynSearchReply.channel_info:type_name -> bilibili.app.dynamic.v2.SearchChannel
	271, // 108: bilibili.app.dynamic.v2.DynSearchReply.search_topic:type_name -> bilibili.app.dynamic.v2.SearchTopic
	269, // 109: bilibili.app.dynamic.v2.DynSearchReply.search_info:type_name -> bilibili.app.dynamic.v2.SearchInfo
	324, // 110: bilibili.app.dynamic.v2.DynSearchReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	322, // 111: bilibili.app.dynamic.v2.DynServerDetailsReply.items:type_name -> bilibili.app.dynamic.v2.DynServerDetailsReply.ItemsEntry
	324, // 112: bilibili.app.dynamic.v2.DynServerDetailsReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	324, // 113: bilibili.app.dynamic.v2.DynSpaceReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	153, // 114: bilibili.app.dynamic.v2.DynSpaceRsp.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	323, // 115: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.items:type_name -> bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.ItemsEntry
	324, // 116: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	251, // 117: bilibili.app.dynamic.v2.DynTab.popup:type_name -> bilibili.app.dynamic.v2.Popup
	142, // 118: bilibili.app.dynamic.v2.DynTab.back_up:type_name -> bilibili.app.dynamic.v2.DynTab
	142, // 119: bilibili.app.dynamic.v2.DynTabReply.dyn_tab:type_name -> bilibili.app.dynamic.v2.DynTab
	44,  // 120: bilibili.app.dynamic.v2.DynThumbReq.type:type_name -> bilibili.app.dynamic.v2.ThumbType
	153, // 121: bilibili.app.dynamic.v2.DynVideoPersonalReply.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	258, // 122: bilibili.app.dynamic.v2.DynVideoPersonalReply.relation:type_name -> bilibili.app.dynamic.v2.Relation
	297, // 123: bilibili.app.dynamic.v2.DynVideoPersonalReply.addition_up:type_name -> bilibili.app.dynamic.v2.TopAdditionUP
	250, // 124: bilibili.app.dynamic.v2.DynVideoPersonalReq.playurl_param:type_name -> bilibili.app.dynamic.v2.PlayurlParam
	324, // 125: bilibili.app.dynamic.v2.DynVideoPersonalReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	101, // 126: bilibili.app.dynamic.v2.DynVideoReply.dynamic_list:type_name -> bilibili.app.dynamic.v2.CardVideoDynList
	103, // 127: bilibili.app.dynamic.v2.DynVideoReply.video_up_list:type_name -> bilibili.app.dynamic.v2.CardVideoUpList
	102, // 128: bilibili.app.dynamic.v2.DynVideoReply.video_follow_list:type_name -> bilibili.app.dynamic.v2.CardVideoFollowList
	34,  // 129: bilibili.app.dynamic.v2.DynVideoReq.refresh_type:type_name -> bilibili.app.dynamic.v2.Refresh
	250, // 130: bilibili.app.dynamic.v2.DynVideoReq.playurl_param:type_name -> bilibili.app.dynamic.v2.PlayurlParam
	324, // 131: bilibili.app.dynamic.v2.DynVideoReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	62,  // 132: bilibili.app.dynamic.v2.DynVoteReply.item:type_name -> bilibili.app.dynamic.v2.AdditionVote2
	49,  // 133: bilibili.app.dynamic.v2.DynVoteReq.status:type_name -> bilibili.app.dynamic.v2.VoteStatus
	15,  // 134: bilibili.app.dynamic.v2.DynamicItem.card_type:type_name -> bilibili.app.dynamic.v2.DynamicType
	15,  // 135: bilibili.app.dynamic.v2.DynamicItem.item_type:type_name -> bilibili.app.dynamic.v2.DynamicType
	203, // 136: bilibili.app.dynamic.v2.DynamicItem.modules:type_name -> bilibili.app.dynamic.v2.Module
	161, // 137: bilibili.app.dynamic.v2.DynamicItem.extend:type_name -> bilibili.app.dynamic.v2.Extend
	153, // 138: bilibili.app.dynamic.v2.DynamicList.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	12,  // 139: bilibili.app.dynamic.v2.ExtInfoCommon.type:type_name -> bilibili.app.dynamic.v2.DynExtendType
	170, // 140: bilibili.app.dynamic.v2.ExtInfoOGV.info_ogv:type_name -> bilibili.app.dynamic.v2.InfoOGV
	109, // 141: bilibili.app.dynamic.v2.Extend.orig_desc:type_name -> bilibili.app.dynamic.v2.Description
	109, // 142: bilibili.app.dynamic.v2.Extend.desc:type_name -> bilibili.app.dynamic.v2.Description
	15,  // 143: bilibili.app.dynamic.v2.Extend.orig_dyn_type:type_name -> bilibili.app.dynamic.v2.DynamicType
	325, // 144: bilibili.app.dynamic.v2.Extend.source_content:type_name -> google.protobuf.Any
	162, // 145: bilibili.app.dynamic.v2.Extend.reply:type_name -> bilibili.app.dynamic.v2.ExtendReply
	163, // 146: bilibili.app.dynamic.v2.ExtendReply.params:type_name -> bilibili.app.dynamic.v2.ExtendReplyParam
	237, // 147: bilibili.app.dynamic.v2.FollowListItem.new_ep:type_name -> bilibili.app.dynamic.v2.NewEP
	20,  // 148: bilibili.app.dynamic.v2.HighlightText.text_style:type_name -> bilibili.app.dynamic.v2.HighlightTextStyle
	24,  // 149: bilibili.app.dynamic.v2.InteractionItem.icon_type:type_name -> bilibili.app.dynamic.v2.LocalIconType
	109, // 150: bilibili.app.dynamic.v2.InteractionItem.desc:type_name -> bilibili.app.dynamic.v2.Description
	171, // 151: bilibili.app.dynamic.v2.InteractionItem.faces:type_name -> bilibili.app.dynamic.v2.InteractionFace
	173, // 152: bilibili.app.dynamic.v2.InteractionItem.stat:type_name -> bilibili.app.dynamic.v2.InteractionStat
	174, // 153: bilibili.app.dynamic.v2.LikeInfo.animation:type_name -> bilibili.app.dynamic.v2.LikeAnimation
	206, // 154: bilibili.app.dynamic.v2.LikeListReply.list:type_name -> bilibili.app.dynamic.v2.ModuleAuthor
	23,  // 155: bilibili.app.dynamic.v2.LiveInfo.live_state:type_name -> bilibili.app.dynamic.v2.LiveState
	28,  // 156: bilibili.app.dynamic.v2.MdlDynArchive.media_type:type_name -> bilibili.app.dynamic.v2.MediaType
	110, // 157: bilibili.app.dynamic.v2.MdlDynArchive.dimension:type_name -> bilibili.app.dynamic.v2.Dimension
	315, // 158: bilibili.app.dynamic.v2.MdlDynArchive.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	48,  // 159: bilibili.app.dynamic.v2.MdlDynArchive.stype:type_name -> bilibili.app.dynamic.v2.VideoType
	315, // 160: bilibili.app.dynamic.v2.MdlDynArchive.badge_category:type_name -> bilibili.app.dynamic.v2.VideoBadge
	38,  // 161: bilibili.app.dynamic.v2.MdlDynArchive.reserve_type:type_name -> bilibili.app.dynamic.v2.ReserveType
	25,  // 162: bilibili.app.dynamic.v2.MdlDynCommon.style:type_name -> bilibili.app.dynamic.v2.MdlDynCommonType
	315, // 163: bilibili.app.dynamic.v2.MdlDynCommon.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	69,  // 164: bilibili.app.dynamic.v2.MdlDynCommon.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	315, // 165: bilibili.app.dynamic.v2.MdlDynCourBatch.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	315, // 166: bilibili.app.dynamic.v2.MdlDynCourSeason.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	189, // 167: bilibili.app.dynamic.v2.MdlDynDraw.items:type_name -> bilibili.app.dynamic.v2.MdlDynDrawItem
	190, // 168: bilibili.app.dynamic.v2.MdlDynDrawItem.tags:type_name -> bilibili.app.dynamic.v2.MdlDynDrawTag
	26,  // 169: bilibili.app.dynamic.v2.MdlDynDrawTag.type:type_name -> bilibili.app.dynamic.v2.MdlDynDrawTagType
	191, // 170: bilibili.app.dynamic.v2.MdlDynDrawTag.item:type_name -> bilibili.app.dynamic.v2.MdlDynDrawTagItem
	153, // 171: bilibili.app.dynamic.v2.MdlDynForward.item:type_name -> bilibili.app.dynamic.v2.DynamicItem
	23,  // 172: bilibili.app.dynamic.v2.MdlDynLive.live_state:type_name -> bilibili.app.dynamic.v2.LiveState
	315, // 173: bilibili.app.dynamic.v2.MdlDynLive.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	38,  // 174: bilibili.app.dynamic.v2.MdlDynLive.reserve_type:type_name -> bilibili.app.dynamic.v2.ReserveType
	38,  // 175: bilibili.app.dynamic.v2.MdlDynLiveRcmd.reserve_type:type_name -> bilibili.app.dynamic.v2.ReserveType
	180, // 176: bilibili.app.dynamic.v2.MdlDynLiveRcmd.pendant:type_name -> bilibili.app.dynamic.v2.LivePendant
	315, // 177: bilibili.app.dynamic.v2.MdlDynMedialist.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	28,  // 178: bilibili.app.dynamic.v2.MdlDynPGC.media_type:type_name -> bilibili.app.dynamic.v2.MediaType
	47,  // 179: bilibili.app.dynamic.v2.MdlDynPGC.sub_type:type_name -> bilibili.app.dynamic.v2.VideoSubType
	110, // 180: bilibili.app.dynamic.v2.MdlDynPGC.dimension:type_name -> bilibili.app.dynamic.v2.Dimension
	315, // 181: bilibili.app.dynamic.v2.MdlDynPGC.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	249, // 182: bilibili.app.dynamic.v2.MdlDynPGC.season:type_name -> bilibili.app.dynamic.v2.PGCSeason
	315, // 183: bilibili.app.dynamic.v2.MdlDynPGC.badge_category:type_name -> bilibili.app.dynamic.v2.VideoBadge
	315, // 184: bilibili.app.dynamic.v2.MdlDynSubscription.badge:type_name -> bilibili.app.dynamic.v2.VideoBadge
	27,  // 185: bilibili.app.dynamic.v2.MdlDynSubscriptionNew.style:type_name -> bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle
	198, // 186: bilibili.app.dynamic.v2.MdlDynSubscriptionNew.dyn_subscription:type_name -> bilibili.app.dynamic.v2.MdlDynSubscription
	194, // 187: bilibili.app.dynamic.v2.MdlDynSubscriptionNew.dyn_live_rcmd:type_name -> bilibili.app.dynamic.v2.MdlDynLiveRcmd
	110, // 188: bilibili.app.dynamic.v2.MdlDynUGCSeason.dimension:type_name -> bilibili.app.dynamic.v2.Dimension
	202, // 189: bilibili.app.dynamic.v2.MixUpListItem.live_info:type_name -> bilibili.app.dynamic.v2.MixUpListLiveItem
	248, // 190: bilibili.app.dynamic.v2.MixUpListItem.official:type_name -> bilibili.app.dynamic.v2.OfficialVerify
	316, // 191: bilibili.app.dynamic.v2.MixUpListItem.vip:type_name -> bilibili.app.dynamic.v2.VipInfo
	258, // 192: bilibili.app.dynamic.v2.MixUpListItem.relation:type_name -> bilibili.app.dynamic.v2.Relation
	13,  // 193: bilibili.app.dynamic.v2.Module.module_type:type_name -> bilibili.app.dynamic.v2.DynModuleType
	206, // 194: bilibili.app.dynamic.v2.Module.module_author:type_name -> bilibili.app.dynamic.v2.ModuleAuthor
	217, // 195: bilibili.app.dynamic.v2.Module.module_dispute:type_name -> bilibili.app.dynamic.v2.ModuleDispute
	215, // 196: bilibili.app.dynamic.v2.Module.module_desc:type_name -> bilibili.app.dynamic.v2.ModuleDesc
	218, // 197: bilibili.app.dynamic.v2.Module.module_dynamic:type_name -> bilibili.app.dynamic.v2.ModuleDynamic
	224, // 198: bilibili.app.dynamic.v2.Module.module_likeUser:type_name -> bilibili.app.dynamic.v2.ModuleLikeUser
	219, // 199: bilibili.app.dynamic.v2.Module.module_extend:type_name -> bilibili.app.dynamic.v2.ModuleExtend
	205, // 200: bilibili.app.dynamic.v2.Module.module_additional:type_name -> bilibili.app.dynamic.v2.ModuleAdditional
	228, // 201: bilibili.app.dynamic.v2.Module.module_stat:type_name -> bilibili.app.dynamic.v2.ModuleStat
	221, // 202: bilibili.app.dynamic.v2.Module.module_fold:type_name -> bilibili.app.dynamic.v2.ModuleFold
	214, // 203: bilibili.app.dynamic.v2.Module.module_comment:type_name -> bilibili.app.dynamic.v2.ModuleComment
	222, // 204: bilibili.app.dynamic.v2.Module.module_interaction:type_name -> bilibili.app.dynamic.v2.ModuleInteraction
	208, // 205: bilibili.app.dynamic.v2.Module.module_author_forward:type_name -> bilibili.app.dynamic.v2.ModuleAuthorForward
	204, // 206: bilibili.app.dynamic.v2.Module.module_ad:type_name -> bilibili.app.dynamic.v2.ModuleAd
	210, // 207: bilibili.app.dynamic.v2.Module.module_banner:type_name -> bilibili.app.dynamic.v2.ModuleBanner
	223, // 208: bilibili.app.dynamic.v2.Module.module_item_null:type_name -> bilibili.app.dynamic.v2.ModuleItemNull
	227, // 209: bilibili.app.dynamic.v2.Module.module_share_info:type_name -> bilibili.app.dynamic.v2.ModuleShareInfo
	226, // 210: bilibili.app.dynamic.v2.Module.module_recommend:type_name -> bilibili.app.dynamic.v2.ModuleRecommend
	231, // 211: bilibili.app.dynamic.v2.Module.module_top:type_name -> bilibili.app.dynamic.v2.ModuleTop
	213, // 212: bilibili.app.dynamic.v2.Module.module_buttom:type_name -> bilibili.app.dynamic.v2.ModuleButtom
	228, // 213: bilibili.app.dynamic.v2.Module.module_stat_forward:type_name -> bilibili.app.dynamic.v2.ModuleStat
	229, // 214: bilibili.app.dynamic.v2.Module.module_story:type_name -> bilibili.app.dynamic.v2.ModuleStory
	233, // 215: bilibili.app.dynamic.v2.Module.module_topic:type_name -> bilibili.app.dynamic.v2.ModuleTopic
	235, // 216: bilibili.app.dynamic.v2.Module.module_topic_details_ext:type_name -> bilibili.app.dynamic.v2.ModuleTopicDetailsExt
	232, // 217: bilibili.app.dynamic.v2.Module.module_top_tag:type_name -> bilibili.app.dynamic.v2.ModuleTopTag
	234, // 218: bilibili.app.dynamic.v2.Module.module_topic_brief:type_name -> bilibili.app.dynamic.v2.ModuleTopicBrief
	230, // 219: bilibili.app.dynamic.v2.Module.module_title:type_name -> bilibili.app.dynamic.v2.ModuleTitle
	325, // 220: bilibili.app.dynamic.v2.ModuleAd.source_content:type_name -> google.protobuf.Any
	206, // 221: bilibili.app.dynamic.v2.ModuleAd.module_author:type_name -> bilibili.app.dynamic.v2.ModuleAuthor
	7,   // 222: bilibili.app.dynamic.v2.ModuleAdditional.type:type_name -> bilibili.app.dynamic.v2.AdditionalType
	73,  // 223: bilibili.app.dynamic.v2.ModuleAdditional.pgc:type_name -> bilibili.app.dynamic.v2.AdditionalPGC
	57,  // 224: bilibili.app.dynamic.v2.ModuleAdditional.goods:type_name -> bilibili.app.dynamic.v2.AdditionGoods
	61,  // 225: bilibili.app.dynamic.v2.ModuleAdditional.vote:type_name -> bilibili.app.dynamic.v2.AdditionVote
	52,  // 226: bilibili.app.dynamic.v2.ModuleAdditional.common:type_name -> bilibili.app.dynamic.v2.AdditionCommon
	53,  // 227: bilibili.app.dynamic.v2.ModuleAdditional.esport:type_name -> bilibili.app.dynamic.v2.AdditionEsport
	62,  // 228: bilibili.app.dynamic.v2.ModuleAdditional.vote2:type_name -> bilibili.app.dynamic.v2.AdditionVote2
	59,  // 229: bilibili.app.dynamic.v2.ModuleAdditional.ugc:type_name -> bilibili.app.dynamic.v2.AdditionUgc
	58,  // 230: bilibili.app.dynamic.v2.ModuleAdditional.up:type_name -> bilibili.app.dynamic.v2.AdditionUP
	312, // 231: bilibili.app.dynamic.v2.ModuleAuthor.author:type_name -> bilibili.app.dynamic.v2.UserInfo
	108, // 232: bilibili.app.dynamic.v2.ModuleAuthor.decorate_card:type_name -> bilibili.app.dynamic.v2.DecorateCard
	291, // 233: bilibili.app.dynamic.v2.ModuleAuthor.tp_list:type_name -> bilibili.app.dynamic.v2.ThreePointItem
	29,  // 234: bilibili.app.dynamic.v2.ModuleAuthor.badge_type:type_name -> bilibili.app.dynamic.v2.ModuleAuthorBadgeType
	207, // 235: bilibili.app.dynamic.v2.ModuleAuthor.badge_button:type_name -> bilibili.app.dynamic.v2.ModuleAuthorBadgeButton
	258, // 236: bilibili.app.dynamic.v2.ModuleAuthor.relation:type_name -> bilibili.app.dynamic.v2.Relation
	318, // 237: bilibili.app.dynamic.v2.ModuleAuthor.weight:type_name -> bilibili.app.dynamic.v2.Weight
	209, // 238: bilibili.app.dynamic.v2.ModuleAuthorForward.title:type_name -> bilibili.app.dynamic.v2.ModuleAuthorForwardTitle
	258, // 239: bilibili.app.dynamic.v2.ModuleAuthorForward.relation:type_name -> bilibili.app.dynamic.v2.Relation
	291, // 240: bilibili.app.dynamic.v2.ModuleAuthorForward.tp_list:type_name -> bilibili.app.dynamic.v2.ThreePointItem
	30,  // 241: bilibili.app.dynamic.v2.ModuleBanner.type:type_name -> bilibili.app.dynamic.v2.ModuleBannerType
	211, // 242: bilibili.app.dynamic.v2.ModuleBanner.user:type_name -> bilibili.app.dynamic.v2.ModuleBannerUser
	212, // 243: bilibili.app.dynamic.v2.ModuleBannerUser.list:type_name -> bilibili.app.dynamic.v2.ModuleBannerUserItem
	23,  // 244: bilibili.app.dynamic.v2.ModuleBannerUserItem.live_state:type_name -> bilibili.app.dynamic.v2.LiveState
	248, // 245: bilibili.app.dynamic.v2.ModuleBannerUserItem.official:type_name -> bilibili.app.dynamic.v2.OfficialVerify
	316, // 246: bilibili.app.dynamic.v2.ModuleBannerUserItem.vip:type_name -> bilibili.app.dynamic.v2.VipInfo
	69,  // 247: bilibili.app.dynamic.v2.ModuleBannerUserItem.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	228, // 248: bilibili.app.dynamic.v2.ModuleButtom.module_stat:type_name -> bilibili.app.dynamic.v2.ModuleStat
	105, // 249: bilibili.app.dynamic.v2.ModuleComment.cmtShowItem:type_name -> bilibili.app.dynamic.v2.CmtShowItem
	109, // 250: bilibili.app.dynamic.v2.ModuleDesc.desc:type_name -> bilibili.app.dynamic.v2.Description
	31,  // 251: bilibili.app.dynamic.v2.ModuleDynamic.type:type_name -> bilibili.app.dynamic.v2.ModuleDynamicType
	183, // 252: bilibili.app.dynamic.v2.ModuleDynamic.dyn_archive:type_name -> bilibili.app.dynamic.v2.MdlDynArchive
	197, // 253: bilibili.app.dynamic.v2.ModuleDynamic.dyn_pgc:type_name -> bilibili.app.dynamic.v2.MdlDynPGC
	187, // 254: bilibili.app.dynamic.v2.ModuleDynamic.dyn_cour_season:type_name -> bilibili.app.dynamic.v2.MdlDynCourSeason
	186, // 255: bilibili.app.dynamic.v2.ModuleDynamic.dyn_cour_batch:type_name -> bilibili.app.dynamic.v2.MdlDynCourBatch
	192, // 256: bilibili.app.dynamic.v2.ModuleDynamic.dyn_forward:type_name -> bilibili.app.dynamic.v2.MdlDynForward
	188, // 257: bilibili.app.dynamic.v2.ModuleDynamic.dyn_draw:type_name -> bilibili.app.dynamic.v2.MdlDynDraw
	184, // 258: bilibili.app.dynamic.v2.ModuleDynamic.dyn_article:type_name -> bilibili.app.dynamic.v2.MdlDynArticle
	196, // 259: bilibili.app.dynamic.v2.ModuleDynamic.dyn_music:type_name -> bilibili.app.dynamic.v2.MdlDynMusic
	185, // 260: bilibili.app.dynamic.v2.ModuleDynamic.dyn_common:type_name -> bilibili.app.dynamic.v2.MdlDynCommon
	193, // 261: bilibili.app.dynamic.v2.ModuleDynamic.dyn_common_live:type_name -> bilibili.app.dynamic.v2.MdlDynLive
	195, // 262: bilibili.app.dynamic.v2.ModuleDynamic.dyn_medialist:type_name -> bilibili.app.dynamic.v2.MdlDynMedialist
	182, // 263: bilibili.app.dynamic.v2.ModuleDynamic.dyn_applet:type_name -> bilibili.app.dynamic.v2.MdlDynApplet
	198, // 264: bilibili.app.dynamic.v2.ModuleDynamic.dyn_subscription:type_name -> bilibili.app.dynamic.v2.MdlDynSubscription
	194, // 265: bilibili.app.dynamic.v2.ModuleDynamic.dyn_live_rcmd:type_name -> bilibili.app.dynamic.v2.MdlDynLiveRcmd
	200, // 266: bilibili.app.dynamic.v2.ModuleDynamic.dyn_ugc_season:type_name -> bilibili.app.dynamic.v2.MdlDynUGCSeason
	199, // 267: bilibili.app.dynamic.v2.ModuleDynamic.dyn_subscription_new:type_name -> bilibili.app.dynamic.v2.MdlDynSubscriptionNew
	220, // 268: bilibili.app.dynamic.v2.ModuleExtend.extend:type_name -> bilibili.app.dynamic.v2.ModuleExtendItem
	12,  // 269: bilibili.app.dynamic.v2.ModuleExtendItem.type:type_name -> bilibili.app.dynamic.v2.DynExtendType
	160, // 270: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_topic:type_name -> bilibili.app.dynamic.v2.ExtInfoTopic
	158, // 271: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_lbs:type_name -> bilibili.app.dynamic.v2.ExtInfoLBS
	157, // 272: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_hot:type_name -> bilibili.app.dynamic.v2.ExtInfoHot
	156, // 273: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_game:type_name -> bilibili.app.dynamic.v2.ExtInfoGame
	155, // 274: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_common:type_name -> bilibili.app.dynamic.v2.ExtInfoCommon
	159, // 275: bilibili.app.dynamic.v2.ModuleExtendItem.ext_info_ogv:type_name -> bilibili.app.dynamic.v2.ExtInfoOGV
	18,  // 276: bilibili.app.dynamic.v2.ModuleFold.fold_type:type_name -> bilibili.app.dynamic.v2.FoldType
	312, // 277: bilibili.app.dynamic.v2.ModuleFold.fold_users:type_name -> bilibili.app.dynamic.v2.UserInfo
	172, // 278: bilibili.app.dynamic.v2.ModuleInteraction.interaction_item:type_name -> bilibili.app.dynamic.v2.InteractionItem
	178, // 279: bilibili.app.dynamic.v2.ModuleLikeUser.like_users:type_name -> bilibili.app.dynamic.v2.LikeUser
	253, // 280: bilibili.app.dynamic.v2.ModuleRcmd.author:type_name -> bilibili.app.dynamic.v2.RcmdAuthor
	254, // 281: bilibili.app.dynamic.v2.ModuleRcmd.items:type_name -> bilibili.app.dynamic.v2.RcmdItem
	325, // 282: bilibili.app.dynamic.v2.ModuleRecommend.ad:type_name -> google.protobuf.Any
	276, // 283: bilibili.app.dynamic.v2.ModuleShareInfo.share_channels:type_name -> bilibili.app.dynamic.v2.ShareChannel
	175, // 284: bilibili.app.dynamic.v2.ModuleStat.like_info:type_name -> bilibili.app.dynamic.v2.LikeInfo
	280, // 285: bilibili.app.dynamic.v2.ModuleStory.items:type_name -> bilibili.app.dynamic.v2.StoryItem
	169, // 286: bilibili.app.dynamic.v2.ModuleTitle.right_btn:type_name -> bilibili.app.dynamic.v2.IconButton
	291, // 287: bilibili.app.dynamic.v2.ModuleTop.tp_list:type_name -> bilibili.app.dynamic.v2.ThreePointItem
	299, // 288: bilibili.app.dynamic.v2.ModuleTopicBrief.topic:type_name -> bilibili.app.dynamic.v2.TopicItem
	312, // 289: bilibili.app.dynamic.v2.OfficialAccountInfo.author:type_name -> bilibili.app.dynamic.v2.UserInfo
	258, // 290: bilibili.app.dynamic.v2.OfficialAccountInfo.relation:type_name -> bilibili.app.dynamic.v2.Relation
	240, // 291: bilibili.app.dynamic.v2.OfficialAccountsReply.items:type_name -> bilibili.app.dynamic.v2.OfficialAccountInfo
	245, // 292: bilibili.app.dynamic.v2.OfficialDynamicsReply.items:type_name -> bilibili.app.dynamic.v2.OfficialItem
	324, // 293: bilibili.app.dynamic.v2.OfficialDynamicsReply.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	246, // 294: bilibili.app.dynamic.v2.OfficialItem.rcmd_archive:type_name -> bilibili.app.dynamic.v2.OfficialRcmdArchive
	247, // 295: bilibili.app.dynamic.v2.OfficialItem.rcmd_dynamic:type_name -> bilibili.app.dynamic.v2.OfficialRcmdDynamic
	9,   // 296: bilibili.app.dynamic.v2.RcmdArchive.cover_left_icon_1:type_name -> bilibili.app.dynamic.v2.CoverIcon
	168, // 297: bilibili.app.dynamic.v2.RcmdArchive.badge:type_name -> bilibili.app.dynamic.v2.IconBadge
	312, // 298: bilibili.app.dynamic.v2.RcmdAuthor.author:type_name -> bilibili.app.dynamic.v2.UserInfo
	258, // 299: bilibili.app.dynamic.v2.RcmdAuthor.relation:type_name -> bilibili.app.dynamic.v2.Relation
	33,  // 300: bilibili.app.dynamic.v2.RcmdItem.type:type_name -> bilibili.app.dynamic.v2.RcmdType
	252, // 301: bilibili.app.dynamic.v2.RcmdItem.rcmd_archive:type_name -> bilibili.app.dynamic.v2.RcmdArchive
	35,  // 302: bilibili.app.dynamic.v2.Relation.status:type_name -> bilibili.app.dynamic.v2.RelationStatus
	36,  // 303: bilibili.app.dynamic.v2.RepostListReq.repost_type:type_name -> bilibili.app.dynamic.v2.RepostType
	153, // 304: bilibili.app.dynamic.v2.RepostListRsp.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	36,  // 305: bilibili.app.dynamic.v2.RepostListRsp.repost_type:type_name -> bilibili.app.dynamic.v2.RepostType
	263, // 306: bilibili.app.dynamic.v2.ReactionListReply.list:type_name -> bilibili.app.dynamic.v2.ReactionListItem
	312, // 307: bilibili.app.dynamic.v2.ReactionListItem.user:type_name -> bilibili.app.dynamic.v2.UserInfo
	258, // 308: bilibili.app.dynamic.v2.ReactionListItem.relation:type_name -> bilibili.app.dynamic.v2.Relation
	83,  // 309: bilibili.app.dynamic.v2.SchoolRecommendReply.items:type_name -> bilibili.app.dynamic.v2.CampusInfo
	83,  // 310: bilibili.app.dynamic.v2.SchoolSearchReply.items:type_name -> bilibili.app.dynamic.v2.CampusInfo
	270, // 311: bilibili.app.dynamic.v2.SchoolSearchReply.toast:type_name -> bilibili.app.dynamic.v2.SearchToast
	272, // 312: bilibili.app.dynamic.v2.SearchChannel.more_button:type_name -> bilibili.app.dynamic.v2.SearchTopicButton
	104, // 313: bilibili.app.dynamic.v2.SearchChannel.channels:type_name -> bilibili.app.dynamic.v2.ChannelInfo
	153, // 314: bilibili.app.dynamic.v2.SearchInfo.list:type_name -> bilibili.app.dynamic.v2.DynamicItem
	272, // 315: bilibili.app.dynamic.v2.SearchTopic.more_button:type_name -> bilibili.app.dynamic.v2.SearchTopicButton
	273, // 316: bilibili.app.dynamic.v2.SearchTopic.items:type_name -> bilibili.app.dynamic.v2.SearchTopicItem
	277, // 317: bilibili.app.dynamic.v2.ShareChannel.reserve:type_name -> bilibili.app.dynamic.v2.ShareReserve
	60,  // 318: bilibili.app.dynamic.v2.ShareReserve.user_info:type_name -> bilibili.app.dynamic.v2.AdditionUserInfo
	110, // 319: bilibili.app.dynamic.v2.StoryArchive.dimension:type_name -> bilibili.app.dynamic.v2.Dimension
	312, // 320: bilibili.app.dynamic.v2.StoryItem.author:type_name -> bilibili.app.dynamic.v2.UserInfo
	279, // 321: bilibili.app.dynamic.v2.StoryItem.story_archive:type_name -> bilibili.app.dynamic.v2.StoryArchive
	42,  // 322: bilibili.app.dynamic.v2.ThreePointAttention.status:type_name -> bilibili.app.dynamic.v2.ThreePointAttentionStatus
	106, // 323: bilibili.app.dynamic.v2.ThreePointComment.up_selection:type_name -> bilibili.app.dynamic.v2.CommentDetail
	106, // 324: bilibili.app.dynamic.v2.ThreePointComment.up_close:type_name -> bilibili.app.dynamic.v2.CommentDetail
	286, // 325: bilibili.app.dynamic.v2.ThreePointDefault.toast:type_name -> bilibili.app.dynamic.v2.ThreePointDefaultToast
	290, // 326: bilibili.app.dynamic.v2.ThreePointHide.interactive:type_name -> bilibili.app.dynamic.v2.ThreePointHideInteractive
	43,  // 327: bilibili.app.dynamic.v2.ThreePointItem.type:type_name -> bilibili.app.dynamic.v2.ThreePointType
	285, // 328: bilibili.app.dynamic.v2.ThreePointItem.default:type_name -> bilibili.app.dynamic.v2.ThreePointDefault
	283, // 329: bilibili.app.dynamic.v2.ThreePointItem.auto_player:type_name -> bilibili.app.dynamic.v2.ThreePointAutoPlay
	292, // 330: bilibili.app.dynamic.v2.ThreePointItem.share:type_name -> bilibili.app.dynamic.v2.ThreePointShare
	282, // 331: bilibili.app.dynamic.v2.ThreePointItem.attention:type_name -> bilibili.app.dynamic.v2.ThreePointAttention
	296, // 332: bilibili.app.dynamic.v2.ThreePointItem.wait:type_name -> bilibili.app.dynamic.v2.ThreePointWait
	287, // 333: bilibili.app.dynamic.v2.ThreePointItem.dislike:type_name -> bilibili.app.dynamic.v2.ThreePointDislike
	288, // 334: bilibili.app.dynamic.v2.ThreePointItem.favorite:type_name -> bilibili.app.dynamic.v2.ThreePointFavorite
	294, // 335: bilibili.app.dynamic.v2.ThreePointItem.top:type_name -> bilibili.app.dynamic.v2.ThreePointTop
	284, // 336: bilibili.app.dynamic.v2.ThreePointItem.comment:type_name -> bilibili.app.dynamic.v2.ThreePointComment
	289, // 337: bilibili.app.dynamic.v2.ThreePointItem.hide:type_name -> bilibili.app.dynamic.v2.ThreePointHide
	295, // 338: bilibili.app.dynamic.v2.ThreePointItem.topic_irrelevant:type_name -> bilibili.app.dynamic.v2.ThreePointTopicIrrelevant
	293, // 339: bilibili.app.dynamic.v2.ThreePointShare.channel:type_name -> bilibili.app.dynamic.v2.ThreePointShareChannel
	277, // 340: bilibili.app.dynamic.v2.ThreePointShare.reserve:type_name -> bilibili.app.dynamic.v2.ShareReserve
	45,  // 341: bilibili.app.dynamic.v2.ThreePointTop.type:type_name -> bilibili.app.dynamic.v2.TopType
	58,  // 342: bilibili.app.dynamic.v2.TopAdditionUP.up:type_name -> bilibili.app.dynamic.v2.AdditionUP
	301, // 343: bilibili.app.dynamic.v2.TopicList.topic_list_item:type_name -> bilibili.app.dynamic.v2.TopicListItem
	298, // 344: bilibili.app.dynamic.v2.TopicList.act_button:type_name -> bilibili.app.dynamic.v2.TopicButton
	298, // 345: bilibili.app.dynamic.v2.TopicList.more_button:type_name -> bilibili.app.dynamic.v2.TopicButton
	299, // 346: bilibili.app.dynamic.v2.TopicListReply.items:type_name -> bilibili.app.dynamic.v2.TopicItem
	84,  // 347: bilibili.app.dynamic.v2.TopicRcmdCard.button:type_name -> bilibili.app.dynamic.v2.CampusLabel
	84,  // 348: bilibili.app.dynamic.v2.TopicSquareInfo.button:type_name -> bilibili.app.dynamic.v2.CampusLabel
	304, // 349: bilibili.app.dynamic.v2.TopicSquareInfo.rcmd:type_name -> bilibili.app.dynamic.v2.TopicRcmdCard
	305, // 350: bilibili.app.dynamic.v2.TopicSquareReply.info:type_name -> bilibili.app.dynamic.v2.TopicSquareInfo
	309, // 351: bilibili.app.dynamic.v2.Unfollow.list:type_name -> bilibili.app.dynamic.v2.UnfollowUserItem
	23,  // 352: bilibili.app.dynamic.v2.UnfollowUserItem.live_state:type_name -> bilibili.app.dynamic.v2.LiveState
	248, // 353: bilibili.app.dynamic.v2.UnfollowUserItem.official:type_name -> bilibili.app.dynamic.v2.OfficialVerify
	316, // 354: bilibili.app.dynamic.v2.UnfollowUserItem.vip:type_name -> bilibili.app.dynamic.v2.VipInfo
	69,  // 355: bilibili.app.dynamic.v2.UnfollowUserItem.button:type_name -> bilibili.app.dynamic.v2.AdditionalButton
	46,  // 356: bilibili.app.dynamic.v2.UpListItem.user_item_type:type_name -> bilibili.app.dynamic.v2.UserItemType
	313, // 357: bilibili.app.dynamic.v2.UpListItem.display_style_day:type_name -> bilibili.app.dynamic.v2.UserItemStyle
	313, // 358: bilibili.app.dynamic.v2.UpListItem.display_style_night:type_name -> bilibili.app.dynamic.v2.UserItemStyle
	23,  // 359: bilibili.app.dynamic.v2.UpListItem.live_state:type_name -> bilibili.app.dynamic.v2.LiveState
	248, // 360: bilibili.app.dynamic.v2.UserInfo.official:type_name -> bilibili.app.dynamic.v2.OfficialVerify
	316, // 361: bilibili.app.dynamic.v2.UserInfo.vip:type_name -> bilibili.app.dynamic.v2.VipInfo
	179, // 362: bilibili.app.dynamic.v2.UserInfo.live:type_name -> bilibili.app.dynamic.v2.LiveInfo
	314, // 363: bilibili.app.dynamic.v2.UserInfo.pendant:type_name -> bilibili.app.dynamic.v2.UserPendant
	236, // 364: bilibili.app.dynamic.v2.UserInfo.nameplate:type_name -> bilibili.app.dynamic.v2.Nameplate
	317, // 365: bilibili.app.dynamic.v2.VipInfo.label:type_name -> bilibili.app.dynamic.v2.VipLabel
	321, // 366: bilibili.app.dynamic.v2.Weight.items:type_name -> bilibili.app.dynamic.v2.WeightItem
	50,  // 367: bilibili.app.dynamic.v2.WeightItem.type:type_name -> bilibili.app.dynamic.v2.WeightType
	319, // 368: bilibili.app.dynamic.v2.WeightItem.button:type_name -> bilibili.app.dynamic.v2.WeightButton
	320, // 369: bilibili.app.dynamic.v2.WeightItem.dislike:type_name -> bilibili.app.dynamic.v2.WeightDislike
	153, // 370: bilibili.app.dynamic.v2.DynServerDetailsReply.ItemsEntry.value:type_name -> bilibili.app.dynamic.v2.DynamicItem
	153, // 371: bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.ItemsEntry.value:type_name -> bilibili.app.dynamic.v2.DynamicItem
	149, // 372: bilibili.app.dynamic.v2.Dynamic.DynVideo:input_type -> bilibili.app.dynamic.v2.DynVideoReq
	116, // 373: bilibili.app.dynamic.v2.Dynamic.DynAll:input_type -> bilibili.app.dynamic.v2.DynAllReq
	121, // 374: bilibili.app.dynamic.v2.Dynamic.DynDetails:input_type -> bilibili.app.dynamic.v2.DynDetailsReq
	147, // 375: bilibili.app.dynamic.v2.Dynamic.DynVideoPersonal:input_type -> bilibili.app.dynamic.v2.DynVideoPersonalReq
	150, // 376: bilibili.app.dynamic.v2.Dynamic.DynVideoUpdOffset:input_type -> bilibili.app.dynamic.v2.DynVideoUpdOffsetReq
	112, // 377: bilibili.app.dynamic.v2.Dynamic.DynAdditionCommonFollow:input_type -> bilibili.app.dynamic.v2.DynAdditionCommonFollowReq
	145, // 378: bilibili.app.dynamic.v2.Dynamic.DynThumb:input_type -> bilibili.app.dynamic.v2.DynThumbReq
	123, // 379: bilibili.app.dynamic.v2.Dynamic.DynFakeCard:input_type -> bilibili.app.dynamic.v2.DynFakeCardReq
	131, // 380: bilibili.app.dynamic.v2.Dynamic.DynRcmdUpExchange:input_type -> bilibili.app.dynamic.v2.DynRcmdUpExchangeReq
	114, // 381: bilibili.app.dynamic.v2.Dynamic.DynAllPersonal:input_type -> bilibili.app.dynamic.v2.DynAllPersonalReq
	117, // 382: bilibili.app.dynamic.v2.Dynamic.DynAllUpdOffset:input_type -> bilibili.app.dynamic.v2.DynAllUpdOffsetReq
	152, // 383: bilibili.app.dynamic.v2.Dynamic.DynVote:input_type -> bilibili.app.dynamic.v2.DynVoteReq
	127, // 384: bilibili.app.dynamic.v2.Dynamic.DynMixUpListViewMore:input_type -> bilibili.app.dynamic.v2.DynMixUpListViewMoreReq
	125, // 385: bilibili.app.dynamic.v2.Dynamic.DynLight:input_type -> bilibili.app.dynamic.v2.DynLightReq
	119, // 386: bilibili.app.dynamic.v2.Dynamic.DynDetail:input_type -> bilibili.app.dynamic.v2.DynDetailReq
	177, // 387: bilibili.app.dynamic.v2.Dynamic.LikeList:input_type -> bilibili.app.dynamic.v2.LikeListReq
	259, // 388: bilibili.app.dynamic.v2.Dynamic.RepostList:input_type -> bilibili.app.dynamic.v2.RepostListReq
	261, // 389: bilibili.app.dynamic.v2.Dynamic.ReactionList:input_type -> bilibili.app.dynamic.v2.ReactionListReq
	138, // 390: bilibili.app.dynamic.v2.Dynamic.DynSpace:input_type -> bilibili.app.dynamic.v2.DynSpaceReq
	129, // 391: bilibili.app.dynamic.v2.Dynamic.DynUnLoginRcmd:input_type -> bilibili.app.dynamic.v2.DynRcmdReq
	137, // 392: bilibili.app.dynamic.v2.Dynamic.DynServerDetails:input_type -> bilibili.app.dynamic.v2.DynServerDetailsReq
	135, // 393: bilibili.app.dynamic.v2.Dynamic.DynSearch:input_type -> bilibili.app.dynamic.v2.DynSearchReq
	274, // 394: bilibili.app.dynamic.v2.Dynamic.SetDecision:input_type -> bilibili.app.dynamic.v2.SetDecisionReq
	75,  // 395: bilibili.app.dynamic.v2.Dynamic.AlumniDynamics:input_type -> bilibili.app.dynamic.v2.AlumniDynamicsReq
	93,  // 396: bilibili.app.dynamic.v2.Dynamic.CampusRcmd:input_type -> bilibili.app.dynamic.v2.CampusRcmdReq
	281, // 397: bilibili.app.dynamic.v2.Dynamic.SubscribeCampus:input_type -> bilibili.app.dynamic.v2.SubscribeCampusReq
	275, // 398: bilibili.app.dynamic.v2.Dynamic.SetRecentCampus:input_type -> bilibili.app.dynamic.v2.SetRecentCampusReq
	144, // 399: bilibili.app.dynamic.v2.Dynamic.DynTab:input_type -> bilibili.app.dynamic.v2.DynTabReq
	267, // 400: bilibili.app.dynamic.v2.Dynamic.SchoolSearch:input_type -> bilibili.app.dynamic.v2.SchoolSearchReq
	265, // 401: bilibili.app.dynamic.v2.Dynamic.SchoolRecommend:input_type -> bilibili.app.dynamic.v2.SchoolRecommendReq
	141, // 402: bilibili.app.dynamic.v2.Dynamic.DynSpaceSearchDetails:input_type -> bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq
	242, // 403: bilibili.app.dynamic.v2.Dynamic.OfficialAccounts:input_type -> bilibili.app.dynamic.v2.OfficialAccountsReq
	244, // 404: bilibili.app.dynamic.v2.Dynamic.OfficialDynamics:input_type -> bilibili.app.dynamic.v2.OfficialDynamicsReq
	96,  // 405: bilibili.app.dynamic.v2.Dynamic.CampusRedDot:input_type -> bilibili.app.dynamic.v2.CampusRedDotReq
	89,  // 406: bilibili.app.dynamic.v2.Dynamic.CampusRcmdFeed:input_type -> bilibili.app.dynamic.v2.CampusRcmdFeedReq
	307, // 407: bilibili.app.dynamic.v2.Dynamic.TopicSquare:input_type -> bilibili.app.dynamic.v2.TopicSquareReq
	303, // 408: bilibili.app.dynamic.v2.Dynamic.TopicList:input_type -> bilibili.app.dynamic.v2.TopicListReq
	86,  // 409: bilibili.app.dynamic.v2.Dynamic.CampusMateLikeList:input_type -> bilibili.app.dynamic.v2.CampusMateLikeListReq
	82,  // 410: bilibili.app.dynamic.v2.Dynamic.CampusFeedback:input_type -> bilibili.app.dynamic.v2.CampusFeedbackReq
	78,  // 411: bilibili.app.dynamic.v2.Dynamic.CampusBillboard:input_type -> bilibili.app.dynamic.v2.CampusBillBoardReq
	79,  // 412: bilibili.app.dynamic.v2.Dynamic.CampusBillboardInternal:input_type -> bilibili.app.dynamic.v2.CampusBillboardInternalReq
	100, // 413: bilibili.app.dynamic.v2.Dynamic.CampusTopicRcmdFeed:input_type -> bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq
	148, // 414: bilibili.app.dynamic.v2.Dynamic.DynVideo:output_type -> bilibili.app.dynamic.v2.DynVideoReply
	115, // 415: bilibili.app.dynamic.v2.Dynamic.DynAll:output_type -> bilibili.app.dynamic.v2.DynAllReply
	120, // 416: bilibili.app.dynamic.v2.Dynamic.DynDetails:output_type -> bilibili.app.dynamic.v2.DynDetailsReply
	146, // 417: bilibili.app.dynamic.v2.Dynamic.DynVideoPersonal:output_type -> bilibili.app.dynamic.v2.DynVideoPersonalReply
	238, // 418: bilibili.app.dynamic.v2.Dynamic.DynVideoUpdOffset:output_type -> bilibili.app.dynamic.v2.NoReply
	111, // 419: bilibili.app.dynamic.v2.Dynamic.DynAdditionCommonFollow:output_type -> bilibili.app.dynamic.v2.DynAdditionCommonFollowReply
	238, // 420: bilibili.app.dynamic.v2.Dynamic.DynThumb:output_type -> bilibili.app.dynamic.v2.NoReply
	122, // 421: bilibili.app.dynamic.v2.Dynamic.DynFakeCard:output_type -> bilibili.app.dynamic.v2.DynFakeCardReply
	130, // 422: bilibili.app.dynamic.v2.Dynamic.DynRcmdUpExchange:output_type -> bilibili.app.dynamic.v2.DynRcmdUpExchangeReply
	113, // 423: bilibili.app.dynamic.v2.Dynamic.DynAllPersonal:output_type -> bilibili.app.dynamic.v2.DynAllPersonalReply
	238, // 424: bilibili.app.dynamic.v2.Dynamic.DynAllUpdOffset:output_type -> bilibili.app.dynamic.v2.NoReply
	151, // 425: bilibili.app.dynamic.v2.Dynamic.DynVote:output_type -> bilibili.app.dynamic.v2.DynVoteReply
	126, // 426: bilibili.app.dynamic.v2.Dynamic.DynMixUpListViewMore:output_type -> bilibili.app.dynamic.v2.DynMixUpListViewMoreReply
	124, // 427: bilibili.app.dynamic.v2.Dynamic.DynLight:output_type -> bilibili.app.dynamic.v2.DynLightReply
	118, // 428: bilibili.app.dynamic.v2.Dynamic.DynDetail:output_type -> bilibili.app.dynamic.v2.DynDetailReply
	176, // 429: bilibili.app.dynamic.v2.Dynamic.LikeList:output_type -> bilibili.app.dynamic.v2.LikeListReply
	260, // 430: bilibili.app.dynamic.v2.Dynamic.RepostList:output_type -> bilibili.app.dynamic.v2.RepostListRsp
	262, // 431: bilibili.app.dynamic.v2.Dynamic.ReactionList:output_type -> bilibili.app.dynamic.v2.ReactionListReply
	139, // 432: bilibili.app.dynamic.v2.Dynamic.DynSpace:output_type -> bilibili.app.dynamic.v2.DynSpaceRsp
	128, // 433: bilibili.app.dynamic.v2.Dynamic.DynUnLoginRcmd:output_type -> bilibili.app.dynamic.v2.DynRcmdReply
	136, // 434: bilibili.app.dynamic.v2.Dynamic.DynServerDetails:output_type -> bilibili.app.dynamic.v2.DynServerDetailsReply
	134, // 435: bilibili.app.dynamic.v2.Dynamic.DynSearch:output_type -> bilibili.app.dynamic.v2.DynSearchReply
	238, // 436: bilibili.app.dynamic.v2.Dynamic.SetDecision:output_type -> bilibili.app.dynamic.v2.NoReply
	74,  // 437: bilibili.app.dynamic.v2.Dynamic.AlumniDynamics:output_type -> bilibili.app.dynamic.v2.AlumniDynamicsReply
	92,  // 438: bilibili.app.dynamic.v2.Dynamic.CampusRcmd:output_type -> bilibili.app.dynamic.v2.CampusRcmdReply
	238, // 439: bilibili.app.dynamic.v2.Dynamic.SubscribeCampus:output_type -> bilibili.app.dynamic.v2.NoReply
	238, // 440: bilibili.app.dynamic.v2.Dynamic.SetRecentCampus:output_type -> bilibili.app.dynamic.v2.NoReply
	143, // 441: bilibili.app.dynamic.v2.Dynamic.DynTab:output_type -> bilibili.app.dynamic.v2.DynTabReply
	266, // 442: bilibili.app.dynamic.v2.Dynamic.SchoolSearch:output_type -> bilibili.app.dynamic.v2.SchoolSearchReply
	264, // 443: bilibili.app.dynamic.v2.Dynamic.SchoolRecommend:output_type -> bilibili.app.dynamic.v2.SchoolRecommendReply
	140, // 444: bilibili.app.dynamic.v2.Dynamic.DynSpaceSearchDetails:output_type -> bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply
	241, // 445: bilibili.app.dynamic.v2.Dynamic.OfficialAccounts:output_type -> bilibili.app.dynamic.v2.OfficialAccountsReply
	243, // 446: bilibili.app.dynamic.v2.Dynamic.OfficialDynamics:output_type -> bilibili.app.dynamic.v2.OfficialDynamicsReply
	95,  // 447: bilibili.app.dynamic.v2.Dynamic.CampusRedDot:output_type -> bilibili.app.dynamic.v2.CampusRedDotReply
	88,  // 448: bilibili.app.dynamic.v2.Dynamic.CampusRcmdFeed:output_type -> bilibili.app.dynamic.v2.CampusRcmdFeedReply
	306, // 449: bilibili.app.dynamic.v2.Dynamic.TopicSquare:output_type -> bilibili.app.dynamic.v2.TopicSquareReply
	302, // 450: bilibili.app.dynamic.v2.Dynamic.TopicList:output_type -> bilibili.app.dynamic.v2.TopicListReply
	85,  // 451: bilibili.app.dynamic.v2.Dynamic.CampusMateLikeList:output_type -> bilibili.app.dynamic.v2.CampusMateLikeListReply
	81,  // 452: bilibili.app.dynamic.v2.Dynamic.CampusFeedback:output_type -> bilibili.app.dynamic.v2.CampusFeedbackReply
	77,  // 453: bilibili.app.dynamic.v2.Dynamic.CampusBillboard:output_type -> bilibili.app.dynamic.v2.CampusBillBoardReply
	77,  // 454: bilibili.app.dynamic.v2.Dynamic.CampusBillboardInternal:output_type -> bilibili.app.dynamic.v2.CampusBillBoardReply
	99,  // 455: bilibili.app.dynamic.v2.Dynamic.CampusTopicRcmdFeed:output_type -> bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply
	414, // [414:456] is the sub-list for method output_type
	372, // [372:414] is the sub-list for method input_type
	372, // [372:372] is the sub-list for extension type_name
	372, // [372:372] is the sub-list for extension extendee
	0,   // [0:372] is the sub-list for field type_name
}

func init() { file_bilibili_app_dynamic_v2_dynamic_proto_init() }
func file_bilibili_app_dynamic_v2_dynamic_proto_init() {
	if File_bilibili_app_dynamic_v2_dynamic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionEsport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionEsportMoba); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionEsportMobaStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionEsportMobaStatusDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionUP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionUgc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVote2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVoteDefaule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVotePic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVotePicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVoteWord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionVoteWordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalActSkin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalButtonInteractive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalButtonShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalButtonStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalPGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlumniDynamicsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlumniDynamicsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusBannerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusBillBoardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusBillBoardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusBillboardInternalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusFeedbackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusFeedbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusMateLikeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusMateLikeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusNoticeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdFeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdFeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRcmdTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRedDotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusRedDotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusShowTabInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusTopicRcmdFeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampusTopicRcmdFeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardVideoDynList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardVideoFollowList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardVideoUpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmtShowItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecoCardFan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecorateCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAdditionCommonFollowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAdditionCommonFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAllPersonalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAllPersonalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAllReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynAllUpdOffsetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynFakeCardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynFakeCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynLightReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynLightReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynMixUpListViewMoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynMixUpListViewMoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRcmdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRcmdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRcmdUpExchangeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRcmdUpExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRegionRcmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRegionRcmdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynServerDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynServerDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSpaceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSpaceSearchDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynSpaceSearchDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTabReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynTabReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynThumbReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoPersonalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoPersonalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoUpdOffsetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoHot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoLBS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoOGV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtInfoTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendReplyParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideBarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighlightText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoOGV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivePendant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynApplet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynCourBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynCourSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynDrawItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynDrawTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynDrawTagItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynLive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynLiveRcmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynMedialist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynMusic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynPGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynSubscriptionNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MdlDynUGCSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixUpListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixUpListLiveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAdditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAuthorBadgeButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAuthorForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleAuthorForwardTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleBannerUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleBannerUserItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleButtom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDescGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDispute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleExtendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleFold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInteraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleItemNull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleLikeUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleRcmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleRecommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleStory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTopTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTopicBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleTopicDetailsExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nameplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialAccountsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialAccountsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialDynamicsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialDynamicsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialRcmdArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialRcmdDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGCSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayurlParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Popup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdTopButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdUPsParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepostListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepostListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolRecommendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolRecommendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchoolSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchToast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDecisionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRecentCampusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeCampusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointAttention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointAutoPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointDefault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointDefaultToast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointDislike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointFavorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointHide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointHideInteractive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointShareChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointTopicIrrelevant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopAdditionUP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicRcmdCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSquareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSquareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSquareReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unfollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfollowUserItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpListMoreLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserItemStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPendant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightDislike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AdditionEsport_AdditionEsportMoba)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*AdditionVote2_AdditionVoteWord)(nil),
		(*AdditionVote2_AdditionVotePic)(nil),
		(*AdditionVote2_AdditionVoteDefaule)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[148].OneofWrappers = []interface{}{
		(*MdlDynSubscriptionNew_DynSubscription)(nil),
		(*MdlDynSubscriptionNew_DynLiveRcmd)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[152].OneofWrappers = []interface{}{
		(*Module_ModuleAuthor)(nil),
		(*Module_ModuleDispute)(nil),
		(*Module_ModuleDesc)(nil),
		(*Module_ModuleDynamic)(nil),
		(*Module_ModuleLikeUser)(nil),
		(*Module_ModuleExtend)(nil),
		(*Module_ModuleAdditional)(nil),
		(*Module_ModuleStat)(nil),
		(*Module_ModuleFold)(nil),
		(*Module_ModuleComment)(nil),
		(*Module_ModuleInteraction)(nil),
		(*Module_ModuleAuthorForward)(nil),
		(*Module_ModuleAd)(nil),
		(*Module_ModuleBanner)(nil),
		(*Module_ModuleItemNull)(nil),
		(*Module_ModuleShareInfo)(nil),
		(*Module_ModuleRecommend)(nil),
		(*Module_ModuleTop)(nil),
		(*Module_ModuleButtom)(nil),
		(*Module_ModuleStatForward)(nil),
		(*Module_ModuleStory)(nil),
		(*Module_ModuleTopic)(nil),
		(*Module_ModuleTopicDetailsExt)(nil),
		(*Module_ModuleTopTag)(nil),
		(*Module_ModuleTopicBrief)(nil),
		(*Module_ModuleTitle)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[154].OneofWrappers = []interface{}{
		(*ModuleAdditional_Pgc)(nil),
		(*ModuleAdditional_Goods)(nil),
		(*ModuleAdditional_Vote)(nil),
		(*ModuleAdditional_Common)(nil),
		(*ModuleAdditional_Esport)(nil),
		(*ModuleAdditional_Vote2)(nil),
		(*ModuleAdditional_Ugc)(nil),
		(*ModuleAdditional_Up)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[159].OneofWrappers = []interface{}{
		(*ModuleBanner_User)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[167].OneofWrappers = []interface{}{
		(*ModuleDynamic_DynArchive)(nil),
		(*ModuleDynamic_DynPgc)(nil),
		(*ModuleDynamic_DynCourSeason)(nil),
		(*ModuleDynamic_DynCourBatch)(nil),
		(*ModuleDynamic_DynForward)(nil),
		(*ModuleDynamic_DynDraw)(nil),
		(*ModuleDynamic_DynArticle)(nil),
		(*ModuleDynamic_DynMusic)(nil),
		(*ModuleDynamic_DynCommon)(nil),
		(*ModuleDynamic_DynCommonLive)(nil),
		(*ModuleDynamic_DynMedialist)(nil),
		(*ModuleDynamic_DynApplet)(nil),
		(*ModuleDynamic_DynSubscription)(nil),
		(*ModuleDynamic_DynLiveRcmd)(nil),
		(*ModuleDynamic_DynUgcSeason)(nil),
		(*ModuleDynamic_DynSubscriptionNew)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[169].OneofWrappers = []interface{}{
		(*ModuleExtendItem_ExtInfoTopic)(nil),
		(*ModuleExtendItem_ExtInfoLbs)(nil),
		(*ModuleExtendItem_ExtInfoHot)(nil),
		(*ModuleExtendItem_ExtInfoGame)(nil),
		(*ModuleExtendItem_ExtInfoCommon)(nil),
		(*ModuleExtendItem_ExtInfoOgv)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[194].OneofWrappers = []interface{}{
		(*OfficialItem_RcmdArchive)(nil),
		(*OfficialItem_RcmdDynamic)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[203].OneofWrappers = []interface{}{
		(*RcmdItem_RcmdArchive)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[229].OneofWrappers = []interface{}{
		(*StoryItem_StoryArchive)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[240].OneofWrappers = []interface{}{
		(*ThreePointItem_Default)(nil),
		(*ThreePointItem_AutoPlayer)(nil),
		(*ThreePointItem_Share)(nil),
		(*ThreePointItem_Attention)(nil),
		(*ThreePointItem_Wait)(nil),
		(*ThreePointItem_Dislike)(nil),
		(*ThreePointItem_Favorite)(nil),
		(*ThreePointItem_Top)(nil),
		(*ThreePointItem_Comment)(nil),
		(*ThreePointItem_Hide)(nil),
		(*ThreePointItem_TopicIrrelevant)(nil),
	}
	file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes[270].OneofWrappers = []interface{}{
		(*WeightItem_Button)(nil),
		(*WeightItem_Dislike)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_dynamic_v2_dynamic_proto_rawDesc,
			NumEnums:      51,
			NumMessages:   273,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_dynamic_v2_dynamic_proto_goTypes,
		DependencyIndexes: file_bilibili_app_dynamic_v2_dynamic_proto_depIdxs,
		EnumInfos:         file_bilibili_app_dynamic_v2_dynamic_proto_enumTypes,
		MessageInfos:      file_bilibili_app_dynamic_v2_dynamic_proto_msgTypes,
	}.Build()
	File_bilibili_app_dynamic_v2_dynamic_proto = out.File
	file_bilibili_app_dynamic_v2_dynamic_proto_rawDesc = nil
	file_bilibili_app_dynamic_v2_dynamic_proto_goTypes = nil
	file_bilibili_app_dynamic_v2_dynamic_proto_depIdxs = nil
}
