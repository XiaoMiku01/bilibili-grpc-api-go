// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: bilibili/app/card/v1/single.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SmallCoverV5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverGif string `protobuf:"bytes,2,opt,name=cover_gif,json=coverGif,proto3" json:"cover_gif,omitempty"`
	Up *Up `protobuf:"bytes,3,opt,name=up,proto3" json:"up,omitempty"`
	// 封面右下角标文案
	CoverRightText_1 string `protobuf:"bytes,4,opt,name=cover_right_text_1,json=coverRightText1,proto3" json:"cover_right_text_1,omitempty"`
	// 右侧文案1
	RightDesc_1 string `protobuf:"bytes,5,opt,name=right_desc_1,json=rightDesc1,proto3" json:"right_desc_1,omitempty"`
	// 右侧文案2
	RightDesc_2 string `protobuf:"bytes,6,opt,name=right_desc_2,json=rightDesc2,proto3" json:"right_desc_2,omitempty"`
	// 右侧推荐原因标签框
	RcmdReasonStyle *ReasonStyle `protobuf:"bytes,7,opt,name=rcmd_reason_style,json=rcmdReasonStyle,proto3" json:"rcmd_reason_style,omitempty"`
	HotwordEntrance *HotwordEntrance `protobuf:"bytes,8,opt,name=hotword_entrance,json=hotwordEntrance,proto3" json:"hotword_entrance,omitempty"`
	// 直播小卡的角标
	CornerMarkStyle *ReasonStyle `protobuf:"bytes,9,opt,name=corner_mark_style,json=cornerMarkStyle,proto3" json:"corner_mark_style,omitempty"`
	// 右侧文案1图标id
	RightIcon_1 int32 `protobuf:"varint,10,opt,name=right_icon_1,json=rightIcon1,proto3" json:"right_icon_1,omitempty"`
	// 右侧文案2图标id
	RightIcon_2 int32 `protobuf:"varint,11,opt,name=right_icon_2,json=rightIcon2,proto3" json:"right_icon_2,omitempty"`
	// 左上角角标
	LeftCornerMarkStyle *ReasonStyle `protobuf:"bytes,12,opt,name=left_corner_mark_style,json=leftCornerMarkStyle,proto3" json:"left_corner_mark_style,omitempty"`
	CoverRightTextContentDescription string `protobuf:"bytes,13,opt,name=cover_right_text_content_description,json=coverRightTextContentDescription,proto3" json:"cover_right_text_content_description,omitempty"`
	RightDesc1ContentDescription string `protobuf:"bytes,14,opt,name=right_desc1_content_description,json=rightDesc1ContentDescription,proto3" json:"right_desc1_content_description,omitempty"`
}

func (x *SmallCoverV5) Reset() {
	*x = SmallCoverV5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallCoverV5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallCoverV5) ProtoMessage() {}

func (x *SmallCoverV5) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallCoverV5.ProtoReflect.Descriptor instead.
func (*SmallCoverV5) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{0}
}

func (x *SmallCoverV5) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SmallCoverV5) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *SmallCoverV5) GetUp() *Up {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *SmallCoverV5) GetCoverRightText_1() string {
	if x != nil {
		return x.CoverRightText_1
	}
	return ""
}

func (x *SmallCoverV5) GetRightDesc_1() string {
	if x != nil {
		return x.RightDesc_1
	}
	return ""
}

func (x *SmallCoverV5) GetRightDesc_2() string {
	if x != nil {
		return x.RightDesc_2
	}
	return ""
}

func (x *SmallCoverV5) GetRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.RcmdReasonStyle
	}
	return nil
}

func (x *SmallCoverV5) GetHotwordEntrance() *HotwordEntrance {
	if x != nil {
		return x.HotwordEntrance
	}
	return nil
}

func (x *SmallCoverV5) GetCornerMarkStyle() *ReasonStyle {
	if x != nil {
		return x.CornerMarkStyle
	}
	return nil
}

func (x *SmallCoverV5) GetRightIcon_1() int32 {
	if x != nil {
		return x.RightIcon_1
	}
	return 0
}

func (x *SmallCoverV5) GetRightIcon_2() int32 {
	if x != nil {
		return x.RightIcon_2
	}
	return 0
}

func (x *SmallCoverV5) GetLeftCornerMarkStyle() *ReasonStyle {
	if x != nil {
		return x.LeftCornerMarkStyle
	}
	return nil
}

func (x *SmallCoverV5) GetCoverRightTextContentDescription() string {
	if x != nil {
		return x.CoverRightTextContentDescription
	}
	return ""
}

func (x *SmallCoverV5) GetRightDesc1ContentDescription() string {
	if x != nil {
		return x.RightDesc1ContentDescription
	}
	return ""
}

type SmallCoverV5Ad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverGif string `protobuf:"bytes,2,opt,name=cover_gif,json=coverGif,proto3" json:"cover_gif,omitempty"`
	Up *Up `protobuf:"bytes,3,opt,name=up,proto3" json:"up,omitempty"`
	CoverRightText1 string `protobuf:"bytes,4,opt,name=cover_right_text1,json=coverRightText1,proto3" json:"cover_right_text1,omitempty"`
	RightDesc1 string `protobuf:"bytes,5,opt,name=right_desc1,json=rightDesc1,proto3" json:"right_desc1,omitempty"`
	RightDesc2 string `protobuf:"bytes,6,opt,name=right_desc2,json=rightDesc2,proto3" json:"right_desc2,omitempty"`
	RcmdReasonStyle *ReasonStyle `protobuf:"bytes,7,opt,name=rcmd_reason_style,json=rcmdReasonStyle,proto3" json:"rcmd_reason_style,omitempty"`
	HotwordEntrance *HotwordEntrance `protobuf:"bytes,8,opt,name=hotword_entrance,json=hotwordEntrance,proto3" json:"hotword_entrance,omitempty"`
	CornerMarkStyle *ReasonStyle `protobuf:"bytes,9,opt,name=corner_mark_style,json=cornerMarkStyle,proto3" json:"corner_mark_style,omitempty"`
	RightIcon1 int32 `protobuf:"varint,10,opt,name=right_icon1,json=rightIcon1,proto3" json:"right_icon1,omitempty"`
	RightIcon2 int32 `protobuf:"varint,11,opt,name=right_icon2,json=rightIcon2,proto3" json:"right_icon2,omitempty"`
	LeftCornerMarkStyle *ReasonStyle `protobuf:"bytes,12,opt,name=left_corner_mark_style,json=leftCornerMarkStyle,proto3" json:"left_corner_mark_style,omitempty"`
	CoverRightTextContentDescription string `protobuf:"bytes,13,opt,name=cover_right_text_content_description,json=coverRightTextContentDescription,proto3" json:"cover_right_text_content_description,omitempty"`
	RightDesc1ContentDescription string `protobuf:"bytes,14,opt,name=right_desc1_content_description,json=rightDesc1ContentDescription,proto3" json:"right_desc1_content_description,omitempty"`
}

func (x *SmallCoverV5Ad) Reset() {
	*x = SmallCoverV5Ad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallCoverV5Ad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallCoverV5Ad) ProtoMessage() {}

func (x *SmallCoverV5Ad) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallCoverV5Ad.ProtoReflect.Descriptor instead.
func (*SmallCoverV5Ad) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{1}
}

func (x *SmallCoverV5Ad) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SmallCoverV5Ad) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *SmallCoverV5Ad) GetUp() *Up {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *SmallCoverV5Ad) GetCoverRightText1() string {
	if x != nil {
		return x.CoverRightText1
	}
	return ""
}

func (x *SmallCoverV5Ad) GetRightDesc1() string {
	if x != nil {
		return x.RightDesc1
	}
	return ""
}

func (x *SmallCoverV5Ad) GetRightDesc2() string {
	if x != nil {
		return x.RightDesc2
	}
	return ""
}

func (x *SmallCoverV5Ad) GetRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.RcmdReasonStyle
	}
	return nil
}

func (x *SmallCoverV5Ad) GetHotwordEntrance() *HotwordEntrance {
	if x != nil {
		return x.HotwordEntrance
	}
	return nil
}

func (x *SmallCoverV5Ad) GetCornerMarkStyle() *ReasonStyle {
	if x != nil {
		return x.CornerMarkStyle
	}
	return nil
}

func (x *SmallCoverV5Ad) GetRightIcon1() int32 {
	if x != nil {
		return x.RightIcon1
	}
	return 0
}

func (x *SmallCoverV5Ad) GetRightIcon2() int32 {
	if x != nil {
		return x.RightIcon2
	}
	return 0
}

func (x *SmallCoverV5Ad) GetLeftCornerMarkStyle() *ReasonStyle {
	if x != nil {
		return x.LeftCornerMarkStyle
	}
	return nil
}

func (x *SmallCoverV5Ad) GetCoverRightTextContentDescription() string {
	if x != nil {
		return x.CoverRightTextContentDescription
	}
	return ""
}

func (x *SmallCoverV5Ad) GetRightDesc1ContentDescription() string {
	if x != nil {
		return x.RightDesc1ContentDescription
	}
	return ""
}

type HotwordEntrance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotwordId int64 `protobuf:"varint,1,opt,name=hotword_id,json=hotwordId,proto3" json:"hotword_id,omitempty"`
	HotText string `protobuf:"bytes,2,opt,name=hot_text,json=hotText,proto3" json:"hot_text,omitempty"`
	H5Url string `protobuf:"bytes,3,opt,name=h5_url,json=h5Url,proto3" json:"h5_url,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *HotwordEntrance) Reset() {
	*x = HotwordEntrance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotwordEntrance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotwordEntrance) ProtoMessage() {}

func (x *HotwordEntrance) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotwordEntrance.ProtoReflect.Descriptor instead.
func (*HotwordEntrance) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{2}
}

func (x *HotwordEntrance) GetHotwordId() int64 {
	if x != nil {
		return x.HotwordId
	}
	return 0
}

func (x *HotwordEntrance) GetHotText() string {
	if x != nil {
		return x.HotText
	}
	return ""
}

func (x *HotwordEntrance) GetH5Url() string {
	if x != nil {
		return x.H5Url
	}
	return ""
}

func (x *HotwordEntrance) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type LargeCoverV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverGif string `protobuf:"bytes,2,opt,name=cover_gif,json=coverGif,proto3" json:"cover_gif,omitempty"`
	Avatar *Avatar `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	CoverLeftText_1 string `protobuf:"bytes,4,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	CoverLeftText_2 string `protobuf:"bytes,5,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	CoverLeftText_3 string `protobuf:"bytes,6,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	CoverBadge string `protobuf:"bytes,7,opt,name=cover_badge,json=coverBadge,proto3" json:"cover_badge,omitempty"`
	TopRcmdReason string `protobuf:"bytes,8,opt,name=top_rcmd_reason,json=topRcmdReason,proto3" json:"top_rcmd_reason,omitempty"`
	BottomRcmdReason string `protobuf:"bytes,9,opt,name=bottom_rcmd_reason,json=bottomRcmdReason,proto3" json:"bottom_rcmd_reason,omitempty"`
	Desc string `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	OfficialIcon int32 `protobuf:"varint,11,opt,name=official_icon,json=officialIcon,proto3" json:"official_icon,omitempty"`
	CanPlay int32 `protobuf:"varint,12,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	TopRcmdReasonStyle *ReasonStyle `protobuf:"bytes,13,opt,name=top_rcmd_reason_style,json=topRcmdReasonStyle,proto3" json:"top_rcmd_reason_style,omitempty"`
	BottomRcmdReasonStyle *ReasonStyle `protobuf:"bytes,14,opt,name=bottom_rcmd_reason_style,json=bottomRcmdReasonStyle,proto3" json:"bottom_rcmd_reason_style,omitempty"`
	RcmdReasonStyleV2 *ReasonStyle `protobuf:"bytes,15,opt,name=rcmd_reason_style_v2,json=rcmdReasonStyleV2,proto3" json:"rcmd_reason_style_v2,omitempty"`
	LeftCoverBadgeStyle *ReasonStyle `protobuf:"bytes,16,opt,name=left_cover_badge_style,json=leftCoverBadgeStyle,proto3" json:"left_cover_badge_style,omitempty"`
	RightCoverBadgeStyle *ReasonStyle `protobuf:"bytes,17,opt,name=right_cover_badge_style,json=rightCoverBadgeStyle,proto3" json:"right_cover_badge_style,omitempty"`
	CoverBadge_2 string `protobuf:"bytes,18,opt,name=cover_badge_2,json=coverBadge2,proto3" json:"cover_badge_2,omitempty"`
	LikeButton *LikeButton `protobuf:"bytes,19,opt,name=like_button,json=likeButton,proto3" json:"like_button,omitempty"`
	TitleSingleLine int32 `protobuf:"varint,20,opt,name=title_single_line,json=titleSingleLine,proto3" json:"title_single_line,omitempty"`
	CoverRightText string `protobuf:"bytes,21,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
}

func (x *LargeCoverV1) Reset() {
	*x = LargeCoverV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LargeCoverV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LargeCoverV1) ProtoMessage() {}

func (x *LargeCoverV1) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LargeCoverV1.ProtoReflect.Descriptor instead.
func (*LargeCoverV1) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{3}
}

func (x *LargeCoverV1) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LargeCoverV1) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *LargeCoverV1) GetAvatar() *Avatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *LargeCoverV1) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *LargeCoverV1) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *LargeCoverV1) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *LargeCoverV1) GetCoverBadge() string {
	if x != nil {
		return x.CoverBadge
	}
	return ""
}

func (x *LargeCoverV1) GetTopRcmdReason() string {
	if x != nil {
		return x.TopRcmdReason
	}
	return ""
}

func (x *LargeCoverV1) GetBottomRcmdReason() string {
	if x != nil {
		return x.BottomRcmdReason
	}
	return ""
}

func (x *LargeCoverV1) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *LargeCoverV1) GetOfficialIcon() int32 {
	if x != nil {
		return x.OfficialIcon
	}
	return 0
}

func (x *LargeCoverV1) GetCanPlay() int32 {
	if x != nil {
		return x.CanPlay
	}
	return 0
}

func (x *LargeCoverV1) GetTopRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.TopRcmdReasonStyle
	}
	return nil
}

func (x *LargeCoverV1) GetBottomRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.BottomRcmdReasonStyle
	}
	return nil
}

func (x *LargeCoverV1) GetRcmdReasonStyleV2() *ReasonStyle {
	if x != nil {
		return x.RcmdReasonStyleV2
	}
	return nil
}

func (x *LargeCoverV1) GetLeftCoverBadgeStyle() *ReasonStyle {
	if x != nil {
		return x.LeftCoverBadgeStyle
	}
	return nil
}

func (x *LargeCoverV1) GetRightCoverBadgeStyle() *ReasonStyle {
	if x != nil {
		return x.RightCoverBadgeStyle
	}
	return nil
}

func (x *LargeCoverV1) GetCoverBadge_2() string {
	if x != nil {
		return x.CoverBadge_2
	}
	return ""
}

func (x *LargeCoverV1) GetLikeButton() *LikeButton {
	if x != nil {
		return x.LikeButton
	}
	return nil
}

func (x *LargeCoverV1) GetTitleSingleLine() int32 {
	if x != nil {
		return x.TitleSingleLine
	}
	return 0
}

func (x *LargeCoverV1) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

type ThreeItemAllV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TopRcmdReasonStyle *ReasonStyle `protobuf:"bytes,2,opt,name=top_rcmd_reason_style,json=topRcmdReasonStyle,proto3" json:"top_rcmd_reason_style,omitempty"`
	Item []*TwoItemHV1Item `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *ThreeItemAllV2) Reset() {
	*x = ThreeItemAllV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreeItemAllV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreeItemAllV2) ProtoMessage() {}

func (x *ThreeItemAllV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreeItemAllV2.ProtoReflect.Descriptor instead.
func (*ThreeItemAllV2) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{4}
}

func (x *ThreeItemAllV2) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ThreeItemAllV2) GetTopRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.TopRcmdReasonStyle
	}
	return nil
}

func (x *ThreeItemAllV2) GetItem() []*TwoItemHV1Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type TwoItemHV1Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Param string `protobuf:"bytes,4,opt,name=param,proto3" json:"param,omitempty"`
	Args *Args `protobuf:"bytes,5,opt,name=args,proto3" json:"args,omitempty"`
	Goto string `protobuf:"bytes,6,opt,name=goto,proto3" json:"goto,omitempty"`
	CoverLeftText_1 string `protobuf:"bytes,7,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	CoverLeftIcon_1 int32 `protobuf:"varint,8,opt,name=cover_left_icon_1,json=coverLeftIcon1,proto3" json:"cover_left_icon_1,omitempty"`
	CoverRightText string `protobuf:"bytes,9,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
}

func (x *TwoItemHV1Item) Reset() {
	*x = TwoItemHV1Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoItemHV1Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoItemHV1Item) ProtoMessage() {}

func (x *TwoItemHV1Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoItemHV1Item.ProtoReflect.Descriptor instead.
func (*TwoItemHV1Item) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{5}
}

func (x *TwoItemHV1Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TwoItemHV1Item) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *TwoItemHV1Item) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *TwoItemHV1Item) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *TwoItemHV1Item) GetArgs() *Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *TwoItemHV1Item) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *TwoItemHV1Item) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *TwoItemHV1Item) GetCoverLeftIcon_1() int32 {
	if x != nil {
		return x.CoverLeftIcon_1
	}
	return 0
}

func (x *TwoItemHV1Item) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

// 推荐
type RcmdOneItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 标签框信息
	TopRcmdReasonStyle *ReasonStyle `protobuf:"bytes,2,opt,name=topRcmdReasonStyle,proto3" json:"topRcmdReasonStyle,omitempty"`
	// 小封面推荐内容信息
	Item *SmallCoverRcmdItem `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *RcmdOneItem) Reset() {
	*x = RcmdOneItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdOneItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdOneItem) ProtoMessage() {}

func (x *RcmdOneItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdOneItem.ProtoReflect.Descriptor instead.
func (*RcmdOneItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{6}
}

func (x *RcmdOneItem) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *RcmdOneItem) GetTopRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.TopRcmdReasonStyle
	}
	return nil
}

func (x *RcmdOneItem) GetItem() *SmallCoverRcmdItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 小封面推荐内容信息
type SmallCoverRcmdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面url
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转uri
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// 参数
	Param string `protobuf:"bytes,4,opt,name=param,proto3" json:"param,omitempty"`
	// 跳转类型
	// av:视频稿件
	Goto string `protobuf:"bytes,5,opt,name=goto,proto3" json:"goto,omitempty"`
	// 封面右下角标文案
	CoverRightText1 string `protobuf:"bytes,6,opt,name=coverRightText1,proto3" json:"coverRightText1,omitempty"`
	// 右侧文案1
	RightDesc1 string `protobuf:"bytes,7,opt,name=rightDesc1,proto3" json:"rightDesc1,omitempty"`
	// 右侧文案2
	RightDesc2 string `protobuf:"bytes,8,opt,name=rightDesc2,proto3" json:"rightDesc2,omitempty"`
	CoverGif string `protobuf:"bytes,9,opt,name=coverGif,proto3" json:"coverGif,omitempty"`
	// 右侧文案1图标id
	RightIcon1 int32 `protobuf:"varint,10,opt,name=rightIcon1,proto3" json:"rightIcon1,omitempty"`
	// 右侧文案2图标id
	RightIcon2 int32 `protobuf:"varint,11,opt,name=rightIcon2,proto3" json:"rightIcon2,omitempty"`
	CoverRightTextContentDescription string `protobuf:"bytes,12,opt,name=cover_right_text_content_description,json=coverRightTextContentDescription,proto3" json:"cover_right_text_content_description,omitempty"`
	RightDesc1ContentDescription string `protobuf:"bytes,13,opt,name=right_desc1_content_description,json=rightDesc1ContentDescription,proto3" json:"right_desc1_content_description,omitempty"`
}

func (x *SmallCoverRcmdItem) Reset() {
	*x = SmallCoverRcmdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmallCoverRcmdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmallCoverRcmdItem) ProtoMessage() {}

func (x *SmallCoverRcmdItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmallCoverRcmdItem.ProtoReflect.Descriptor instead.
func (*SmallCoverRcmdItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{7}
}

func (x *SmallCoverRcmdItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetCoverRightText1() string {
	if x != nil {
		return x.CoverRightText1
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetRightDesc1() string {
	if x != nil {
		return x.RightDesc1
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetRightDesc2() string {
	if x != nil {
		return x.RightDesc2
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetRightIcon1() int32 {
	if x != nil {
		return x.RightIcon1
	}
	return 0
}

func (x *SmallCoverRcmdItem) GetRightIcon2() int32 {
	if x != nil {
		return x.RightIcon2
	}
	return 0
}

func (x *SmallCoverRcmdItem) GetCoverRightTextContentDescription() string {
	if x != nil {
		return x.CoverRightTextContentDescription
	}
	return ""
}

func (x *SmallCoverRcmdItem) GetRightDesc1ContentDescription() string {
	if x != nil {
		return x.RightDesc1ContentDescription
	}
	return ""
}

type ThreeItemV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TitleIcon int32 `protobuf:"varint,2,opt,name=titleIcon,proto3" json:"titleIcon,omitempty"`
	MoreUri string `protobuf:"bytes,3,opt,name=moreUri,proto3" json:"moreUri,omitempty"`
	MoreText string `protobuf:"bytes,4,opt,name=moreText,proto3" json:"moreText,omitempty"`
	Items []*ThreeItemV1Item `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ThreeItemV1) Reset() {
	*x = ThreeItemV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreeItemV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreeItemV1) ProtoMessage() {}

func (x *ThreeItemV1) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreeItemV1.ProtoReflect.Descriptor instead.
func (*ThreeItemV1) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{8}
}

func (x *ThreeItemV1) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ThreeItemV1) GetTitleIcon() int32 {
	if x != nil {
		return x.TitleIcon
	}
	return 0
}

func (x *ThreeItemV1) GetMoreUri() string {
	if x != nil {
		return x.MoreUri
	}
	return ""
}

func (x *ThreeItemV1) GetMoreText() string {
	if x != nil {
		return x.MoreText
	}
	return ""
}

func (x *ThreeItemV1) GetItems() []*ThreeItemV1Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ThreeItemV1Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverLeftText string `protobuf:"bytes,2,opt,name=coverLeftText,proto3" json:"coverLeftText,omitempty"`
	CoverLeftIcon int32 `protobuf:"varint,3,opt,name=coverLeftIcon,proto3" json:"coverLeftIcon,omitempty"`
	Desc1 string `protobuf:"bytes,4,opt,name=desc1,proto3" json:"desc1,omitempty"`
	Desc2 string `protobuf:"bytes,5,opt,name=desc2,proto3" json:"desc2,omitempty"`
	Badge string `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *ThreeItemV1Item) Reset() {
	*x = ThreeItemV1Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreeItemV1Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreeItemV1Item) ProtoMessage() {}

func (x *ThreeItemV1Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreeItemV1Item.ProtoReflect.Descriptor instead.
func (*ThreeItemV1Item) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{9}
}

func (x *ThreeItemV1Item) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ThreeItemV1Item) GetCoverLeftText() string {
	if x != nil {
		return x.CoverLeftText
	}
	return ""
}

func (x *ThreeItemV1Item) GetCoverLeftIcon() int32 {
	if x != nil {
		return x.CoverLeftIcon
	}
	return 0
}

func (x *ThreeItemV1Item) GetDesc1() string {
	if x != nil {
		return x.Desc1
	}
	return ""
}

func (x *ThreeItemV1Item) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *ThreeItemV1Item) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

type HotTopicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Param string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HotTopicItem) Reset() {
	*x = HotTopicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotTopicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotTopicItem) ProtoMessage() {}

func (x *HotTopicItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotTopicItem.ProtoReflect.Descriptor instead.
func (*HotTopicItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{10}
}

func (x *HotTopicItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *HotTopicItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *HotTopicItem) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *HotTopicItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HotTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Items []*HotTopicItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *HotTopic) Reset() {
	*x = HotTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotTopic) ProtoMessage() {}

func (x *HotTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotTopic.ProtoReflect.Descriptor instead.
func (*HotTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{11}
}

func (x *HotTopic) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *HotTopic) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *HotTopic) GetItems() []*HotTopicItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DynamicHot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	TopLeftTitle string `protobuf:"bytes,2,opt,name=top_left_title,json=topLeftTitle,proto3" json:"top_left_title,omitempty"`
	Desc1 string `protobuf:"bytes,3,opt,name=desc1,proto3" json:"desc1,omitempty"`
	Desc2 string `protobuf:"bytes,4,opt,name=desc2,proto3" json:"desc2,omitempty"`
	MoreUri string `protobuf:"bytes,5,opt,name=more_uri,json=moreUri,proto3" json:"more_uri,omitempty"`
	MoreText string `protobuf:"bytes,6,opt,name=more_text,json=moreText,proto3" json:"more_text,omitempty"`
	Covers []string `protobuf:"bytes,7,rep,name=covers,proto3" json:"covers,omitempty"`
	CoverRightText string `protobuf:"bytes,8,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	TopRcmdReasonStyle *ReasonStyle `protobuf:"bytes,9,opt,name=top_rcmd_reason_style,json=topRcmdReasonStyle,proto3" json:"top_rcmd_reason_style,omitempty"`
}

func (x *DynamicHot) Reset() {
	*x = DynamicHot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicHot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicHot) ProtoMessage() {}

func (x *DynamicHot) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicHot.ProtoReflect.Descriptor instead.
func (*DynamicHot) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{12}
}

func (x *DynamicHot) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *DynamicHot) GetTopLeftTitle() string {
	if x != nil {
		return x.TopLeftTitle
	}
	return ""
}

func (x *DynamicHot) GetDesc1() string {
	if x != nil {
		return x.Desc1
	}
	return ""
}

func (x *DynamicHot) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *DynamicHot) GetMoreUri() string {
	if x != nil {
		return x.MoreUri
	}
	return ""
}

func (x *DynamicHot) GetMoreText() string {
	if x != nil {
		return x.MoreText
	}
	return ""
}

func (x *DynamicHot) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *DynamicHot) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

func (x *DynamicHot) GetTopRcmdReasonStyle() *ReasonStyle {
	if x != nil {
		return x.TopRcmdReasonStyle
	}
	return nil
}

type MiddleCoverV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Desc1 string `protobuf:"bytes,2,opt,name=desc1,proto3" json:"desc1,omitempty"`
	Desc2 string `protobuf:"bytes,3,opt,name=desc2,proto3" json:"desc2,omitempty"`
	CoverBadgeStyle *ReasonStyle `protobuf:"bytes,4,opt,name=cover_badge_style,json=coverBadgeStyle,proto3" json:"cover_badge_style,omitempty"`
}

func (x *MiddleCoverV3) Reset() {
	*x = MiddleCoverV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleCoverV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleCoverV3) ProtoMessage() {}

func (x *MiddleCoverV3) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleCoverV3.ProtoReflect.Descriptor instead.
func (*MiddleCoverV3) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{13}
}

func (x *MiddleCoverV3) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MiddleCoverV3) GetDesc1() string {
	if x != nil {
		return x.Desc1
	}
	return ""
}

func (x *MiddleCoverV3) GetDesc2() string {
	if x != nil {
		return x.Desc2
	}
	return ""
}

func (x *MiddleCoverV3) GetCoverBadgeStyle() *ReasonStyle {
	if x != nil {
		return x.CoverBadgeStyle
	}
	return nil
}

type LargeCoverV4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverLeftText_1 string `protobuf:"bytes,2,opt,name=cover_left_text_1,json=coverLeftText1,proto3" json:"cover_left_text_1,omitempty"`
	CoverLeftText_2 string `protobuf:"bytes,3,opt,name=cover_left_text_2,json=coverLeftText2,proto3" json:"cover_left_text_2,omitempty"`
	CoverLeftText_3 string `protobuf:"bytes,4,opt,name=cover_left_text_3,json=coverLeftText3,proto3" json:"cover_left_text_3,omitempty"`
	CoverBadge string `protobuf:"bytes,5,opt,name=cover_badge,json=coverBadge,proto3" json:"cover_badge,omitempty"`
	CanPlay int32 `protobuf:"varint,6,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	Up *Up `protobuf:"bytes,7,opt,name=up,proto3" json:"up,omitempty"`
	ShortLink string `protobuf:"bytes,8,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	ShareSubtitle string `protobuf:"bytes,9,opt,name=share_subtitle,json=shareSubtitle,proto3" json:"share_subtitle,omitempty"`
	PlayNumber string `protobuf:"bytes,10,opt,name=play_number,json=playNumber,proto3" json:"play_number,omitempty"`
	Bvid string `protobuf:"bytes,11,opt,name=bvid,proto3" json:"bvid,omitempty"`
	SubParam string `protobuf:"bytes,12,opt,name=sub_param,json=subParam,proto3" json:"sub_param,omitempty"`
}

func (x *LargeCoverV4) Reset() {
	*x = LargeCoverV4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LargeCoverV4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LargeCoverV4) ProtoMessage() {}

func (x *LargeCoverV4) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LargeCoverV4.ProtoReflect.Descriptor instead.
func (*LargeCoverV4) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{14}
}

func (x *LargeCoverV4) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LargeCoverV4) GetCoverLeftText_1() string {
	if x != nil {
		return x.CoverLeftText_1
	}
	return ""
}

func (x *LargeCoverV4) GetCoverLeftText_2() string {
	if x != nil {
		return x.CoverLeftText_2
	}
	return ""
}

func (x *LargeCoverV4) GetCoverLeftText_3() string {
	if x != nil {
		return x.CoverLeftText_3
	}
	return ""
}

func (x *LargeCoverV4) GetCoverBadge() string {
	if x != nil {
		return x.CoverBadge
	}
	return ""
}

func (x *LargeCoverV4) GetCanPlay() int32 {
	if x != nil {
		return x.CanPlay
	}
	return 0
}

func (x *LargeCoverV4) GetUp() *Up {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *LargeCoverV4) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *LargeCoverV4) GetShareSubtitle() string {
	if x != nil {
		return x.ShareSubtitle
	}
	return ""
}

func (x *LargeCoverV4) GetPlayNumber() string {
	if x != nil {
		return x.PlayNumber
	}
	return ""
}

func (x *LargeCoverV4) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *LargeCoverV4) GetSubParam() string {
	if x != nil {
		return x.SubParam
	}
	return ""
}

// 热门列表顶部按钮
type PopularTopEntrance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 条目基本信息
	Base *Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 按钮项
	Items []*EntranceItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PopularTopEntrance) Reset() {
	*x = PopularTopEntrance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopularTopEntrance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopularTopEntrance) ProtoMessage() {}

func (x *PopularTopEntrance) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopularTopEntrance.ProtoReflect.Descriptor instead.
func (*PopularTopEntrance) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{15}
}

func (x *PopularTopEntrance) GetBase() *Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PopularTopEntrance) GetItems() []*EntranceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 热门列表按钮信息
type EntranceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 跳转类型
	Goto string `protobuf:"bytes,1,opt,name=goto,proto3" json:"goto,omitempty"`
	// 图标url
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 入口模块id
	ModuleId string `protobuf:"bytes,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// 跳转uri
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	// 入口id
	EntranceId int64 `protobuf:"varint,6,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
	// 气泡信息
	Bubble *Bubble `protobuf:"bytes,7,opt,name=bubble,proto3" json:"bubble,omitempty"`
	// 入口类型
	// 1:代表分品类热门
	EntranceType int32 `protobuf:"varint,8,opt,name=entrance_type,json=entranceType,proto3" json:"entrance_type,omitempty"`
}

func (x *EntranceItem) Reset() {
	*x = EntranceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntranceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntranceItem) ProtoMessage() {}

func (x *EntranceItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntranceItem.ProtoReflect.Descriptor instead.
func (*EntranceItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{16}
}

func (x *EntranceItem) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *EntranceItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *EntranceItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EntranceItem) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *EntranceItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *EntranceItem) GetEntranceId() int64 {
	if x != nil {
		return x.EntranceId
	}
	return 0
}

func (x *EntranceItem) GetBubble() *Bubble {
	if x != nil {
		return x.Bubble
	}
	return nil
}

func (x *EntranceItem) GetEntranceType() int32 {
	if x != nil {
		return x.EntranceType
	}
	return 0
}

// 气泡信息
type Bubble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	BubbleContent string `protobuf:"bytes,1,opt,name=bubble_content,json=bubbleContent,proto3" json:"bubble_content,omitempty"`
	// 版本
	Version int32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// 起始时间
	Stime int64 `protobuf:"varint,3,opt,name=stime,proto3" json:"stime,omitempty"`
}

func (x *Bubble) Reset() {
	*x = Bubble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_card_v1_single_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bubble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bubble) ProtoMessage() {}

func (x *Bubble) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_card_v1_single_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bubble.ProtoReflect.Descriptor instead.
func (*Bubble) Descriptor() ([]byte, []int) {
	return file_bilibili_app_card_v1_single_proto_rawDescGZIP(), []int{17}
}

func (x *Bubble) GetBubbleContent() string {
	if x != nil {
		return x.BubbleContent
	}
	return ""
}

func (x *Bubble) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Bubble) GetStime() int64 {
	if x != nil {
		return x.Stime
	}
	return 0
}

var File_bilibili_app_card_v1_single_proto protoreflect.FileDescriptor

var file_bilibili_app_card_v1_single_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x06, 0x0a,
	0x0c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x35, 0x12, 0x2e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x12, 0x28, 0x0a, 0x02, 0x75, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x52, 0x02, 0x75, 0x70, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x31, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x5f,
	0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x32, 0x12, 0x4d, 0x0a, 0x11, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x0f, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0f, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x56, 0x0a, 0x16, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x13, 0x6c, 0x65,
	0x66, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x20, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x31,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x31, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x06, 0x0a, 0x0e, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x35, 0x41, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x12, 0x28, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x52, 0x02,
	0x75, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x73, 0x63, 0x31, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x32, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x73, 0x63, 0x32,
	0x12, 0x4d, 0x0a, 0x11, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f,
	0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x50, 0x0a, 0x10, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x0f, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52,
	0x0f, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x31, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x32,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x32, 0x12, 0x56, 0x0a, 0x16, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x13, 0x6c, 0x65, 0x66, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x31, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x73, 0x63, 0x31, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x76, 0x0a, 0x0f, 0x48, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x6f, 0x74, 0x77, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x68, 0x35, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x68, 0x35, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xd2, 0x08, 0x0a, 0x0c, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x31, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x29, 0x0a,
	0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x32, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x52, 0x63, 0x6d,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x63, 0x6d, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x54, 0x0a, 0x15, 0x74, 0x6f, 0x70,
	0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x12, 0x74, 0x6f, 0x70,
	0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x5a, 0x0a, 0x18, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x15, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x63, 0x6d, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x72,
	0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x76, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x11, 0x72, 0x63,
	0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x56, 0x32, 0x12,
	0x56, 0x0a, 0x16, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x52, 0x13, 0x6c, 0x65, 0x66, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x17, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x14, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x32, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0a, 0x6c, 0x69,
	0x6b, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0xd0,
	0x01, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x6c, 0x56,
	0x32, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x15, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x12, 0x74, 0x6f, 0x70, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x56, 0x31, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0xa8, 0x02, 0x0a, 0x0e, 0x54, 0x77, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x56, 0x31,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x0a, 0x11,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65,
	0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x31, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x31, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0xce, 0x01, 0x0a,
	0x0b, 0x52, 0x63, 0x6d, 0x64, 0x4f, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12,
	0x74, 0x6f, 0x70, 0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x12, 0x74, 0x6f, 0x70,
	0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x3c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x63, 0x6d, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xd9, 0x03,
	0x0a, 0x12, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x63, 0x6d, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f,
	0x6e, 0x32, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x20, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x31, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x65, 0x73, 0x63, 0x31, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x54, 0x68,
	0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55, 0x72,
	0x69, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x31, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66,
	0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x73, 0x63, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x0c,
	0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x88,
	0x01, 0x0a, 0x08, 0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xde, 0x02, 0x0a, 0x0a, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x48, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x73, 0x63, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f,
	0x72, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f,
	0x72, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x54, 0x0a, 0x15, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x63, 0x6d, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x12, 0x74, 0x6f, 0x70, 0x52, 0x63, 0x6d, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x33, 0x12, 0x2e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x73, 0x63, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x73,
	0x63, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x32, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xbd, 0x03, 0x0a, 0x0c, 0x4c, 0x61, 0x72, 0x67,
	0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x56, 0x34, 0x12, 0x2e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x31, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x29,
	0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x33, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61,
	0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x52, 0x02, 0x75, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x7e, 0x0a, 0x12, 0x50, 0x6f, 0x70, 0x75, 0x6c,
	0x61, 0x72, 0x54, 0x6f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x5f, 0x0a, 0x06, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_card_v1_single_proto_rawDescOnce sync.Once
	file_bilibili_app_card_v1_single_proto_rawDescData = file_bilibili_app_card_v1_single_proto_rawDesc
)

func file_bilibili_app_card_v1_single_proto_rawDescGZIP() []byte {
	file_bilibili_app_card_v1_single_proto_rawDescOnce.Do(func() {
		file_bilibili_app_card_v1_single_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_card_v1_single_proto_rawDescData)
	})
	return file_bilibili_app_card_v1_single_proto_rawDescData
}

var file_bilibili_app_card_v1_single_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bilibili_app_card_v1_single_proto_goTypes = []interface{}{
	(*SmallCoverV5)(nil),       // 0: bilibili.app.card.v1.SmallCoverV5
	(*SmallCoverV5Ad)(nil),     // 1: bilibili.app.card.v1.SmallCoverV5Ad
	(*HotwordEntrance)(nil),    // 2: bilibili.app.card.v1.HotwordEntrance
	(*LargeCoverV1)(nil),       // 3: bilibili.app.card.v1.LargeCoverV1
	(*ThreeItemAllV2)(nil),     // 4: bilibili.app.card.v1.ThreeItemAllV2
	(*TwoItemHV1Item)(nil),     // 5: bilibili.app.card.v1.TwoItemHV1Item
	(*RcmdOneItem)(nil),        // 6: bilibili.app.card.v1.RcmdOneItem
	(*SmallCoverRcmdItem)(nil), // 7: bilibili.app.card.v1.SmallCoverRcmdItem
	(*ThreeItemV1)(nil),        // 8: bilibili.app.card.v1.ThreeItemV1
	(*ThreeItemV1Item)(nil),    // 9: bilibili.app.card.v1.ThreeItemV1Item
	(*HotTopicItem)(nil),       // 10: bilibili.app.card.v1.HotTopicItem
	(*HotTopic)(nil),           // 11: bilibili.app.card.v1.HotTopic
	(*DynamicHot)(nil),         // 12: bilibili.app.card.v1.DynamicHot
	(*MiddleCoverV3)(nil),      // 13: bilibili.app.card.v1.MiddleCoverV3
	(*LargeCoverV4)(nil),       // 14: bilibili.app.card.v1.LargeCoverV4
	(*PopularTopEntrance)(nil), // 15: bilibili.app.card.v1.PopularTopEntrance
	(*EntranceItem)(nil),       // 16: bilibili.app.card.v1.EntranceItem
	(*Bubble)(nil),             // 17: bilibili.app.card.v1.Bubble
	(*Base)(nil),               // 18: bilibili.app.card.v1.Base
	(*Up)(nil),                 // 19: bilibili.app.card.v1.Up
	(*ReasonStyle)(nil),        // 20: bilibili.app.card.v1.ReasonStyle
	(*Avatar)(nil),             // 21: bilibili.app.card.v1.Avatar
	(*LikeButton)(nil),         // 22: bilibili.app.card.v1.LikeButton
	(*Args)(nil),               // 23: bilibili.app.card.v1.Args
}
var file_bilibili_app_card_v1_single_proto_depIdxs = []int32{
	18, // 0: bilibili.app.card.v1.SmallCoverV5.base:type_name -> bilibili.app.card.v1.Base
	19, // 1: bilibili.app.card.v1.SmallCoverV5.up:type_name -> bilibili.app.card.v1.Up
	20, // 2: bilibili.app.card.v1.SmallCoverV5.rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	2,  // 3: bilibili.app.card.v1.SmallCoverV5.hotword_entrance:type_name -> bilibili.app.card.v1.HotwordEntrance
	20, // 4: bilibili.app.card.v1.SmallCoverV5.corner_mark_style:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 5: bilibili.app.card.v1.SmallCoverV5.left_corner_mark_style:type_name -> bilibili.app.card.v1.ReasonStyle
	18, // 6: bilibili.app.card.v1.SmallCoverV5Ad.base:type_name -> bilibili.app.card.v1.Base
	19, // 7: bilibili.app.card.v1.SmallCoverV5Ad.up:type_name -> bilibili.app.card.v1.Up
	20, // 8: bilibili.app.card.v1.SmallCoverV5Ad.rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	2,  // 9: bilibili.app.card.v1.SmallCoverV5Ad.hotword_entrance:type_name -> bilibili.app.card.v1.HotwordEntrance
	20, // 10: bilibili.app.card.v1.SmallCoverV5Ad.corner_mark_style:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 11: bilibili.app.card.v1.SmallCoverV5Ad.left_corner_mark_style:type_name -> bilibili.app.card.v1.ReasonStyle
	18, // 12: bilibili.app.card.v1.LargeCoverV1.base:type_name -> bilibili.app.card.v1.Base
	21, // 13: bilibili.app.card.v1.LargeCoverV1.avatar:type_name -> bilibili.app.card.v1.Avatar
	20, // 14: bilibili.app.card.v1.LargeCoverV1.top_rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 15: bilibili.app.card.v1.LargeCoverV1.bottom_rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 16: bilibili.app.card.v1.LargeCoverV1.rcmd_reason_style_v2:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 17: bilibili.app.card.v1.LargeCoverV1.left_cover_badge_style:type_name -> bilibili.app.card.v1.ReasonStyle
	20, // 18: bilibili.app.card.v1.LargeCoverV1.right_cover_badge_style:type_name -> bilibili.app.card.v1.ReasonStyle
	22, // 19: bilibili.app.card.v1.LargeCoverV1.like_button:type_name -> bilibili.app.card.v1.LikeButton
	18, // 20: bilibili.app.card.v1.ThreeItemAllV2.base:type_name -> bilibili.app.card.v1.Base
	20, // 21: bilibili.app.card.v1.ThreeItemAllV2.top_rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	5,  // 22: bilibili.app.card.v1.ThreeItemAllV2.item:type_name -> bilibili.app.card.v1.TwoItemHV1Item
	23, // 23: bilibili.app.card.v1.TwoItemHV1Item.args:type_name -> bilibili.app.card.v1.Args
	18, // 24: bilibili.app.card.v1.RcmdOneItem.base:type_name -> bilibili.app.card.v1.Base
	20, // 25: bilibili.app.card.v1.RcmdOneItem.topRcmdReasonStyle:type_name -> bilibili.app.card.v1.ReasonStyle
	7,  // 26: bilibili.app.card.v1.RcmdOneItem.item:type_name -> bilibili.app.card.v1.SmallCoverRcmdItem
	18, // 27: bilibili.app.card.v1.ThreeItemV1.base:type_name -> bilibili.app.card.v1.Base
	9,  // 28: bilibili.app.card.v1.ThreeItemV1.items:type_name -> bilibili.app.card.v1.ThreeItemV1Item
	18, // 29: bilibili.app.card.v1.ThreeItemV1Item.base:type_name -> bilibili.app.card.v1.Base
	18, // 30: bilibili.app.card.v1.HotTopic.base:type_name -> bilibili.app.card.v1.Base
	10, // 31: bilibili.app.card.v1.HotTopic.items:type_name -> bilibili.app.card.v1.HotTopicItem
	18, // 32: bilibili.app.card.v1.DynamicHot.base:type_name -> bilibili.app.card.v1.Base
	20, // 33: bilibili.app.card.v1.DynamicHot.top_rcmd_reason_style:type_name -> bilibili.app.card.v1.ReasonStyle
	18, // 34: bilibili.app.card.v1.MiddleCoverV3.base:type_name -> bilibili.app.card.v1.Base
	20, // 35: bilibili.app.card.v1.MiddleCoverV3.cover_badge_style:type_name -> bilibili.app.card.v1.ReasonStyle
	18, // 36: bilibili.app.card.v1.LargeCoverV4.base:type_name -> bilibili.app.card.v1.Base
	19, // 37: bilibili.app.card.v1.LargeCoverV4.up:type_name -> bilibili.app.card.v1.Up
	18, // 38: bilibili.app.card.v1.PopularTopEntrance.base:type_name -> bilibili.app.card.v1.Base
	16, // 39: bilibili.app.card.v1.PopularTopEntrance.items:type_name -> bilibili.app.card.v1.EntranceItem
	17, // 40: bilibili.app.card.v1.EntranceItem.bubble:type_name -> bilibili.app.card.v1.Bubble
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_bilibili_app_card_v1_single_proto_init() }
func file_bilibili_app_card_v1_single_proto_init() {
	if File_bilibili_app_card_v1_single_proto != nil {
		return
	}
	file_bilibili_app_card_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_card_v1_single_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallCoverV5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallCoverV5Ad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotwordEntrance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LargeCoverV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreeItemAllV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoItemHV1Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdOneItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmallCoverRcmdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreeItemV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreeItemV1Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotTopicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicHot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleCoverV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LargeCoverV4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopularTopEntrance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntranceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_card_v1_single_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bubble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_card_v1_single_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_app_card_v1_single_proto_goTypes,
		DependencyIndexes: file_bilibili_app_card_v1_single_proto_depIdxs,
		MessageInfos:      file_bilibili_app_card_v1_single_proto_msgTypes,
	}.Build()
	File_bilibili_app_card_v1_single_proto = out.File
	file_bilibili_app_card_v1_single_proto_rawDesc = nil
	file_bilibili_app_card_v1_single_proto_goTypes = nil
	file_bilibili_app_card_v1_single_proto_depIdxs = nil
}
