// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: bilibili/app/topic/v1/topic.proto

package v1

import (
	v11 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/card/v1"
	v2 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/dynamic/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopicCardType int32

const (
	TopicCardType_ILLEGAL_TYPE     TopicCardType = 0 //
	TopicCardType_DYNAMIC          TopicCardType = 1 //
	TopicCardType_FOLD             TopicCardType = 2 //
	TopicCardType_VIDEO_SMALL_CARD TopicCardType = 3 //
)

// Enum value maps for TopicCardType.
var (
	TopicCardType_name = map[int32]string{
		0: "ILLEGAL_TYPE",
		1: "DYNAMIC",
		2: "FOLD",
		3: "VIDEO_SMALL_CARD",
	}
	TopicCardType_value = map[string]int32{
		"ILLEGAL_TYPE":     0,
		"DYNAMIC":          1,
		"FOLD":             2,
		"VIDEO_SMALL_CARD": 3,
	}
)

func (x TopicCardType) Enum() *TopicCardType {
	p := new(TopicCardType)
	*p = x
	return p
}

func (x TopicCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopicCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_topic_v1_topic_proto_enumTypes[0].Descriptor()
}

func (TopicCardType) Type() protoreflect.EnumType {
	return &file_bilibili_app_topic_v1_topic_proto_enumTypes[0]
}

func (x TopicCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopicCardType.Descriptor instead.
func (TopicCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{0}
}

type TopicDetailsExtMode int32

const (
	TopicDetailsExtMode_MODE_ILLEGAL_TYPE TopicDetailsExtMode = 0 //
	TopicDetailsExtMode_STORY             TopicDetailsExtMode = 1 //
)

// Enum value maps for TopicDetailsExtMode.
var (
	TopicDetailsExtMode_name = map[int32]string{
		0: "MODE_ILLEGAL_TYPE",
		1: "STORY",
	}
	TopicDetailsExtMode_value = map[string]int32{
		"MODE_ILLEGAL_TYPE": 0,
		"STORY":             1,
	}
)

func (x TopicDetailsExtMode) Enum() *TopicDetailsExtMode {
	p := new(TopicDetailsExtMode)
	*p = x
	return p
}

func (x TopicDetailsExtMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopicDetailsExtMode) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_topic_v1_topic_proto_enumTypes[1].Descriptor()
}

func (TopicDetailsExtMode) Type() protoreflect.EnumType {
	return &file_bilibili_app_topic_v1_topic_proto_enumTypes[1]
}

func (x TopicDetailsExtMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopicDetailsExtMode.Descriptor instead.
func (TopicDetailsExtMode) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{1}
}

type ButtonMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *ButtonMeta) Reset() {
	*x = ButtonMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonMeta) ProtoMessage() {}

func (x *ButtonMeta) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonMeta.ProtoReflect.Descriptor instead.
func (*ButtonMeta) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{0}
}

func (x *ButtonMeta) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ButtonMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type DetailsTopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicInfo *TopicInfo `protobuf:"bytes,1,opt,name=topic_info,json=topicInfo,proto3" json:"topic_info,omitempty"`
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	StatsDesc string `protobuf:"bytes,3,opt,name=stats_desc,json=statsDesc,proto3" json:"stats_desc,omitempty"`
	HasCreateJurisdiction bool `protobuf:"varint,4,opt,name=has_create_jurisdiction,json=hasCreateJurisdiction,proto3" json:"has_create_jurisdiction,omitempty"`
	OperationContent *OperationContent `protobuf:"bytes,5,opt,name=operation_content,json=operationContent,proto3" json:"operation_content,omitempty"`
	HeadImgUrl string `protobuf:"bytes,6,opt,name=head_img_url,json=headImgUrl,proto3" json:"head_img_url,omitempty"`
	HeadImgBackcolor string `protobuf:"bytes,7,opt,name=head_img_backcolor,json=headImgBackcolor,proto3" json:"head_img_backcolor,omitempty"`
	WordColor int32 `protobuf:"varint,8,opt,name=word_color,json=wordColor,proto3" json:"word_color,omitempty"`
	MissionPageShowType int32 `protobuf:"varint,9,opt,name=mission_page_show_type,json=missionPageShowType,proto3" json:"mission_page_show_type,omitempty"`
	MissionUrl string `protobuf:"bytes,10,opt,name=mission_url,json=missionUrl,proto3" json:"mission_url,omitempty"`
	MissionText string `protobuf:"bytes,11,opt,name=mission_text,json=missionText,proto3" json:"mission_text,omitempty"`
	TopicSet *TopicSet `protobuf:"bytes,12,opt,name=topic_set,json=topicSet,proto3" json:"topic_set,omitempty"`
}

func (x *DetailsTopInfo) Reset() {
	*x = DetailsTopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsTopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsTopInfo) ProtoMessage() {}

func (x *DetailsTopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsTopInfo.ProtoReflect.Descriptor instead.
func (*DetailsTopInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{1}
}

func (x *DetailsTopInfo) GetTopicInfo() *TopicInfo {
	if x != nil {
		return x.TopicInfo
	}
	return nil
}

func (x *DetailsTopInfo) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *DetailsTopInfo) GetStatsDesc() string {
	if x != nil {
		return x.StatsDesc
	}
	return ""
}

func (x *DetailsTopInfo) GetHasCreateJurisdiction() bool {
	if x != nil {
		return x.HasCreateJurisdiction
	}
	return false
}

func (x *DetailsTopInfo) GetOperationContent() *OperationContent {
	if x != nil {
		return x.OperationContent
	}
	return nil
}

func (x *DetailsTopInfo) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *DetailsTopInfo) GetHeadImgBackcolor() string {
	if x != nil {
		return x.HeadImgBackcolor
	}
	return ""
}

func (x *DetailsTopInfo) GetWordColor() int32 {
	if x != nil {
		return x.WordColor
	}
	return 0
}

func (x *DetailsTopInfo) GetMissionPageShowType() int32 {
	if x != nil {
		return x.MissionPageShowType
	}
	return 0
}

func (x *DetailsTopInfo) GetMissionUrl() string {
	if x != nil {
		return x.MissionUrl
	}
	return ""
}

func (x *DetailsTopInfo) GetMissionText() string {
	if x != nil {
		return x.MissionText
	}
	return ""
}

func (x *DetailsTopInfo) GetTopicSet() *TopicSet {
	if x != nil {
		return x.TopicSet
	}
	return nil
}

type FoldCardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsShowFold int32 `protobuf:"varint,1,opt,name=is_show_fold,json=isShowFold,proto3" json:"is_show_fold,omitempty"`
	FoldCount int64 `protobuf:"varint,2,opt,name=fold_count,json=foldCount,proto3" json:"fold_count,omitempty"`
	CardShowDesc string `protobuf:"bytes,3,opt,name=card_show_desc,json=cardShowDesc,proto3" json:"card_show_desc,omitempty"`
	FoldDesc string `protobuf:"bytes,4,opt,name=fold_desc,json=foldDesc,proto3" json:"fold_desc,omitempty"`
}

func (x *FoldCardItem) Reset() {
	*x = FoldCardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoldCardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoldCardItem) ProtoMessage() {}

func (x *FoldCardItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoldCardItem.ProtoReflect.Descriptor instead.
func (*FoldCardItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{2}
}

func (x *FoldCardItem) GetIsShowFold() int32 {
	if x != nil {
		return x.IsShowFold
	}
	return 0
}

func (x *FoldCardItem) GetFoldCount() int64 {
	if x != nil {
		return x.FoldCount
	}
	return 0
}

func (x *FoldCardItem) GetCardShowDesc() string {
	if x != nil {
		return x.CardShowDesc
	}
	return ""
}

func (x *FoldCardItem) GetFoldDesc() string {
	if x != nil {
		return x.FoldDesc
	}
	return ""
}

type FunctionalCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capsules []*TopicCapsule `protobuf:"bytes,1,rep,name=capsules,proto3" json:"capsules,omitempty"`
	TrafficCard *TrafficCard `protobuf:"bytes,2,opt,name=traffic_card,json=trafficCard,proto3" json:"traffic_card,omitempty"`
	GameCard *GameCard `protobuf:"bytes,3,opt,name=game_card,json=gameCard,proto3" json:"game_card,omitempty"`
}

func (x *FunctionalCard) Reset() {
	*x = FunctionalCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionalCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionalCard) ProtoMessage() {}

func (x *FunctionalCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionalCard.ProtoReflect.Descriptor instead.
func (*FunctionalCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{3}
}

func (x *FunctionalCard) GetCapsules() []*TopicCapsule {
	if x != nil {
		return x.Capsules
	}
	return nil
}

func (x *FunctionalCard) GetTrafficCard() *TrafficCard {
	if x != nil {
		return x.TrafficCard
	}
	return nil
}

func (x *FunctionalCard) GetGameCard() *GameCard {
	if x != nil {
		return x.GameCard
	}
	return nil
}

type GameCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int64 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameIcon string `protobuf:"bytes,2,opt,name=game_icon,json=gameIcon,proto3" json:"game_icon,omitempty"`
	GameName string `protobuf:"bytes,3,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	Score string `protobuf:"bytes,4,opt,name=score,proto3" json:"score,omitempty"`
	GameTags string `protobuf:"bytes,5,opt,name=game_tags,json=gameTags,proto3" json:"game_tags,omitempty"`
	Notice string `protobuf:"bytes,6,opt,name=notice,proto3" json:"notice,omitempty"`
	GameLink string `protobuf:"bytes,7,opt,name=game_link,json=gameLink,proto3" json:"game_link,omitempty"`
}

func (x *GameCard) Reset() {
	*x = GameCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCard) ProtoMessage() {}

func (x *GameCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCard.ProtoReflect.Descriptor instead.
func (*GameCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{4}
}

func (x *GameCard) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *GameCard) GetGameIcon() string {
	if x != nil {
		return x.GameIcon
	}
	return ""
}

func (x *GameCard) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *GameCard) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *GameCard) GetGameTags() string {
	if x != nil {
		return x.GameTags
	}
	return ""
}

func (x *GameCard) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

func (x *GameCard) GetGameLink() string {
	if x != nil {
		return x.GameLink
	}
	return ""
}

type InlineProgressBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconDrag string `protobuf:"bytes,1,opt,name=icon_drag,json=iconDrag,proto3" json:"icon_drag,omitempty"`
	IconDragHash string `protobuf:"bytes,2,opt,name=icon_drag_hash,json=iconDragHash,proto3" json:"icon_drag_hash,omitempty"`
	IconStop string `protobuf:"bytes,3,opt,name=icon_stop,json=iconStop,proto3" json:"icon_stop,omitempty"`
	IconStopHash string `protobuf:"bytes,4,opt,name=icon_stop_hash,json=iconStopHash,proto3" json:"icon_stop_hash,omitempty"`
}

func (x *InlineProgressBar) Reset() {
	*x = InlineProgressBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InlineProgressBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InlineProgressBar) ProtoMessage() {}

func (x *InlineProgressBar) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InlineProgressBar.ProtoReflect.Descriptor instead.
func (*InlineProgressBar) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{5}
}

func (x *InlineProgressBar) GetIconDrag() string {
	if x != nil {
		return x.IconDrag
	}
	return ""
}

func (x *InlineProgressBar) GetIconDragHash() string {
	if x != nil {
		return x.IconDragHash
	}
	return ""
}

func (x *InlineProgressBar) GetIconStop() string {
	if x != nil {
		return x.IconStop
	}
	return ""
}

func (x *InlineProgressBar) GetIconStopHash() string {
	if x != nil {
		return x.IconStopHash
	}
	return ""
}

type LargeCoverInline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *v1.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CoverLeftText1 string `protobuf:"bytes,2,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	CoverLeftIcon1 int32 `protobuf:"varint,3,opt,name=cover_left_icon1,json=coverLeftIcon1,proto3" json:"cover_left_icon1,omitempty"`
	CoverLeftText2 string `protobuf:"bytes,4,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	CoverLeftIcon2 int32 `protobuf:"varint,5,opt,name=cover_left_icon2,json=coverLeftIcon2,proto3" json:"cover_left_icon2,omitempty"`
	RightTopLiveBadge *RightTopLiveBadge `protobuf:"bytes,6,opt,name=right_top_live_badge,json=rightTopLiveBadge,proto3" json:"right_top_live_badge,omitempty"`
	ExtraUri string `protobuf:"bytes,7,opt,name=extra_uri,json=extraUri,proto3" json:"extra_uri,omitempty"`
	InlineProgressBar *InlineProgressBar `protobuf:"bytes,8,opt,name=inline_progress_bar,json=inlineProgressBar,proto3" json:"inline_progress_bar,omitempty"`
	TopicThreePoint *TopicThreePoint `protobuf:"bytes,9,opt,name=topic_three_point,json=topicThreePoint,proto3" json:"topic_three_point,omitempty"`
	CoverLeftDesc string `protobuf:"bytes,10,opt,name=cover_left_desc,json=coverLeftDesc,proto3" json:"cover_left_desc,omitempty"`
	HideDanmuSwitch bool `protobuf:"varint,11,opt,name=hide_danmu_switch,json=hideDanmuSwitch,proto3" json:"hide_danmu_switch,omitempty"`
	DisableDanmu bool `protobuf:"varint,12,opt,name=disable_danmu,json=disableDanmu,proto3" json:"disable_danmu,omitempty"`
	CanPlay int32 `protobuf:"varint,13,opt,name=can_play,json=canPlay,proto3" json:"can_play,omitempty"`
	DurationText string `protobuf:"bytes,14,opt,name=duration_text,json=durationText,proto3" json:"duration_text,omitempty"`
	RelationData *RelationData `protobuf:"bytes,15,opt,name=relation_data,json=relationData,proto3" json:"relation_data,omitempty"`
}

func (x *LargeCoverInline) Reset() {
	*x = LargeCoverInline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LargeCoverInline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LargeCoverInline) ProtoMessage() {}

func (x *LargeCoverInline) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LargeCoverInline.ProtoReflect.Descriptor instead.
func (*LargeCoverInline) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{6}
}

func (x *LargeCoverInline) GetBase() *v1.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *LargeCoverInline) GetCoverLeftText1() string {
	if x != nil {
		return x.CoverLeftText1
	}
	return ""
}

func (x *LargeCoverInline) GetCoverLeftIcon1() int32 {
	if x != nil {
		return x.CoverLeftIcon1
	}
	return 0
}

func (x *LargeCoverInline) GetCoverLeftText2() string {
	if x != nil {
		return x.CoverLeftText2
	}
	return ""
}

func (x *LargeCoverInline) GetCoverLeftIcon2() int32 {
	if x != nil {
		return x.CoverLeftIcon2
	}
	return 0
}

func (x *LargeCoverInline) GetRightTopLiveBadge() *RightTopLiveBadge {
	if x != nil {
		return x.RightTopLiveBadge
	}
	return nil
}

func (x *LargeCoverInline) GetExtraUri() string {
	if x != nil {
		return x.ExtraUri
	}
	return ""
}

func (x *LargeCoverInline) GetInlineProgressBar() *InlineProgressBar {
	if x != nil {
		return x.InlineProgressBar
	}
	return nil
}

func (x *LargeCoverInline) GetTopicThreePoint() *TopicThreePoint {
	if x != nil {
		return x.TopicThreePoint
	}
	return nil
}

func (x *LargeCoverInline) GetCoverLeftDesc() string {
	if x != nil {
		return x.CoverLeftDesc
	}
	return ""
}

func (x *LargeCoverInline) GetHideDanmuSwitch() bool {
	if x != nil {
		return x.HideDanmuSwitch
	}
	return false
}

func (x *LargeCoverInline) GetDisableDanmu() bool {
	if x != nil {
		return x.DisableDanmu
	}
	return false
}

func (x *LargeCoverInline) GetCanPlay() int32 {
	if x != nil {
		return x.CanPlay
	}
	return 0
}

func (x *LargeCoverInline) GetDurationText() string {
	if x != nil {
		return x.DurationText
	}
	return ""
}

func (x *LargeCoverInline) GetRelationData() *RelationData {
	if x != nil {
		return x.RelationData
	}
	return nil
}

type LiveBadgeResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	AnimationUrl string `protobuf:"bytes,2,opt,name=animation_url,json=animationUrl,proto3" json:"animation_url,omitempty"`
	AnimationUrlHash string `protobuf:"bytes,3,opt,name=animation_url_hash,json=animationUrlHash,proto3" json:"animation_url_hash,omitempty"`
	BackgroundColorLight string `protobuf:"bytes,4,opt,name=background_color_light,json=backgroundColorLight,proto3" json:"background_color_light,omitempty"`
	BackgroundColorNight string `protobuf:"bytes,5,opt,name=background_color_night,json=backgroundColorNight,proto3" json:"background_color_night,omitempty"`
	AlphaLight int64 `protobuf:"varint,6,opt,name=alpha_light,json=alphaLight,proto3" json:"alpha_light,omitempty"`
	AlphaNight int64 `protobuf:"varint,7,opt,name=alpha_night,json=alphaNight,proto3" json:"alpha_night,omitempty"`
	FontColor string `protobuf:"bytes,8,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
}

func (x *LiveBadgeResource) Reset() {
	*x = LiveBadgeResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveBadgeResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveBadgeResource) ProtoMessage() {}

func (x *LiveBadgeResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveBadgeResource.ProtoReflect.Descriptor instead.
func (*LiveBadgeResource) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{7}
}

func (x *LiveBadgeResource) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LiveBadgeResource) GetAnimationUrl() string {
	if x != nil {
		return x.AnimationUrl
	}
	return ""
}

func (x *LiveBadgeResource) GetAnimationUrlHash() string {
	if x != nil {
		return x.AnimationUrlHash
	}
	return ""
}

func (x *LiveBadgeResource) GetBackgroundColorLight() string {
	if x != nil {
		return x.BackgroundColorLight
	}
	return ""
}

func (x *LiveBadgeResource) GetBackgroundColorNight() string {
	if x != nil {
		return x.BackgroundColorNight
	}
	return ""
}

func (x *LiveBadgeResource) GetAlphaLight() int64 {
	if x != nil {
		return x.AlphaLight
	}
	return 0
}

func (x *LiveBadgeResource) GetAlphaNight() int64 {
	if x != nil {
		return x.AlphaNight
	}
	return 0
}

func (x *LiveBadgeResource) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

type OperationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Card:
	//
	//	*OperationCard_LargeCoverInline
	Card isOperationCard_Card `protobuf_oneof:"card"`
}

func (x *OperationCard) Reset() {
	*x = OperationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCard) ProtoMessage() {}

func (x *OperationCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCard.ProtoReflect.Descriptor instead.
func (*OperationCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{8}
}

func (m *OperationCard) GetCard() isOperationCard_Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (x *OperationCard) GetLargeCoverInline() *LargeCoverInline {
	if x, ok := x.GetCard().(*OperationCard_LargeCoverInline); ok {
		return x.LargeCoverInline
	}
	return nil
}

type isOperationCard_Card interface {
	isOperationCard_Card()
}

type OperationCard_LargeCoverInline struct {
	LargeCoverInline *LargeCoverInline `protobuf:"bytes,1,opt,name=large_cover_inline,json=largeCoverInline,proto3,oneof"`
}

func (*OperationCard_LargeCoverInline) isOperationCard_Card() {}

type OperationContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationCard *OperationCard `protobuf:"bytes,1,opt,name=operation_card,json=operationCard,proto3" json:"operation_card,omitempty"`
}

func (x *OperationContent) Reset() {
	*x = OperationContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationContent) ProtoMessage() {}

func (x *OperationContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationContent.ProtoReflect.Descriptor instead.
func (*OperationContent) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{9}
}

func (x *OperationContent) GetOperationCard() *OperationCard {
	if x != nil {
		return x.OperationCard
	}
	return nil
}

type PubLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowType int32 `protobuf:"varint,1,opt,name=show_type,json=showType,proto3" json:"show_type,omitempty"`
	JumpLink string `protobuf:"bytes,2,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
	ButtonMeta *ButtonMeta `protobuf:"bytes,3,opt,name=button_meta,json=buttonMeta,proto3" json:"button_meta,omitempty"`
	ClosePubLayerEntry bool `protobuf:"varint,4,opt,name=close_pub_layer_entry,json=closePubLayerEntry,proto3" json:"close_pub_layer_entry,omitempty"`
}

func (x *PubLayer) Reset() {
	*x = PubLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PubLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubLayer) ProtoMessage() {}

func (x *PubLayer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubLayer.ProtoReflect.Descriptor instead.
func (*PubLayer) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{10}
}

func (x *PubLayer) GetShowType() int32 {
	if x != nil {
		return x.ShowType
	}
	return 0
}

func (x *PubLayer) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

func (x *PubLayer) GetButtonMeta() *ButtonMeta {
	if x != nil {
		return x.ButtonMeta
	}
	return nil
}

func (x *PubLayer) GetClosePubLayerEntry() bool {
	if x != nil {
		return x.ClosePubLayerEntry
	}
	return false
}

type RelationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFav bool `protobuf:"varint,1,opt,name=is_fav,json=isFav,proto3" json:"is_fav,omitempty"`
	IsCoin bool `protobuf:"varint,2,opt,name=is_coin,json=isCoin,proto3" json:"is_coin,omitempty"`
	IsFollow bool `protobuf:"varint,3,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	IsLike bool `protobuf:"varint,4,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
	LikeCount int64 `protobuf:"varint,5,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
}

func (x *RelationData) Reset() {
	*x = RelationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationData) ProtoMessage() {}

func (x *RelationData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationData.ProtoReflect.Descriptor instead.
func (*RelationData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{11}
}

func (x *RelationData) GetIsFav() bool {
	if x != nil {
		return x.IsFav
	}
	return false
}

func (x *RelationData) GetIsCoin() bool {
	if x != nil {
		return x.IsCoin
	}
	return false
}

func (x *RelationData) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *RelationData) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *RelationData) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

type RightTopLiveBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveStatus int64 `protobuf:"varint,1,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	InLive *LiveBadgeResource `protobuf:"bytes,2,opt,name=in_live,json=inLive,proto3" json:"in_live,omitempty"`
	LiveStatsDesc string `protobuf:"bytes,3,opt,name=live_stats_desc,json=liveStatsDesc,proto3" json:"live_stats_desc,omitempty"`
}

func (x *RightTopLiveBadge) Reset() {
	*x = RightTopLiveBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RightTopLiveBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightTopLiveBadge) ProtoMessage() {}

func (x *RightTopLiveBadge) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightTopLiveBadge.ProtoReflect.Descriptor instead.
func (*RightTopLiveBadge) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{12}
}

func (x *RightTopLiveBadge) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *RightTopLiveBadge) GetInLive() *LiveBadgeResource {
	if x != nil {
		return x.InLive
	}
	return nil
}

func (x *RightTopLiveBadge) GetLiveStatsDesc() string {
	if x != nil {
		return x.LiveStatsDesc
	}
	return ""
}

type SortContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortBy int64 `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortName string `protobuf:"bytes,2,opt,name=sort_name,json=sortName,proto3" json:"sort_name,omitempty"`
}

func (x *SortContent) Reset() {
	*x = SortContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortContent) ProtoMessage() {}

func (x *SortContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortContent.ProtoReflect.Descriptor instead.
func (*SortContent) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{13}
}

func (x *SortContent) GetSortBy() int64 {
	if x != nil {
		return x.SortBy
	}
	return 0
}

func (x *SortContent) GetSortName() string {
	if x != nil {
		return x.SortName
	}
	return ""
}

type ThreePointItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *ThreePointItem) Reset() {
	*x = ThreePointItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreePointItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreePointItem) ProtoMessage() {}

func (x *ThreePointItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreePointItem.ProtoReflect.Descriptor instead.
func (*ThreePointItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{14}
}

func (x *ThreePointItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreePointItem) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type TimeLineEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId int64 `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	TimeDesc string `protobuf:"bytes,3,opt,name=time_desc,json=timeDesc,proto3" json:"time_desc,omitempty"`
	JumpLink string `protobuf:"bytes,4,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
}

func (x *TimeLineEvents) Reset() {
	*x = TimeLineEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLineEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLineEvents) ProtoMessage() {}

func (x *TimeLineEvents) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLineEvents.ProtoReflect.Descriptor instead.
func (*TimeLineEvents) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{15}
}

func (x *TimeLineEvents) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *TimeLineEvents) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimeLineEvents) GetTimeDesc() string {
	if x != nil {
		return x.TimeDesc
	}
	return ""
}

func (x *TimeLineEvents) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

type TimeLineResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLineId int64 `protobuf:"varint,1,opt,name=time_line_id,json=timeLineId,proto3" json:"time_line_id,omitempty"`
	TimeLineTitle string `protobuf:"bytes,2,opt,name=time_line_title,json=timeLineTitle,proto3" json:"time_line_title,omitempty"`
	TimeLineEvents []*TimeLineEvents `protobuf:"bytes,3,rep,name=time_line_events,json=timeLineEvents,proto3" json:"time_line_events,omitempty"`
	HasMore bool `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
}

func (x *TimeLineResource) Reset() {
	*x = TimeLineResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLineResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLineResource) ProtoMessage() {}

func (x *TimeLineResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLineResource.ProtoReflect.Descriptor instead.
func (*TimeLineResource) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{16}
}

func (x *TimeLineResource) GetTimeLineId() int64 {
	if x != nil {
		return x.TimeLineId
	}
	return 0
}

func (x *TimeLineResource) GetTimeLineTitle() string {
	if x != nil {
		return x.TimeLineTitle
	}
	return ""
}

func (x *TimeLineResource) GetTimeLineEvents() []*TimeLineEvents {
	if x != nil {
		return x.TimeLineEvents
	}
	return nil
}

func (x *TimeLineResource) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type TopicActivities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity []*TopicActivity `protobuf:"bytes,1,rep,name=activity,proto3" json:"activity,omitempty"`
	ActListTitle string `protobuf:"bytes,2,opt,name=act_list_title,json=actListTitle,proto3" json:"act_list_title,omitempty"`
}

func (x *TopicActivities) Reset() {
	*x = TopicActivities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicActivities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicActivities) ProtoMessage() {}

func (x *TopicActivities) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicActivities.ProtoReflect.Descriptor instead.
func (*TopicActivities) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{17}
}

func (x *TopicActivities) GetActivity() []*TopicActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *TopicActivities) GetActListTitle() string {
	if x != nil {
		return x.ActListTitle
	}
	return ""
}

type TopicActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityName string `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	IconUrl string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *TopicActivity) Reset() {
	*x = TopicActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicActivity) ProtoMessage() {}

func (x *TopicActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicActivity.ProtoReflect.Descriptor instead.
func (*TopicActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{18}
}

func (x *TopicActivity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *TopicActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *TopicActivity) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *TopicActivity) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type TopicCapsule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	IconUrl string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *TopicCapsule) Reset() {
	*x = TopicCapsule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicCapsule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicCapsule) ProtoMessage() {}

func (x *TopicCapsule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicCapsule.ProtoReflect.Descriptor instead.
func (*TopicCapsule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{19}
}

func (x *TopicCapsule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicCapsule) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *TopicCapsule) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type TopicCardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	DynamicItem *v2.DynamicItem `protobuf:"bytes,2,opt,name=dynamic_item,json=dynamicItem,proto3" json:"dynamic_item,omitempty"`
	FordCardItem *FoldCardItem `protobuf:"bytes,3,opt,name=ford_card_item,json=fordCardItem,proto3" json:"ford_card_item,omitempty"`
	VideoSmallCardItem *VideoSmallCardItem `protobuf:"bytes,4,opt,name=video_small_card_item,json=videoSmallCardItem,proto3" json:"video_small_card_item,omitempty"`
}

func (x *TopicCardItem) Reset() {
	*x = TopicCardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicCardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicCardItem) ProtoMessage() {}

func (x *TopicCardItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicCardItem.ProtoReflect.Descriptor instead.
func (*TopicCardItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{20}
}

func (x *TopicCardItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TopicCardItem) GetDynamicItem() *v2.DynamicItem {
	if x != nil {
		return x.DynamicItem
	}
	return nil
}

func (x *TopicCardItem) GetFordCardItem() *FoldCardItem {
	if x != nil {
		return x.FordCardItem
	}
	return nil
}

func (x *TopicCardItem) GetVideoSmallCardItem() *VideoSmallCardItem {
	if x != nil {
		return x.VideoSmallCardItem
	}
	return nil
}

type TopicCardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicCardItems []*TopicCardItem `protobuf:"bytes,1,rep,name=topic_card_items,json=topicCardItems,proto3" json:"topic_card_items,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	TopicSortByConf *TopicSortByConf `protobuf:"bytes,4,opt,name=topic_sort_by_conf,json=topicSortByConf,proto3" json:"topic_sort_by_conf,omitempty"`
}

func (x *TopicCardList) Reset() {
	*x = TopicCardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicCardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicCardList) ProtoMessage() {}

func (x *TopicCardList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicCardList.ProtoReflect.Descriptor instead.
func (*TopicCardList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{21}
}

func (x *TopicCardList) GetTopicCardItems() []*TopicCardItem {
	if x != nil {
		return x.TopicCardItems
	}
	return nil
}

func (x *TopicCardList) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *TopicCardList) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *TopicCardList) GetTopicSortByConf() *TopicSortByConf {
	if x != nil {
		return x.TopicSortByConf
	}
	return nil
}

type TopicDetailsAllReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsTopInfo *DetailsTopInfo `protobuf:"bytes,1,opt,name=details_top_info,json=detailsTopInfo,proto3" json:"details_top_info,omitempty"`
	TopicActivities *TopicActivities `protobuf:"bytes,2,opt,name=topic_activities,json=topicActivities,proto3" json:"topic_activities,omitempty"`
	TopicCardList *TopicCardList `protobuf:"bytes,3,opt,name=topic_card_list,json=topicCardList,proto3" json:"topic_card_list,omitempty"`
	FunctionalCard *FunctionalCard `protobuf:"bytes,4,opt,name=functional_card,json=functionalCard,proto3" json:"functional_card,omitempty"`
	PubLayer *PubLayer `protobuf:"bytes,5,opt,name=pub_layer,json=pubLayer,proto3" json:"pub_layer,omitempty"`
	TimeLineResource *TimeLineResource `protobuf:"bytes,6,opt,name=time_line_resource,json=timeLineResource,proto3" json:"time_line_resource,omitempty"`
	TopicServerConfig *TopicServerConfig `protobuf:"bytes,7,opt,name=topic_server_config,json=topicServerConfig,proto3" json:"topic_server_config,omitempty"`
}

func (x *TopicDetailsAllReply) Reset() {
	*x = TopicDetailsAllReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDetailsAllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDetailsAllReply) ProtoMessage() {}

func (x *TopicDetailsAllReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDetailsAllReply.ProtoReflect.Descriptor instead.
func (*TopicDetailsAllReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{22}
}

func (x *TopicDetailsAllReply) GetDetailsTopInfo() *DetailsTopInfo {
	if x != nil {
		return x.DetailsTopInfo
	}
	return nil
}

func (x *TopicDetailsAllReply) GetTopicActivities() *TopicActivities {
	if x != nil {
		return x.TopicActivities
	}
	return nil
}

func (x *TopicDetailsAllReply) GetTopicCardList() *TopicCardList {
	if x != nil {
		return x.TopicCardList
	}
	return nil
}

func (x *TopicDetailsAllReply) GetFunctionalCard() *FunctionalCard {
	if x != nil {
		return x.FunctionalCard
	}
	return nil
}

func (x *TopicDetailsAllReply) GetPubLayer() *PubLayer {
	if x != nil {
		return x.PubLayer
	}
	return nil
}

func (x *TopicDetailsAllReply) GetTimeLineResource() *TimeLineResource {
	if x != nil {
		return x.TimeLineResource
	}
	return nil
}

func (x *TopicDetailsAllReply) GetTopicServerConfig() *TopicServerConfig {
	if x != nil {
		return x.TopicServerConfig
	}
	return nil
}

type TopicDetailsAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	SortBy int64 `protobuf:"varint,2,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	PlayerArgs *v11.PlayerArgs `protobuf:"bytes,6,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	NeedRefresh int32 `protobuf:"varint,7,opt,name=need_refresh,json=needRefresh,proto3" json:"need_refresh,omitempty"`
	Source string `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	TopicDetailsExtMode int32 `protobuf:"varint,9,opt,name=topic_details_ext_mode,json=topicDetailsExtMode,proto3" json:"topic_details_ext_mode,omitempty"`
}

func (x *TopicDetailsAllReq) Reset() {
	*x = TopicDetailsAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDetailsAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDetailsAllReq) ProtoMessage() {}

func (x *TopicDetailsAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDetailsAllReq.ProtoReflect.Descriptor instead.
func (*TopicDetailsAllReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{23}
}

func (x *TopicDetailsAllReq) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicDetailsAllReq) GetSortBy() int64 {
	if x != nil {
		return x.SortBy
	}
	return 0
}

func (x *TopicDetailsAllReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *TopicDetailsAllReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TopicDetailsAllReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *TopicDetailsAllReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *TopicDetailsAllReq) GetNeedRefresh() int32 {
	if x != nil {
		return x.NeedRefresh
	}
	return 0
}

func (x *TopicDetailsAllReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TopicDetailsAllReq) GetTopicDetailsExtMode() int32 {
	if x != nil {
		return x.TopicDetailsExtMode
	}
	return 0
}

type TopicDetailsFoldReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicCardList *TopicCardList `protobuf:"bytes,1,opt,name=topic_card_list,json=topicCardList,proto3" json:"topic_card_list,omitempty"`
	FoldCount int64 `protobuf:"varint,2,opt,name=fold_count,json=foldCount,proto3" json:"fold_count,omitempty"`
}

func (x *TopicDetailsFoldReply) Reset() {
	*x = TopicDetailsFoldReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDetailsFoldReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDetailsFoldReply) ProtoMessage() {}

func (x *TopicDetailsFoldReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDetailsFoldReply.ProtoReflect.Descriptor instead.
func (*TopicDetailsFoldReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{24}
}

func (x *TopicDetailsFoldReply) GetTopicCardList() *TopicCardList {
	if x != nil {
		return x.TopicCardList
	}
	return nil
}

func (x *TopicDetailsFoldReply) GetFoldCount() int64 {
	if x != nil {
		return x.FoldCount
	}
	return 0
}

type TopicDetailsFoldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	LocalTime int32 `protobuf:"varint,4,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	PlayerArgs *v11.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	FromSortBy int64 `protobuf:"varint,6,opt,name=from_sort_by,json=fromSortBy,proto3" json:"from_sort_by,omitempty"`
}

func (x *TopicDetailsFoldReq) Reset() {
	*x = TopicDetailsFoldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicDetailsFoldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicDetailsFoldReq) ProtoMessage() {}

func (x *TopicDetailsFoldReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicDetailsFoldReq.ProtoReflect.Descriptor instead.
func (*TopicDetailsFoldReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{25}
}

func (x *TopicDetailsFoldReq) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *TopicDetailsFoldReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *TopicDetailsFoldReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TopicDetailsFoldReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *TopicDetailsFoldReq) GetPlayerArgs() *v11.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *TopicDetailsFoldReq) GetFromSortBy() int64 {
	if x != nil {
		return x.FromSortBy
	}
	return 0
}

type TopicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	View int64 `protobuf:"varint,4,opt,name=view,proto3" json:"view,omitempty"`
	Discuss int64 `protobuf:"varint,5,opt,name=discuss,proto3" json:"discuss,omitempty"`
	Fav int64 `protobuf:"varint,6,opt,name=fav,proto3" json:"fav,omitempty"`
	Dynamics int64 `protobuf:"varint,7,opt,name=dynamics,proto3" json:"dynamics,omitempty"`
	State int32 `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	JumpUrl string `protobuf:"bytes,9,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Backcolor string `protobuf:"bytes,10,opt,name=backcolor,proto3" json:"backcolor,omitempty"`
	IsFav bool `protobuf:"varint,11,opt,name=is_fav,json=isFav,proto3" json:"is_fav,omitempty"`
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	CreateSource int32 `protobuf:"varint,13,opt,name=create_source,json=createSource,proto3" json:"create_source,omitempty"`
	SharePic string `protobuf:"bytes,14,opt,name=share_pic,json=sharePic,proto3" json:"share_pic,omitempty"`
	Share int64 `protobuf:"varint,15,opt,name=share,proto3" json:"share,omitempty"`
	Like int64 `protobuf:"varint,16,opt,name=like,proto3" json:"like,omitempty"`
	ShareUrl string `protobuf:"bytes,17,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	IsLike bool `protobuf:"varint,18,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`
	Type int32 `protobuf:"varint,19,opt,name=type,proto3" json:"type,omitempty"`
	StatsDesc string `protobuf:"bytes,20,opt,name=stats_desc,json=statsDesc,proto3" json:"stats_desc,omitempty"`
	FixedTopicIcon string `protobuf:"bytes,21,opt,name=fixed_topic_icon,json=fixedTopicIcon,proto3" json:"fixed_topic_icon,omitempty"`
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{26}
}

func (x *TopicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TopicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TopicInfo) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *TopicInfo) GetDiscuss() int64 {
	if x != nil {
		return x.Discuss
	}
	return 0
}

func (x *TopicInfo) GetFav() int64 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *TopicInfo) GetDynamics() int64 {
	if x != nil {
		return x.Dynamics
	}
	return 0
}

func (x *TopicInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TopicInfo) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *TopicInfo) GetBackcolor() string {
	if x != nil {
		return x.Backcolor
	}
	return ""
}

func (x *TopicInfo) GetIsFav() bool {
	if x != nil {
		return x.IsFav
	}
	return false
}

func (x *TopicInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TopicInfo) GetCreateSource() int32 {
	if x != nil {
		return x.CreateSource
	}
	return 0
}

func (x *TopicInfo) GetSharePic() string {
	if x != nil {
		return x.SharePic
	}
	return ""
}

func (x *TopicInfo) GetShare() int64 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *TopicInfo) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *TopicInfo) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *TopicInfo) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *TopicInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TopicInfo) GetStatsDesc() string {
	if x != nil {
		return x.StatsDesc
	}
	return ""
}

func (x *TopicInfo) GetFixedTopicIcon() string {
	if x != nil {
		return x.FixedTopicIcon
	}
	return ""
}

type TopicServerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubEventsIncreaseThreshold int64 `protobuf:"varint,1,opt,name=pub_events_increase_threshold,json=pubEventsIncreaseThreshold,proto3" json:"pub_events_increase_threshold,omitempty"`
	PubEventsHiddenTimeoutThreshold int64 `protobuf:"varint,2,opt,name=pub_events_hidden_timeout_threshold,json=pubEventsHiddenTimeoutThreshold,proto3" json:"pub_events_hidden_timeout_threshold,omitempty"`
	VertOnlineRefreshTime int64 `protobuf:"varint,3,opt,name=vert_online_refresh_time,json=vertOnlineRefreshTime,proto3" json:"vert_online_refresh_time,omitempty"`
}

func (x *TopicServerConfig) Reset() {
	*x = TopicServerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicServerConfig) ProtoMessage() {}

func (x *TopicServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicServerConfig.ProtoReflect.Descriptor instead.
func (*TopicServerConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{27}
}

func (x *TopicServerConfig) GetPubEventsIncreaseThreshold() int64 {
	if x != nil {
		return x.PubEventsIncreaseThreshold
	}
	return 0
}

func (x *TopicServerConfig) GetPubEventsHiddenTimeoutThreshold() int64 {
	if x != nil {
		return x.PubEventsHiddenTimeoutThreshold
	}
	return 0
}

func (x *TopicServerConfig) GetVertOnlineRefreshTime() int64 {
	if x != nil {
		return x.VertOnlineRefreshTime
	}
	return 0
}

type TopicSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId int64 `protobuf:"varint,1,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	SetName string `protobuf:"bytes,2,opt,name=set_name,json=setName,proto3" json:"set_name,omitempty"`
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *TopicSet) Reset() {
	*x = TopicSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSet) ProtoMessage() {}

func (x *TopicSet) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSet.ProtoReflect.Descriptor instead.
func (*TopicSet) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{28}
}

func (x *TopicSet) GetSetId() int64 {
	if x != nil {
		return x.SetId
	}
	return 0
}

func (x *TopicSet) GetSetName() string {
	if x != nil {
		return x.SetName
	}
	return ""
}

func (x *TopicSet) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *TopicSet) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type TopicSetDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicSetHeadInfo *TopicSetHeadInfo `protobuf:"bytes,1,opt,name=topic_set_head_info,json=topicSetHeadInfo,proto3" json:"topic_set_head_info,omitempty"`
	TopicInfo []*TopicInfo `protobuf:"bytes,2,rep,name=topic_info,json=topicInfo,proto3" json:"topic_info,omitempty"`
	HasMore bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
	SortCfg *TopicSetSortCfg `protobuf:"bytes,5,opt,name=sort_cfg,json=sortCfg,proto3" json:"sort_cfg,omitempty"`
}

func (x *TopicSetDetailsReply) Reset() {
	*x = TopicSetDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSetDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSetDetailsReply) ProtoMessage() {}

func (x *TopicSetDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSetDetailsReply.ProtoReflect.Descriptor instead.
func (*TopicSetDetailsReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{29}
}

func (x *TopicSetDetailsReply) GetTopicSetHeadInfo() *TopicSetHeadInfo {
	if x != nil {
		return x.TopicSetHeadInfo
	}
	return nil
}

func (x *TopicSetDetailsReply) GetTopicInfo() []*TopicInfo {
	if x != nil {
		return x.TopicInfo
	}
	return nil
}

func (x *TopicSetDetailsReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *TopicSetDetailsReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *TopicSetDetailsReply) GetSortCfg() *TopicSetSortCfg {
	if x != nil {
		return x.SortCfg
	}
	return nil
}

type TopicSetDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId int64 `protobuf:"varint,1,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	SortBy int64 `protobuf:"varint,2,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Offset string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *TopicSetDetailsReq) Reset() {
	*x = TopicSetDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSetDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSetDetailsReq) ProtoMessage() {}

func (x *TopicSetDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSetDetailsReq.ProtoReflect.Descriptor instead.
func (*TopicSetDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{30}
}

func (x *TopicSetDetailsReq) GetSetId() int64 {
	if x != nil {
		return x.SetId
	}
	return 0
}

func (x *TopicSetDetailsReq) GetSortBy() int64 {
	if x != nil {
		return x.SortBy
	}
	return 0
}

func (x *TopicSetDetailsReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *TopicSetDetailsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TopicSetHeadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicSet *TopicSet `protobuf:"bytes,1,opt,name=topic_set,json=topicSet,proto3" json:"topic_set,omitempty"`
	TopicCntText string `protobuf:"bytes,2,opt,name=topic_cnt_text,json=topicCntText,proto3" json:"topic_cnt_text,omitempty"`
	HeadImgUrl string `protobuf:"bytes,3,opt,name=head_img_url,json=headImgUrl,proto3" json:"head_img_url,omitempty"`
	MissionUrl string `protobuf:"bytes,4,opt,name=mission_url,json=missionUrl,proto3" json:"mission_url,omitempty"`
	MissionText string `protobuf:"bytes,5,opt,name=mission_text,json=missionText,proto3" json:"mission_text,omitempty"`
	IconUrl string `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IsFav bool `protobuf:"varint,7,opt,name=is_fav,json=isFav,proto3" json:"is_fav,omitempty"`
	IsFirstTime bool `protobuf:"varint,8,opt,name=is_first_time,json=isFirstTime,proto3" json:"is_first_time,omitempty"`
}

func (x *TopicSetHeadInfo) Reset() {
	*x = TopicSetHeadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSetHeadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSetHeadInfo) ProtoMessage() {}

func (x *TopicSetHeadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSetHeadInfo.ProtoReflect.Descriptor instead.
func (*TopicSetHeadInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{31}
}

func (x *TopicSetHeadInfo) GetTopicSet() *TopicSet {
	if x != nil {
		return x.TopicSet
	}
	return nil
}

func (x *TopicSetHeadInfo) GetTopicCntText() string {
	if x != nil {
		return x.TopicCntText
	}
	return ""
}

func (x *TopicSetHeadInfo) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *TopicSetHeadInfo) GetMissionUrl() string {
	if x != nil {
		return x.MissionUrl
	}
	return ""
}

func (x *TopicSetHeadInfo) GetMissionText() string {
	if x != nil {
		return x.MissionText
	}
	return ""
}

func (x *TopicSetHeadInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *TopicSetHeadInfo) GetIsFav() bool {
	if x != nil {
		return x.IsFav
	}
	return false
}

func (x *TopicSetHeadInfo) GetIsFirstTime() bool {
	if x != nil {
		return x.IsFirstTime
	}
	return false
}

type TopicSetSortCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultSortBy int64 `protobuf:"varint,1,opt,name=default_sort_by,json=defaultSortBy,proto3" json:"default_sort_by,omitempty"`
	AllSortBy []*SortContent `protobuf:"bytes,2,rep,name=all_sort_by,json=allSortBy,proto3" json:"all_sort_by,omitempty"`
}

func (x *TopicSetSortCfg) Reset() {
	*x = TopicSetSortCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSetSortCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSetSortCfg) ProtoMessage() {}

func (x *TopicSetSortCfg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSetSortCfg.ProtoReflect.Descriptor instead.
func (*TopicSetSortCfg) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{32}
}

func (x *TopicSetSortCfg) GetDefaultSortBy() int64 {
	if x != nil {
		return x.DefaultSortBy
	}
	return 0
}

func (x *TopicSetSortCfg) GetAllSortBy() []*SortContent {
	if x != nil {
		return x.AllSortBy
	}
	return nil
}

type TopicSortByConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultSortBy int64 `protobuf:"varint,1,opt,name=default_sort_by,json=defaultSortBy,proto3" json:"default_sort_by,omitempty"`
	AllSortBy []*SortContent `protobuf:"bytes,2,rep,name=all_sort_by,json=allSortBy,proto3" json:"all_sort_by,omitempty"`
	ShowSortBy int64 `protobuf:"varint,3,opt,name=show_sort_by,json=showSortBy,proto3" json:"show_sort_by,omitempty"`
}

func (x *TopicSortByConf) Reset() {
	*x = TopicSortByConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicSortByConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicSortByConf) ProtoMessage() {}

func (x *TopicSortByConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicSortByConf.ProtoReflect.Descriptor instead.
func (*TopicSortByConf) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{33}
}

func (x *TopicSortByConf) GetDefaultSortBy() int64 {
	if x != nil {
		return x.DefaultSortBy
	}
	return 0
}

func (x *TopicSortByConf) GetAllSortBy() []*SortContent {
	if x != nil {
		return x.AllSortBy
	}
	return nil
}

func (x *TopicSortByConf) GetShowSortBy() int64 {
	if x != nil {
		return x.ShowSortBy
	}
	return 0
}

type TopicThreePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynThreePointItems []*ThreePointItem `protobuf:"bytes,1,rep,name=dyn_three_point_items,json=dynThreePointItems,proto3" json:"dyn_three_point_items,omitempty"`
}

func (x *TopicThreePoint) Reset() {
	*x = TopicThreePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicThreePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicThreePoint) ProtoMessage() {}

func (x *TopicThreePoint) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicThreePoint.ProtoReflect.Descriptor instead.
func (*TopicThreePoint) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{34}
}

func (x *TopicThreePoint) GetDynThreePointItems() []*ThreePointItem {
	if x != nil {
		return x.DynThreePointItems
	}
	return nil
}

type TrafficCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	IconUrl string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	BasePic string `protobuf:"bytes,4,opt,name=base_pic,json=basePic,proto3" json:"base_pic,omitempty"`
	BenefitPoint string `protobuf:"bytes,5,opt,name=benefit_point,json=benefitPoint,proto3" json:"benefit_point,omitempty"`
	CardDesc string `protobuf:"bytes,6,opt,name=card_desc,json=cardDesc,proto3" json:"card_desc,omitempty"`
	JumpTitle string `protobuf:"bytes,7,opt,name=jump_title,json=jumpTitle,proto3" json:"jump_title,omitempty"`
}

func (x *TrafficCard) Reset() {
	*x = TrafficCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficCard) ProtoMessage() {}

func (x *TrafficCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficCard.ProtoReflect.Descriptor instead.
func (*TrafficCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{35}
}

func (x *TrafficCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrafficCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *TrafficCard) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *TrafficCard) GetBasePic() string {
	if x != nil {
		return x.BasePic
	}
	return ""
}

func (x *TrafficCard) GetBenefitPoint() string {
	if x != nil {
		return x.BenefitPoint
	}
	return ""
}

func (x *TrafficCard) GetCardDesc() string {
	if x != nil {
		return x.CardDesc
	}
	return ""
}

func (x *TrafficCard) GetJumpTitle() string {
	if x != nil {
		return x.JumpTitle
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Face string `protobuf:"bytes,2,opt,name=face,proto3" json:"face,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NameDesc string `protobuf:"bytes,4,opt,name=name_desc,json=nameDesc,proto3" json:"name_desc,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{36}
}

func (x *User) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *User) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetNameDesc() string {
	if x != nil {
		return x.NameDesc
	}
	return ""
}

type VideoCardBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	UpName string `protobuf:"bytes,3,opt,name=up_name,json=upName,proto3" json:"up_name,omitempty"`
	Play int64 `protobuf:"varint,4,opt,name=play,proto3" json:"play,omitempty"`
	JumpLink string `protobuf:"bytes,5,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
	Aid int64 `protobuf:"varint,6,opt,name=aid,proto3" json:"aid,omitempty"`
}

func (x *VideoCardBase) Reset() {
	*x = VideoCardBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCardBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCardBase) ProtoMessage() {}

func (x *VideoCardBase) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCardBase.ProtoReflect.Descriptor instead.
func (*VideoCardBase) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{37}
}

func (x *VideoCardBase) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *VideoCardBase) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoCardBase) GetUpName() string {
	if x != nil {
		return x.UpName
	}
	return ""
}

func (x *VideoCardBase) GetPlay() int64 {
	if x != nil {
		return x.Play
	}
	return 0
}

func (x *VideoCardBase) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

func (x *VideoCardBase) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

type VideoSmallCardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoCardBase *VideoCardBase `protobuf:"bytes,1,opt,name=video_card_base,json=videoCardBase,proto3" json:"video_card_base,omitempty"`
	CoverLeftBadgeText string `protobuf:"bytes,2,opt,name=cover_left_badge_text,json=coverLeftBadgeText,proto3" json:"cover_left_badge_text,omitempty"`
	CardStatIcon1 int64 `protobuf:"varint,3,opt,name=card_stat_icon1,json=cardStatIcon1,proto3" json:"card_stat_icon1,omitempty"`
	CardStatText1 string `protobuf:"bytes,4,opt,name=card_stat_text1,json=cardStatText1,proto3" json:"card_stat_text1,omitempty"`
	CardStatIcon2 int64 `protobuf:"varint,5,opt,name=card_stat_icon2,json=cardStatIcon2,proto3" json:"card_stat_icon2,omitempty"`
	CardStatText2 string `protobuf:"bytes,6,opt,name=card_stat_text2,json=cardStatText2,proto3" json:"card_stat_text2,omitempty"`
}

func (x *VideoSmallCardItem) Reset() {
	*x = VideoSmallCardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSmallCardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSmallCardItem) ProtoMessage() {}

func (x *VideoSmallCardItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_topic_v1_topic_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSmallCardItem.ProtoReflect.Descriptor instead.
func (*VideoSmallCardItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_topic_v1_topic_proto_rawDescGZIP(), []int{38}
}

func (x *VideoSmallCardItem) GetVideoCardBase() *VideoCardBase {
	if x != nil {
		return x.VideoCardBase
	}
	return nil
}

func (x *VideoSmallCardItem) GetCoverLeftBadgeText() string {
	if x != nil {
		return x.CoverLeftBadgeText
	}
	return ""
}

func (x *VideoSmallCardItem) GetCardStatIcon1() int64 {
	if x != nil {
		return x.CardStatIcon1
	}
	return 0
}

func (x *VideoSmallCardItem) GetCardStatText1() string {
	if x != nil {
		return x.CardStatText1
	}
	return ""
}

func (x *VideoSmallCardItem) GetCardStatIcon2() int64 {
	if x != nil {
		return x.CardStatIcon2
	}
	return 0
}

func (x *VideoSmallCardItem) GetCardStatText2() string {
	if x != nil {
		return x.CardStatText2
	}
	return ""
}

var File_bilibili_app_topic_v1_topic_proto protoreflect.FileDescriptor

var file_bilibili_app_topic_v1_topic_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2f, 0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x63, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0a, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xd5, 0x04, 0x0a,
	0x0e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x36, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6a,
	0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x68, 0x61, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x72, 0x69,
	0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x11, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x33, 0x0a,
	0x16, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x53, 0x65, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x53,
	0x68, 0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6c,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x72, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6f, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x63, 0x22, 0xd6, 0x01, 0x0a, 0x0e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3f, 0x0a, 0x08,
	0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x52, 0x08, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x49,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x64, 0x72, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x72, 0x61, 0x67, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x64, 0x72, 0x61, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x72, 0x61, 0x67, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x74,
	0x6f, 0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0x93, 0x06, 0x0a, 0x10, 0x4c, 0x61, 0x72, 0x67, 0x65,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63,
	0x6f, 0x6e, 0x32, 0x12, 0x59, 0x0a, 0x14, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54,
	0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x11, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x54, 0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x55, 0x72, 0x69, 0x12, 0x58, 0x0a, 0x13, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62,
	0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x61, 0x72, 0x52, 0x11, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x72, 0x12, 0x52, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x68,
	0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54,
	0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x69,
	0x64, 0x65, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x02, 0x0a,
	0x11, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x34, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6e,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x57, 0x0a, 0x12, 0x6c, 0x61, 0x72, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x72, 0x67,
	0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x10,
	0x6c, 0x61, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0x5f, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x08, 0x50, 0x75,
	0x62, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x42, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x75,
	0x62, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x75, 0x62, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x66,
	0x61, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x46, 0x61, 0x76, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9f, 0x01,
	0x0a, 0x11, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x44, 0x65, 0x73, 0x63, 0x22,
	0x43, 0x0a, 0x0b, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x7b, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xc8, 0x01, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22,
	0x79, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x22, 0x95, 0x02, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x49, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c,
	0x66, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x5c, 0x0a, 0x15,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x6d, 0x61,
	0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xe7, 0x01, 0x0a, 0x0d, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x10,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x53, 0x0a, 0x12, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x22, 0xc7, 0x04, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a,
	0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x54, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51,
	0x0a, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x3c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x08, 0x70, 0x75, 0x62, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x55, 0x0a,
	0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xdd,
	0x02, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x78, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x46,
	0x6f, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22,
	0xa4, 0x04, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x66, 0x61, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x46, 0x61, 0x76, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x1d,
	0x70, 0x75, 0x62, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x1a, 0x70, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x4c, 0x0a, 0x23, 0x70, 0x75, 0x62, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x70, 0x75,
	0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x76, 0x65, 0x72, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53,
	0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x22, 0xa5, 0x02, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x13,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x66, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x43,
	0x66, 0x67, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x66, 0x67, 0x22, 0x79, 0x0a, 0x12, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x09, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x52,
	0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x46, 0x61, 0x76, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x0f, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x66, 0x67, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x61, 0x6c, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x61, 0x6c, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x6b, 0x0a, 0x0f,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x58, 0x0a, 0x15, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x12, 0x64, 0x79, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x50, 0x69, 0x63, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x5d, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x97,
	0x01, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d,
	0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75,
	0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x12, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x4c, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0d,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x15, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32,
	0x2a, 0x4e, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03,
	0x2a, 0x37, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x45, 0x78, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x49, 0x4c, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x32, 0xcb, 0x02, 0x0a, 0x05, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x69, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c,
	0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x46, 0x6f,
	0x6c, 0x64, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2c,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x69, 0x0a, 0x0f,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_topic_v1_topic_proto_rawDescOnce sync.Once
	file_bilibili_app_topic_v1_topic_proto_rawDescData = file_bilibili_app_topic_v1_topic_proto_rawDesc
)

func file_bilibili_app_topic_v1_topic_proto_rawDescGZIP() []byte {
	file_bilibili_app_topic_v1_topic_proto_rawDescOnce.Do(func() {
		file_bilibili_app_topic_v1_topic_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_topic_v1_topic_proto_rawDescData)
	})
	return file_bilibili_app_topic_v1_topic_proto_rawDescData
}

var file_bilibili_app_topic_v1_topic_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bilibili_app_topic_v1_topic_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_bilibili_app_topic_v1_topic_proto_goTypes = []interface{}{
	(TopicCardType)(0),            // 0: bilibili.app.topic.v1.TopicCardType
	(TopicDetailsExtMode)(0),      // 1: bilibili.app.topic.v1.TopicDetailsExtMode
	(*ButtonMeta)(nil),            // 2: bilibili.app.topic.v1.ButtonMeta
	(*DetailsTopInfo)(nil),        // 3: bilibili.app.topic.v1.DetailsTopInfo
	(*FoldCardItem)(nil),          // 4: bilibili.app.topic.v1.FoldCardItem
	(*FunctionalCard)(nil),        // 5: bilibili.app.topic.v1.FunctionalCard
	(*GameCard)(nil),              // 6: bilibili.app.topic.v1.GameCard
	(*InlineProgressBar)(nil),     // 7: bilibili.app.topic.v1.InlineProgressBar
	(*LargeCoverInline)(nil),      // 8: bilibili.app.topic.v1.LargeCoverInline
	(*LiveBadgeResource)(nil),     // 9: bilibili.app.topic.v1.LiveBadgeResource
	(*OperationCard)(nil),         // 10: bilibili.app.topic.v1.OperationCard
	(*OperationContent)(nil),      // 11: bilibili.app.topic.v1.OperationContent
	(*PubLayer)(nil),              // 12: bilibili.app.topic.v1.PubLayer
	(*RelationData)(nil),          // 13: bilibili.app.topic.v1.RelationData
	(*RightTopLiveBadge)(nil),     // 14: bilibili.app.topic.v1.RightTopLiveBadge
	(*SortContent)(nil),           // 15: bilibili.app.topic.v1.SortContent
	(*ThreePointItem)(nil),        // 16: bilibili.app.topic.v1.ThreePointItem
	(*TimeLineEvents)(nil),        // 17: bilibili.app.topic.v1.TimeLineEvents
	(*TimeLineResource)(nil),      // 18: bilibili.app.topic.v1.TimeLineResource
	(*TopicActivities)(nil),       // 19: bilibili.app.topic.v1.TopicActivities
	(*TopicActivity)(nil),         // 20: bilibili.app.topic.v1.TopicActivity
	(*TopicCapsule)(nil),          // 21: bilibili.app.topic.v1.TopicCapsule
	(*TopicCardItem)(nil),         // 22: bilibili.app.topic.v1.TopicCardItem
	(*TopicCardList)(nil),         // 23: bilibili.app.topic.v1.TopicCardList
	(*TopicDetailsAllReply)(nil),  // 24: bilibili.app.topic.v1.TopicDetailsAllReply
	(*TopicDetailsAllReq)(nil),    // 25: bilibili.app.topic.v1.TopicDetailsAllReq
	(*TopicDetailsFoldReply)(nil), // 26: bilibili.app.topic.v1.TopicDetailsFoldReply
	(*TopicDetailsFoldReq)(nil),   // 27: bilibili.app.topic.v1.TopicDetailsFoldReq
	(*TopicInfo)(nil),             // 28: bilibili.app.topic.v1.TopicInfo
	(*TopicServerConfig)(nil),     // 29: bilibili.app.topic.v1.TopicServerConfig
	(*TopicSet)(nil),              // 30: bilibili.app.topic.v1.TopicSet
	(*TopicSetDetailsReply)(nil),  // 31: bilibili.app.topic.v1.TopicSetDetailsReply
	(*TopicSetDetailsReq)(nil),    // 32: bilibili.app.topic.v1.TopicSetDetailsReq
	(*TopicSetHeadInfo)(nil),      // 33: bilibili.app.topic.v1.TopicSetHeadInfo
	(*TopicSetSortCfg)(nil),       // 34: bilibili.app.topic.v1.TopicSetSortCfg
	(*TopicSortByConf)(nil),       // 35: bilibili.app.topic.v1.TopicSortByConf
	(*TopicThreePoint)(nil),       // 36: bilibili.app.topic.v1.TopicThreePoint
	(*TrafficCard)(nil),           // 37: bilibili.app.topic.v1.TrafficCard
	(*User)(nil),                  // 38: bilibili.app.topic.v1.User
	(*VideoCardBase)(nil),         // 39: bilibili.app.topic.v1.VideoCardBase
	(*VideoSmallCardItem)(nil),    // 40: bilibili.app.topic.v1.VideoSmallCardItem
	(*v1.Base)(nil),               // 41: bilibili.app.card.v1.Base
	(*v2.DynamicItem)(nil),        // 42: bilibili.app.dynamic.v2.DynamicItem
	(*v11.PlayerArgs)(nil),        // 43: bilibili.app.archive.middleware.v1.PlayerArgs
}
var file_bilibili_app_topic_v1_topic_proto_depIdxs = []int32{
	28, // 0: bilibili.app.topic.v1.DetailsTopInfo.topic_info:type_name -> bilibili.app.topic.v1.TopicInfo
	38, // 1: bilibili.app.topic.v1.DetailsTopInfo.user:type_name -> bilibili.app.topic.v1.User
	11, // 2: bilibili.app.topic.v1.DetailsTopInfo.operation_content:type_name -> bilibili.app.topic.v1.OperationContent
	30, // 3: bilibili.app.topic.v1.DetailsTopInfo.topic_set:type_name -> bilibili.app.topic.v1.TopicSet
	21, // 4: bilibili.app.topic.v1.FunctionalCard.capsules:type_name -> bilibili.app.topic.v1.TopicCapsule
	37, // 5: bilibili.app.topic.v1.FunctionalCard.traffic_card:type_name -> bilibili.app.topic.v1.TrafficCard
	6,  // 6: bilibili.app.topic.v1.FunctionalCard.game_card:type_name -> bilibili.app.topic.v1.GameCard
	41, // 7: bilibili.app.topic.v1.LargeCoverInline.base:type_name -> bilibili.app.card.v1.Base
	14, // 8: bilibili.app.topic.v1.LargeCoverInline.right_top_live_badge:type_name -> bilibili.app.topic.v1.RightTopLiveBadge
	7,  // 9: bilibili.app.topic.v1.LargeCoverInline.inline_progress_bar:type_name -> bilibili.app.topic.v1.InlineProgressBar
	36, // 10: bilibili.app.topic.v1.LargeCoverInline.topic_three_point:type_name -> bilibili.app.topic.v1.TopicThreePoint
	13, // 11: bilibili.app.topic.v1.LargeCoverInline.relation_data:type_name -> bilibili.app.topic.v1.RelationData
	8,  // 12: bilibili.app.topic.v1.OperationCard.large_cover_inline:type_name -> bilibili.app.topic.v1.LargeCoverInline
	10, // 13: bilibili.app.topic.v1.OperationContent.operation_card:type_name -> bilibili.app.topic.v1.OperationCard
	2,  // 14: bilibili.app.topic.v1.PubLayer.button_meta:type_name -> bilibili.app.topic.v1.ButtonMeta
	9,  // 15: bilibili.app.topic.v1.RightTopLiveBadge.in_live:type_name -> bilibili.app.topic.v1.LiveBadgeResource
	17, // 16: bilibili.app.topic.v1.TimeLineResource.time_line_events:type_name -> bilibili.app.topic.v1.TimeLineEvents
	20, // 17: bilibili.app.topic.v1.TopicActivities.activity:type_name -> bilibili.app.topic.v1.TopicActivity
	42, // 18: bilibili.app.topic.v1.TopicCardItem.dynamic_item:type_name -> bilibili.app.dynamic.v2.DynamicItem
	4,  // 19: bilibili.app.topic.v1.TopicCardItem.ford_card_item:type_name -> bilibili.app.topic.v1.FoldCardItem
	40, // 20: bilibili.app.topic.v1.TopicCardItem.video_small_card_item:type_name -> bilibili.app.topic.v1.VideoSmallCardItem
	22, // 21: bilibili.app.topic.v1.TopicCardList.topic_card_items:type_name -> bilibili.app.topic.v1.TopicCardItem
	35, // 22: bilibili.app.topic.v1.TopicCardList.topic_sort_by_conf:type_name -> bilibili.app.topic.v1.TopicSortByConf
	3,  // 23: bilibili.app.topic.v1.TopicDetailsAllReply.details_top_info:type_name -> bilibili.app.topic.v1.DetailsTopInfo
	19, // 24: bilibili.app.topic.v1.TopicDetailsAllReply.topic_activities:type_name -> bilibili.app.topic.v1.TopicActivities
	23, // 25: bilibili.app.topic.v1.TopicDetailsAllReply.topic_card_list:type_name -> bilibili.app.topic.v1.TopicCardList
	5,  // 26: bilibili.app.topic.v1.TopicDetailsAllReply.functional_card:type_name -> bilibili.app.topic.v1.FunctionalCard
	12, // 27: bilibili.app.topic.v1.TopicDetailsAllReply.pub_layer:type_name -> bilibili.app.topic.v1.PubLayer
	18, // 28: bilibili.app.topic.v1.TopicDetailsAllReply.time_line_resource:type_name -> bilibili.app.topic.v1.TimeLineResource
	29, // 29: bilibili.app.topic.v1.TopicDetailsAllReply.topic_server_config:type_name -> bilibili.app.topic.v1.TopicServerConfig
	43, // 30: bilibili.app.topic.v1.TopicDetailsAllReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	23, // 31: bilibili.app.topic.v1.TopicDetailsFoldReply.topic_card_list:type_name -> bilibili.app.topic.v1.TopicCardList
	43, // 32: bilibili.app.topic.v1.TopicDetailsFoldReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	33, // 33: bilibili.app.topic.v1.TopicSetDetailsReply.topic_set_head_info:type_name -> bilibili.app.topic.v1.TopicSetHeadInfo
	28, // 34: bilibili.app.topic.v1.TopicSetDetailsReply.topic_info:type_name -> bilibili.app.topic.v1.TopicInfo
	34, // 35: bilibili.app.topic.v1.TopicSetDetailsReply.sort_cfg:type_name -> bilibili.app.topic.v1.TopicSetSortCfg
	30, // 36: bilibili.app.topic.v1.TopicSetHeadInfo.topic_set:type_name -> bilibili.app.topic.v1.TopicSet
	15, // 37: bilibili.app.topic.v1.TopicSetSortCfg.all_sort_by:type_name -> bilibili.app.topic.v1.SortContent
	15, // 38: bilibili.app.topic.v1.TopicSortByConf.all_sort_by:type_name -> bilibili.app.topic.v1.SortContent
	16, // 39: bilibili.app.topic.v1.TopicThreePoint.dyn_three_point_items:type_name -> bilibili.app.topic.v1.ThreePointItem
	39, // 40: bilibili.app.topic.v1.VideoSmallCardItem.video_card_base:type_name -> bilibili.app.topic.v1.VideoCardBase
	25, // 41: bilibili.app.topic.v1.Topic.TopicDetailsAll:input_type -> bilibili.app.topic.v1.TopicDetailsAllReq
	27, // 42: bilibili.app.topic.v1.Topic.TopicDetailsFold:input_type -> bilibili.app.topic.v1.TopicDetailsFoldReq
	32, // 43: bilibili.app.topic.v1.Topic.TopicSetDetails:input_type -> bilibili.app.topic.v1.TopicSetDetailsReq
	24, // 44: bilibili.app.topic.v1.Topic.TopicDetailsAll:output_type -> bilibili.app.topic.v1.TopicDetailsAllReply
	26, // 45: bilibili.app.topic.v1.Topic.TopicDetailsFold:output_type -> bilibili.app.topic.v1.TopicDetailsFoldReply
	31, // 46: bilibili.app.topic.v1.Topic.TopicSetDetails:output_type -> bilibili.app.topic.v1.TopicSetDetailsReply
	44, // [44:47] is the sub-list for method output_type
	41, // [41:44] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_bilibili_app_topic_v1_topic_proto_init() }
func file_bilibili_app_topic_v1_topic_proto_init() {
	if File_bilibili_app_topic_v1_topic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_topic_v1_topic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsTopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoldCardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionalCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InlineProgressBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LargeCoverInline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveBadgeResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PubLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RightTopLiveBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreePointItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLineEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLineResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicActivities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicCapsule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicCardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicCardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDetailsAllReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDetailsAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDetailsFoldReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicDetailsFoldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicServerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSetDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSetDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSetHeadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSetSortCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicSortByConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicThreePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCardBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_topic_v1_topic_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoSmallCardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_topic_v1_topic_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*OperationCard_LargeCoverInline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_topic_v1_topic_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_topic_v1_topic_proto_goTypes,
		DependencyIndexes: file_bilibili_app_topic_v1_topic_proto_depIdxs,
		EnumInfos:         file_bilibili_app_topic_v1_topic_proto_enumTypes,
		MessageInfos:      file_bilibili_app_topic_v1_topic_proto_msgTypes,
	}.Build()
	File_bilibili_app_topic_v1_topic_proto = out.File
	file_bilibili_app_topic_v1_topic_proto_rawDesc = nil
	file_bilibili_app_topic_v1_topic_proto_goTypes = nil
	file_bilibili_app_topic_v1_topic_proto_depIdxs = nil
}
