// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: bilibili/app/nativeact/v1/nativeact.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	v2 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/dynamic/v2"
	any1 "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_Default ActionType = 0 //
	ActionType_Do      ActionType = 1 //
	ActionType_Undo    ActionType = 2 //
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "Default",
		1: "Do",
		2: "Undo",
	}
	ActionType_value = map[string]int32{
		"Default": 0,
		"Do":      1,
		"Undo":    2,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{0}
}

type MessageBoxType int32

const (
	MessageBoxType_Dialog MessageBoxType = 0 //
	MessageBoxType_Toast  MessageBoxType = 1 //
)

// Enum value maps for MessageBoxType.
var (
	MessageBoxType_name = map[int32]string{
		0: "Dialog",
		1: "Toast",
	}
	MessageBoxType_value = map[string]int32{
		"Dialog": 0,
		"Toast":  1,
	}
)

func (x MessageBoxType) Enum() *MessageBoxType {
	p := new(MessageBoxType)
	*p = x
	return p
}

func (x MessageBoxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageBoxType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[1].Descriptor()
}

func (MessageBoxType) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[1]
}

func (x MessageBoxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageBoxType.Descriptor instead.
func (MessageBoxType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{1}
}

type ProgressBar int32

const (
	ProgressBar_PBarDefault ProgressBar = 0 //
	ProgressBar_PBarColor   ProgressBar = 1 //
	ProgressBar_PBarTexture ProgressBar = 2 //
)

// Enum value maps for ProgressBar.
var (
	ProgressBar_name = map[int32]string{
		0: "PBarDefault",
		1: "PBarColor",
		2: "PBarTexture",
	}
	ProgressBar_value = map[string]int32{
		"PBarDefault": 0,
		"PBarColor":   1,
		"PBarTexture": 2,
	}
)

func (x ProgressBar) Enum() *ProgressBar {
	p := new(ProgressBar)
	*p = x
	return p
}

func (x ProgressBar) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgressBar) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[2].Descriptor()
}

func (ProgressBar) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[2]
}

func (x ProgressBar) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgressBar.Descriptor instead.
func (ProgressBar) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{2}
}

type ProgressSlot int32

const (
	ProgressSlot_PSlotDefault ProgressSlot = 0 //
	ProgressSlot_PSlotOutline ProgressSlot = 1 //
	ProgressSlot_PSlotFill    ProgressSlot = 2 //
)

// Enum value maps for ProgressSlot.
var (
	ProgressSlot_name = map[int32]string{
		0: "PSlotDefault",
		1: "PSlotOutline",
		2: "PSlotFill",
	}
	ProgressSlot_value = map[string]int32{
		"PSlotDefault": 0,
		"PSlotOutline": 1,
		"PSlotFill":    2,
	}
)

func (x ProgressSlot) Enum() *ProgressSlot {
	p := new(ProgressSlot)
	*p = x
	return p
}

func (x ProgressSlot) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgressSlot) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[3].Descriptor()
}

func (ProgressSlot) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[3]
}

func (x ProgressSlot) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgressSlot.Descriptor instead.
func (ProgressSlot) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{3}
}

type ProgressStyle int32

const (
	ProgressStyle_PStyleDefault   ProgressStyle = 0 //
	ProgressStyle_PStyleRound     ProgressStyle = 1 //
	ProgressStyle_PStyleRectangle ProgressStyle = 2 //
	ProgressStyle_PStyleNode      ProgressStyle = 3 //
)

// Enum value maps for ProgressStyle.
var (
	ProgressStyle_name = map[int32]string{
		0: "PStyleDefault",
		1: "PStyleRound",
		2: "PStyleRectangle",
		3: "PStyleNode",
	}
	ProgressStyle_value = map[string]int32{
		"PStyleDefault":   0,
		"PStyleRound":     1,
		"PStyleRectangle": 2,
		"PStyleNode":      3,
	}
)

func (x ProgressStyle) Enum() *ProgressStyle {
	p := new(ProgressStyle)
	*p = x
	return p
}

func (x ProgressStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgressStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[4].Descriptor()
}

func (ProgressStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[4]
}

func (x ProgressStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgressStyle.Descriptor instead.
func (ProgressStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{4}
}

type RedirectType int32

const (
	RedirectType_RtTypeDefault RedirectType = 0 //
	RedirectType_RtTypeSpace   RedirectType = 1 //
	RedirectType_RtTypeUri     RedirectType = 2 //
)

// Enum value maps for RedirectType.
var (
	RedirectType_name = map[int32]string{
		0: "RtTypeDefault",
		1: "RtTypeSpace",
		2: "RtTypeUri",
	}
	RedirectType_value = map[string]int32{
		"RtTypeDefault": 0,
		"RtTypeSpace":   1,
		"RtTypeUri":     2,
	}
)

func (x RedirectType) Enum() *RedirectType {
	p := new(RedirectType)
	*p = x
	return p
}

func (x RedirectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedirectType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[5].Descriptor()
}

func (RedirectType) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[5]
}

func (x RedirectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedirectType.Descriptor instead.
func (RedirectType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{5}
}

type ReserveGoto int32

const (
	ReserveGoto_Reserve  ReserveGoto = 0 //
	ReserveGoto_Redirect ReserveGoto = 1 //
	ReserveGoto_Unable   ReserveGoto = 2 //
)

// Enum value maps for ReserveGoto.
var (
	ReserveGoto_name = map[int32]string{
		0: "Reserve",
		1: "Redirect",
		2: "Unable",
	}
	ReserveGoto_value = map[string]int32{
		"Reserve":  0,
		"Redirect": 1,
		"Unable":   2,
	}
)

func (x ReserveGoto) Enum() *ReserveGoto {
	p := new(ReserveGoto)
	*p = x
	return p
}

func (x ReserveGoto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveGoto) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[6].Descriptor()
}

func (ReserveGoto) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[6]
}

func (x ReserveGoto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveGoto.Descriptor instead.
func (ReserveGoto) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{6}
}

type TabStyle int32

const (
	TabStyle_TabStyleDefault TabStyle = 0 //
	TabStyle_TabStyleColor   TabStyle = 1 //
	TabStyle_TabStyleImage   TabStyle = 2 //
)

// Enum value maps for TabStyle.
var (
	TabStyle_name = map[int32]string{
		0: "TabStyleDefault",
		1: "TabStyleColor",
		2: "TabStyleImage",
	}
	TabStyle_value = map[string]int32{
		"TabStyleDefault": 0,
		"TabStyleColor":   1,
		"TabStyleImage":   2,
	}
)

func (x TabStyle) Enum() *TabStyle {
	p := new(TabStyle)
	*p = x
	return p
}

func (x TabStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TabStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[7].Descriptor()
}

func (TabStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[7]
}

func (x TabStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TabStyle.Descriptor instead.
func (TabStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{7}
}

type VoteProgressStyle int32

const (
	VoteProgressStyle_VPStyleDefault VoteProgressStyle = 0 //
	VoteProgressStyle_VPStyleCircle  VoteProgressStyle = 1 //
	VoteProgressStyle_VPStyleSquare  VoteProgressStyle = 2 //
)

// Enum value maps for VoteProgressStyle.
var (
	VoteProgressStyle_name = map[int32]string{
		0: "VPStyleDefault",
		1: "VPStyleCircle",
		2: "VPStyleSquare",
	}
	VoteProgressStyle_value = map[string]int32{
		"VPStyleDefault": 0,
		"VPStyleCircle":  1,
		"VPStyleSquare":  2,
	}
)

func (x VoteProgressStyle) Enum() *VoteProgressStyle {
	p := new(VoteProgressStyle)
	*p = x
	return p
}

func (x VoteProgressStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteProgressStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[8].Descriptor()
}

func (VoteProgressStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[8]
}

func (x VoteProgressStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteProgressStyle.Descriptor instead.
func (VoteProgressStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{8}
}

type ModuleItem_CardDetailCase int32

const (
	ModuleItem_CARDDETAIL_NOT_SET            ModuleItem_CardDetailCase = 0  //
	ModuleItem_EDITOR_RECOMMEND_CARD         ModuleItem_CardDetailCase = 10 //
	ModuleItem_PARTICIPATION_CARD            ModuleItem_CardDetailCase = 11 //
	ModuleItem_HEADER_CARD                   ModuleItem_CardDetailCase = 12 //
	ModuleItem_DYNAMIC_CARD                  ModuleItem_CardDetailCase = 13 //
	ModuleItem_TEXT_CARD                     ModuleItem_CardDetailCase = 14 //
	ModuleItem_TEXT_TITLE_CARD               ModuleItem_CardDetailCase = 15 //
	ModuleItem_IMAGE_TITLE_CARD              ModuleItem_CardDetailCase = 16 //
	ModuleItem_DYNAMIC_MORE_CARD             ModuleItem_CardDetailCase = 17 //
	ModuleItem_DYNAMIC_ACT_MORE_CARD         ModuleItem_CardDetailCase = 18 //
	ModuleItem_LIVE_CARD                     ModuleItem_CardDetailCase = 19 //
	ModuleItem_CAROUSEL_IMG_CARD             ModuleItem_CardDetailCase = 20 //
	ModuleItem_CAROUSEL_WORD_CARD            ModuleItem_CardDetailCase = 21 //
	ModuleItem_RESOURCE_CARD                 ModuleItem_CardDetailCase = 22 //
	ModuleItem_RESOURCE_MORE_CARD            ModuleItem_CardDetailCase = 23 //
	ModuleItem_GAME_CARD                     ModuleItem_CardDetailCase = 24 //
	ModuleItem_VIDEO_CARD                    ModuleItem_CardDetailCase = 25 //
	ModuleItem_VIDEO_MORE_CARD               ModuleItem_CardDetailCase = 26 //
	ModuleItem_RECOMMEND_CARD                ModuleItem_CardDetailCase = 27 //
	ModuleItem_RECOMMEND_VERTICAL_CARD       ModuleItem_CardDetailCase = 28 //
	ModuleItem_RELATIVEACT_CARD              ModuleItem_CardDetailCase = 29 //
	ModuleItem_RELATIVEACT_CAPSULE_CARD      ModuleItem_CardDetailCase = 30 //
	ModuleItem_STATEMENT_CARD                ModuleItem_CardDetailCase = 31 //
	ModuleItem_ICON_CARD                     ModuleItem_CardDetailCase = 32 //
	ModuleItem_VOTE_CARD                     ModuleItem_CardDetailCase = 33 //
	ModuleItem_RESERVE_CARD                  ModuleItem_CardDetailCase = 34 //
	ModuleItem_TIMELINE_HEAD_CARD            ModuleItem_CardDetailCase = 35 //
	ModuleItem_TIMELINE_EVENT_TEXT_CARD      ModuleItem_CardDetailCase = 36 //
	ModuleItem_TIMELINE_EVENT_IMAGE_CARD     ModuleItem_CardDetailCase = 37 //
	ModuleItem_TIMELINE_EVENT_IMAGETEXT_CARD ModuleItem_CardDetailCase = 38 //
	ModuleItem_TIMELINE_EVENT_RESOURCE_CARD  ModuleItem_CardDetailCase = 39 //
	ModuleItem_TIMELINE_MORE_CARD            ModuleItem_CardDetailCase = 40 //
	ModuleItem_TIMELINE_UNFOLD_CARD          ModuleItem_CardDetailCase = 41 //
	ModuleItem_OGV_ONE_CARD                  ModuleItem_CardDetailCase = 42 //
	ModuleItem_OGV_THREE_CARD                ModuleItem_CardDetailCase = 43 //
	ModuleItem_OGV_MORE_CARD                 ModuleItem_CardDetailCase = 44 //
	ModuleItem_NAVIGATION_CARD               ModuleItem_CardDetailCase = 45 //
	ModuleItem_REPLY_CARD                    ModuleItem_CardDetailCase = 46 //
	ModuleItem_TAB_CARD                      ModuleItem_CardDetailCase = 47 //
	ModuleItem_NEWACT_HEADER_CARD            ModuleItem_CardDetailCase = 48 //
	ModuleItem_NEWACT_AWARD_CARD             ModuleItem_CardDetailCase = 49 //
	ModuleItem_NEWACT_STATEMENT_CARD         ModuleItem_CardDetailCase = 50 //
	ModuleItem_PROGRESS_CARD                 ModuleItem_CardDetailCase = 51 //
	ModuleItem_SELECT_CARD                   ModuleItem_CardDetailCase = 52 //
)

// Enum value maps for ModuleItem_CardDetailCase.
var (
	ModuleItem_CardDetailCase_name = map[int32]string{
		0:  "CARDDETAIL_NOT_SET",
		10: "EDITOR_RECOMMEND_CARD",
		11: "PARTICIPATION_CARD",
		12: "HEADER_CARD",
		13: "DYNAMIC_CARD",
		14: "TEXT_CARD",
		15: "TEXT_TITLE_CARD",
		16: "IMAGE_TITLE_CARD",
		17: "DYNAMIC_MORE_CARD",
		18: "DYNAMIC_ACT_MORE_CARD",
		19: "LIVE_CARD",
		20: "CAROUSEL_IMG_CARD",
		21: "CAROUSEL_WORD_CARD",
		22: "RESOURCE_CARD",
		23: "RESOURCE_MORE_CARD",
		24: "GAME_CARD",
		25: "VIDEO_CARD",
		26: "VIDEO_MORE_CARD",
		27: "RECOMMEND_CARD",
		28: "RECOMMEND_VERTICAL_CARD",
		29: "RELATIVEACT_CARD",
		30: "RELATIVEACT_CAPSULE_CARD",
		31: "STATEMENT_CARD",
		32: "ICON_CARD",
		33: "VOTE_CARD",
		34: "RESERVE_CARD",
		35: "TIMELINE_HEAD_CARD",
		36: "TIMELINE_EVENT_TEXT_CARD",
		37: "TIMELINE_EVENT_IMAGE_CARD",
		38: "TIMELINE_EVENT_IMAGETEXT_CARD",
		39: "TIMELINE_EVENT_RESOURCE_CARD",
		40: "TIMELINE_MORE_CARD",
		41: "TIMELINE_UNFOLD_CARD",
		42: "OGV_ONE_CARD",
		43: "OGV_THREE_CARD",
		44: "OGV_MORE_CARD",
		45: "NAVIGATION_CARD",
		46: "REPLY_CARD",
		47: "TAB_CARD",
		48: "NEWACT_HEADER_CARD",
		49: "NEWACT_AWARD_CARD",
		50: "NEWACT_STATEMENT_CARD",
		51: "PROGRESS_CARD",
		52: "SELECT_CARD",
	}
	ModuleItem_CardDetailCase_value = map[string]int32{
		"CARDDETAIL_NOT_SET":            0,
		"EDITOR_RECOMMEND_CARD":         10,
		"PARTICIPATION_CARD":            11,
		"HEADER_CARD":                   12,
		"DYNAMIC_CARD":                  13,
		"TEXT_CARD":                     14,
		"TEXT_TITLE_CARD":               15,
		"IMAGE_TITLE_CARD":              16,
		"DYNAMIC_MORE_CARD":             17,
		"DYNAMIC_ACT_MORE_CARD":         18,
		"LIVE_CARD":                     19,
		"CAROUSEL_IMG_CARD":             20,
		"CAROUSEL_WORD_CARD":            21,
		"RESOURCE_CARD":                 22,
		"RESOURCE_MORE_CARD":            23,
		"GAME_CARD":                     24,
		"VIDEO_CARD":                    25,
		"VIDEO_MORE_CARD":               26,
		"RECOMMEND_CARD":                27,
		"RECOMMEND_VERTICAL_CARD":       28,
		"RELATIVEACT_CARD":              29,
		"RELATIVEACT_CAPSULE_CARD":      30,
		"STATEMENT_CARD":                31,
		"ICON_CARD":                     32,
		"VOTE_CARD":                     33,
		"RESERVE_CARD":                  34,
		"TIMELINE_HEAD_CARD":            35,
		"TIMELINE_EVENT_TEXT_CARD":      36,
		"TIMELINE_EVENT_IMAGE_CARD":     37,
		"TIMELINE_EVENT_IMAGETEXT_CARD": 38,
		"TIMELINE_EVENT_RESOURCE_CARD":  39,
		"TIMELINE_MORE_CARD":            40,
		"TIMELINE_UNFOLD_CARD":          41,
		"OGV_ONE_CARD":                  42,
		"OGV_THREE_CARD":                43,
		"OGV_MORE_CARD":                 44,
		"NAVIGATION_CARD":               45,
		"REPLY_CARD":                    46,
		"TAB_CARD":                      47,
		"NEWACT_HEADER_CARD":            48,
		"NEWACT_AWARD_CARD":             49,
		"NEWACT_STATEMENT_CARD":         50,
		"PROGRESS_CARD":                 51,
		"SELECT_CARD":                   52,
	}
)

func (x ModuleItem_CardDetailCase) Enum() *ModuleItem_CardDetailCase {
	p := new(ModuleItem_CardDetailCase)
	*p = x
	return p
}

func (x ModuleItem_CardDetailCase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleItem_CardDetailCase) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[9].Descriptor()
}

func (ModuleItem_CardDetailCase) Type() protoreflect.EnumType {
	return &file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes[9]
}

func (x ModuleItem_CardDetailCase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleItem_CardDetailCase.Descriptor instead.
func (ModuleItem_CardDetailCase) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{33, 0}
}

type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width int64 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	X int64 `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y int64 `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	Ukey string `protobuf:"bytes,5,opt,name=ukey,proto3" json:"ukey,omitempty"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{0}
}

func (x *Area) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Area) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Area) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Area) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Area) GetUkey() string {
	if x != nil {
		return x.Ukey
	}
	return ""
}

type Badge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	BgColor string `protobuf:"bytes,2,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight string `protobuf:"bytes,3,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
}

func (x *Badge) Reset() {
	*x = Badge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{1}
}

func (x *Badge) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Badge) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Badge) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

type CarouselImgCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentStyle int64 `protobuf:"varint,1,opt,name=content_style,json=contentStyle,proto3" json:"content_style,omitempty"`
	Images []*CarouselImgItem `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *CarouselImgCard) Reset() {
	*x = CarouselImgCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselImgCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselImgCard) ProtoMessage() {}

func (x *CarouselImgCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselImgCard.ProtoReflect.Descriptor instead.
func (*CarouselImgCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{2}
}

func (x *CarouselImgCard) GetContentStyle() int64 {
	if x != nil {
		return x.ContentStyle
	}
	return 0
}

func (x *CarouselImgCard) GetImages() []*CarouselImgItem {
	if x != nil {
		return x.Images
	}
	return nil
}

type CarouselImgItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Length int64 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Width int64 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	TopTab *TopTab `protobuf:"bytes,5,opt,name=top_tab,json=topTab,proto3" json:"top_tab,omitempty"`
	Height int64 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *CarouselImgItem) Reset() {
	*x = CarouselImgItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselImgItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselImgItem) ProtoMessage() {}

func (x *CarouselImgItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselImgItem.ProtoReflect.Descriptor instead.
func (*CarouselImgItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{3}
}

func (x *CarouselImgItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CarouselImgItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CarouselImgItem) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *CarouselImgItem) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CarouselImgItem) GetTopTab() *TopTab {
	if x != nil {
		return x.TopTab
	}
	return nil
}

func (x *CarouselImgItem) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type CarouselWordCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentStyle int64 `protobuf:"varint,1,opt,name=content_style,json=contentStyle,proto3" json:"content_style,omitempty"`
	ScrollType int64 `protobuf:"varint,2,opt,name=scroll_type,json=scrollType,proto3" json:"scroll_type,omitempty"`
	Words []*CarouselWordItem `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *CarouselWordCard) Reset() {
	*x = CarouselWordCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselWordCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselWordCard) ProtoMessage() {}

func (x *CarouselWordCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselWordCard.ProtoReflect.Descriptor instead.
func (*CarouselWordCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{4}
}

func (x *CarouselWordCard) GetContentStyle() int64 {
	if x != nil {
		return x.ContentStyle
	}
	return 0
}

func (x *CarouselWordCard) GetScrollType() int64 {
	if x != nil {
		return x.ScrollType
	}
	return 0
}

func (x *CarouselWordCard) GetWords() []*CarouselWordItem {
	if x != nil {
		return x.Words
	}
	return nil
}

type CarouselWordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CarouselWordItem) Reset() {
	*x = CarouselWordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarouselWordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarouselWordItem) ProtoMessage() {}

func (x *CarouselWordItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarouselWordItem.ProtoReflect.Descriptor instead.
func (*CarouselWordItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{5}
}

func (x *CarouselWordItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgColor string `protobuf:"bytes,1,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	TitleColor string `protobuf:"bytes,2,opt,name=title_color,json=titleColor,proto3" json:"title_color,omitempty"`
	TopFontColor string `protobuf:"bytes,3,opt,name=top_font_color,json=topFontColor,proto3" json:"top_font_color,omitempty"`
	BottomFontColor string `protobuf:"bytes,4,opt,name=bottom_font_color,json=bottomFontColor,proto3" json:"bottom_font_color,omitempty"`
	FontColor string `protobuf:"bytes,5,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	TextTitleFontColor string `protobuf:"bytes,6,opt,name=text_title_font_color,json=textTitleFontColor,proto3" json:"text_title_font_color,omitempty"`
	IndicatorColor string `protobuf:"bytes,7,opt,name=indicator_color,json=indicatorColor,proto3" json:"indicator_color,omitempty"`
	CardBgColor string `protobuf:"bytes,8,opt,name=card_bg_color,json=cardBgColor,proto3" json:"card_bg_color,omitempty"`
	CardTitleFontColor string `protobuf:"bytes,9,opt,name=card_title_font_color,json=cardTitleFontColor,proto3" json:"card_title_font_color,omitempty"`
	CardTitleBgColor string `protobuf:"bytes,10,opt,name=card_title_bg_color,json=cardTitleBgColor,proto3" json:"card_title_bg_color,omitempty"`
	ViewMoreFontColor string `protobuf:"bytes,11,opt,name=view_more_font_color,json=viewMoreFontColor,proto3" json:"view_more_font_color,omitempty"`
	ViewMoreBgColor string `protobuf:"bytes,12,opt,name=view_more_bg_color,json=viewMoreBgColor,proto3" json:"view_more_bg_color,omitempty"`
	TimelineColor string `protobuf:"bytes,13,opt,name=timeline_color,json=timelineColor,proto3" json:"timeline_color,omitempty"`
	RcmdFontColor string `protobuf:"bytes,14,opt,name=rcmd_font_color,json=rcmdFontColor,proto3" json:"rcmd_font_color,omitempty"`
	SubtitleFontColor string `protobuf:"bytes,15,opt,name=subtitle_font_color,json=subtitleFontColor,proto3" json:"subtitle_font_color,omitempty"`
	SelectedFontColor string `protobuf:"bytes,16,opt,name=selected_font_color,json=selectedFontColor,proto3" json:"selected_font_color,omitempty"`
	SelectedBgColor string `protobuf:"bytes,17,opt,name=selected_bg_color,json=selectedBgColor,proto3" json:"selected_bg_color,omitempty"`
	UnselectedFontColor string `protobuf:"bytes,18,opt,name=unselected_font_color,json=unselectedFontColor,proto3" json:"unselected_font_color,omitempty"`
	UnselectedBgColor string `protobuf:"bytes,19,opt,name=unselected_bg_color,json=unselectedBgColor,proto3" json:"unselected_bg_color,omitempty"`
	NtSelectedFontColor string `protobuf:"bytes,20,opt,name=nt_selected_font_color,json=ntSelectedFontColor,proto3" json:"nt_selected_font_color,omitempty"`
	NtSelectedBgColor string `protobuf:"bytes,21,opt,name=nt_selected_bg_color,json=ntSelectedBgColor,proto3" json:"nt_selected_bg_color,omitempty"`
	NtUnselectedFontColor string `protobuf:"bytes,22,opt,name=nt_unselected_font_color,json=ntUnselectedFontColor,proto3" json:"nt_unselected_font_color,omitempty"`
	NtUnselectedBgColor string `protobuf:"bytes,23,opt,name=nt_unselected_bg_color,json=ntUnselectedBgColor,proto3" json:"nt_unselected_bg_color,omitempty"`
	ProgressBarColor string `protobuf:"bytes,24,opt,name=progress_bar_color,json=progressBarColor,proto3" json:"progress_bar_color,omitempty"`
	PanelBgColor string `protobuf:"bytes,25,opt,name=panel_bg_color,json=panelBgColor,proto3" json:"panel_bg_color,omitempty"`
	PanelSelectColor string `protobuf:"bytes,26,opt,name=panel_select_color,json=panelSelectColor,proto3" json:"panel_select_color,omitempty"`
	PanelSelectFontColor string `protobuf:"bytes,27,opt,name=panel_select_font_color,json=panelSelectFontColor,proto3" json:"panel_select_font_color,omitempty"`
	PanelNtSelectFontColor string `protobuf:"bytes,28,opt,name=panel_nt_select_font_color,json=panelNtSelectFontColor,proto3" json:"panel_nt_select_font_color,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{6}
}

func (x *Color) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Color) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *Color) GetTopFontColor() string {
	if x != nil {
		return x.TopFontColor
	}
	return ""
}

func (x *Color) GetBottomFontColor() string {
	if x != nil {
		return x.BottomFontColor
	}
	return ""
}

func (x *Color) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

func (x *Color) GetTextTitleFontColor() string {
	if x != nil {
		return x.TextTitleFontColor
	}
	return ""
}

func (x *Color) GetIndicatorColor() string {
	if x != nil {
		return x.IndicatorColor
	}
	return ""
}

func (x *Color) GetCardBgColor() string {
	if x != nil {
		return x.CardBgColor
	}
	return ""
}

func (x *Color) GetCardTitleFontColor() string {
	if x != nil {
		return x.CardTitleFontColor
	}
	return ""
}

func (x *Color) GetCardTitleBgColor() string {
	if x != nil {
		return x.CardTitleBgColor
	}
	return ""
}

func (x *Color) GetViewMoreFontColor() string {
	if x != nil {
		return x.ViewMoreFontColor
	}
	return ""
}

func (x *Color) GetViewMoreBgColor() string {
	if x != nil {
		return x.ViewMoreBgColor
	}
	return ""
}

func (x *Color) GetTimelineColor() string {
	if x != nil {
		return x.TimelineColor
	}
	return ""
}

func (x *Color) GetRcmdFontColor() string {
	if x != nil {
		return x.RcmdFontColor
	}
	return ""
}

func (x *Color) GetSubtitleFontColor() string {
	if x != nil {
		return x.SubtitleFontColor
	}
	return ""
}

func (x *Color) GetSelectedFontColor() string {
	if x != nil {
		return x.SelectedFontColor
	}
	return ""
}

func (x *Color) GetSelectedBgColor() string {
	if x != nil {
		return x.SelectedBgColor
	}
	return ""
}

func (x *Color) GetUnselectedFontColor() string {
	if x != nil {
		return x.UnselectedFontColor
	}
	return ""
}

func (x *Color) GetUnselectedBgColor() string {
	if x != nil {
		return x.UnselectedBgColor
	}
	return ""
}

func (x *Color) GetNtSelectedFontColor() string {
	if x != nil {
		return x.NtSelectedFontColor
	}
	return ""
}

func (x *Color) GetNtSelectedBgColor() string {
	if x != nil {
		return x.NtSelectedBgColor
	}
	return ""
}

func (x *Color) GetNtUnselectedFontColor() string {
	if x != nil {
		return x.NtUnselectedFontColor
	}
	return ""
}

func (x *Color) GetNtUnselectedBgColor() string {
	if x != nil {
		return x.NtUnselectedBgColor
	}
	return ""
}

func (x *Color) GetProgressBarColor() string {
	if x != nil {
		return x.ProgressBarColor
	}
	return ""
}

func (x *Color) GetPanelBgColor() string {
	if x != nil {
		return x.PanelBgColor
	}
	return ""
}

func (x *Color) GetPanelSelectColor() string {
	if x != nil {
		return x.PanelSelectColor
	}
	return ""
}

func (x *Color) GetPanelSelectFontColor() string {
	if x != nil {
		return x.PanelSelectFontColor
	}
	return ""
}

func (x *Color) GetPanelNtSelectFontColor() string {
	if x != nil {
		return x.PanelNtSelectFontColor
	}
	return ""
}

type DynamicActMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	SubpageData *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
}

func (x *DynamicActMoreCard) Reset() {
	*x = DynamicActMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicActMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicActMoreCard) ProtoMessage() {}

func (x *DynamicActMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicActMoreCard.ProtoReflect.Descriptor instead.
func (*DynamicActMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{7}
}

func (x *DynamicActMoreCard) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DynamicActMoreCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynamicActMoreCard) GetSubpageData() *SubpageData {
	if x != nil {
		return x.SubpageData
	}
	return nil
}

type DynamicCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dynamic *v2.DynamicItem `protobuf:"bytes,1,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
}

func (x *DynamicCard) Reset() {
	*x = DynamicCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicCard) ProtoMessage() {}

func (x *DynamicCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicCard.ProtoReflect.Descriptor instead.
func (*DynamicCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{8}
}

func (x *DynamicCard) GetDynamic() *v2.DynamicItem {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

type DynamicMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	SubpageData *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
}

func (x *DynamicMoreCard) Reset() {
	*x = DynamicMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicMoreCard) ProtoMessage() {}

func (x *DynamicMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicMoreCard.ProtoReflect.Descriptor instead.
func (*DynamicMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{9}
}

func (x *DynamicMoreCard) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DynamicMoreCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DynamicMoreCard) GetSubpageData() *SubpageData {
	if x != nil {
		return x.SubpageData
	}
	return nil
}

type DynamicParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedOffset *any1.Any `protobuf:"bytes,1,opt,name=feed_offset,json=feedOffset,proto3" json:"feed_offset,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	LastGroup int64 `protobuf:"varint,3,opt,name=last_group,json=lastGroup,proto3" json:"last_group,omitempty"`
	ModuleId int64 `protobuf:"varint,4,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	SortType int64 `protobuf:"varint,5,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
}

func (x *DynamicParams) Reset() {
	*x = DynamicParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicParams) ProtoMessage() {}

func (x *DynamicParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicParams.ProtoReflect.Descriptor instead.
func (*DynamicParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{10}
}

func (x *DynamicParams) GetFeedOffset() *any1.Any {
	if x != nil {
		return x.FeedOffset
	}
	return nil
}

func (x *DynamicParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DynamicParams) GetLastGroup() int64 {
	if x != nil {
		return x.LastGroup
	}
	return 0
}

func (x *DynamicParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DynamicParams) GetSortType() int64 {
	if x != nil {
		return x.SortType
	}
	return 0
}

type DynamicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *DynamicParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	IsColdStart bool `protobuf:"varint,6,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,7,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *DynamicReq) Reset() {
	*x = DynamicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicReq) ProtoMessage() {}

func (x *DynamicReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicReq.ProtoReflect.Descriptor instead.
func (*DynamicReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{11}
}

func (x *DynamicReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *DynamicReq) GetParams() *DynamicParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *DynamicReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *DynamicReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *DynamicReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *DynamicReq) GetIsColdStart() bool {
	if x != nil {
		return x.IsColdStart
	}
	return false
}

func (x *DynamicReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type DynamicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *DynamicResp) Reset() {
	*x = DynamicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicResp) ProtoMessage() {}

func (x *DynamicResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicResp.ProtoReflect.Descriptor instead.
func (*DynamicResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{12}
}

func (x *DynamicResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type EditorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	ModuleId int64 `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *EditorParams) Reset() {
	*x = EditorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorParams) ProtoMessage() {}

func (x *EditorParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorParams.ProtoReflect.Descriptor instead.
func (*EditorParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{13}
}

func (x *EditorParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EditorParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type EditorRecommendCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopIcon string `protobuf:"bytes,1,opt,name=top_icon,json=topIcon,proto3" json:"top_icon,omitempty"`
	TopContent string `protobuf:"bytes,2,opt,name=top_content,json=topContent,proto3" json:"top_content,omitempty"`
	BottomIcon string `protobuf:"bytes,3,opt,name=bottom_icon,json=bottomIcon,proto3" json:"bottom_icon,omitempty"`
	BottomContent string `protobuf:"bytes,4,opt,name=bottom_content,json=bottomContent,proto3" json:"bottom_content,omitempty"`
	CoverImageUri string `protobuf:"bytes,5,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Position1 string `protobuf:"bytes,8,opt,name=position1,proto3" json:"position1,omitempty"`
	Position2 string `protobuf:"bytes,9,opt,name=position2,proto3" json:"position2,omitempty"`
	Position3 string `protobuf:"bytes,10,opt,name=position3,proto3" json:"position3,omitempty"`
	Position4 string `protobuf:"bytes,11,opt,name=position4,proto3" json:"position4,omitempty"`
	Position5 string `protobuf:"bytes,12,opt,name=position5,proto3" json:"position5,omitempty"`
	Share *Share `protobuf:"bytes,13,opt,name=share,proto3" json:"share,omitempty"`
	Badge *Badge `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,15,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	Setting *Setting `protobuf:"bytes,16,opt,name=setting,proto3" json:"setting,omitempty"`
	MiddleIcon string `protobuf:"bytes,17,opt,name=middle_icon,json=middleIcon,proto3" json:"middle_icon,omitempty"`
	ResourceType string `protobuf:"bytes,18,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *EditorRecommendCard) Reset() {
	*x = EditorRecommendCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorRecommendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorRecommendCard) ProtoMessage() {}

func (x *EditorRecommendCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorRecommendCard.ProtoReflect.Descriptor instead.
func (*EditorRecommendCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{14}
}

func (x *EditorRecommendCard) GetTopIcon() string {
	if x != nil {
		return x.TopIcon
	}
	return ""
}

func (x *EditorRecommendCard) GetTopContent() string {
	if x != nil {
		return x.TopContent
	}
	return ""
}

func (x *EditorRecommendCard) GetBottomIcon() string {
	if x != nil {
		return x.BottomIcon
	}
	return ""
}

func (x *EditorRecommendCard) GetBottomContent() string {
	if x != nil {
		return x.BottomContent
	}
	return ""
}

func (x *EditorRecommendCard) GetCoverImageUri() string {
	if x != nil {
		return x.CoverImageUri
	}
	return ""
}

func (x *EditorRecommendCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditorRecommendCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *EditorRecommendCard) GetPosition1() string {
	if x != nil {
		return x.Position1
	}
	return ""
}

func (x *EditorRecommendCard) GetPosition2() string {
	if x != nil {
		return x.Position2
	}
	return ""
}

func (x *EditorRecommendCard) GetPosition3() string {
	if x != nil {
		return x.Position3
	}
	return ""
}

func (x *EditorRecommendCard) GetPosition4() string {
	if x != nil {
		return x.Position4
	}
	return ""
}

func (x *EditorRecommendCard) GetPosition5() string {
	if x != nil {
		return x.Position5
	}
	return ""
}

func (x *EditorRecommendCard) GetShare() *Share {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *EditorRecommendCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *EditorRecommendCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *EditorRecommendCard) GetSetting() *Setting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *EditorRecommendCard) GetMiddleIcon() string {
	if x != nil {
		return x.MiddleIcon
	}
	return ""
}

func (x *EditorRecommendCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type EditorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *EditorParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *EditorReq) Reset() {
	*x = EditorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorReq) ProtoMessage() {}

func (x *EditorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorReq.ProtoReflect.Descriptor instead.
func (*EditorReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{15}
}

func (x *EditorReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *EditorReq) GetParams() *EditorParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *EditorReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type EditorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *EditorResp) Reset() {
	*x = EditorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorResp) ProtoMessage() {}

func (x *EditorResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorResp.ProtoReflect.Descriptor instead.
func (*EditorResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{16}
}

func (x *EditorResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type FollowOgvParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=bilibili.app.nativeact.v1.ActionType" json:"action,omitempty"`
	SeasonId int32 `protobuf:"varint,2,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *FollowOgvParams) Reset() {
	*x = FollowOgvParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowOgvParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowOgvParams) ProtoMessage() {}

func (x *FollowOgvParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowOgvParams.ProtoReflect.Descriptor instead.
func (*FollowOgvParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{17}
}

func (x *FollowOgvParams) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_Default
}

func (x *FollowOgvParams) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type FollowOgvReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *FollowOgvParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *FollowOgvReq) Reset() {
	*x = FollowOgvReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowOgvReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowOgvReq) ProtoMessage() {}

func (x *FollowOgvReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowOgvReq.ProtoReflect.Descriptor instead.
func (*FollowOgvReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{18}
}

func (x *FollowOgvReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *FollowOgvReq) GetParams() *FollowOgvParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type FollowOgvRly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowParams string `protobuf:"bytes,1,opt,name=follow_params,json=followParams,proto3" json:"follow_params,omitempty"`
}

func (x *FollowOgvRly) Reset() {
	*x = FollowOgvRly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowOgvRly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowOgvRly) ProtoMessage() {}

func (x *FollowOgvRly) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowOgvRly.ProtoReflect.Descriptor instead.
func (*FollowOgvRly) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{19}
}

func (x *FollowOgvRly) GetFollowParams() string {
	if x != nil {
		return x.FollowParams
	}
	return ""
}

type GameCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GameCard) Reset() {
	*x = GameCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCard) ProtoMessage() {}

func (x *GameCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCard.ProtoReflect.Descriptor instead.
func (*GameCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{20}
}

func (x *GameCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GameCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GameCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *GameCard) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *GameCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type HeaderCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserImage string `protobuf:"bytes,1,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	SponsorContent string `protobuf:"bytes,3,opt,name=sponsor_content,json=sponsorContent,proto3" json:"sponsor_content,omitempty"`
	HighLightImage string `protobuf:"bytes,4,opt,name=high_light_image,json=highLightImage,proto3" json:"high_light_image,omitempty"`
	LowLightImage string `protobuf:"bytes,5,opt,name=low_light_image,json=lowLightImage,proto3" json:"low_light_image,omitempty"`
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	ViewNum string `protobuf:"bytes,7,opt,name=view_num,json=viewNum,proto3" json:"view_num,omitempty"`
	DiscussNum string `protobuf:"bytes,8,opt,name=discuss_num,json=discussNum,proto3" json:"discuss_num,omitempty"`
	IsSubscribed bool `protobuf:"varint,9,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	Mid int64 `protobuf:"varint,10,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *HeaderCard) Reset() {
	*x = HeaderCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderCard) ProtoMessage() {}

func (x *HeaderCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderCard.ProtoReflect.Descriptor instead.
func (*HeaderCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{21}
}

func (x *HeaderCard) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *HeaderCard) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *HeaderCard) GetSponsorContent() string {
	if x != nil {
		return x.SponsorContent
	}
	return ""
}

func (x *HeaderCard) GetHighLightImage() string {
	if x != nil {
		return x.HighLightImage
	}
	return ""
}

func (x *HeaderCard) GetLowLightImage() string {
	if x != nil {
		return x.LowLightImage
	}
	return ""
}

func (x *HeaderCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *HeaderCard) GetViewNum() string {
	if x != nil {
		return x.ViewNum
	}
	return ""
}

func (x *HeaderCard) GetDiscussNum() string {
	if x != nil {
		return x.DiscussNum
	}
	return ""
}

func (x *HeaderCard) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *HeaderCard) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type IconCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*IconItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *IconCard) Reset() {
	*x = IconCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconCard) ProtoMessage() {}

func (x *IconCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconCard.ProtoReflect.Descriptor instead.
func (*IconCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{22}
}

func (x *IconCard) GetItems() []*IconItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type IconItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *IconItem) Reset() {
	*x = IconItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconItem) ProtoMessage() {}

func (x *IconItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconItem.ProtoReflect.Descriptor instead.
func (*IconItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{23}
}

func (x *IconItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IconItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *IconItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type ImageTitleCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageTitleCard) Reset() {
	*x = ImageTitleCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageTitleCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageTitleCard) ProtoMessage() {}

func (x *ImageTitleCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageTitleCard.ProtoReflect.Descriptor instead.
func (*ImageTitleCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{24}
}

func (x *ImageTitleCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type IndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	ActivityFrom string `protobuf:"bytes,2,opt,name=activity_from,json=activityFrom,proto3" json:"activity_from,omitempty"`
	DynamicId int64 `protobuf:"varint,3,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	ShareOrigin string `protobuf:"bytes,4,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	TabId int64 `protobuf:"varint,5,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	TabModuleId int64 `protobuf:"varint,6,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty"`
	HttpsUrlReq int32 `protobuf:"varint,7,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	FromSpmid string `protobuf:"bytes,8,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	CurrentTab string `protobuf:"bytes,9,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,10,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,11,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	IsColdStart bool `protobuf:"varint,12,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,13,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
	TabFrom string `protobuf:"bytes,14,opt,name=tab_from,json=tabFrom,proto3" json:"tab_from,omitempty"`
}

func (x *IndexReq) Reset() {
	*x = IndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReq) ProtoMessage() {}

func (x *IndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReq.ProtoReflect.Descriptor instead.
func (*IndexReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{25}
}

func (x *IndexReq) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *IndexReq) GetActivityFrom() string {
	if x != nil {
		return x.ActivityFrom
	}
	return ""
}

func (x *IndexReq) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *IndexReq) GetShareOrigin() string {
	if x != nil {
		return x.ShareOrigin
	}
	return ""
}

func (x *IndexReq) GetTabId() int64 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *IndexReq) GetTabModuleId() int64 {
	if x != nil {
		return x.TabModuleId
	}
	return 0
}

func (x *IndexReq) GetHttpsUrlReq() int32 {
	if x != nil {
		return x.HttpsUrlReq
	}
	return 0
}

func (x *IndexReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *IndexReq) GetCurrentTab() string {
	if x != nil {
		return x.CurrentTab
	}
	return ""
}

func (x *IndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *IndexReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *IndexReq) GetIsColdStart() bool {
	if x != nil {
		return x.IsColdStart
	}
	return false
}

func (x *IndexReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

func (x *IndexReq) GetTabFrom() string {
	if x != nil {
		return x.TabFrom
	}
	return ""
}

type InlineIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	HttpsUrlReq int32 `protobuf:"varint,2,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,5,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	IsColdStart bool `protobuf:"varint,6,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
}

func (x *InlineIndexReq) Reset() {
	*x = InlineIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InlineIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InlineIndexReq) ProtoMessage() {}

func (x *InlineIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InlineIndexReq.ProtoReflect.Descriptor instead.
func (*InlineIndexReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{26}
}

func (x *InlineIndexReq) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *InlineIndexReq) GetHttpsUrlReq() int32 {
	if x != nil {
		return x.HttpsUrlReq
	}
	return 0
}

func (x *InlineIndexReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *InlineIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *InlineIndexReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *InlineIndexReq) GetIsColdStart() bool {
	if x != nil {
		return x.IsColdStart
	}
	return false
}

type LayerDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Dynamic *v2.DynamicItem `protobuf:"bytes,2,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
}

func (x *LayerDynamic) Reset() {
	*x = LayerDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerDynamic) ProtoMessage() {}

func (x *LayerDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerDynamic.ProtoReflect.Descriptor instead.
func (*LayerDynamic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{27}
}

func (x *LayerDynamic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LayerDynamic) GetDynamic() *v2.DynamicItem {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

type LiveCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasLive int32 `protobuf:"varint,1,opt,name=has_live,json=hasLive,proto3" json:"has_live,omitempty"`
	Content *LiveItem `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *LiveCard) Reset() {
	*x = LiveCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveCard) ProtoMessage() {}

func (x *LiveCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveCard.ProtoReflect.Descriptor instead.
func (*LiveCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{28}
}

func (x *LiveCard) GetHasLive() int32 {
	if x != nil {
		return x.HasLive
	}
	return 0
}

func (x *LiveCard) GetContent() *LiveItem {
	if x != nil {
		return x.Content
	}
	return nil
}

type LiveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	LiveStatus int64 `protobuf:"varint,3,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	RoomType int64 `protobuf:"varint,4,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`
	PlayType int64 `protobuf:"varint,5,opt,name=play_type,json=playType,proto3" json:"play_type,omitempty"`
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Online int64 `protobuf:"varint,8,opt,name=online,proto3" json:"online,omitempty"`
	AreaId int64 `protobuf:"varint,9,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	AreaName string `protobuf:"bytes,10,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	ParentAreaId int64 `protobuf:"varint,11,opt,name=parent_area_id,json=parentAreaId,proto3" json:"parent_area_id,omitempty"`
	ParentAreaName string `protobuf:"bytes,12,opt,name=parent_area_name,json=parentAreaName,proto3" json:"parent_area_name,omitempty"`
	LiveScreenType int64 `protobuf:"varint,13,opt,name=live_screen_type,json=liveScreenType,proto3" json:"live_screen_type,omitempty"`
	LastEndTime int64 `protobuf:"varint,14,opt,name=last_end_time,json=lastEndTime,proto3" json:"last_end_time,omitempty"`
	Link string `protobuf:"bytes,15,opt,name=link,proto3" json:"link,omitempty"`
	LiveId int64 `protobuf:"varint,16,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`
	WatchedShow *LiveWatchedShow `protobuf:"bytes,17,opt,name=watched_show,json=watchedShow,proto3" json:"watched_show,omitempty"`
}

func (x *LiveItem) Reset() {
	*x = LiveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveItem) ProtoMessage() {}

func (x *LiveItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveItem.ProtoReflect.Descriptor instead.
func (*LiveItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{29}
}

func (x *LiveItem) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *LiveItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LiveItem) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *LiveItem) GetRoomType() int64 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

func (x *LiveItem) GetPlayType() int64 {
	if x != nil {
		return x.PlayType
	}
	return 0
}

func (x *LiveItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LiveItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *LiveItem) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *LiveItem) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *LiveItem) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *LiveItem) GetParentAreaId() int64 {
	if x != nil {
		return x.ParentAreaId
	}
	return 0
}

func (x *LiveItem) GetParentAreaName() string {
	if x != nil {
		return x.ParentAreaName
	}
	return ""
}

func (x *LiveItem) GetLiveScreenType() int64 {
	if x != nil {
		return x.LiveScreenType
	}
	return 0
}

func (x *LiveItem) GetLastEndTime() int64 {
	if x != nil {
		return x.LastEndTime
	}
	return 0
}

func (x *LiveItem) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *LiveItem) GetLiveId() int64 {
	if x != nil {
		return x.LiveId
	}
	return 0
}

func (x *LiveItem) GetWatchedShow() *LiveWatchedShow {
	if x != nil {
		return x.WatchedShow
	}
	return nil
}

type LiveWatchedShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch bool `protobuf:"varint,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	TextSmall string `protobuf:"bytes,3,opt,name=text_small,json=textSmall,proto3" json:"text_small,omitempty"`
	TextLarge string `protobuf:"bytes,4,opt,name=text_large,json=textLarge,proto3" json:"text_large,omitempty"`
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	IconLocation string `protobuf:"bytes,6,opt,name=icon_location,json=iconLocation,proto3" json:"icon_location,omitempty"`
}

func (x *LiveWatchedShow) Reset() {
	*x = LiveWatchedShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveWatchedShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveWatchedShow) ProtoMessage() {}

func (x *LiveWatchedShow) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveWatchedShow.ProtoReflect.Descriptor instead.
func (*LiveWatchedShow) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{30}
}

func (x *LiveWatchedShow) GetSwitch() bool {
	if x != nil {
		return x.Switch
	}
	return false
}

func (x *LiveWatchedShow) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *LiveWatchedShow) GetTextSmall() string {
	if x != nil {
		return x.TextSmall
	}
	return ""
}

func (x *LiveWatchedShow) GetTextLarge() string {
	if x != nil {
		return x.TextLarge
	}
	return ""
}

func (x *LiveWatchedShow) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *LiveWatchedShow) GetIconLocation() string {
	if x != nil {
		return x.IconLocation
	}
	return ""
}

type MessageBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertMsg string `protobuf:"bytes,1,opt,name=alert_msg,json=alertMsg,proto3" json:"alert_msg,omitempty"`
	ConfirmButtonText string `protobuf:"bytes,2,opt,name=confirm_button_text,json=confirmButtonText,proto3" json:"confirm_button_text,omitempty"`
	CancelButtonText string `protobuf:"bytes,3,opt,name=cancel_button_text,json=cancelButtonText,proto3" json:"cancel_button_text,omitempty"`
	ConfirmMsg string `protobuf:"bytes,4,opt,name=confirm_msg,json=confirmMsg,proto3" json:"confirm_msg,omitempty"`
	CancelMsg string `protobuf:"bytes,5,opt,name=cancel_msg,json=cancelMsg,proto3" json:"cancel_msg,omitempty"`
	Type MessageBoxType `protobuf:"varint,6,opt,name=type,proto3,enum=bilibili.app.nativeact.v1.MessageBoxType" json:"type,omitempty"`
}

func (x *MessageBox) Reset() {
	*x = MessageBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBox) ProtoMessage() {}

func (x *MessageBox) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBox.ProtoReflect.Descriptor instead.
func (*MessageBox) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{31}
}

func (x *MessageBox) GetAlertMsg() string {
	if x != nil {
		return x.AlertMsg
	}
	return ""
}

func (x *MessageBox) GetConfirmButtonText() string {
	if x != nil {
		return x.ConfirmButtonText
	}
	return ""
}

func (x *MessageBox) GetCancelButtonText() string {
	if x != nil {
		return x.CancelButtonText
	}
	return ""
}

func (x *MessageBox) GetConfirmMsg() string {
	if x != nil {
		return x.ConfirmMsg
	}
	return ""
}

func (x *MessageBox) GetCancelMsg() string {
	if x != nil {
		return x.CancelMsg
	}
	return ""
}

func (x *MessageBox) GetType() MessageBoxType {
	if x != nil {
		return x.Type
	}
	return MessageBoxType_Dialog
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleType string `protobuf:"bytes,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	ModuleId int64 `protobuf:"varint,2,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	ModuleColor *Color `protobuf:"bytes,3,opt,name=module_color,json=moduleColor,proto3" json:"module_color,omitempty"`
	ModuleSetting *Setting `protobuf:"bytes,4,opt,name=module_setting,json=moduleSetting,proto3" json:"module_setting,omitempty"`
	ModuleItems []*ModuleItem `protobuf:"bytes,5,rep,name=module_items,json=moduleItems,proto3" json:"module_items,omitempty"`
	SubpageParams string `protobuf:"bytes,6,opt,name=subpage_params,json=subpageParams,proto3" json:"subpage_params,omitempty"`
	ModuleUkey string `protobuf:"bytes,7,opt,name=module_ukey,json=moduleUkey,proto3" json:"module_ukey,omitempty"`
	HasMore bool `protobuf:"varint,8,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	IsFeed bool `protobuf:"varint,9,opt,name=is_feed,json=isFeed,proto3" json:"is_feed,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{32}
}

func (x *Module) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *Module) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *Module) GetModuleColor() *Color {
	if x != nil {
		return x.ModuleColor
	}
	return nil
}

func (x *Module) GetModuleSetting() *Setting {
	if x != nil {
		return x.ModuleSetting
	}
	return nil
}

func (x *Module) GetModuleItems() []*ModuleItem {
	if x != nil {
		return x.ModuleItems
	}
	return nil
}

func (x *Module) GetSubpageParams() string {
	if x != nil {
		return x.SubpageParams
	}
	return ""
}

func (x *Module) GetModuleUkey() string {
	if x != nil {
		return x.ModuleUkey
	}
	return ""
}

func (x *Module) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *Module) GetIsFeed() bool {
	if x != nil {
		return x.IsFeed
	}
	return false
}

type ModuleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardType ModuleItem_CardDetailCase `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3,enum=bilibili.app.nativeact.v1.ModuleItem_CardDetailCase" json:"card_type,omitempty"`
	CardId string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	// Types that are assignable to CardDetail:
	//
	//	*ModuleItem_EditorRecommendCard
	//	*ModuleItem_ParticipationCard
	//	*ModuleItem_HeaderCard
	//	*ModuleItem_DynamicCard
	//	*ModuleItem_TextCard
	//	*ModuleItem_TextTitleCard
	//	*ModuleItem_ImageTitleCard
	//	*ModuleItem_DynamicMoreCard
	//	*ModuleItem_DynamicActMoreCard
	//	*ModuleItem_LiveCard
	//	*ModuleItem_CarouselImgCard
	//	*ModuleItem_CarouselWordCard
	//	*ModuleItem_ResourceCard
	//	*ModuleItem_ResourceMoreCard
	//	*ModuleItem_GameCard
	//	*ModuleItem_VideoCard
	//	*ModuleItem_VideoMoreCard
	//	*ModuleItem_RecommendCard
	//	*ModuleItem_RecommendVerticalCard
	//	*ModuleItem_RelativeactCard
	//	*ModuleItem_RelativeactCapsuleCard
	//	*ModuleItem_StatementCard
	//	*ModuleItem_IconCard
	//	*ModuleItem_VoteCard
	//	*ModuleItem_ReserveCard
	//	*ModuleItem_TimelineHeadCard
	//	*ModuleItem_TimelineEventTextCard
	//	*ModuleItem_TimelineEventImageCard
	//	*ModuleItem_TimelineEventImagetextCard
	//	*ModuleItem_TimelineEventResourceCard
	//	*ModuleItem_TimelineMoreCard
	//	*ModuleItem_TimelineUnfoldCard
	//	*ModuleItem_OgvOneCard
	//	*ModuleItem_OgvThreeCard
	//	*ModuleItem_OgvMoreCard
	//	*ModuleItem_NavigationCard
	//	*ModuleItem_ReplyCard
	//	*ModuleItem_TabCard
	//	*ModuleItem_NewactHeader
	//	*ModuleItem_NewactAward
	//	*ModuleItem_NewactStatement
	//	*ModuleItem_ProgressCard
	//	*ModuleItem_SelectCard
	CardDetail isModuleItem_CardDetail `protobuf_oneof:"card_detail"`
}

func (x *ModuleItem) Reset() {
	*x = ModuleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleItem) ProtoMessage() {}

func (x *ModuleItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleItem.ProtoReflect.Descriptor instead.
func (*ModuleItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{33}
}

func (x *ModuleItem) GetCardType() ModuleItem_CardDetailCase {
	if x != nil {
		return x.CardType
	}
	return ModuleItem_CARDDETAIL_NOT_SET
}

func (x *ModuleItem) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (m *ModuleItem) GetCardDetail() isModuleItem_CardDetail {
	if m != nil {
		return m.CardDetail
	}
	return nil
}

func (x *ModuleItem) GetEditorRecommendCard() *EditorRecommendCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_EditorRecommendCard); ok {
		return x.EditorRecommendCard
	}
	return nil
}

func (x *ModuleItem) GetParticipationCard() *ParticipationCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ParticipationCard); ok {
		return x.ParticipationCard
	}
	return nil
}

func (x *ModuleItem) GetHeaderCard() *HeaderCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_HeaderCard); ok {
		return x.HeaderCard
	}
	return nil
}

func (x *ModuleItem) GetDynamicCard() *DynamicCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_DynamicCard); ok {
		return x.DynamicCard
	}
	return nil
}

func (x *ModuleItem) GetTextCard() *TextCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TextCard); ok {
		return x.TextCard
	}
	return nil
}

func (x *ModuleItem) GetTextTitleCard() *TextTitleCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TextTitleCard); ok {
		return x.TextTitleCard
	}
	return nil
}

func (x *ModuleItem) GetImageTitleCard() *ImageTitleCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ImageTitleCard); ok {
		return x.ImageTitleCard
	}
	return nil
}

func (x *ModuleItem) GetDynamicMoreCard() *DynamicMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_DynamicMoreCard); ok {
		return x.DynamicMoreCard
	}
	return nil
}

func (x *ModuleItem) GetDynamicActMoreCard() *DynamicActMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_DynamicActMoreCard); ok {
		return x.DynamicActMoreCard
	}
	return nil
}

func (x *ModuleItem) GetLiveCard() *LiveCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_LiveCard); ok {
		return x.LiveCard
	}
	return nil
}

func (x *ModuleItem) GetCarouselImgCard() *CarouselImgCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_CarouselImgCard); ok {
		return x.CarouselImgCard
	}
	return nil
}

func (x *ModuleItem) GetCarouselWordCard() *CarouselWordCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_CarouselWordCard); ok {
		return x.CarouselWordCard
	}
	return nil
}

func (x *ModuleItem) GetResourceCard() *ResourceCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ResourceCard); ok {
		return x.ResourceCard
	}
	return nil
}

func (x *ModuleItem) GetResourceMoreCard() *ResourceMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ResourceMoreCard); ok {
		return x.ResourceMoreCard
	}
	return nil
}

func (x *ModuleItem) GetGameCard() *GameCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_GameCard); ok {
		return x.GameCard
	}
	return nil
}

func (x *ModuleItem) GetVideoCard() *VideoCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_VideoCard); ok {
		return x.VideoCard
	}
	return nil
}

func (x *ModuleItem) GetVideoMoreCard() *VideoMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_VideoMoreCard); ok {
		return x.VideoMoreCard
	}
	return nil
}

func (x *ModuleItem) GetRecommendCard() *RcmdCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_RecommendCard); ok {
		return x.RecommendCard
	}
	return nil
}

func (x *ModuleItem) GetRecommendVerticalCard() *RcmdVerticalCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_RecommendVerticalCard); ok {
		return x.RecommendVerticalCard
	}
	return nil
}

func (x *ModuleItem) GetRelativeactCard() *RelativeactCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_RelativeactCard); ok {
		return x.RelativeactCard
	}
	return nil
}

func (x *ModuleItem) GetRelativeactCapsuleCard() *RelativeactCapsuleCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_RelativeactCapsuleCard); ok {
		return x.RelativeactCapsuleCard
	}
	return nil
}

func (x *ModuleItem) GetStatementCard() *StatementCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_StatementCard); ok {
		return x.StatementCard
	}
	return nil
}

func (x *ModuleItem) GetIconCard() *IconCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_IconCard); ok {
		return x.IconCard
	}
	return nil
}

func (x *ModuleItem) GetVoteCard() *VoteCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_VoteCard); ok {
		return x.VoteCard
	}
	return nil
}

func (x *ModuleItem) GetReserveCard() *ReserveCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ReserveCard); ok {
		return x.ReserveCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineHeadCard() *TimelineHeadCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineHeadCard); ok {
		return x.TimelineHeadCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineEventTextCard() *TimelineEventTextCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineEventTextCard); ok {
		return x.TimelineEventTextCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineEventImageCard() *TimelineEventImageCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineEventImageCard); ok {
		return x.TimelineEventImageCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineEventImagetextCard() *TimelineEventImagetextCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineEventImagetextCard); ok {
		return x.TimelineEventImagetextCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineEventResourceCard() *TimelineEventResourceCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineEventResourceCard); ok {
		return x.TimelineEventResourceCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineMoreCard() *TimelineMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineMoreCard); ok {
		return x.TimelineMoreCard
	}
	return nil
}

func (x *ModuleItem) GetTimelineUnfoldCard() *TimelineUnfoldCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TimelineUnfoldCard); ok {
		return x.TimelineUnfoldCard
	}
	return nil
}

func (x *ModuleItem) GetOgvOneCard() *OgvOneCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_OgvOneCard); ok {
		return x.OgvOneCard
	}
	return nil
}

func (x *ModuleItem) GetOgvThreeCard() *OgvThreeCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_OgvThreeCard); ok {
		return x.OgvThreeCard
	}
	return nil
}

func (x *ModuleItem) GetOgvMoreCard() *OgvMoreCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_OgvMoreCard); ok {
		return x.OgvMoreCard
	}
	return nil
}

func (x *ModuleItem) GetNavigationCard() *NavigationCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_NavigationCard); ok {
		return x.NavigationCard
	}
	return nil
}

func (x *ModuleItem) GetReplyCard() *ReplyCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ReplyCard); ok {
		return x.ReplyCard
	}
	return nil
}

func (x *ModuleItem) GetTabCard() *TabCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_TabCard); ok {
		return x.TabCard
	}
	return nil
}

func (x *ModuleItem) GetNewactHeader() *NewactHeader {
	if x, ok := x.GetCardDetail().(*ModuleItem_NewactHeader); ok {
		return x.NewactHeader
	}
	return nil
}

func (x *ModuleItem) GetNewactAward() *NewactAward {
	if x, ok := x.GetCardDetail().(*ModuleItem_NewactAward); ok {
		return x.NewactAward
	}
	return nil
}

func (x *ModuleItem) GetNewactStatement() *NewactStatement {
	if x, ok := x.GetCardDetail().(*ModuleItem_NewactStatement); ok {
		return x.NewactStatement
	}
	return nil
}

func (x *ModuleItem) GetProgressCard() *ProgressCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_ProgressCard); ok {
		return x.ProgressCard
	}
	return nil
}

func (x *ModuleItem) GetSelectCard() *SelectCard {
	if x, ok := x.GetCardDetail().(*ModuleItem_SelectCard); ok {
		return x.SelectCard
	}
	return nil
}

type isModuleItem_CardDetail interface {
	isModuleItem_CardDetail()
}

type ModuleItem_EditorRecommendCard struct {
	EditorRecommendCard *EditorRecommendCard `protobuf:"bytes,10,opt,name=editor_recommend_card,json=editorRecommendCard,proto3,oneof"`
}

type ModuleItem_ParticipationCard struct {
	ParticipationCard *ParticipationCard `protobuf:"bytes,11,opt,name=participation_card,json=participationCard,proto3,oneof"`
}

type ModuleItem_HeaderCard struct {
	HeaderCard *HeaderCard `protobuf:"bytes,12,opt,name=header_card,json=headerCard,proto3,oneof"`
}

type ModuleItem_DynamicCard struct {
	DynamicCard *DynamicCard `protobuf:"bytes,13,opt,name=dynamic_card,json=dynamicCard,proto3,oneof"`
}

type ModuleItem_TextCard struct {
	TextCard *TextCard `protobuf:"bytes,14,opt,name=text_card,json=textCard,proto3,oneof"`
}

type ModuleItem_TextTitleCard struct {
	TextTitleCard *TextTitleCard `protobuf:"bytes,15,opt,name=text_title_card,json=textTitleCard,proto3,oneof"`
}

type ModuleItem_ImageTitleCard struct {
	ImageTitleCard *ImageTitleCard `protobuf:"bytes,16,opt,name=image_title_card,json=imageTitleCard,proto3,oneof"`
}

type ModuleItem_DynamicMoreCard struct {
	DynamicMoreCard *DynamicMoreCard `protobuf:"bytes,17,opt,name=dynamic_more_card,json=dynamicMoreCard,proto3,oneof"`
}

type ModuleItem_DynamicActMoreCard struct {
	DynamicActMoreCard *DynamicActMoreCard `protobuf:"bytes,18,opt,name=dynamic_act_more_card,json=dynamicActMoreCard,proto3,oneof"`
}

type ModuleItem_LiveCard struct {
	LiveCard *LiveCard `protobuf:"bytes,19,opt,name=live_card,json=liveCard,proto3,oneof"`
}

type ModuleItem_CarouselImgCard struct {
	CarouselImgCard *CarouselImgCard `protobuf:"bytes,20,opt,name=carousel_img_card,json=carouselImgCard,proto3,oneof"`
}

type ModuleItem_CarouselWordCard struct {
	CarouselWordCard *CarouselWordCard `protobuf:"bytes,21,opt,name=carousel_word_card,json=carouselWordCard,proto3,oneof"`
}

type ModuleItem_ResourceCard struct {
	ResourceCard *ResourceCard `protobuf:"bytes,22,opt,name=resource_card,json=resourceCard,proto3,oneof"`
}

type ModuleItem_ResourceMoreCard struct {
	ResourceMoreCard *ResourceMoreCard `protobuf:"bytes,23,opt,name=resource_more_card,json=resourceMoreCard,proto3,oneof"`
}

type ModuleItem_GameCard struct {
	GameCard *GameCard `protobuf:"bytes,24,opt,name=game_card,json=gameCard,proto3,oneof"`
}

type ModuleItem_VideoCard struct {
	VideoCard *VideoCard `protobuf:"bytes,25,opt,name=video_card,json=videoCard,proto3,oneof"`
}

type ModuleItem_VideoMoreCard struct {
	VideoMoreCard *VideoMoreCard `protobuf:"bytes,26,opt,name=video_more_card,json=videoMoreCard,proto3,oneof"`
}

type ModuleItem_RecommendCard struct {
	RecommendCard *RcmdCard `protobuf:"bytes,27,opt,name=recommend_card,json=recommendCard,proto3,oneof"`
}

type ModuleItem_RecommendVerticalCard struct {
	RecommendVerticalCard *RcmdVerticalCard `protobuf:"bytes,28,opt,name=recommend_vertical_card,json=recommendVerticalCard,proto3,oneof"`
}

type ModuleItem_RelativeactCard struct {
	RelativeactCard *RelativeactCard `protobuf:"bytes,29,opt,name=relativeact_card,json=relativeactCard,proto3,oneof"`
}

type ModuleItem_RelativeactCapsuleCard struct {
	RelativeactCapsuleCard *RelativeactCapsuleCard `protobuf:"bytes,30,opt,name=relativeact_capsule_card,json=relativeactCapsuleCard,proto3,oneof"`
}

type ModuleItem_StatementCard struct {
	StatementCard *StatementCard `protobuf:"bytes,31,opt,name=statement_card,json=statementCard,proto3,oneof"`
}

type ModuleItem_IconCard struct {
	IconCard *IconCard `protobuf:"bytes,32,opt,name=icon_card,json=iconCard,proto3,oneof"`
}

type ModuleItem_VoteCard struct {
	VoteCard *VoteCard `protobuf:"bytes,33,opt,name=vote_card,json=voteCard,proto3,oneof"`
}

type ModuleItem_ReserveCard struct {
	ReserveCard *ReserveCard `protobuf:"bytes,34,opt,name=reserve_card,json=reserveCard,proto3,oneof"`
}

type ModuleItem_TimelineHeadCard struct {
	TimelineHeadCard *TimelineHeadCard `protobuf:"bytes,35,opt,name=timeline_head_card,json=timelineHeadCard,proto3,oneof"`
}

type ModuleItem_TimelineEventTextCard struct {
	TimelineEventTextCard *TimelineEventTextCard `protobuf:"bytes,36,opt,name=timeline_event_text_card,json=timelineEventTextCard,proto3,oneof"`
}

type ModuleItem_TimelineEventImageCard struct {
	TimelineEventImageCard *TimelineEventImageCard `protobuf:"bytes,37,opt,name=timeline_event_image_card,json=timelineEventImageCard,proto3,oneof"`
}

type ModuleItem_TimelineEventImagetextCard struct {
	TimelineEventImagetextCard *TimelineEventImagetextCard `protobuf:"bytes,38,opt,name=timeline_event_imagetext_card,json=timelineEventImagetextCard,proto3,oneof"`
}

type ModuleItem_TimelineEventResourceCard struct {
	TimelineEventResourceCard *TimelineEventResourceCard `protobuf:"bytes,39,opt,name=timeline_event_resource_card,json=timelineEventResourceCard,proto3,oneof"`
}

type ModuleItem_TimelineMoreCard struct {
	TimelineMoreCard *TimelineMoreCard `protobuf:"bytes,40,opt,name=timeline_more_card,json=timelineMoreCard,proto3,oneof"`
}

type ModuleItem_TimelineUnfoldCard struct {
	TimelineUnfoldCard *TimelineUnfoldCard `protobuf:"bytes,41,opt,name=timeline_unfold_card,json=timelineUnfoldCard,proto3,oneof"`
}

type ModuleItem_OgvOneCard struct {
	OgvOneCard *OgvOneCard `protobuf:"bytes,42,opt,name=ogv_one_card,json=ogvOneCard,proto3,oneof"`
}

type ModuleItem_OgvThreeCard struct {
	OgvThreeCard *OgvThreeCard `protobuf:"bytes,43,opt,name=ogv_three_card,json=ogvThreeCard,proto3,oneof"`
}

type ModuleItem_OgvMoreCard struct {
	OgvMoreCard *OgvMoreCard `protobuf:"bytes,44,opt,name=ogv_more_card,json=ogvMoreCard,proto3,oneof"`
}

type ModuleItem_NavigationCard struct {
	NavigationCard *NavigationCard `protobuf:"bytes,45,opt,name=navigation_card,json=navigationCard,proto3,oneof"`
}

type ModuleItem_ReplyCard struct {
	ReplyCard *ReplyCard `protobuf:"bytes,46,opt,name=reply_card,json=replyCard,proto3,oneof"`
}

type ModuleItem_TabCard struct {
	TabCard *TabCard `protobuf:"bytes,47,opt,name=tab_card,json=tabCard,proto3,oneof"`
}

type ModuleItem_NewactHeader struct {
	NewactHeader *NewactHeader `protobuf:"bytes,48,opt,name=newact_header,json=newactHeader,proto3,oneof"`
}

type ModuleItem_NewactAward struct {
	NewactAward *NewactAward `protobuf:"bytes,49,opt,name=newact_award,json=newactAward,proto3,oneof"`
}

type ModuleItem_NewactStatement struct {
	NewactStatement *NewactStatement `protobuf:"bytes,50,opt,name=newact_statement,json=newactStatement,proto3,oneof"`
}

type ModuleItem_ProgressCard struct {
	ProgressCard *ProgressCard `protobuf:"bytes,51,opt,name=progress_card,json=progressCard,proto3,oneof"`
}

type ModuleItem_SelectCard struct {
	SelectCard *SelectCard `protobuf:"bytes,52,opt,name=select_card,json=selectCard,proto3,oneof"`
}

func (*ModuleItem_EditorRecommendCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ParticipationCard) isModuleItem_CardDetail() {}

func (*ModuleItem_HeaderCard) isModuleItem_CardDetail() {}

func (*ModuleItem_DynamicCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TextCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TextTitleCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ImageTitleCard) isModuleItem_CardDetail() {}

func (*ModuleItem_DynamicMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_DynamicActMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_LiveCard) isModuleItem_CardDetail() {}

func (*ModuleItem_CarouselImgCard) isModuleItem_CardDetail() {}

func (*ModuleItem_CarouselWordCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ResourceCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ResourceMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_GameCard) isModuleItem_CardDetail() {}

func (*ModuleItem_VideoCard) isModuleItem_CardDetail() {}

func (*ModuleItem_VideoMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_RecommendCard) isModuleItem_CardDetail() {}

func (*ModuleItem_RecommendVerticalCard) isModuleItem_CardDetail() {}

func (*ModuleItem_RelativeactCard) isModuleItem_CardDetail() {}

func (*ModuleItem_RelativeactCapsuleCard) isModuleItem_CardDetail() {}

func (*ModuleItem_StatementCard) isModuleItem_CardDetail() {}

func (*ModuleItem_IconCard) isModuleItem_CardDetail() {}

func (*ModuleItem_VoteCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ReserveCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineHeadCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineEventTextCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineEventImageCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineEventImagetextCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineEventResourceCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TimelineUnfoldCard) isModuleItem_CardDetail() {}

func (*ModuleItem_OgvOneCard) isModuleItem_CardDetail() {}

func (*ModuleItem_OgvThreeCard) isModuleItem_CardDetail() {}

func (*ModuleItem_OgvMoreCard) isModuleItem_CardDetail() {}

func (*ModuleItem_NavigationCard) isModuleItem_CardDetail() {}

func (*ModuleItem_ReplyCard) isModuleItem_CardDetail() {}

func (*ModuleItem_TabCard) isModuleItem_CardDetail() {}

func (*ModuleItem_NewactHeader) isModuleItem_CardDetail() {}

func (*ModuleItem_NewactAward) isModuleItem_CardDetail() {}

func (*ModuleItem_NewactStatement) isModuleItem_CardDetail() {}

func (*ModuleItem_ProgressCard) isModuleItem_CardDetail() {}

func (*ModuleItem_SelectCard) isModuleItem_CardDetail() {}

type NavigationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*NavigationItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NavigationCard) Reset() {
	*x = NavigationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavigationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigationCard) ProtoMessage() {}

func (x *NavigationCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigationCard.ProtoReflect.Descriptor instead.
func (*NavigationCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{34}
}

func (x *NavigationCard) GetItems() []*NavigationItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NavigationItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId int64 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *NavigationItem) Reset() {
	*x = NavigationItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavigationItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavigationItem) ProtoMessage() {}

func (x *NavigationItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavigationItem.ProtoReflect.Descriptor instead.
func (*NavigationItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{35}
}

func (x *NavigationItem) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *NavigationItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type NewactAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*NewactAwardItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewactAward) Reset() {
	*x = NewactAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactAward) ProtoMessage() {}

func (x *NewactAward) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactAward.ProtoReflect.Descriptor instead.
func (*NewactAward) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{36}
}

func (x *NewactAward) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewactAward) GetItems() []*NewactAwardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NewactAwardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NewactAwardItem) Reset() {
	*x = NewactAwardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactAwardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactAwardItem) ProtoMessage() {}

func (x *NewactAwardItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactAwardItem.ProtoReflect.Descriptor instead.
func (*NewactAwardItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{37}
}

func (x *NewactAwardItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewactAwardItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NewactFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BorderColor string `protobuf:"bytes,2,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
}

func (x *NewactFeature) Reset() {
	*x = NewactFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactFeature) ProtoMessage() {}

func (x *NewactFeature) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactFeature.ProtoReflect.Descriptor instead.
func (*NewactFeature) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{38}
}

func (x *NewactFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewactFeature) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

type NewactHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	SponsorTitle string `protobuf:"bytes,4,opt,name=sponsor_title,json=sponsorTitle,proto3" json:"sponsor_title,omitempty"`
	Mid int64 `protobuf:"varint,5,opt,name=mid,proto3" json:"mid,omitempty"`
	UserName string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserFace string `protobuf:"bytes,7,opt,name=user_face,json=userFace,proto3" json:"user_face,omitempty"`
	UserUrl string `protobuf:"bytes,8,opt,name=user_url,json=userUrl,proto3" json:"user_url,omitempty"`
	Features []*NewactFeature `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *NewactHeader) Reset() {
	*x = NewactHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactHeader) ProtoMessage() {}

func (x *NewactHeader) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactHeader.ProtoReflect.Descriptor instead.
func (*NewactHeader) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{39}
}

func (x *NewactHeader) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewactHeader) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *NewactHeader) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NewactHeader) GetSponsorTitle() string {
	if x != nil {
		return x.SponsorTitle
	}
	return ""
}

func (x *NewactHeader) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *NewactHeader) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *NewactHeader) GetUserFace() string {
	if x != nil {
		return x.UserFace
	}
	return ""
}

func (x *NewactHeader) GetUserUrl() string {
	if x != nil {
		return x.UserUrl
	}
	return ""
}

func (x *NewactHeader) GetFeatures() []*NewactFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

type NewactStatementItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NewactStatementItem) Reset() {
	*x = NewactStatementItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactStatementItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactStatementItem) ProtoMessage() {}

func (x *NewactStatementItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactStatementItem.ProtoReflect.Descriptor instead.
func (*NewactStatementItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{40}
}

func (x *NewactStatementItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewactStatementItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type NewactStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*NewactStatementItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NewactStatement) Reset() {
	*x = NewactStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewactStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewactStatement) ProtoMessage() {}

func (x *NewactStatement) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewactStatement.ProtoReflect.Descriptor instead.
func (*NewactStatement) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{41}
}

func (x *NewactStatement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewactStatement) GetItems() []*NewactStatementItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type OfficialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role int32 `protobuf:"varint,1,opt,name=role,proto3" json:"role,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *OfficialInfo) Reset() {
	*x = OfficialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialInfo) ProtoMessage() {}

func (x *OfficialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialInfo.ProtoReflect.Descriptor instead.
func (*OfficialInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{42}
}

func (x *OfficialInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *OfficialInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfficialInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfficialInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type OgvFollowButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFollowed bool `protobuf:"varint,1,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	FollowText string `protobuf:"bytes,2,opt,name=follow_text,json=followText,proto3" json:"follow_text,omitempty"`
	FollowIcon string `protobuf:"bytes,3,opt,name=follow_icon,json=followIcon,proto3" json:"follow_icon,omitempty"`
	UnfollowText string `protobuf:"bytes,4,opt,name=unfollow_text,json=unfollowText,proto3" json:"unfollow_text,omitempty"`
	UnfollowIcon string `protobuf:"bytes,5,opt,name=unfollow_icon,json=unfollowIcon,proto3" json:"unfollow_icon,omitempty"`
	FollowParams string `protobuf:"bytes,6,opt,name=follow_params,json=followParams,proto3" json:"follow_params,omitempty"`
}

func (x *OgvFollowButton) Reset() {
	*x = OgvFollowButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvFollowButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvFollowButton) ProtoMessage() {}

func (x *OgvFollowButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvFollowButton.ProtoReflect.Descriptor instead.
func (*OgvFollowButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{43}
}

func (x *OgvFollowButton) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *OgvFollowButton) GetFollowText() string {
	if x != nil {
		return x.FollowText
	}
	return ""
}

func (x *OgvFollowButton) GetFollowIcon() string {
	if x != nil {
		return x.FollowIcon
	}
	return ""
}

func (x *OgvFollowButton) GetUnfollowText() string {
	if x != nil {
		return x.UnfollowText
	}
	return ""
}

func (x *OgvFollowButton) GetUnfollowIcon() string {
	if x != nil {
		return x.UnfollowIcon
	}
	return ""
}

func (x *OgvFollowButton) GetFollowParams() string {
	if x != nil {
		return x.FollowParams
	}
	return ""
}

type OgvMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	SupernatantTitle string `protobuf:"bytes,2,opt,name=supernatant_title,json=supernatantTitle,proto3" json:"supernatant_title,omitempty"`
	Params string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *OgvMoreCard) Reset() {
	*x = OgvMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvMoreCard) ProtoMessage() {}

func (x *OgvMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvMoreCard.ProtoReflect.Descriptor instead.
func (*OgvMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{44}
}

func (x *OgvMoreCard) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *OgvMoreCard) GetSupernatantTitle() string {
	if x != nil {
		return x.SupernatantTitle
	}
	return ""
}

func (x *OgvMoreCard) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type OgvOneCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position1 string `protobuf:"bytes,1,opt,name=position1,proto3" json:"position1,omitempty"`
	Position2 string `protobuf:"bytes,2,opt,name=position2,proto3" json:"position2,omitempty"`
	Position3 string `protobuf:"bytes,3,opt,name=position3,proto3" json:"position3,omitempty"`
	CoverRightText1 string `protobuf:"bytes,4,opt,name=cover_right_text1,json=coverRightText1,proto3" json:"cover_right_text1,omitempty"`
	CoverRightText2 string `protobuf:"bytes,5,opt,name=cover_right_text2,json=coverRightText2,proto3" json:"cover_right_text2,omitempty"`
	RcmdContent string `protobuf:"bytes,6,opt,name=rcmd_content,json=rcmdContent,proto3" json:"rcmd_content,omitempty"`
	RcmdIcon string `protobuf:"bytes,7,opt,name=rcmd_icon,json=rcmdIcon,proto3" json:"rcmd_icon,omitempty"`
	FollowButton *OgvFollowButton `protobuf:"bytes,8,opt,name=follow_button,json=followButton,proto3" json:"follow_button,omitempty"`
	Image string `protobuf:"bytes,13,opt,name=image,proto3" json:"image,omitempty"`
	Badge *Badge `protobuf:"bytes,14,opt,name=badge,proto3" json:"badge,omitempty"`
	Title string `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,16,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	Url string `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	ResourceType string `protobuf:"bytes,18,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *OgvOneCard) Reset() {
	*x = OgvOneCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvOneCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvOneCard) ProtoMessage() {}

func (x *OgvOneCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvOneCard.ProtoReflect.Descriptor instead.
func (*OgvOneCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{45}
}

func (x *OgvOneCard) GetPosition1() string {
	if x != nil {
		return x.Position1
	}
	return ""
}

func (x *OgvOneCard) GetPosition2() string {
	if x != nil {
		return x.Position2
	}
	return ""
}

func (x *OgvOneCard) GetPosition3() string {
	if x != nil {
		return x.Position3
	}
	return ""
}

func (x *OgvOneCard) GetCoverRightText1() string {
	if x != nil {
		return x.CoverRightText1
	}
	return ""
}

func (x *OgvOneCard) GetCoverRightText2() string {
	if x != nil {
		return x.CoverRightText2
	}
	return ""
}

func (x *OgvOneCard) GetRcmdContent() string {
	if x != nil {
		return x.RcmdContent
	}
	return ""
}

func (x *OgvOneCard) GetRcmdIcon() string {
	if x != nil {
		return x.RcmdIcon
	}
	return ""
}

func (x *OgvOneCard) GetFollowButton() *OgvFollowButton {
	if x != nil {
		return x.FollowButton
	}
	return nil
}

func (x *OgvOneCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *OgvOneCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *OgvOneCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvOneCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *OgvOneCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OgvOneCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type OgvSupernatantParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastIndex int64 `protobuf:"varint,1,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *OgvSupernatantParams) Reset() {
	*x = OgvSupernatantParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvSupernatantParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvSupernatantParams) ProtoMessage() {}

func (x *OgvSupernatantParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvSupernatantParams.ProtoReflect.Descriptor instead.
func (*OgvSupernatantParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{46}
}

func (x *OgvSupernatantParams) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *OgvSupernatantParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OgvSupernatantParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type OgvSupernatantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *OgvSupernatantParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *OgvSupernatantReq) Reset() {
	*x = OgvSupernatantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvSupernatantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvSupernatantReq) ProtoMessage() {}

func (x *OgvSupernatantReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvSupernatantReq.ProtoReflect.Descriptor instead.
func (*OgvSupernatantReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{47}
}

func (x *OgvSupernatantReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *OgvSupernatantReq) GetParams() *OgvSupernatantParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *OgvSupernatantReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type OgvSupernatantResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	LastIndex int64 `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
}

func (x *OgvSupernatantResp) Reset() {
	*x = OgvSupernatantResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvSupernatantResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvSupernatantResp) ProtoMessage() {}

func (x *OgvSupernatantResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvSupernatantResp.ProtoReflect.Descriptor instead.
func (*OgvSupernatantResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{48}
}

func (x *OgvSupernatantResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *OgvSupernatantResp) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type OgvThreeCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoverLeftText1 string `protobuf:"bytes,1,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	FollowButton *OgvFollowButton `protobuf:"bytes,3,opt,name=follow_button,json=followButton,proto3" json:"follow_button,omitempty"`
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Badge *Badge `protobuf:"bytes,5,opt,name=badge,proto3" json:"badge,omitempty"`
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,7,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	ResourceType string `protobuf:"bytes,9,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *OgvThreeCard) Reset() {
	*x = OgvThreeCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvThreeCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvThreeCard) ProtoMessage() {}

func (x *OgvThreeCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvThreeCard.ProtoReflect.Descriptor instead.
func (*OgvThreeCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{49}
}

func (x *OgvThreeCard) GetCoverLeftText1() string {
	if x != nil {
		return x.CoverLeftText1
	}
	return ""
}

func (x *OgvThreeCard) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *OgvThreeCard) GetFollowButton() *OgvFollowButton {
	if x != nil {
		return x.FollowButton
	}
	return nil
}

func (x *OgvThreeCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *OgvThreeCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *OgvThreeCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvThreeCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *OgvThreeCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OgvThreeCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type PageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOnline bool `protobuf:"varint,1,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	IgnoreAppDarkTheme bool `protobuf:"varint,2,opt,name=ignore_app_dark_theme,json=ignoreAppDarkTheme,proto3" json:"ignore_app_dark_theme,omitempty"`
	PageColor *Color `protobuf:"bytes,3,opt,name=page_color,json=pageColor,proto3" json:"page_color,omitempty"`
	PageShare *PageShare `protobuf:"bytes,4,opt,name=page_share,json=pageShare,proto3" json:"page_share,omitempty"`
	PageHeader *Module `protobuf:"bytes,5,opt,name=page_header,json=pageHeader,proto3" json:"page_header,omitempty"`
	Participation *Module `protobuf:"bytes,6,opt,name=participation,proto3" json:"participation,omitempty"`
	ModuleList []*Module `protobuf:"bytes,7,rep,name=module_list,json=moduleList,proto3" json:"module_list,omitempty"`
	IsDynamicFeed bool `protobuf:"varint,8,opt,name=is_dynamic_feed,json=isDynamicFeed,proto3" json:"is_dynamic_feed,omitempty"`
	LayerDynamic *LayerDynamic `protobuf:"bytes,9,opt,name=layer_dynamic,json=layerDynamic,proto3" json:"layer_dynamic,omitempty"`
	IsEditorFeed bool `protobuf:"varint,10,opt,name=is_editor_feed,json=isEditorFeed,proto3" json:"is_editor_feed,omitempty"`
	SponsorType int64 `protobuf:"varint,11,opt,name=sponsor_type,json=sponsorType,proto3" json:"sponsor_type,omitempty"`
	TopTab *TopTab `protobuf:"bytes,12,opt,name=top_tab,json=topTab,proto3" json:"top_tab,omitempty"`
}

func (x *PageResp) Reset() {
	*x = PageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResp) ProtoMessage() {}

func (x *PageResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResp.ProtoReflect.Descriptor instead.
func (*PageResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{50}
}

func (x *PageResp) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *PageResp) GetIgnoreAppDarkTheme() bool {
	if x != nil {
		return x.IgnoreAppDarkTheme
	}
	return false
}

func (x *PageResp) GetPageColor() *Color {
	if x != nil {
		return x.PageColor
	}
	return nil
}

func (x *PageResp) GetPageShare() *PageShare {
	if x != nil {
		return x.PageShare
	}
	return nil
}

func (x *PageResp) GetPageHeader() *Module {
	if x != nil {
		return x.PageHeader
	}
	return nil
}

func (x *PageResp) GetParticipation() *Module {
	if x != nil {
		return x.Participation
	}
	return nil
}

func (x *PageResp) GetModuleList() []*Module {
	if x != nil {
		return x.ModuleList
	}
	return nil
}

func (x *PageResp) GetIsDynamicFeed() bool {
	if x != nil {
		return x.IsDynamicFeed
	}
	return false
}

func (x *PageResp) GetLayerDynamic() *LayerDynamic {
	if x != nil {
		return x.LayerDynamic
	}
	return nil
}

func (x *PageResp) GetIsEditorFeed() bool {
	if x != nil {
		return x.IsEditorFeed
	}
	return false
}

func (x *PageResp) GetSponsorType() int64 {
	if x != nil {
		return x.SponsorType
	}
	return 0
}

func (x *PageResp) GetTopTab() *TopTab {
	if x != nil {
		return x.TopTab
	}
	return nil
}

type PageShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	InsideUri string `protobuf:"bytes,5,opt,name=inside_uri,json=insideUri,proto3" json:"inside_uri,omitempty"`
	OutsideUri string `protobuf:"bytes,6,opt,name=outside_uri,json=outsideUri,proto3" json:"outside_uri,omitempty"`
	Origin string `protobuf:"bytes,7,opt,name=origin,proto3" json:"origin,omitempty"`
	Sid string `protobuf:"bytes,8,opt,name=sid,proto3" json:"sid,omitempty"`
	SpacePageUrl string `protobuf:"bytes,9,opt,name=space_page_url,json=spacePageUrl,proto3" json:"space_page_url,omitempty"`
	SpaceExclusivePageUrl string `protobuf:"bytes,10,opt,name=space_exclusive_page_url,json=spaceExclusivePageUrl,proto3" json:"space_exclusive_page_url,omitempty"`
}

func (x *PageShare) Reset() {
	*x = PageShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageShare) ProtoMessage() {}

func (x *PageShare) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageShare.ProtoReflect.Descriptor instead.
func (*PageShare) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{51}
}

func (x *PageShare) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PageShare) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageShare) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PageShare) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PageShare) GetInsideUri() string {
	if x != nil {
		return x.InsideUri
	}
	return ""
}

func (x *PageShare) GetOutsideUri() string {
	if x != nil {
		return x.OutsideUri
	}
	return ""
}

func (x *PageShare) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *PageShare) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *PageShare) GetSpacePageUrl() string {
	if x != nil {
		return x.SpacePageUrl
	}
	return ""
}

func (x *PageShare) GetSpaceExclusivePageUrl() string {
	if x != nil {
		return x.SpaceExclusivePageUrl
	}
	return ""
}

type ParticipationCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	SelectedImage string `protobuf:"bytes,2,opt,name=selected_image,json=selectedImage,proto3" json:"selected_image,omitempty"`
	Items []*ParticipationCardItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ParticipationCard) Reset() {
	*x = ParticipationCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipationCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipationCard) ProtoMessage() {}

func (x *ParticipationCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipationCard.ProtoReflect.Descriptor instead.
func (*ParticipationCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{52}
}

func (x *ParticipationCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ParticipationCard) GetSelectedImage() string {
	if x != nil {
		return x.SelectedImage
	}
	return ""
}

func (x *ParticipationCard) GetItems() []*ParticipationCardItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ParticipationCardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ParticipationCardItem) Reset() {
	*x = ParticipationCardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipationCardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipationCardItem) ProtoMessage() {}

func (x *ParticipationCardItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipationCardItem.ProtoReflect.Descriptor instead.
func (*ParticipationCardItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{53}
}

func (x *ParticipationCardItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ParticipationCardItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ParticipationCardItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ParticipationCardItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PlayerDimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Rotate bool `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *PlayerDimension) Reset() {
	*x = PlayerDimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDimension) ProtoMessage() {}

func (x *PlayerDimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDimension.ProtoReflect.Descriptor instead.
func (*PlayerDimension) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{54}
}

func (x *PlayerDimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PlayerDimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PlayerDimension) GetRotate() bool {
	if x != nil {
		return x.Rotate
	}
	return false
}

type ProgressCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Style ProgressStyle `protobuf:"varint,1,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.ProgressStyle" json:"style,omitempty"`
	SlotType ProgressSlot `protobuf:"varint,2,opt,name=slot_type,json=slotType,proto3,enum=bilibili.app.nativeact.v1.ProgressSlot" json:"slot_type,omitempty"`
	BarType ProgressBar `protobuf:"varint,3,opt,name=bar_type,json=barType,proto3,enum=bilibili.app.nativeact.v1.ProgressBar" json:"bar_type,omitempty"`
	TextureImage string `protobuf:"bytes,4,opt,name=texture_image,json=textureImage,proto3" json:"texture_image,omitempty"`
	Num int64 `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	DisplayNum string `protobuf:"bytes,6,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	Nodes []*ProgressNode `protobuf:"bytes,7,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ProgressCard) Reset() {
	*x = ProgressCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressCard) ProtoMessage() {}

func (x *ProgressCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressCard.ProtoReflect.Descriptor instead.
func (*ProgressCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{55}
}

func (x *ProgressCard) GetStyle() ProgressStyle {
	if x != nil {
		return x.Style
	}
	return ProgressStyle_PStyleDefault
}

func (x *ProgressCard) GetSlotType() ProgressSlot {
	if x != nil {
		return x.SlotType
	}
	return ProgressSlot_PSlotDefault
}

func (x *ProgressCard) GetBarType() ProgressBar {
	if x != nil {
		return x.BarType
	}
	return ProgressBar_PBarDefault
}

func (x *ProgressCard) GetTextureImage() string {
	if x != nil {
		return x.TextureImage
	}
	return ""
}

func (x *ProgressCard) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ProgressCard) GetDisplayNum() string {
	if x != nil {
		return x.DisplayNum
	}
	return ""
}

func (x *ProgressCard) GetNodes() []*ProgressNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ProgressEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Items []*ProgressEventItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ProgressEvent) Reset() {
	*x = ProgressEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressEvent) ProtoMessage() {}

func (x *ProgressEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressEvent.ProtoReflect.Descriptor instead.
func (*ProgressEvent) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{56}
}

func (x *ProgressEvent) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *ProgressEvent) GetItems() []*ProgressEventItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ProgressEventItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Num int64 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	DisplayNum string `protobuf:"bytes,4,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	WebKey string `protobuf:"bytes,5,opt,name=web_key,json=webKey,proto3" json:"web_key,omitempty"`
	Dimension int64 `protobuf:"varint,6,opt,name=dimension,proto3" json:"dimension,omitempty"`
}

func (x *ProgressEventItem) Reset() {
	*x = ProgressEventItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressEventItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressEventItem) ProtoMessage() {}

func (x *ProgressEventItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressEventItem.ProtoReflect.Descriptor instead.
func (*ProgressEventItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{57}
}

func (x *ProgressEventItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ProgressEventItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProgressEventItem) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ProgressEventItem) GetDisplayNum() string {
	if x != nil {
		return x.DisplayNum
	}
	return ""
}

func (x *ProgressEventItem) GetWebKey() string {
	if x != nil {
		return x.WebKey
	}
	return ""
}

func (x *ProgressEventItem) GetDimension() int64 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

type ProgressNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	DisplayNum string `protobuf:"bytes,3,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
}

func (x *ProgressNode) Reset() {
	*x = ProgressNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressNode) ProtoMessage() {}

func (x *ProgressNode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressNode.ProtoReflect.Descriptor instead.
func (*ProgressNode) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{58}
}

func (x *ProgressNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProgressNode) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ProgressNode) GetDisplayNum() string {
	if x != nil {
		return x.DisplayNum
	}
	return ""
}

type ProgressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
}

func (x *ProgressReq) Reset() {
	*x = ProgressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressReq) ProtoMessage() {}

func (x *ProgressReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressReq.ProtoReflect.Descriptor instead.
func (*ProgressReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{59}
}

func (x *ProgressReq) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

type ProgressRly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *ProgressEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ProgressRly) Reset() {
	*x = ProgressRly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressRly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressRly) ProtoMessage() {}

func (x *ProgressRly) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressRly.ProtoReflect.Descriptor instead.
func (*ProgressRly) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{60}
}

func (x *ProgressRly) GetEvent() *ProgressEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RcmdCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	IsFollowed bool `protobuf:"varint,6,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	Official *OfficialInfo `protobuf:"bytes,7,opt,name=official,proto3" json:"official,omitempty"`
	Vip *VipInfo `protobuf:"bytes,8,opt,name=vip,proto3" json:"vip,omitempty"`
	RankIcon string `protobuf:"bytes,9,opt,name=rank_icon,json=rankIcon,proto3" json:"rank_icon,omitempty"`
	RedirectType RedirectType `protobuf:"varint,10,opt,name=redirect_type,json=redirectType,proto3,enum=bilibili.app.nativeact.v1.RedirectType" json:"redirect_type,omitempty"`
}

func (x *RcmdCard) Reset() {
	*x = RcmdCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdCard) ProtoMessage() {}

func (x *RcmdCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdCard.ProtoReflect.Descriptor instead.
func (*RcmdCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{61}
}

func (x *RcmdCard) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *RcmdCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RcmdCard) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *RcmdCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RcmdCard) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RcmdCard) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *RcmdCard) GetOfficial() *OfficialInfo {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *RcmdCard) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *RcmdCard) GetRankIcon() string {
	if x != nil {
		return x.RankIcon
	}
	return ""
}

func (x *RcmdCard) GetRedirectType() RedirectType {
	if x != nil {
		return x.RedirectType
	}
	return RedirectType_RtTypeDefault
}

type RcmdVerticalCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RcmdCard `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RcmdVerticalCard) Reset() {
	*x = RcmdVerticalCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdVerticalCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdVerticalCard) ProtoMessage() {}

func (x *RcmdVerticalCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdVerticalCard.ProtoReflect.Descriptor instead.
func (*RcmdVerticalCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{62}
}

func (x *RcmdVerticalCard) GetItems() []*RcmdCard {
	if x != nil {
		return x.Items
	}
	return nil
}

type RelativeactCapsuleCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Items []*RelativeactCapsuleItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RelativeactCapsuleCard) Reset() {
	*x = RelativeactCapsuleCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelativeactCapsuleCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelativeactCapsuleCard) ProtoMessage() {}

func (x *RelativeactCapsuleCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelativeactCapsuleCard.ProtoReflect.Descriptor instead.
func (*RelativeactCapsuleCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{63}
}

func (x *RelativeactCapsuleCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RelativeactCapsuleCard) GetItems() []*RelativeactCapsuleItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RelativeactCapsuleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *RelativeactCapsuleItem) Reset() {
	*x = RelativeactCapsuleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelativeactCapsuleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelativeactCapsuleItem) ProtoMessage() {}

func (x *RelativeactCapsuleItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelativeactCapsuleItem.ProtoReflect.Descriptor instead.
func (*RelativeactCapsuleItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{64}
}

func (x *RelativeactCapsuleItem) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *RelativeactCapsuleItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RelativeactCapsuleItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RelativeactCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *RelativeactCard) Reset() {
	*x = RelativeactCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelativeactCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelativeactCard) ProtoMessage() {}

func (x *RelativeactCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelativeactCard.ProtoReflect.Descriptor instead.
func (*RelativeactCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{65}
}

func (x *RelativeactCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *RelativeactCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RelativeactCard) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RelativeactCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type ReplyCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId int64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReplyCard) Reset() {
	*x = ReplyCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCard) ProtoMessage() {}

func (x *ReplyCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCard.ProtoReflect.Descriptor instead.
func (*ReplyCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{66}
}

func (x *ReplyCard) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *ReplyCard) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReportDic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType string `protobuf:"bytes,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	SeasonType string `protobuf:"bytes,2,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	Aid int64 `protobuf:"varint,3,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid int64 `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	SubType int32 `protobuf:"varint,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	EpId int64 `protobuf:"varint,6,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	IsPreview int32 `protobuf:"varint,7,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	SeasonId int64 `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	AuthorName string `protobuf:"bytes,9,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
}

func (x *ReportDic) Reset() {
	*x = ReportDic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportDic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportDic) ProtoMessage() {}

func (x *ReportDic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportDic.ProtoReflect.Descriptor instead.
func (*ReportDic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{67}
}

func (x *ReportDic) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *ReportDic) GetSeasonType() string {
	if x != nil {
		return x.SeasonType
	}
	return ""
}

func (x *ReportDic) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ReportDic) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ReportDic) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *ReportDic) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *ReportDic) GetIsPreview() int32 {
	if x != nil {
		return x.IsPreview
	}
	return 0
}

func (x *ReportDic) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *ReportDic) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

type ReserveButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goto ReserveGoto `protobuf:"varint,1,opt,name=goto,proto3,enum=bilibili.app.nativeact.v1.ReserveGoto" json:"goto,omitempty"`
	MessageBox *MessageBox `protobuf:"bytes,2,opt,name=message_box,json=messageBox,proto3" json:"message_box,omitempty"`
	ReserveParams string `protobuf:"bytes,3,opt,name=reserve_params,json=reserveParams,proto3" json:"reserve_params,omitempty"`
	HasDone bool `protobuf:"varint,4,opt,name=has_done,json=hasDone,proto3" json:"has_done,omitempty"`
	DoneText string `protobuf:"bytes,5,opt,name=done_text,json=doneText,proto3" json:"done_text,omitempty"`
	UndoneText string `protobuf:"bytes,6,opt,name=undone_text,json=undoneText,proto3" json:"undone_text,omitempty"`
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	IsHighlight bool `protobuf:"varint,8,opt,name=is_highlight,json=isHighlight,proto3" json:"is_highlight,omitempty"`
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ReserveButton) Reset() {
	*x = ReserveButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveButton) ProtoMessage() {}

func (x *ReserveButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveButton.ProtoReflect.Descriptor instead.
func (*ReserveButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{68}
}

func (x *ReserveButton) GetGoto() ReserveGoto {
	if x != nil {
		return x.Goto
	}
	return ReserveGoto_Reserve
}

func (x *ReserveButton) GetMessageBox() *MessageBox {
	if x != nil {
		return x.MessageBox
	}
	return nil
}

func (x *ReserveButton) GetReserveParams() string {
	if x != nil {
		return x.ReserveParams
	}
	return ""
}

func (x *ReserveButton) GetHasDone() bool {
	if x != nil {
		return x.HasDone
	}
	return false
}

func (x *ReserveButton) GetDoneText() string {
	if x != nil {
		return x.DoneText
	}
	return ""
}

func (x *ReserveButton) GetUndoneText() string {
	if x != nil {
		return x.UndoneText
	}
	return ""
}

func (x *ReserveButton) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ReserveButton) GetIsHighlight() bool {
	if x != nil {
		return x.IsHighlight
	}
	return false
}

func (x *ReserveButton) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ReserveCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Num int64 `protobuf:"varint,8,opt,name=num,proto3" json:"num,omitempty"`
	Subtitle string `protobuf:"bytes,9,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Button *ReserveButton `protobuf:"bytes,10,opt,name=button,proto3" json:"button,omitempty"`
	HideReserveNum bool `protobuf:"varint,11,opt,name=hide_reserve_num,json=hideReserveNum,proto3" json:"hide_reserve_num,omitempty"`
}

func (x *ReserveCard) Reset() {
	*x = ReserveCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveCard) ProtoMessage() {}

func (x *ReserveCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveCard.ProtoReflect.Descriptor instead.
func (*ReserveCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{69}
}

func (x *ReserveCard) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ReserveCard) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ReserveCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReserveCard) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *ReserveCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ReserveCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReserveCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReserveCard) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ReserveCard) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ReserveCard) GetButton() *ReserveButton {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *ReserveCard) GetHideReserveNum() bool {
	if x != nil {
		return x.HideReserveNum
	}
	return false
}

type ReserveParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Sid int64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ReserveParams) Reset() {
	*x = ReserveParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveParams) ProtoMessage() {}

func (x *ReserveParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveParams.ProtoReflect.Descriptor instead.
func (*ReserveParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{70}
}

func (x *ReserveParams) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ReserveParams) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type ReserveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *ReserveParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ReserveReq) Reset() {
	*x = ReserveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveReq) ProtoMessage() {}

func (x *ReserveReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveReq.ProtoReflect.Descriptor instead.
func (*ReserveReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{71}
}

func (x *ReserveReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *ReserveReq) GetParams() *ReserveParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type ReserveRly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveParams string `protobuf:"bytes,1,opt,name=reserve_params,json=reserveParams,proto3" json:"reserve_params,omitempty"`
}

func (x *ReserveRly) Reset() {
	*x = ReserveRly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveRly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRly) ProtoMessage() {}

func (x *ReserveRly) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRly.ProtoReflect.Descriptor instead.
func (*ReserveRly) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{72}
}

func (x *ReserveRly) GetReserveParams() string {
	if x != nil {
		return x.ReserveParams
	}
	return ""
}

type ResourceCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	CoverRightText string `protobuf:"bytes,4,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	CoverLeftText1 string `protobuf:"bytes,5,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	CoverLeftIcon1 int64 `protobuf:"varint,6,opt,name=cover_left_icon1,json=coverLeftIcon1,proto3" json:"cover_left_icon1,omitempty"`
	CoverLeftText2 string `protobuf:"bytes,7,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	CoverLeftIcon2 int64 `protobuf:"varint,8,opt,name=cover_left_icon2,json=coverLeftIcon2,proto3" json:"cover_left_icon2,omitempty"`
	Badge *Badge `protobuf:"bytes,9,opt,name=badge,proto3" json:"badge,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,10,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	ResourceType string `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *ResourceCard) Reset() {
	*x = ResourceCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCard) ProtoMessage() {}

func (x *ResourceCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCard.ProtoReflect.Descriptor instead.
func (*ResourceCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{73}
}

func (x *ResourceCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ResourceCard) GetCoverImageUri() string {
	if x != nil {
		return x.CoverImageUri
	}
	return ""
}

func (x *ResourceCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ResourceCard) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

func (x *ResourceCard) GetCoverLeftText1() string {
	if x != nil {
		return x.CoverLeftText1
	}
	return ""
}

func (x *ResourceCard) GetCoverLeftIcon1() int64 {
	if x != nil {
		return x.CoverLeftIcon1
	}
	return 0
}

func (x *ResourceCard) GetCoverLeftText2() string {
	if x != nil {
		return x.CoverLeftText2
	}
	return ""
}

func (x *ResourceCard) GetCoverLeftIcon2() int64 {
	if x != nil {
		return x.CoverLeftIcon2
	}
	return 0
}

func (x *ResourceCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *ResourceCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *ResourceCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type ResourceMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	SubpageData *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
}

func (x *ResourceMoreCard) Reset() {
	*x = ResourceMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMoreCard) ProtoMessage() {}

func (x *ResourceMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMoreCard.ProtoReflect.Descriptor instead.
func (*ResourceMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{74}
}

func (x *ResourceMoreCard) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ResourceMoreCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ResourceMoreCard) GetSubpageData() *SubpageData {
	if x != nil {
		return x.SubpageData
	}
	return nil
}

type ResourceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	TopicOffset string `protobuf:"bytes,2,opt,name=topic_offset,json=topicOffset,proto3" json:"topic_offset,omitempty"`
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	SortType int64 `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
}

func (x *ResourceParams) Reset() {
	*x = ResourceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceParams) ProtoMessage() {}

func (x *ResourceParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceParams.ProtoReflect.Descriptor instead.
func (*ResourceParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{75}
}

func (x *ResourceParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ResourceParams) GetTopicOffset() string {
	if x != nil {
		return x.TopicOffset
	}
	return ""
}

func (x *ResourceParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *ResourceParams) GetSortType() int64 {
	if x != nil {
		return x.SortType
	}
	return 0
}

type ResourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *ResourceParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *ResourceReq) Reset() {
	*x = ResourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceReq) ProtoMessage() {}

func (x *ResourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceReq.ProtoReflect.Descriptor instead.
func (*ResourceReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{76}
}

func (x *ResourceReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *ResourceReq) GetParams() *ResourceParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ResourceReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type ResourceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *ResourceResp) Reset() {
	*x = ResourceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceResp) ProtoMessage() {}

func (x *ResourceResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceResp.ProtoReflect.Descriptor instead.
func (*ResourceResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{77}
}

func (x *ResourceResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type SelectCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTab int64 `protobuf:"varint,1,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	Items []*SelectItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SelectCard) Reset() {
	*x = SelectCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectCard) ProtoMessage() {}

func (x *SelectCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectCard.ProtoReflect.Descriptor instead.
func (*SelectCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{78}
}

func (x *SelectCard) GetCurrentTab() int64 {
	if x != nil {
		return x.CurrentTab
	}
	return 0
}

func (x *SelectCard) GetItems() []*SelectItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type SelectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PageShare *PageShare `protobuf:"bytes,3,opt,name=page_share,json=pageShare,proto3" json:"page_share,omitempty"`
}

func (x *SelectItem) Reset() {
	*x = SelectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectItem) ProtoMessage() {}

func (x *SelectItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectItem.ProtoReflect.Descriptor instead.
func (*SelectItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{79}
}

func (x *SelectItem) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *SelectItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SelectItem) GetPageShare() *PageShare {
	if x != nil {
		return x.PageShare
	}
	return nil
}

type Setting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayMoreButton bool `protobuf:"varint,1,opt,name=display_more_button,json=displayMoreButton,proto3" json:"display_more_button,omitempty"`
	DisplayTitle bool `protobuf:"varint,2,opt,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty"`
	AutoCarousel bool `protobuf:"varint,3,opt,name=auto_carousel,json=autoCarousel,proto3" json:"auto_carousel,omitempty"`
	TopTabFollowImg bool `protobuf:"varint,4,opt,name=top_tab_follow_img,json=topTabFollowImg,proto3" json:"top_tab_follow_img,omitempty"`
	TopTabFadeAway bool `protobuf:"varint,5,opt,name=top_tab_fade_away,json=topTabFadeAway,proto3" json:"top_tab_fade_away,omitempty"`
	AutoPlay bool `protobuf:"varint,6,opt,name=auto_play,json=autoPlay,proto3" json:"auto_play,omitempty"`
	DisplayUnfoldButton bool `protobuf:"varint,7,opt,name=display_unfold_button,json=displayUnfoldButton,proto3" json:"display_unfold_button,omitempty"`
	DisplayNum bool `protobuf:"varint,8,opt,name=display_num,json=displayNum,proto3" json:"display_num,omitempty"`
	DisplayViewNum bool `protobuf:"varint,9,opt,name=display_view_num,json=displayViewNum,proto3" json:"display_view_num,omitempty"`
	DisplaySubscribeBtn bool `protobuf:"varint,10,opt,name=display_subscribe_btn,json=displaySubscribeBtn,proto3" json:"display_subscribe_btn,omitempty"`
	UnfoldRest bool `protobuf:"varint,11,opt,name=unfold_rest,json=unfoldRest,proto3" json:"unfold_rest,omitempty"`
	DisplayProgressNum bool `protobuf:"varint,12,opt,name=display_progress_num,json=displayProgressNum,proto3" json:"display_progress_num,omitempty"`
	DisplayNodeNum bool `protobuf:"varint,13,opt,name=display_node_num,json=displayNodeNum,proto3" json:"display_node_num,omitempty"`
	DisplayNodeDesc bool `protobuf:"varint,14,opt,name=display_node_desc,json=displayNodeDesc,proto3" json:"display_node_desc,omitempty"`
}

func (x *Setting) Reset() {
	*x = Setting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{80}
}

func (x *Setting) GetDisplayMoreButton() bool {
	if x != nil {
		return x.DisplayMoreButton
	}
	return false
}

func (x *Setting) GetDisplayTitle() bool {
	if x != nil {
		return x.DisplayTitle
	}
	return false
}

func (x *Setting) GetAutoCarousel() bool {
	if x != nil {
		return x.AutoCarousel
	}
	return false
}

func (x *Setting) GetTopTabFollowImg() bool {
	if x != nil {
		return x.TopTabFollowImg
	}
	return false
}

func (x *Setting) GetTopTabFadeAway() bool {
	if x != nil {
		return x.TopTabFadeAway
	}
	return false
}

func (x *Setting) GetAutoPlay() bool {
	if x != nil {
		return x.AutoPlay
	}
	return false
}

func (x *Setting) GetDisplayUnfoldButton() bool {
	if x != nil {
		return x.DisplayUnfoldButton
	}
	return false
}

func (x *Setting) GetDisplayNum() bool {
	if x != nil {
		return x.DisplayNum
	}
	return false
}

func (x *Setting) GetDisplayViewNum() bool {
	if x != nil {
		return x.DisplayViewNum
	}
	return false
}

func (x *Setting) GetDisplaySubscribeBtn() bool {
	if x != nil {
		return x.DisplaySubscribeBtn
	}
	return false
}

func (x *Setting) GetUnfoldRest() bool {
	if x != nil {
		return x.UnfoldRest
	}
	return false
}

func (x *Setting) GetDisplayProgressNum() bool {
	if x != nil {
		return x.DisplayProgressNum
	}
	return false
}

func (x *Setting) GetDisplayNodeNum() bool {
	if x != nil {
		return x.DisplayNodeNum
	}
	return false
}

func (x *Setting) GetDisplayNodeDesc() bool {
	if x != nil {
		return x.DisplayNodeDesc
	}
	return false
}

type Share struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayLater bool `protobuf:"varint,1,opt,name=display_later,json=displayLater,proto3" json:"display_later,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	ShareOrigin string `protobuf:"bytes,3,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	ShareType int64 `protobuf:"varint,4,opt,name=share_type,json=shareType,proto3" json:"share_type,omitempty"`
}

func (x *Share) Reset() {
	*x = Share{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{81}
}

func (x *Share) GetDisplayLater() bool {
	if x != nil {
		return x.DisplayLater
	}
	return false
}

func (x *Share) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *Share) GetShareOrigin() string {
	if x != nil {
		return x.ShareOrigin
	}
	return ""
}

func (x *Share) GetShareType() int64 {
	if x != nil {
		return x.ShareType
	}
	return 0
}

type SizeImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width int64 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *SizeImage) Reset() {
	*x = SizeImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeImage) ProtoMessage() {}

func (x *SizeImage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeImage.ProtoReflect.Descriptor instead.
func (*SizeImage) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{82}
}

func (x *SizeImage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SizeImage) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SizeImage) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

type StatementCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *StatementCard) Reset() {
	*x = StatementCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatementCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatementCard) ProtoMessage() {}

func (x *StatementCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatementCard.ProtoReflect.Descriptor instead.
func (*StatementCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{83}
}

func (x *StatementCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SubpageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Tabs []*SubpageTab `protobuf:"bytes,3,rep,name=tabs,proto3" json:"tabs,omitempty"`
}

func (x *SubpageData) Reset() {
	*x = SubpageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubpageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubpageData) ProtoMessage() {}

func (x *SubpageData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubpageData.ProtoReflect.Descriptor instead.
func (*SubpageData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{84}
}

func (x *SubpageData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubpageData) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *SubpageData) GetTabs() []*SubpageTab {
	if x != nil {
		return x.Tabs
	}
	return nil
}

type SubpageTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SubpageTab) Reset() {
	*x = SubpageTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubpageTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubpageTab) ProtoMessage() {}

func (x *SubpageTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubpageTab.ProtoReflect.Descriptor instead.
func (*SubpageTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{85}
}

func (x *SubpageTab) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubpageTab) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type TabCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTab int64 `protobuf:"varint,1,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	Style TabStyle `protobuf:"varint,2,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.TabStyle" json:"style,omitempty"`
	Items []*TabItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	BgImage *SizeImage `protobuf:"bytes,4,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
}

func (x *TabCard) Reset() {
	*x = TabCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabCard) ProtoMessage() {}

func (x *TabCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabCard.ProtoReflect.Descriptor instead.
func (*TabCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{86}
}

func (x *TabCard) GetCurrentTab() int64 {
	if x != nil {
		return x.CurrentTab
	}
	return 0
}

func (x *TabCard) GetStyle() TabStyle {
	if x != nil {
		return x.Style
	}
	return TabStyle_TabStyleDefault
}

func (x *TabCard) GetItems() []*TabItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TabCard) GetBgImage() *SizeImage {
	if x != nil {
		return x.BgImage
	}
	return nil
}

type TabIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	HttpsUrlReq int32 `protobuf:"varint,2,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	FromSpmid string `protobuf:"bytes,3,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,5,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
	LocalTime int32 `protobuf:"varint,6,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	IsColdStart bool `protobuf:"varint,7,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
}

func (x *TabIndexReq) Reset() {
	*x = TabIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabIndexReq) ProtoMessage() {}

func (x *TabIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabIndexReq.ProtoReflect.Descriptor instead.
func (*TabIndexReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{87}
}

func (x *TabIndexReq) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *TabIndexReq) GetHttpsUrlReq() int32 {
	if x != nil {
		return x.HttpsUrlReq
	}
	return 0
}

func (x *TabIndexReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *TabIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *TabIndexReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

func (x *TabIndexReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *TabIndexReq) GetIsColdStart() bool {
	if x != nil {
		return x.IsColdStart
	}
	return false
}

type TabItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DisableClick bool `protobuf:"varint,3,opt,name=disable_click,json=disableClick,proto3" json:"disable_click,omitempty"`
	DisableClickToast string `protobuf:"bytes,4,opt,name=disable_click_toast,json=disableClickToast,proto3" json:"disable_click_toast,omitempty"`
	SelectedImage *SizeImage `protobuf:"bytes,5,opt,name=selected_image,json=selectedImage,proto3" json:"selected_image,omitempty"`
	UnselectedImage *SizeImage `protobuf:"bytes,6,opt,name=unselected_image,json=unselectedImage,proto3" json:"unselected_image,omitempty"`
}

func (x *TabItem) Reset() {
	*x = TabItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabItem) ProtoMessage() {}

func (x *TabItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabItem.ProtoReflect.Descriptor instead.
func (*TabItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{88}
}

func (x *TabItem) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *TabItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TabItem) GetDisableClick() bool {
	if x != nil {
		return x.DisableClick
	}
	return false
}

func (x *TabItem) GetDisableClickToast() string {
	if x != nil {
		return x.DisableClickToast
	}
	return ""
}

func (x *TabItem) GetSelectedImage() *SizeImage {
	if x != nil {
		return x.SelectedImage
	}
	return nil
}

func (x *TabItem) GetUnselectedImage() *SizeImage {
	if x != nil {
		return x.UnselectedImage
	}
	return nil
}

type TextCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TextCard) Reset() {
	*x = TextCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextCard) ProtoMessage() {}

func (x *TextCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextCard.ProtoReflect.Descriptor instead.
func (*TextCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{89}
}

func (x *TextCard) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type TextTitleCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *TextTitleCard) Reset() {
	*x = TextTitleCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextTitleCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextTitleCard) ProtoMessage() {}

func (x *TextTitleCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextTitleCard.ProtoReflect.Descriptor instead.
func (*TextTitleCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{90}
}

func (x *TextTitleCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type TimelineEventImageCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *SizeImage `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *TimelineEventImageCard) Reset() {
	*x = TimelineEventImageCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineEventImageCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEventImageCard) ProtoMessage() {}

func (x *TimelineEventImageCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEventImageCard.ProtoReflect.Descriptor instead.
func (*TimelineEventImageCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{91}
}

func (x *TimelineEventImageCard) GetImage() *SizeImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *TimelineEventImageCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEventImageCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type TimelineEventImagetextCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *TimelineEventImagetextCard) Reset() {
	*x = TimelineEventImagetextCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineEventImagetextCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEventImagetextCard) ProtoMessage() {}

func (x *TimelineEventImagetextCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEventImagetextCard.ProtoReflect.Descriptor instead.
func (*TimelineEventImagetextCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{92}
}

func (x *TimelineEventImagetextCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEventImagetextCard) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *TimelineEventImagetextCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TimelineEventImagetextCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TimelineEventImagetextCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type TimelineEventResourceCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Position1 string `protobuf:"bytes,4,opt,name=position1,proto3" json:"position1,omitempty"`
	Position2 string `protobuf:"bytes,5,opt,name=position2,proto3" json:"position2,omitempty"`
	Badge *Badge `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,7,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	ResourceType string `protobuf:"bytes,8,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *TimelineEventResourceCard) Reset() {
	*x = TimelineEventResourceCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineEventResourceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEventResourceCard) ProtoMessage() {}

func (x *TimelineEventResourceCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEventResourceCard.ProtoReflect.Descriptor instead.
func (*TimelineEventResourceCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{93}
}

func (x *TimelineEventResourceCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEventResourceCard) GetCoverImageUri() string {
	if x != nil {
		return x.CoverImageUri
	}
	return ""
}

func (x *TimelineEventResourceCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *TimelineEventResourceCard) GetPosition1() string {
	if x != nil {
		return x.Position1
	}
	return ""
}

func (x *TimelineEventResourceCard) GetPosition2() string {
	if x != nil {
		return x.Position2
	}
	return ""
}

func (x *TimelineEventResourceCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *TimelineEventResourceCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *TimelineEventResourceCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type TimelineEventTextCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *TimelineEventTextCard) Reset() {
	*x = TimelineEventTextCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineEventTextCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineEventTextCard) ProtoMessage() {}

func (x *TimelineEventTextCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineEventTextCard.ProtoReflect.Descriptor instead.
func (*TimelineEventTextCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{94}
}

func (x *TimelineEventTextCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimelineEventTextCard) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *TimelineEventTextCard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TimelineEventTextCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type TimelineHeadCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage string `protobuf:"bytes,1,opt,name=stage,proto3" json:"stage,omitempty"`
}

func (x *TimelineHeadCard) Reset() {
	*x = TimelineHeadCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineHeadCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineHeadCard) ProtoMessage() {}

func (x *TimelineHeadCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineHeadCard.ProtoReflect.Descriptor instead.
func (*TimelineHeadCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{95}
}

func (x *TimelineHeadCard) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

type TimelineMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	SupernatantTitle string `protobuf:"bytes,2,opt,name=supernatant_title,json=supernatantTitle,proto3" json:"supernatant_title,omitempty"`
	Params string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *TimelineMoreCard) Reset() {
	*x = TimelineMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineMoreCard) ProtoMessage() {}

func (x *TimelineMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineMoreCard.ProtoReflect.Descriptor instead.
func (*TimelineMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{96}
}

func (x *TimelineMoreCard) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *TimelineMoreCard) GetSupernatantTitle() string {
	if x != nil {
		return x.SupernatantTitle
	}
	return ""
}

func (x *TimelineMoreCard) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type TimelineSupernatantParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastIndex int64 `protobuf:"varint,1,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
}

func (x *TimelineSupernatantParams) Reset() {
	*x = TimelineSupernatantParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineSupernatantParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSupernatantParams) ProtoMessage() {}

func (x *TimelineSupernatantParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSupernatantParams.ProtoReflect.Descriptor instead.
func (*TimelineSupernatantParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{97}
}

func (x *TimelineSupernatantParams) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

func (x *TimelineSupernatantParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TimelineSupernatantParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type TimelineSupernatantReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *TimelineSupernatantParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *TimelineSupernatantReq) Reset() {
	*x = TimelineSupernatantReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineSupernatantReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSupernatantReq) ProtoMessage() {}

func (x *TimelineSupernatantReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSupernatantReq.ProtoReflect.Descriptor instead.
func (*TimelineSupernatantReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{98}
}

func (x *TimelineSupernatantReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *TimelineSupernatantReq) GetParams() *TimelineSupernatantParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *TimelineSupernatantReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type TimelineSupernatantResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	LastIndex int64 `protobuf:"varint,2,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
}

func (x *TimelineSupernatantResp) Reset() {
	*x = TimelineSupernatantResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineSupernatantResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineSupernatantResp) ProtoMessage() {}

func (x *TimelineSupernatantResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineSupernatantResp.ProtoReflect.Descriptor instead.
func (*TimelineSupernatantResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{99}
}

func (x *TimelineSupernatantResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *TimelineSupernatantResp) GetLastIndex() int64 {
	if x != nil {
		return x.LastIndex
	}
	return 0
}

type TimelineUnfoldCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnfoldText string `protobuf:"bytes,1,opt,name=unfold_text,json=unfoldText,proto3" json:"unfold_text,omitempty"`
	FoldText string `protobuf:"bytes,2,opt,name=fold_text,json=foldText,proto3" json:"fold_text,omitempty"`
	Cards []*TimelineUnfoldCard_Card `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *TimelineUnfoldCard) Reset() {
	*x = TimelineUnfoldCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineUnfoldCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineUnfoldCard) ProtoMessage() {}

func (x *TimelineUnfoldCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineUnfoldCard.ProtoReflect.Descriptor instead.
func (*TimelineUnfoldCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{100}
}

func (x *TimelineUnfoldCard) GetUnfoldText() string {
	if x != nil {
		return x.UnfoldText
	}
	return ""
}

func (x *TimelineUnfoldCard) GetFoldText() string {
	if x != nil {
		return x.FoldText
	}
	return ""
}

func (x *TimelineUnfoldCard) GetCards() []*TimelineUnfoldCard_Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type TopicIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId int64 `protobuf:"varint,1,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	ActivityFrom string `protobuf:"bytes,2,opt,name=activity_from,json=activityFrom,proto3" json:"activity_from,omitempty"`
	DynamicId int64 `protobuf:"varint,3,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	ShareOrigin string `protobuf:"bytes,4,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	TabId int64 `protobuf:"varint,5,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	TabModuleId int64 `protobuf:"varint,6,opt,name=tab_module_id,json=tabModuleId,proto3" json:"tab_module_id,omitempty"`
	HttpsUrlReq int32 `protobuf:"varint,7,opt,name=https_url_req,json=httpsUrlReq,proto3" json:"https_url_req,omitempty"`
	FromSpmid string `protobuf:"bytes,8,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	CurrentTab string `protobuf:"bytes,9,opt,name=current_tab,json=currentTab,proto3" json:"current_tab,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,10,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	LocalTime int32 `protobuf:"varint,11,opt,name=local_time,json=localTime,proto3" json:"local_time,omitempty"`
	IsColdStart bool `protobuf:"varint,12,opt,name=is_cold_start,json=isColdStart,proto3" json:"is_cold_start,omitempty"`
}

func (x *TopicIndexReq) Reset() {
	*x = TopicIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicIndexReq) ProtoMessage() {}

func (x *TopicIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicIndexReq.ProtoReflect.Descriptor instead.
func (*TopicIndexReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{101}
}

func (x *TopicIndexReq) GetPageId() int64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *TopicIndexReq) GetActivityFrom() string {
	if x != nil {
		return x.ActivityFrom
	}
	return ""
}

func (x *TopicIndexReq) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *TopicIndexReq) GetShareOrigin() string {
	if x != nil {
		return x.ShareOrigin
	}
	return ""
}

func (x *TopicIndexReq) GetTabId() int64 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *TopicIndexReq) GetTabModuleId() int64 {
	if x != nil {
		return x.TabModuleId
	}
	return 0
}

func (x *TopicIndexReq) GetHttpsUrlReq() int32 {
	if x != nil {
		return x.HttpsUrlReq
	}
	return 0
}

func (x *TopicIndexReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *TopicIndexReq) GetCurrentTab() string {
	if x != nil {
		return x.CurrentTab
	}
	return ""
}

func (x *TopicIndexReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *TopicIndexReq) GetLocalTime() int32 {
	if x != nil {
		return x.LocalTime
	}
	return 0
}

func (x *TopicIndexReq) GetIsColdStart() bool {
	if x != nil {
		return x.IsColdStart
	}
	return false
}

type TopTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgImage1 string `protobuf:"bytes,1,opt,name=bg_image1,json=bgImage1,proto3" json:"bg_image1,omitempty"`
	BgImage2 string `protobuf:"bytes,2,opt,name=bg_image2,json=bgImage2,proto3" json:"bg_image2,omitempty"`
	TabTopColor string `protobuf:"bytes,3,opt,name=tab_top_color,json=tabTopColor,proto3" json:"tab_top_color,omitempty"`
	TabMiddleColor string `protobuf:"bytes,4,opt,name=tab_middle_color,json=tabMiddleColor,proto3" json:"tab_middle_color,omitempty"`
	TabBottomColor string `protobuf:"bytes,5,opt,name=tab_bottom_color,json=tabBottomColor,proto3" json:"tab_bottom_color,omitempty"`
	FontColor string `protobuf:"bytes,6,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	BarType int64 `protobuf:"varint,7,opt,name=bar_type,json=barType,proto3" json:"bar_type,omitempty"`
}

func (x *TopTab) Reset() {
	*x = TopTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTab) ProtoMessage() {}

func (x *TopTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTab.ProtoReflect.Descriptor instead.
func (*TopTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{102}
}

func (x *TopTab) GetBgImage1() string {
	if x != nil {
		return x.BgImage1
	}
	return ""
}

func (x *TopTab) GetBgImage2() string {
	if x != nil {
		return x.BgImage2
	}
	return ""
}

func (x *TopTab) GetTabTopColor() string {
	if x != nil {
		return x.TabTopColor
	}
	return ""
}

func (x *TopTab) GetTabMiddleColor() string {
	if x != nil {
		return x.TabMiddleColor
	}
	return ""
}

func (x *TopTab) GetTabBottomColor() string {
	if x != nil {
		return x.TabBottomColor
	}
	return ""
}

func (x *TopTab) GetFontColor() string {
	if x != nil {
		return x.FontColor
	}
	return ""
}

func (x *TopTab) GetBarType() int64 {
	if x != nil {
		return x.BarType
	}
	return 0
}

type VideoCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CoverImageUri string `protobuf:"bytes,2,opt,name=cover_image_uri,json=coverImageUri,proto3" json:"cover_image_uri,omitempty"`
	CoverLeftText1 string `protobuf:"bytes,3,opt,name=cover_left_text1,json=coverLeftText1,proto3" json:"cover_left_text1,omitempty"`
	CoverLeftText2 string `protobuf:"bytes,4,opt,name=cover_left_text2,json=coverLeftText2,proto3" json:"cover_left_text2,omitempty"`
	CoverLeftText3 string `protobuf:"bytes,5,opt,name=cover_left_text3,json=coverLeftText3,proto3" json:"cover_left_text3,omitempty"`
	Uri string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`
	Badge *Badge `protobuf:"bytes,7,opt,name=badge,proto3" json:"badge,omitempty"`
	Rights *VideoRights `protobuf:"bytes,8,opt,name=rights,proto3" json:"rights,omitempty"`
	Dimension *PlayerDimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
	ReportDic *ReportDic `protobuf:"bytes,10,opt,name=report_dic,json=reportDic,proto3" json:"report_dic,omitempty"`
	ResourceType string `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *VideoCard) Reset() {
	*x = VideoCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCard) ProtoMessage() {}

func (x *VideoCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCard.ProtoReflect.Descriptor instead.
func (*VideoCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{103}
}

func (x *VideoCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoCard) GetCoverImageUri() string {
	if x != nil {
		return x.CoverImageUri
	}
	return ""
}

func (x *VideoCard) GetCoverLeftText1() string {
	if x != nil {
		return x.CoverLeftText1
	}
	return ""
}

func (x *VideoCard) GetCoverLeftText2() string {
	if x != nil {
		return x.CoverLeftText2
	}
	return ""
}

func (x *VideoCard) GetCoverLeftText3() string {
	if x != nil {
		return x.CoverLeftText3
	}
	return ""
}

func (x *VideoCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *VideoCard) GetBadge() *Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *VideoCard) GetRights() *VideoRights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *VideoCard) GetDimension() *PlayerDimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *VideoCard) GetReportDic() *ReportDic {
	if x != nil {
		return x.ReportDic
	}
	return nil
}

func (x *VideoCard) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type VideoMoreCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	SubpageData *SubpageData `protobuf:"bytes,3,opt,name=subpage_data,json=subpageData,proto3" json:"subpage_data,omitempty"`
}

func (x *VideoMoreCard) Reset() {
	*x = VideoMoreCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMoreCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMoreCard) ProtoMessage() {}

func (x *VideoMoreCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMoreCard.ProtoReflect.Descriptor instead.
func (*VideoMoreCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{104}
}

func (x *VideoMoreCard) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VideoMoreCard) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *VideoMoreCard) GetSubpageData() *SubpageData {
	if x != nil {
		return x.SubpageData
	}
	return nil
}

type VideoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	TopicOffset string `protobuf:"bytes,2,opt,name=topic_offset,json=topicOffset,proto3" json:"topic_offset,omitempty"`
	ModuleId int64 `protobuf:"varint,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	SortType int64 `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
}

func (x *VideoParams) Reset() {
	*x = VideoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoParams) ProtoMessage() {}

func (x *VideoParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoParams.ProtoReflect.Descriptor instead.
func (*VideoParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{105}
}

func (x *VideoParams) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VideoParams) GetTopicOffset() string {
	if x != nil {
		return x.TopicOffset
	}
	return ""
}

func (x *VideoParams) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *VideoParams) GetSortType() int64 {
	if x != nil {
		return x.SortType
	}
	return 0
}

type VideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *VideoParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	PrimaryPageId int64 `protobuf:"varint,3,opt,name=primary_page_id,json=primaryPageId,proto3" json:"primary_page_id,omitempty"`
}

func (x *VideoReq) Reset() {
	*x = VideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoReq) ProtoMessage() {}

func (x *VideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoReq.ProtoReflect.Descriptor instead.
func (*VideoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{106}
}

func (x *VideoReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *VideoReq) GetParams() *VideoParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *VideoReq) GetPrimaryPageId() int64 {
	if x != nil {
		return x.PrimaryPageId
	}
	return 0
}

type VideoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *Module `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *VideoResp) Reset() {
	*x = VideoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoResp) ProtoMessage() {}

func (x *VideoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoResp.ProtoReflect.Descriptor instead.
func (*VideoResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{107}
}

func (x *VideoResp) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type VideoRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UgcPay bool `protobuf:"varint,1,opt,name=ugc_pay,json=ugcPay,proto3" json:"ugc_pay,omitempty"`
	IsCooperation bool `protobuf:"varint,2,opt,name=is_cooperation,json=isCooperation,proto3" json:"is_cooperation,omitempty"`
	IsPgc bool `protobuf:"varint,3,opt,name=is_pgc,json=isPgc,proto3" json:"is_pgc,omitempty"`
}

func (x *VideoRights) Reset() {
	*x = VideoRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRights) ProtoMessage() {}

func (x *VideoRights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRights.ProtoReflect.Descriptor instead.
func (*VideoRights) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{108}
}

func (x *VideoRights) GetUgcPay() bool {
	if x != nil {
		return x.UgcPay
	}
	return false
}

func (x *VideoRights) GetIsCooperation() bool {
	if x != nil {
		return x.IsCooperation
	}
	return false
}

func (x *VideoRights) GetIsPgc() bool {
	if x != nil {
		return x.IsPgc
	}
	return false
}

type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	DueDate int64 `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	VipPayType int32 `protobuf:"varint,4,opt,name=vip_pay_type,json=vipPayType,proto3" json:"vip_pay_type,omitempty"`
	ThemeType int32 `protobuf:"varint,5,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	Label *VipLabel `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	AvatarSubscript int32 `protobuf:"varint,7,opt,name=avatar_subscript,json=avatarSubscript,proto3" json:"avatar_subscript,omitempty"`
	NicknameColor string `protobuf:"bytes,8,opt,name=nickname_color,json=nicknameColor,proto3" json:"nickname_color,omitempty"`
	Role int64 `protobuf:"varint,9,opt,name=role,proto3" json:"role,omitempty"`
	AvatarSubscriptUrl string `protobuf:"bytes,10,opt,name=avatar_subscript_url,json=avatarSubscriptUrl,proto3" json:"avatar_subscript_url,omitempty"`
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{109}
}

func (x *VipInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipInfo) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *VipInfo) GetVipPayType() int32 {
	if x != nil {
		return x.VipPayType
	}
	return 0
}

func (x *VipInfo) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *VipInfo) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *VipInfo) GetAvatarSubscript() int32 {
	if x != nil {
		return x.AvatarSubscript
	}
	return 0
}

func (x *VipInfo) GetNicknameColor() string {
	if x != nil {
		return x.NicknameColor
	}
	return ""
}

func (x *VipInfo) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *VipInfo) GetAvatarSubscriptUrl() string {
	if x != nil {
		return x.AvatarSubscriptUrl
	}
	return ""
}

type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	LabelTheme string `protobuf:"bytes,4,opt,name=label_theme,json=labelTheme,proto3" json:"label_theme,omitempty"`
	TextColor string `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	BgStyle int32 `protobuf:"varint,6,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
	BgColor string `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BorderColor string `protobuf:"bytes,8,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{110}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *VipLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VipLabel) GetLabelTheme() string {
	if x != nil {
		return x.LabelTheme
	}
	return ""
}

func (x *VipLabel) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *VipLabel) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

func (x *VipLabel) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *VipLabel) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

type VoteButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	DoneImage string `protobuf:"bytes,2,opt,name=done_image,json=doneImage,proto3" json:"done_image,omitempty"`
	UndoneImage string `protobuf:"bytes,3,opt,name=undone_image,json=undoneImage,proto3" json:"undone_image,omitempty"`
	HasVoted bool `protobuf:"varint,4,opt,name=has_voted,json=hasVoted,proto3" json:"has_voted,omitempty"`
	MessageBox *MessageBox `protobuf:"bytes,5,opt,name=message_box,json=messageBox,proto3" json:"message_box,omitempty"`
	VoteParams string `protobuf:"bytes,6,opt,name=vote_params,json=voteParams,proto3" json:"vote_params,omitempty"`
	SourceItemId int64 `protobuf:"varint,7,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
}

func (x *VoteButton) Reset() {
	*x = VoteButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteButton) ProtoMessage() {}

func (x *VoteButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteButton.ProtoReflect.Descriptor instead.
func (*VoteButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{111}
}

func (x *VoteButton) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *VoteButton) GetDoneImage() string {
	if x != nil {
		return x.DoneImage
	}
	return ""
}

func (x *VoteButton) GetUndoneImage() string {
	if x != nil {
		return x.UndoneImage
	}
	return ""
}

func (x *VoteButton) GetHasVoted() bool {
	if x != nil {
		return x.HasVoted
	}
	return false
}

func (x *VoteButton) GetMessageBox() *MessageBox {
	if x != nil {
		return x.MessageBox
	}
	return nil
}

func (x *VoteButton) GetVoteParams() string {
	if x != nil {
		return x.VoteParams
	}
	return ""
}

func (x *VoteButton) GetSourceItemId() int64 {
	if x != nil {
		return x.SourceItemId
	}
	return 0
}

type VoteCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgImage *SizeImage `protobuf:"bytes,1,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	OptionNum int64 `protobuf:"varint,2,opt,name=option_num,json=optionNum,proto3" json:"option_num,omitempty"`
	Buttons []*VoteButton `protobuf:"bytes,3,rep,name=buttons,proto3" json:"buttons,omitempty"`
	LeftNum *VoteNum `protobuf:"bytes,4,opt,name=left_num,json=leftNum,proto3" json:"left_num,omitempty"`
	Progress *VoteProgress `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *VoteCard) Reset() {
	*x = VoteCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteCard) ProtoMessage() {}

func (x *VoteCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteCard.ProtoReflect.Descriptor instead.
func (*VoteCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{112}
}

func (x *VoteCard) GetBgImage() *SizeImage {
	if x != nil {
		return x.BgImage
	}
	return nil
}

func (x *VoteCard) GetOptionNum() int64 {
	if x != nil {
		return x.OptionNum
	}
	return 0
}

func (x *VoteCard) GetButtons() []*VoteButton {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *VoteCard) GetLeftNum() *VoteNum {
	if x != nil {
		return x.LeftNum
	}
	return nil
}

func (x *VoteCard) GetProgress() *VoteProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type VoteNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *VoteNum) Reset() {
	*x = VoteNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteNum) ProtoMessage() {}

func (x *VoteNum) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteNum.ProtoReflect.Descriptor instead.
func (*VoteNum) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{113}
}

func (x *VoteNum) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *VoteNum) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type VoteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Sid int64 `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Gid int64 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	SourceItemId int64 `protobuf:"varint,4,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *VoteParams) Reset() {
	*x = VoteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteParams) ProtoMessage() {}

func (x *VoteParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteParams.ProtoReflect.Descriptor instead.
func (*VoteParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{114}
}

func (x *VoteParams) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *VoteParams) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *VoteParams) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *VoteParams) GetSourceItemId() int64 {
	if x != nil {
		return x.SourceItemId
	}
	return 0
}

func (x *VoteParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type VoteProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	Style VoteProgressStyle `protobuf:"varint,2,opt,name=style,proto3,enum=bilibili.app.nativeact.v1.VoteProgressStyle" json:"style,omitempty"`
	Items []*VoteProgress_VoteProgressItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VoteProgress) Reset() {
	*x = VoteProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteProgress) ProtoMessage() {}

func (x *VoteProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteProgress.ProtoReflect.Descriptor instead.
func (*VoteProgress) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{115}
}

func (x *VoteProgress) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *VoteProgress) GetStyle() VoteProgressStyle {
	if x != nil {
		return x.Style
	}
	return VoteProgressStyle_VPStyleDefault
}

func (x *VoteProgress) GetItems() []*VoteProgress_VoteProgressItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type VoteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawParams string `protobuf:"bytes,1,opt,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty"`
	Params *VoteParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *VoteReq) Reset() {
	*x = VoteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteReq) ProtoMessage() {}

func (x *VoteReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteReq.ProtoReflect.Descriptor instead.
func (*VoteReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{116}
}

func (x *VoteReq) GetRawParams() string {
	if x != nil {
		return x.RawParams
	}
	return ""
}

func (x *VoteReq) GetParams() *VoteParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type VoteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteParams string `protobuf:"bytes,1,opt,name=vote_params,json=voteParams,proto3" json:"vote_params,omitempty"`
	LeftNum int64 `protobuf:"varint,2,opt,name=left_num,json=leftNum,proto3" json:"left_num,omitempty"`
	CanVoteNum int64 `protobuf:"varint,3,opt,name=can_vote_num,json=canVoteNum,proto3" json:"can_vote_num,omitempty"`
}

func (x *VoteResp) Reset() {
	*x = VoteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResp) ProtoMessage() {}

func (x *VoteResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResp.ProtoReflect.Descriptor instead.
func (*VoteResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{117}
}

func (x *VoteResp) GetVoteParams() string {
	if x != nil {
		return x.VoteParams
	}
	return ""
}

func (x *VoteResp) GetLeftNum() int64 {
	if x != nil {
		return x.LeftNum
	}
	return 0
}

func (x *VoteResp) GetCanVoteNum() int64 {
	if x != nil {
		return x.CanVoteNum
	}
	return 0
}

type TimelineUnfoldCard_Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CardDetail:
	//
	//	*TimelineUnfoldCard_Card_TimelineHeadCard
	//	*TimelineUnfoldCard_Card_TimelineEventTextCard
	//	*TimelineUnfoldCard_Card_TimelineEventImageCard
	//	*TimelineUnfoldCard_Card_TimelineEventImagetextCard
	//	*TimelineUnfoldCard_Card_TimelineEventResourceCard
	CardDetail isTimelineUnfoldCard_Card_CardDetail `protobuf_oneof:"card_detail"`
}

func (x *TimelineUnfoldCard_Card) Reset() {
	*x = TimelineUnfoldCard_Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineUnfoldCard_Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineUnfoldCard_Card) ProtoMessage() {}

func (x *TimelineUnfoldCard_Card) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineUnfoldCard_Card.ProtoReflect.Descriptor instead.
func (*TimelineUnfoldCard_Card) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{100, 0}
}

func (m *TimelineUnfoldCard_Card) GetCardDetail() isTimelineUnfoldCard_Card_CardDetail {
	if m != nil {
		return m.CardDetail
	}
	return nil
}

func (x *TimelineUnfoldCard_Card) GetTimelineHeadCard() *TimelineHeadCard {
	if x, ok := x.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineHeadCard); ok {
		return x.TimelineHeadCard
	}
	return nil
}

func (x *TimelineUnfoldCard_Card) GetTimelineEventTextCard() *TimelineEventTextCard {
	if x, ok := x.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventTextCard); ok {
		return x.TimelineEventTextCard
	}
	return nil
}

func (x *TimelineUnfoldCard_Card) GetTimelineEventImageCard() *TimelineEventImageCard {
	if x, ok := x.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventImageCard); ok {
		return x.TimelineEventImageCard
	}
	return nil
}

func (x *TimelineUnfoldCard_Card) GetTimelineEventImagetextCard() *TimelineEventImagetextCard {
	if x, ok := x.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventImagetextCard); ok {
		return x.TimelineEventImagetextCard
	}
	return nil
}

func (x *TimelineUnfoldCard_Card) GetTimelineEventResourceCard() *TimelineEventResourceCard {
	if x, ok := x.GetCardDetail().(*TimelineUnfoldCard_Card_TimelineEventResourceCard); ok {
		return x.TimelineEventResourceCard
	}
	return nil
}

type isTimelineUnfoldCard_Card_CardDetail interface {
	isTimelineUnfoldCard_Card_CardDetail()
}

type TimelineUnfoldCard_Card_TimelineHeadCard struct {
	TimelineHeadCard *TimelineHeadCard `protobuf:"bytes,1,opt,name=timeline_head_card,json=timelineHeadCard,proto3,oneof"`
}

type TimelineUnfoldCard_Card_TimelineEventTextCard struct {
	TimelineEventTextCard *TimelineEventTextCard `protobuf:"bytes,2,opt,name=timeline_event_text_card,json=timelineEventTextCard,proto3,oneof"`
}

type TimelineUnfoldCard_Card_TimelineEventImageCard struct {
	TimelineEventImageCard *TimelineEventImageCard `protobuf:"bytes,3,opt,name=timeline_event_image_card,json=timelineEventImageCard,proto3,oneof"`
}

type TimelineUnfoldCard_Card_TimelineEventImagetextCard struct {
	TimelineEventImagetextCard *TimelineEventImagetextCard `protobuf:"bytes,4,opt,name=timeline_event_imagetext_card,json=timelineEventImagetextCard,proto3,oneof"`
}

type TimelineUnfoldCard_Card_TimelineEventResourceCard struct {
	TimelineEventResourceCard *TimelineEventResourceCard `protobuf:"bytes,5,opt,name=timeline_event_resource_card,json=timelineEventResourceCard,proto3,oneof"`
}

func (*TimelineUnfoldCard_Card_TimelineHeadCard) isTimelineUnfoldCard_Card_CardDetail() {}

func (*TimelineUnfoldCard_Card_TimelineEventTextCard) isTimelineUnfoldCard_Card_CardDetail() {}

func (*TimelineUnfoldCard_Card_TimelineEventImageCard) isTimelineUnfoldCard_Card_CardDetail() {}

func (*TimelineUnfoldCard_Card_TimelineEventImagetextCard) isTimelineUnfoldCard_Card_CardDetail() {}

func (*TimelineUnfoldCard_Card_TimelineEventResourceCard) isTimelineUnfoldCard_Card_CardDetail() {}

type VoteProgress_VoteProgressItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	SourceItemId int64 `protobuf:"varint,3,opt,name=source_item_id,json=sourceItemId,proto3" json:"source_item_id,omitempty"`
}

func (x *VoteProgress_VoteProgressItem) Reset() {
	*x = VoteProgress_VoteProgressItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteProgress_VoteProgressItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteProgress_VoteProgressItem) ProtoMessage() {}

func (x *VoteProgress_VoteProgressItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteProgress_VoteProgressItem.ProtoReflect.Descriptor instead.
func (*VoteProgress_VoteProgressItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP(), []int{115, 0}
}

func (x *VoteProgress_VoteProgressItem) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *VoteProgress_VoteProgressItem) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *VoteProgress_VoteProgressItem) GetSourceItemId() int64 {
	if x != nil {
		return x.SourceItemId
	}
	return 0
}

var File_bilibili_app_nativeact_v1_nativeact_proto protoreflect.FileDescriptor

var file_bilibili_app_nativeact_v1_nativeact_proto_rawDesc = []byte{
	0x0a, 0x29, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x04, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6b, 0x65, 0x79,
	0x22, 0x5c, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7a,
	0x0a, 0x0f, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xbb, 0x01, 0x0a, 0x0f, 0x43,
	0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x72,
	0x6f, 0x75, 0x73, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73,
	0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xfc, 0x09, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f,
	0x70, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x72, 0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2d,
	0x0a, 0x13, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x67, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x72,
	0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2f, 0x0a,
	0x14, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x69, 0x65,
	0x77, 0x4d, 0x6f, 0x72, 0x65, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2b,
	0x0a, 0x12, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x65, 0x77,
	0x4d, 0x6f, 0x72, 0x65, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x63, 0x6d,
	0x64, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x6e,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x2f, 0x0a, 0x14, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x37, 0x0a, 0x18, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x74, 0x5f,
	0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x74, 0x55, 0x6e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x42, 0x67, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x35, 0x0a, 0x17, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x6f,
	0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x1a, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x4e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41,
	0x63, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x49, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x0b, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xb7, 0x01, 0x0a, 0x0d, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x65,
	0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61,
	0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63,
	0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x43,
	0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0xb8, 0x05, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x70,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x34, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x34, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x35, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x36, 0x0a,
	0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x64, 0x69, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x93,
	0x01, 0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x6d, 0x0a,
	0x0f, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x67, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x3d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0c,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x67, 0x76, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x67,
	0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x33, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x67, 0x76, 0x52, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x7e, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68,
	0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22,
	0x45, 0x0a, 0x08, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x22, 0x26, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x80, 0x04, 0x0a, 0x08, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x74, 0x61, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70,
	0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x61, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x62, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43,
	0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x80, 0x02, 0x0a, 0x0e,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x64,
	0x0a, 0x0c, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x22, 0x64, 0x0a, 0x08, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa4, 0x04, 0x0a, 0x08, 0x4c,
	0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65,
	0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x73, 0x67,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x9c, 0x03, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x49, 0x0a,
	0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x55, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61,
	0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x65, 0x65, 0x64, 0x22, 0xdc,
	0x25, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x51, 0x0a,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x15, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x13, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x5d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x48,
	0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x08, 0x74, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x52, 0x0a, 0x0f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x55, 0x0a,
	0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x62,
	0x0a, 0x15, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x41, 0x63, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x12,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x63, 0x74, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69,
	0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x58, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73,
	0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0f, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x5b, 0x0a, 0x12, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65,
	0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x72,
	0x6f, 0x75, 0x73, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4e, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x5b, 0x0a,
	0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f,
	0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x45,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x61, 0x72, 0x64, 0x12, 0x52, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x0e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x63,
	0x6d, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x65, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x57,
	0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x6d, 0x0a, 0x18, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x16,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x43, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x51, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x61, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a,
	0x09, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x4b, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x5b,
	0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x6b, 0x0a, 0x18, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x6e, 0x0a, 0x19, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00,
	0x52, 0x16, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x7a, 0x0a, 0x1d, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x1a, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x77, 0x0a, 0x1c, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x19, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x5b, 0x0a,
	0x12, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x6f,
	0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x61, 0x0a, 0x14, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x6e, 0x66,
	0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x49, 0x0a,
	0x0c, 0x6f, 0x67, 0x76, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x67, 0x76, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x67,
	0x76, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4f, 0x0a, 0x0e, 0x6f, 0x67, 0x76, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x67, 0x76,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x67, 0x76,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x6f, 0x67, 0x76,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x67, 0x76,
	0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x67, 0x76, 0x4d,
	0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x54, 0x0a, 0x0f, 0x6e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x6e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x45, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61,
	0x62, 0x43, 0x61, 0x72, 0x64, 0x12, 0x4e, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x57, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x0b, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x22, 0xd6, 0x07, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x41, 0x52, 0x44,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d,
	0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x10,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f, 0x4d, 0x4f, 0x52, 0x45,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x11, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x59, 0x4e, 0x41, 0x4d,
	0x49, 0x43, 0x5f, 0x41, 0x43, 0x54, 0x5f, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x12, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x13, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x4f, 0x55, 0x53, 0x45, 0x4c, 0x5f, 0x49, 0x4d,
	0x47, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x41, 0x52, 0x4f,
	0x55, 0x53, 0x45, 0x4c, 0x5f, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x15,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x16, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x18, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x19, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x5f, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x1a, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x1b, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44,
	0x5f, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x1c,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45, 0x41, 0x43, 0x54, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x1d, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x56, 0x45, 0x41, 0x43, 0x54, 0x5f, 0x43, 0x41, 0x50, 0x53, 0x55, 0x4c, 0x45, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x1e, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x1f, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x43, 0x4f, 0x4e,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x4f, 0x54, 0x45, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x21, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x22, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x49, 0x4d, 0x45,
	0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x23,
	0x12, 0x1c, 0x0a, 0x18, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x24, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x25, 0x12, 0x21, 0x0a,
	0x1d, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x49, 0x4d, 0x41, 0x47, 0x45, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x26,
	0x12, 0x20, 0x0a, 0x1c, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x27, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x4d,
	0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x49,
	0x4d, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x55, 0x4e, 0x46, 0x4f, 0x4c, 0x44, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x29, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x47, 0x56, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x2a, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x47, 0x56, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x2b, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x47,
	0x56, 0x5f, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x2c, 0x12, 0x13, 0x0a,
	0x0f, 0x4e, 0x41, 0x56, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x2d, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x2e, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x41, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x2f,
	0x12, 0x16, 0x0a, 0x12, 0x4e, 0x45, 0x57, 0x41, 0x43, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45,
	0x52, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x30, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x45, 0x57, 0x41,
	0x43, 0x54, 0x5f, 0x41, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x31, 0x12,
	0x19, 0x0a, 0x15, 0x4e, 0x45, 0x57, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x32, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x33, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x34, 0x42, 0x0d,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x51, 0x0a,
	0x0e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x43, 0x0a, 0x0e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x46, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x61,
	0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x4e, 0x65,
	0x77, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x6d, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x60, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0f, 0x4f, 0x67, 0x76, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x73, 0x0a, 0x0b, 0x4f, 0x67, 0x76, 0x4d,
	0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xaf, 0x04,
	0x0a, 0x0a, 0x4f, 0x67, 0x76, 0x4f, 0x6e, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x33, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x31, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x63, 0x6d, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x4f,
	0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x67, 0x76, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69,
	0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x6a, 0x0a, 0x14, 0x4f, 0x67, 0x76, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x11,
	0x4f, 0x67, 0x76, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x47, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x67, 0x76,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x6e, 0x0a, 0x12, 0x4f, 0x67, 0x76, 0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x85, 0x03, 0x0a, 0x0c, 0x4f, 0x67, 0x76, 0x54, 0x68, 0x72, 0x65, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x67, 0x76, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x36, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac, 0x05, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x64, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x70, 0x44, 0x61, 0x72,
	0x6b, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x46, 0x65, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07,
	0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x62,
	0x52, 0x06, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x22, 0xa8, 0x02, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x69, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74,
	0x73, 0x69, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x55, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x69,
	0x0a, 0x15, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x22, 0xee, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x08, 0x73, 0x6c, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x62, 0x61, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x61, 0x72, 0x52, 0x07, 0x62, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x75, 0x6d, 0x12, 0x3d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0x26, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xf5, 0x02, 0x0a,
	0x08, 0x52, 0x63, 0x6d, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x43,
	0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x10, 0x52, 0x63, 0x6d, 0x64, 0x56, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x77, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x16,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x43, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x3a, 0x0a, 0x09,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x65, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x67, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x67, 0x6f, 0x74,
	0x6f, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x52, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x64, 0x6f,
	0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0xb5, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x40,
	0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x69, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x39, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52,
	0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd2, 0x03, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x32, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x36, 0x0a, 0x05,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x75, 0x62,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x70,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0x6a, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62,
	0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x80, 0x01,
	0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x22, 0xd4, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x13,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4d, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x61,
	0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61,
	0x62, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x49, 0x6d, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x66,
	0x61, 0x64, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x74, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x46, 0x61, 0x64, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x75, 0x6d,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f,
	0x62, 0x74, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x74, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75,
	0x6d, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x80, 0x01, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x70, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x61, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x70, 0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x52, 0x04, 0x74, 0x61, 0x62, 0x73, 0x22, 0x38,
	0x0a, 0x0a, 0x53, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x07, 0x54, 0x61, 0x62,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x62, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x62, 0x67,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0b,
	0x54, 0x61, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x75, 0x72,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x07, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x6f,
	0x61, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x4f, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x0f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x25, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x16, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xc9, 0x02, 0x0a, 0x19, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x63, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x15, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x28, 0x0a, 0x10,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x61, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x6f, 0x0a, 0x19, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x73, 0x0a, 0x17, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xe3, 0x05, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x55,
	0x6e, 0x66, 0x6f, 0x6c, 0x64, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x1a, 0xc4, 0x04, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x5b,
	0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x6b, 0x0a, 0x18, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x15, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x6e, 0x0a, 0x19, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00,
	0x52, 0x16, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x7a, 0x0a, 0x1d, 0x74, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x1a, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x77, 0x0a, 0x1c, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x19, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xc2, 0x03, 0x0a,
	0x0d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x5f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x61,
	0x62, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x12, 0x4f, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x22, 0xf4, 0x01, 0x0a, 0x06, 0x54, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x67, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x67,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x61, 0x62, 0x5f, 0x74, 0x6f,
	0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x61, 0x62, 0x54, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61,
	0x62, 0x5f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x5f, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x61, 0x62, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x04, 0x0a, 0x09, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x31, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x33, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x06,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x09,
	0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x64, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x70, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x09,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x22, 0x64, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x67, 0x63, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x67, 0x63, 0x50, 0x61, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x67, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x67, 0x63, 0x22, 0xe4, 0x02, 0x0a, 0x07, 0x56,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x55, 0x72,
	0x6c, 0x22, 0xcb, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0xaf, 0x02, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x64, 0x6f, 0x6e, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x56, 0x6f, 0x74,
	0x65, 0x64, 0x12, 0x46, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x52, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0xaf, 0x02, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3f,
	0x0a, 0x08, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x07, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x3f,
	0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x07, 0x6c, 0x65, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x43,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x33,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x0c, 0x56,
	0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x60, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x3d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x68, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6c, 0x65, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x61, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x2a, 0x2b, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x6f, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x55, 0x6e, 0x64, 0x6f, 0x10, 0x02, 0x2a, 0x27, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x10, 0x01, 0x2a,
	0x3e, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x72, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x42, 0x61, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x42, 0x61, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x02, 0x2a,
	0x41, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x53, 0x6c, 0x6f, 0x74, 0x4f, 0x75, 0x74, 0x6c, 0x69, 0x6e,
	0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x53, 0x6c, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x6c,
	0x10, 0x02, 0x2a, 0x58, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x03, 0x2a, 0x41, 0x0a, 0x0c,
	0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x52, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x52, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x69, 0x10, 0x02, 0x2a,
	0x34, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x47, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x45, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x61, 0x62, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x61, 0x62,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x2a, 0x4d, 0x0a, 0x11,
	0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x50, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x50, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x10, 0x02, 0x42, 0x46, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69,
	0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x61, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_nativeact_v1_nativeact_proto_rawDescOnce sync.Once
	file_bilibili_app_nativeact_v1_nativeact_proto_rawDescData = file_bilibili_app_nativeact_v1_nativeact_proto_rawDesc
)

func file_bilibili_app_nativeact_v1_nativeact_proto_rawDescGZIP() []byte {
	file_bilibili_app_nativeact_v1_nativeact_proto_rawDescOnce.Do(func() {
		file_bilibili_app_nativeact_v1_nativeact_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_nativeact_v1_nativeact_proto_rawDescData)
	})
	return file_bilibili_app_nativeact_v1_nativeact_proto_rawDescData
}

var file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes = make([]protoimpl.MessageInfo, 120)
var file_bilibili_app_nativeact_v1_nativeact_proto_goTypes = []interface{}{
	(ActionType)(0),                       // 0: bilibili.app.nativeact.v1.ActionType
	(MessageBoxType)(0),                   // 1: bilibili.app.nativeact.v1.MessageBoxType
	(ProgressBar)(0),                      // 2: bilibili.app.nativeact.v1.ProgressBar
	(ProgressSlot)(0),                     // 3: bilibili.app.nativeact.v1.ProgressSlot
	(ProgressStyle)(0),                    // 4: bilibili.app.nativeact.v1.ProgressStyle
	(RedirectType)(0),                     // 5: bilibili.app.nativeact.v1.RedirectType
	(ReserveGoto)(0),                      // 6: bilibili.app.nativeact.v1.ReserveGoto
	(TabStyle)(0),                         // 7: bilibili.app.nativeact.v1.TabStyle
	(VoteProgressStyle)(0),                // 8: bilibili.app.nativeact.v1.VoteProgressStyle
	(ModuleItem_CardDetailCase)(0),        // 9: bilibili.app.nativeact.v1.ModuleItem.CardDetailCase
	(*Area)(nil),                          // 10: bilibili.app.nativeact.v1.Area
	(*Badge)(nil),                         // 11: bilibili.app.nativeact.v1.Badge
	(*CarouselImgCard)(nil),               // 12: bilibili.app.nativeact.v1.CarouselImgCard
	(*CarouselImgItem)(nil),               // 13: bilibili.app.nativeact.v1.CarouselImgItem
	(*CarouselWordCard)(nil),              // 14: bilibili.app.nativeact.v1.CarouselWordCard
	(*CarouselWordItem)(nil),              // 15: bilibili.app.nativeact.v1.CarouselWordItem
	(*Color)(nil),                         // 16: bilibili.app.nativeact.v1.Color
	(*DynamicActMoreCard)(nil),            // 17: bilibili.app.nativeact.v1.DynamicActMoreCard
	(*DynamicCard)(nil),                   // 18: bilibili.app.nativeact.v1.DynamicCard
	(*DynamicMoreCard)(nil),               // 19: bilibili.app.nativeact.v1.DynamicMoreCard
	(*DynamicParams)(nil),                 // 20: bilibili.app.nativeact.v1.DynamicParams
	(*DynamicReq)(nil),                    // 21: bilibili.app.nativeact.v1.DynamicReq
	(*DynamicResp)(nil),                   // 22: bilibili.app.nativeact.v1.DynamicResp
	(*EditorParams)(nil),                  // 23: bilibili.app.nativeact.v1.EditorParams
	(*EditorRecommendCard)(nil),           // 24: bilibili.app.nativeact.v1.EditorRecommendCard
	(*EditorReq)(nil),                     // 25: bilibili.app.nativeact.v1.EditorReq
	(*EditorResp)(nil),                    // 26: bilibili.app.nativeact.v1.EditorResp
	(*FollowOgvParams)(nil),               // 27: bilibili.app.nativeact.v1.FollowOgvParams
	(*FollowOgvReq)(nil),                  // 28: bilibili.app.nativeact.v1.FollowOgvReq
	(*FollowOgvRly)(nil),                  // 29: bilibili.app.nativeact.v1.FollowOgvRly
	(*GameCard)(nil),                      // 30: bilibili.app.nativeact.v1.GameCard
	(*HeaderCard)(nil),                    // 31: bilibili.app.nativeact.v1.HeaderCard
	(*IconCard)(nil),                      // 32: bilibili.app.nativeact.v1.IconCard
	(*IconItem)(nil),                      // 33: bilibili.app.nativeact.v1.IconItem
	(*ImageTitleCard)(nil),                // 34: bilibili.app.nativeact.v1.ImageTitleCard
	(*IndexReq)(nil),                      // 35: bilibili.app.nativeact.v1.IndexReq
	(*InlineIndexReq)(nil),                // 36: bilibili.app.nativeact.v1.InlineIndexReq
	(*LayerDynamic)(nil),                  // 37: bilibili.app.nativeact.v1.LayerDynamic
	(*LiveCard)(nil),                      // 38: bilibili.app.nativeact.v1.LiveCard
	(*LiveItem)(nil),                      // 39: bilibili.app.nativeact.v1.LiveItem
	(*LiveWatchedShow)(nil),               // 40: bilibili.app.nativeact.v1.LiveWatchedShow
	(*MessageBox)(nil),                    // 41: bilibili.app.nativeact.v1.MessageBox
	(*Module)(nil),                        // 42: bilibili.app.nativeact.v1.Module
	(*ModuleItem)(nil),                    // 43: bilibili.app.nativeact.v1.ModuleItem
	(*NavigationCard)(nil),                // 44: bilibili.app.nativeact.v1.NavigationCard
	(*NavigationItem)(nil),                // 45: bilibili.app.nativeact.v1.NavigationItem
	(*NewactAward)(nil),                   // 46: bilibili.app.nativeact.v1.NewactAward
	(*NewactAwardItem)(nil),               // 47: bilibili.app.nativeact.v1.NewactAwardItem
	(*NewactFeature)(nil),                 // 48: bilibili.app.nativeact.v1.NewactFeature
	(*NewactHeader)(nil),                  // 49: bilibili.app.nativeact.v1.NewactHeader
	(*NewactStatementItem)(nil),           // 50: bilibili.app.nativeact.v1.NewactStatementItem
	(*NewactStatement)(nil),               // 51: bilibili.app.nativeact.v1.NewactStatement
	(*OfficialInfo)(nil),                  // 52: bilibili.app.nativeact.v1.OfficialInfo
	(*OgvFollowButton)(nil),               // 53: bilibili.app.nativeact.v1.OgvFollowButton
	(*OgvMoreCard)(nil),                   // 54: bilibili.app.nativeact.v1.OgvMoreCard
	(*OgvOneCard)(nil),                    // 55: bilibili.app.nativeact.v1.OgvOneCard
	(*OgvSupernatantParams)(nil),          // 56: bilibili.app.nativeact.v1.OgvSupernatantParams
	(*OgvSupernatantReq)(nil),             // 57: bilibili.app.nativeact.v1.OgvSupernatantReq
	(*OgvSupernatantResp)(nil),            // 58: bilibili.app.nativeact.v1.OgvSupernatantResp
	(*OgvThreeCard)(nil),                  // 59: bilibili.app.nativeact.v1.OgvThreeCard
	(*PageResp)(nil),                      // 60: bilibili.app.nativeact.v1.PageResp
	(*PageShare)(nil),                     // 61: bilibili.app.nativeact.v1.PageShare
	(*ParticipationCard)(nil),             // 62: bilibili.app.nativeact.v1.ParticipationCard
	(*ParticipationCardItem)(nil),         // 63: bilibili.app.nativeact.v1.ParticipationCardItem
	(*PlayerDimension)(nil),               // 64: bilibili.app.nativeact.v1.PlayerDimension
	(*ProgressCard)(nil),                  // 65: bilibili.app.nativeact.v1.ProgressCard
	(*ProgressEvent)(nil),                 // 66: bilibili.app.nativeact.v1.ProgressEvent
	(*ProgressEventItem)(nil),             // 67: bilibili.app.nativeact.v1.ProgressEventItem
	(*ProgressNode)(nil),                  // 68: bilibili.app.nativeact.v1.ProgressNode
	(*ProgressReq)(nil),                   // 69: bilibili.app.nativeact.v1.ProgressReq
	(*ProgressRly)(nil),                   // 70: bilibili.app.nativeact.v1.ProgressRly
	(*RcmdCard)(nil),                      // 71: bilibili.app.nativeact.v1.RcmdCard
	(*RcmdVerticalCard)(nil),              // 72: bilibili.app.nativeact.v1.RcmdVerticalCard
	(*RelativeactCapsuleCard)(nil),        // 73: bilibili.app.nativeact.v1.RelativeactCapsuleCard
	(*RelativeactCapsuleItem)(nil),        // 74: bilibili.app.nativeact.v1.RelativeactCapsuleItem
	(*RelativeactCard)(nil),               // 75: bilibili.app.nativeact.v1.RelativeactCard
	(*ReplyCard)(nil),                     // 76: bilibili.app.nativeact.v1.ReplyCard
	(*ReportDic)(nil),                     // 77: bilibili.app.nativeact.v1.ReportDic
	(*ReserveButton)(nil),                 // 78: bilibili.app.nativeact.v1.ReserveButton
	(*ReserveCard)(nil),                   // 79: bilibili.app.nativeact.v1.ReserveCard
	(*ReserveParams)(nil),                 // 80: bilibili.app.nativeact.v1.ReserveParams
	(*ReserveReq)(nil),                    // 81: bilibili.app.nativeact.v1.ReserveReq
	(*ReserveRly)(nil),                    // 82: bilibili.app.nativeact.v1.ReserveRly
	(*ResourceCard)(nil),                  // 83: bilibili.app.nativeact.v1.ResourceCard
	(*ResourceMoreCard)(nil),              // 84: bilibili.app.nativeact.v1.ResourceMoreCard
	(*ResourceParams)(nil),                // 85: bilibili.app.nativeact.v1.ResourceParams
	(*ResourceReq)(nil),                   // 86: bilibili.app.nativeact.v1.ResourceReq
	(*ResourceResp)(nil),                  // 87: bilibili.app.nativeact.v1.ResourceResp
	(*SelectCard)(nil),                    // 88: bilibili.app.nativeact.v1.SelectCard
	(*SelectItem)(nil),                    // 89: bilibili.app.nativeact.v1.SelectItem
	(*Setting)(nil),                       // 90: bilibili.app.nativeact.v1.Setting
	(*Share)(nil),                         // 91: bilibili.app.nativeact.v1.Share
	(*SizeImage)(nil),                     // 92: bilibili.app.nativeact.v1.SizeImage
	(*StatementCard)(nil),                 // 93: bilibili.app.nativeact.v1.StatementCard
	(*SubpageData)(nil),                   // 94: bilibili.app.nativeact.v1.SubpageData
	(*SubpageTab)(nil),                    // 95: bilibili.app.nativeact.v1.SubpageTab
	(*TabCard)(nil),                       // 96: bilibili.app.nativeact.v1.TabCard
	(*TabIndexReq)(nil),                   // 97: bilibili.app.nativeact.v1.TabIndexReq
	(*TabItem)(nil),                       // 98: bilibili.app.nativeact.v1.TabItem
	(*TextCard)(nil),                      // 99: bilibili.app.nativeact.v1.TextCard
	(*TextTitleCard)(nil),                 // 100: bilibili.app.nativeact.v1.TextTitleCard
	(*TimelineEventImageCard)(nil),        // 101: bilibili.app.nativeact.v1.TimelineEventImageCard
	(*TimelineEventImagetextCard)(nil),    // 102: bilibili.app.nativeact.v1.TimelineEventImagetextCard
	(*TimelineEventResourceCard)(nil),     // 103: bilibili.app.nativeact.v1.TimelineEventResourceCard
	(*TimelineEventTextCard)(nil),         // 104: bilibili.app.nativeact.v1.TimelineEventTextCard
	(*TimelineHeadCard)(nil),              // 105: bilibili.app.nativeact.v1.TimelineHeadCard
	(*TimelineMoreCard)(nil),              // 106: bilibili.app.nativeact.v1.TimelineMoreCard
	(*TimelineSupernatantParams)(nil),     // 107: bilibili.app.nativeact.v1.TimelineSupernatantParams
	(*TimelineSupernatantReq)(nil),        // 108: bilibili.app.nativeact.v1.TimelineSupernatantReq
	(*TimelineSupernatantResp)(nil),       // 109: bilibili.app.nativeact.v1.TimelineSupernatantResp
	(*TimelineUnfoldCard)(nil),            // 110: bilibili.app.nativeact.v1.TimelineUnfoldCard
	(*TopicIndexReq)(nil),                 // 111: bilibili.app.nativeact.v1.TopicIndexReq
	(*TopTab)(nil),                        // 112: bilibili.app.nativeact.v1.TopTab
	(*VideoCard)(nil),                     // 113: bilibili.app.nativeact.v1.VideoCard
	(*VideoMoreCard)(nil),                 // 114: bilibili.app.nativeact.v1.VideoMoreCard
	(*VideoParams)(nil),                   // 115: bilibili.app.nativeact.v1.VideoParams
	(*VideoReq)(nil),                      // 116: bilibili.app.nativeact.v1.VideoReq
	(*VideoResp)(nil),                     // 117: bilibili.app.nativeact.v1.VideoResp
	(*VideoRights)(nil),                   // 118: bilibili.app.nativeact.v1.VideoRights
	(*VipInfo)(nil),                       // 119: bilibili.app.nativeact.v1.VipInfo
	(*VipLabel)(nil),                      // 120: bilibili.app.nativeact.v1.VipLabel
	(*VoteButton)(nil),                    // 121: bilibili.app.nativeact.v1.VoteButton
	(*VoteCard)(nil),                      // 122: bilibili.app.nativeact.v1.VoteCard
	(*VoteNum)(nil),                       // 123: bilibili.app.nativeact.v1.VoteNum
	(*VoteParams)(nil),                    // 124: bilibili.app.nativeact.v1.VoteParams
	(*VoteProgress)(nil),                  // 125: bilibili.app.nativeact.v1.VoteProgress
	(*VoteReq)(nil),                       // 126: bilibili.app.nativeact.v1.VoteReq
	(*VoteResp)(nil),                      // 127: bilibili.app.nativeact.v1.VoteResp
	(*TimelineUnfoldCard_Card)(nil),       // 128: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card
	(*VoteProgress_VoteProgressItem)(nil), // 129: bilibili.app.nativeact.v1.VoteProgress.VoteProgressItem
	(*v2.DynamicItem)(nil),                // 130: bilibili.app.dynamic.v2.DynamicItem
	(*any1.Any)(nil),                      // 131: google.protobuf.Any
	(*v1.PlayerArgs)(nil),                 // 132: bilibili.app.archive.middleware.v1.PlayerArgs
}
var file_bilibili_app_nativeact_v1_nativeact_proto_depIdxs = []int32{
	13,  // 0: bilibili.app.nativeact.v1.CarouselImgCard.images:type_name -> bilibili.app.nativeact.v1.CarouselImgItem
	112, // 1: bilibili.app.nativeact.v1.CarouselImgItem.top_tab:type_name -> bilibili.app.nativeact.v1.TopTab
	15,  // 2: bilibili.app.nativeact.v1.CarouselWordCard.words:type_name -> bilibili.app.nativeact.v1.CarouselWordItem
	94,  // 3: bilibili.app.nativeact.v1.DynamicActMoreCard.subpage_data:type_name -> bilibili.app.nativeact.v1.SubpageData
	130, // 4: bilibili.app.nativeact.v1.DynamicCard.dynamic:type_name -> bilibili.app.dynamic.v2.DynamicItem
	94,  // 5: bilibili.app.nativeact.v1.DynamicMoreCard.subpage_data:type_name -> bilibili.app.nativeact.v1.SubpageData
	131, // 6: bilibili.app.nativeact.v1.DynamicParams.feed_offset:type_name -> google.protobuf.Any
	20,  // 7: bilibili.app.nativeact.v1.DynamicReq.params:type_name -> bilibili.app.nativeact.v1.DynamicParams
	132, // 8: bilibili.app.nativeact.v1.DynamicReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	42,  // 9: bilibili.app.nativeact.v1.DynamicResp.module:type_name -> bilibili.app.nativeact.v1.Module
	91,  // 10: bilibili.app.nativeact.v1.EditorRecommendCard.share:type_name -> bilibili.app.nativeact.v1.Share
	11,  // 11: bilibili.app.nativeact.v1.EditorRecommendCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	77,  // 12: bilibili.app.nativeact.v1.EditorRecommendCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	90,  // 13: bilibili.app.nativeact.v1.EditorRecommendCard.setting:type_name -> bilibili.app.nativeact.v1.Setting
	23,  // 14: bilibili.app.nativeact.v1.EditorReq.params:type_name -> bilibili.app.nativeact.v1.EditorParams
	42,  // 15: bilibili.app.nativeact.v1.EditorResp.module:type_name -> bilibili.app.nativeact.v1.Module
	0,   // 16: bilibili.app.nativeact.v1.FollowOgvParams.action:type_name -> bilibili.app.nativeact.v1.ActionType
	27,  // 17: bilibili.app.nativeact.v1.FollowOgvReq.params:type_name -> bilibili.app.nativeact.v1.FollowOgvParams
	33,  // 18: bilibili.app.nativeact.v1.IconCard.items:type_name -> bilibili.app.nativeact.v1.IconItem
	132, // 19: bilibili.app.nativeact.v1.IndexReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	132, // 20: bilibili.app.nativeact.v1.InlineIndexReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	130, // 21: bilibili.app.nativeact.v1.LayerDynamic.dynamic:type_name -> bilibili.app.dynamic.v2.DynamicItem
	39,  // 22: bilibili.app.nativeact.v1.LiveCard.content:type_name -> bilibili.app.nativeact.v1.LiveItem
	40,  // 23: bilibili.app.nativeact.v1.LiveItem.watched_show:type_name -> bilibili.app.nativeact.v1.LiveWatchedShow
	1,   // 24: bilibili.app.nativeact.v1.MessageBox.type:type_name -> bilibili.app.nativeact.v1.MessageBoxType
	16,  // 25: bilibili.app.nativeact.v1.Module.module_color:type_name -> bilibili.app.nativeact.v1.Color
	90,  // 26: bilibili.app.nativeact.v1.Module.module_setting:type_name -> bilibili.app.nativeact.v1.Setting
	43,  // 27: bilibili.app.nativeact.v1.Module.module_items:type_name -> bilibili.app.nativeact.v1.ModuleItem
	9,   // 28: bilibili.app.nativeact.v1.ModuleItem.card_type:type_name -> bilibili.app.nativeact.v1.ModuleItem.CardDetailCase
	24,  // 29: bilibili.app.nativeact.v1.ModuleItem.editor_recommend_card:type_name -> bilibili.app.nativeact.v1.EditorRecommendCard
	62,  // 30: bilibili.app.nativeact.v1.ModuleItem.participation_card:type_name -> bilibili.app.nativeact.v1.ParticipationCard
	31,  // 31: bilibili.app.nativeact.v1.ModuleItem.header_card:type_name -> bilibili.app.nativeact.v1.HeaderCard
	18,  // 32: bilibili.app.nativeact.v1.ModuleItem.dynamic_card:type_name -> bilibili.app.nativeact.v1.DynamicCard
	99,  // 33: bilibili.app.nativeact.v1.ModuleItem.text_card:type_name -> bilibili.app.nativeact.v1.TextCard
	100, // 34: bilibili.app.nativeact.v1.ModuleItem.text_title_card:type_name -> bilibili.app.nativeact.v1.TextTitleCard
	34,  // 35: bilibili.app.nativeact.v1.ModuleItem.image_title_card:type_name -> bilibili.app.nativeact.v1.ImageTitleCard
	19,  // 36: bilibili.app.nativeact.v1.ModuleItem.dynamic_more_card:type_name -> bilibili.app.nativeact.v1.DynamicMoreCard
	17,  // 37: bilibili.app.nativeact.v1.ModuleItem.dynamic_act_more_card:type_name -> bilibili.app.nativeact.v1.DynamicActMoreCard
	38,  // 38: bilibili.app.nativeact.v1.ModuleItem.live_card:type_name -> bilibili.app.nativeact.v1.LiveCard
	12,  // 39: bilibili.app.nativeact.v1.ModuleItem.carousel_img_card:type_name -> bilibili.app.nativeact.v1.CarouselImgCard
	14,  // 40: bilibili.app.nativeact.v1.ModuleItem.carousel_word_card:type_name -> bilibili.app.nativeact.v1.CarouselWordCard
	83,  // 41: bilibili.app.nativeact.v1.ModuleItem.resource_card:type_name -> bilibili.app.nativeact.v1.ResourceCard
	84,  // 42: bilibili.app.nativeact.v1.ModuleItem.resource_more_card:type_name -> bilibili.app.nativeact.v1.ResourceMoreCard
	30,  // 43: bilibili.app.nativeact.v1.ModuleItem.game_card:type_name -> bilibili.app.nativeact.v1.GameCard
	113, // 44: bilibili.app.nativeact.v1.ModuleItem.video_card:type_name -> bilibili.app.nativeact.v1.VideoCard
	114, // 45: bilibili.app.nativeact.v1.ModuleItem.video_more_card:type_name -> bilibili.app.nativeact.v1.VideoMoreCard
	71,  // 46: bilibili.app.nativeact.v1.ModuleItem.recommend_card:type_name -> bilibili.app.nativeact.v1.RcmdCard
	72,  // 47: bilibili.app.nativeact.v1.ModuleItem.recommend_vertical_card:type_name -> bilibili.app.nativeact.v1.RcmdVerticalCard
	75,  // 48: bilibili.app.nativeact.v1.ModuleItem.relativeact_card:type_name -> bilibili.app.nativeact.v1.RelativeactCard
	73,  // 49: bilibili.app.nativeact.v1.ModuleItem.relativeact_capsule_card:type_name -> bilibili.app.nativeact.v1.RelativeactCapsuleCard
	93,  // 50: bilibili.app.nativeact.v1.ModuleItem.statement_card:type_name -> bilibili.app.nativeact.v1.StatementCard
	32,  // 51: bilibili.app.nativeact.v1.ModuleItem.icon_card:type_name -> bilibili.app.nativeact.v1.IconCard
	122, // 52: bilibili.app.nativeact.v1.ModuleItem.vote_card:type_name -> bilibili.app.nativeact.v1.VoteCard
	79,  // 53: bilibili.app.nativeact.v1.ModuleItem.reserve_card:type_name -> bilibili.app.nativeact.v1.ReserveCard
	105, // 54: bilibili.app.nativeact.v1.ModuleItem.timeline_head_card:type_name -> bilibili.app.nativeact.v1.TimelineHeadCard
	104, // 55: bilibili.app.nativeact.v1.ModuleItem.timeline_event_text_card:type_name -> bilibili.app.nativeact.v1.TimelineEventTextCard
	101, // 56: bilibili.app.nativeact.v1.ModuleItem.timeline_event_image_card:type_name -> bilibili.app.nativeact.v1.TimelineEventImageCard
	102, // 57: bilibili.app.nativeact.v1.ModuleItem.timeline_event_imagetext_card:type_name -> bilibili.app.nativeact.v1.TimelineEventImagetextCard
	103, // 58: bilibili.app.nativeact.v1.ModuleItem.timeline_event_resource_card:type_name -> bilibili.app.nativeact.v1.TimelineEventResourceCard
	106, // 59: bilibili.app.nativeact.v1.ModuleItem.timeline_more_card:type_name -> bilibili.app.nativeact.v1.TimelineMoreCard
	110, // 60: bilibili.app.nativeact.v1.ModuleItem.timeline_unfold_card:type_name -> bilibili.app.nativeact.v1.TimelineUnfoldCard
	55,  // 61: bilibili.app.nativeact.v1.ModuleItem.ogv_one_card:type_name -> bilibili.app.nativeact.v1.OgvOneCard
	59,  // 62: bilibili.app.nativeact.v1.ModuleItem.ogv_three_card:type_name -> bilibili.app.nativeact.v1.OgvThreeCard
	54,  // 63: bilibili.app.nativeact.v1.ModuleItem.ogv_more_card:type_name -> bilibili.app.nativeact.v1.OgvMoreCard
	44,  // 64: bilibili.app.nativeact.v1.ModuleItem.navigation_card:type_name -> bilibili.app.nativeact.v1.NavigationCard
	76,  // 65: bilibili.app.nativeact.v1.ModuleItem.reply_card:type_name -> bilibili.app.nativeact.v1.ReplyCard
	96,  // 66: bilibili.app.nativeact.v1.ModuleItem.tab_card:type_name -> bilibili.app.nativeact.v1.TabCard
	49,  // 67: bilibili.app.nativeact.v1.ModuleItem.newact_header:type_name -> bilibili.app.nativeact.v1.NewactHeader
	46,  // 68: bilibili.app.nativeact.v1.ModuleItem.newact_award:type_name -> bilibili.app.nativeact.v1.NewactAward
	51,  // 69: bilibili.app.nativeact.v1.ModuleItem.newact_statement:type_name -> bilibili.app.nativeact.v1.NewactStatement
	65,  // 70: bilibili.app.nativeact.v1.ModuleItem.progress_card:type_name -> bilibili.app.nativeact.v1.ProgressCard
	88,  // 71: bilibili.app.nativeact.v1.ModuleItem.select_card:type_name -> bilibili.app.nativeact.v1.SelectCard
	45,  // 72: bilibili.app.nativeact.v1.NavigationCard.items:type_name -> bilibili.app.nativeact.v1.NavigationItem
	47,  // 73: bilibili.app.nativeact.v1.NewactAward.items:type_name -> bilibili.app.nativeact.v1.NewactAwardItem
	48,  // 74: bilibili.app.nativeact.v1.NewactHeader.features:type_name -> bilibili.app.nativeact.v1.NewactFeature
	50,  // 75: bilibili.app.nativeact.v1.NewactStatement.items:type_name -> bilibili.app.nativeact.v1.NewactStatementItem
	53,  // 76: bilibili.app.nativeact.v1.OgvOneCard.follow_button:type_name -> bilibili.app.nativeact.v1.OgvFollowButton
	11,  // 77: bilibili.app.nativeact.v1.OgvOneCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	77,  // 78: bilibili.app.nativeact.v1.OgvOneCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	56,  // 79: bilibili.app.nativeact.v1.OgvSupernatantReq.params:type_name -> bilibili.app.nativeact.v1.OgvSupernatantParams
	42,  // 80: bilibili.app.nativeact.v1.OgvSupernatantResp.module:type_name -> bilibili.app.nativeact.v1.Module
	53,  // 81: bilibili.app.nativeact.v1.OgvThreeCard.follow_button:type_name -> bilibili.app.nativeact.v1.OgvFollowButton
	11,  // 82: bilibili.app.nativeact.v1.OgvThreeCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	77,  // 83: bilibili.app.nativeact.v1.OgvThreeCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	16,  // 84: bilibili.app.nativeact.v1.PageResp.page_color:type_name -> bilibili.app.nativeact.v1.Color
	61,  // 85: bilibili.app.nativeact.v1.PageResp.page_share:type_name -> bilibili.app.nativeact.v1.PageShare
	42,  // 86: bilibili.app.nativeact.v1.PageResp.page_header:type_name -> bilibili.app.nativeact.v1.Module
	42,  // 87: bilibili.app.nativeact.v1.PageResp.participation:type_name -> bilibili.app.nativeact.v1.Module
	42,  // 88: bilibili.app.nativeact.v1.PageResp.module_list:type_name -> bilibili.app.nativeact.v1.Module
	37,  // 89: bilibili.app.nativeact.v1.PageResp.layer_dynamic:type_name -> bilibili.app.nativeact.v1.LayerDynamic
	112, // 90: bilibili.app.nativeact.v1.PageResp.top_tab:type_name -> bilibili.app.nativeact.v1.TopTab
	63,  // 91: bilibili.app.nativeact.v1.ParticipationCard.items:type_name -> bilibili.app.nativeact.v1.ParticipationCardItem
	4,   // 92: bilibili.app.nativeact.v1.ProgressCard.style:type_name -> bilibili.app.nativeact.v1.ProgressStyle
	3,   // 93: bilibili.app.nativeact.v1.ProgressCard.slot_type:type_name -> bilibili.app.nativeact.v1.ProgressSlot
	2,   // 94: bilibili.app.nativeact.v1.ProgressCard.bar_type:type_name -> bilibili.app.nativeact.v1.ProgressBar
	68,  // 95: bilibili.app.nativeact.v1.ProgressCard.nodes:type_name -> bilibili.app.nativeact.v1.ProgressNode
	67,  // 96: bilibili.app.nativeact.v1.ProgressEvent.items:type_name -> bilibili.app.nativeact.v1.ProgressEventItem
	66,  // 97: bilibili.app.nativeact.v1.ProgressRly.event:type_name -> bilibili.app.nativeact.v1.ProgressEvent
	52,  // 98: bilibili.app.nativeact.v1.RcmdCard.official:type_name -> bilibili.app.nativeact.v1.OfficialInfo
	119, // 99: bilibili.app.nativeact.v1.RcmdCard.vip:type_name -> bilibili.app.nativeact.v1.VipInfo
	5,   // 100: bilibili.app.nativeact.v1.RcmdCard.redirect_type:type_name -> bilibili.app.nativeact.v1.RedirectType
	71,  // 101: bilibili.app.nativeact.v1.RcmdVerticalCard.items:type_name -> bilibili.app.nativeact.v1.RcmdCard
	74,  // 102: bilibili.app.nativeact.v1.RelativeactCapsuleCard.items:type_name -> bilibili.app.nativeact.v1.RelativeactCapsuleItem
	6,   // 103: bilibili.app.nativeact.v1.ReserveButton.goto:type_name -> bilibili.app.nativeact.v1.ReserveGoto
	41,  // 104: bilibili.app.nativeact.v1.ReserveButton.message_box:type_name -> bilibili.app.nativeact.v1.MessageBox
	78,  // 105: bilibili.app.nativeact.v1.ReserveCard.button:type_name -> bilibili.app.nativeact.v1.ReserveButton
	80,  // 106: bilibili.app.nativeact.v1.ReserveReq.params:type_name -> bilibili.app.nativeact.v1.ReserveParams
	11,  // 107: bilibili.app.nativeact.v1.ResourceCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	77,  // 108: bilibili.app.nativeact.v1.ResourceCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	94,  // 109: bilibili.app.nativeact.v1.ResourceMoreCard.subpage_data:type_name -> bilibili.app.nativeact.v1.SubpageData
	85,  // 110: bilibili.app.nativeact.v1.ResourceReq.params:type_name -> bilibili.app.nativeact.v1.ResourceParams
	42,  // 111: bilibili.app.nativeact.v1.ResourceResp.module:type_name -> bilibili.app.nativeact.v1.Module
	89,  // 112: bilibili.app.nativeact.v1.SelectCard.items:type_name -> bilibili.app.nativeact.v1.SelectItem
	61,  // 113: bilibili.app.nativeact.v1.SelectItem.page_share:type_name -> bilibili.app.nativeact.v1.PageShare
	95,  // 114: bilibili.app.nativeact.v1.SubpageData.tabs:type_name -> bilibili.app.nativeact.v1.SubpageTab
	7,   // 115: bilibili.app.nativeact.v1.TabCard.style:type_name -> bilibili.app.nativeact.v1.TabStyle
	98,  // 116: bilibili.app.nativeact.v1.TabCard.items:type_name -> bilibili.app.nativeact.v1.TabItem
	92,  // 117: bilibili.app.nativeact.v1.TabCard.bg_image:type_name -> bilibili.app.nativeact.v1.SizeImage
	132, // 118: bilibili.app.nativeact.v1.TabIndexReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	92,  // 119: bilibili.app.nativeact.v1.TabItem.selected_image:type_name -> bilibili.app.nativeact.v1.SizeImage
	92,  // 120: bilibili.app.nativeact.v1.TabItem.unselected_image:type_name -> bilibili.app.nativeact.v1.SizeImage
	92,  // 121: bilibili.app.nativeact.v1.TimelineEventImageCard.image:type_name -> bilibili.app.nativeact.v1.SizeImage
	11,  // 122: bilibili.app.nativeact.v1.TimelineEventResourceCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	77,  // 123: bilibili.app.nativeact.v1.TimelineEventResourceCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	107, // 124: bilibili.app.nativeact.v1.TimelineSupernatantReq.params:type_name -> bilibili.app.nativeact.v1.TimelineSupernatantParams
	42,  // 125: bilibili.app.nativeact.v1.TimelineSupernatantResp.module:type_name -> bilibili.app.nativeact.v1.Module
	128, // 126: bilibili.app.nativeact.v1.TimelineUnfoldCard.cards:type_name -> bilibili.app.nativeact.v1.TimelineUnfoldCard.Card
	132, // 127: bilibili.app.nativeact.v1.TopicIndexReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	11,  // 128: bilibili.app.nativeact.v1.VideoCard.badge:type_name -> bilibili.app.nativeact.v1.Badge
	118, // 129: bilibili.app.nativeact.v1.VideoCard.rights:type_name -> bilibili.app.nativeact.v1.VideoRights
	64,  // 130: bilibili.app.nativeact.v1.VideoCard.dimension:type_name -> bilibili.app.nativeact.v1.PlayerDimension
	77,  // 131: bilibili.app.nativeact.v1.VideoCard.report_dic:type_name -> bilibili.app.nativeact.v1.ReportDic
	94,  // 132: bilibili.app.nativeact.v1.VideoMoreCard.subpage_data:type_name -> bilibili.app.nativeact.v1.SubpageData
	115, // 133: bilibili.app.nativeact.v1.VideoReq.params:type_name -> bilibili.app.nativeact.v1.VideoParams
	42,  // 134: bilibili.app.nativeact.v1.VideoResp.module:type_name -> bilibili.app.nativeact.v1.Module
	120, // 135: bilibili.app.nativeact.v1.VipInfo.label:type_name -> bilibili.app.nativeact.v1.VipLabel
	10,  // 136: bilibili.app.nativeact.v1.VoteButton.area:type_name -> bilibili.app.nativeact.v1.Area
	41,  // 137: bilibili.app.nativeact.v1.VoteButton.message_box:type_name -> bilibili.app.nativeact.v1.MessageBox
	92,  // 138: bilibili.app.nativeact.v1.VoteCard.bg_image:type_name -> bilibili.app.nativeact.v1.SizeImage
	121, // 139: bilibili.app.nativeact.v1.VoteCard.buttons:type_name -> bilibili.app.nativeact.v1.VoteButton
	123, // 140: bilibili.app.nativeact.v1.VoteCard.left_num:type_name -> bilibili.app.nativeact.v1.VoteNum
	125, // 141: bilibili.app.nativeact.v1.VoteCard.progress:type_name -> bilibili.app.nativeact.v1.VoteProgress
	10,  // 142: bilibili.app.nativeact.v1.VoteNum.area:type_name -> bilibili.app.nativeact.v1.Area
	10,  // 143: bilibili.app.nativeact.v1.VoteProgress.area:type_name -> bilibili.app.nativeact.v1.Area
	8,   // 144: bilibili.app.nativeact.v1.VoteProgress.style:type_name -> bilibili.app.nativeact.v1.VoteProgressStyle
	129, // 145: bilibili.app.nativeact.v1.VoteProgress.items:type_name -> bilibili.app.nativeact.v1.VoteProgress.VoteProgressItem
	124, // 146: bilibili.app.nativeact.v1.VoteReq.params:type_name -> bilibili.app.nativeact.v1.VoteParams
	105, // 147: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card.timeline_head_card:type_name -> bilibili.app.nativeact.v1.TimelineHeadCard
	104, // 148: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card.timeline_event_text_card:type_name -> bilibili.app.nativeact.v1.TimelineEventTextCard
	101, // 149: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card.timeline_event_image_card:type_name -> bilibili.app.nativeact.v1.TimelineEventImageCard
	102, // 150: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card.timeline_event_imagetext_card:type_name -> bilibili.app.nativeact.v1.TimelineEventImagetextCard
	103, // 151: bilibili.app.nativeact.v1.TimelineUnfoldCard.Card.timeline_event_resource_card:type_name -> bilibili.app.nativeact.v1.TimelineEventResourceCard
	152, // [152:152] is the sub-list for method output_type
	152, // [152:152] is the sub-list for method input_type
	152, // [152:152] is the sub-list for extension type_name
	152, // [152:152] is the sub-list for extension extendee
	0,   // [0:152] is the sub-list for field type_name
}

func init() { file_bilibili_app_nativeact_v1_nativeact_proto_init() }
func file_bilibili_app_nativeact_v1_nativeact_proto_init() {
	if File_bilibili_app_nativeact_v1_nativeact_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Badge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselImgCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselImgItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselWordCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarouselWordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicActMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorRecommendCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowOgvParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowOgvReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowOgvRly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageTitleCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InlineIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveWatchedShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavigationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavigationItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactAwardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactStatementItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewactStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvFollowButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvOneCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvSupernatantParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvSupernatantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvSupernatantResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvThreeCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipationCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipationCardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressEventItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressRly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdVerticalCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelativeactCapsuleCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelativeactCapsuleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelativeactCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportDic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveRly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Setting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Share); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SizeImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatementCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubpageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubpageTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextTitleCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineEventImageCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineEventImagetextCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineEventResourceCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineEventTextCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineHeadCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineSupernatantParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineSupernatantReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineSupernatantResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineUnfoldCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMoreCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineUnfoldCard_Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteProgress_VoteProgressItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*ModuleItem_EditorRecommendCard)(nil),
		(*ModuleItem_ParticipationCard)(nil),
		(*ModuleItem_HeaderCard)(nil),
		(*ModuleItem_DynamicCard)(nil),
		(*ModuleItem_TextCard)(nil),
		(*ModuleItem_TextTitleCard)(nil),
		(*ModuleItem_ImageTitleCard)(nil),
		(*ModuleItem_DynamicMoreCard)(nil),
		(*ModuleItem_DynamicActMoreCard)(nil),
		(*ModuleItem_LiveCard)(nil),
		(*ModuleItem_CarouselImgCard)(nil),
		(*ModuleItem_CarouselWordCard)(nil),
		(*ModuleItem_ResourceCard)(nil),
		(*ModuleItem_ResourceMoreCard)(nil),
		(*ModuleItem_GameCard)(nil),
		(*ModuleItem_VideoCard)(nil),
		(*ModuleItem_VideoMoreCard)(nil),
		(*ModuleItem_RecommendCard)(nil),
		(*ModuleItem_RecommendVerticalCard)(nil),
		(*ModuleItem_RelativeactCard)(nil),
		(*ModuleItem_RelativeactCapsuleCard)(nil),
		(*ModuleItem_StatementCard)(nil),
		(*ModuleItem_IconCard)(nil),
		(*ModuleItem_VoteCard)(nil),
		(*ModuleItem_ReserveCard)(nil),
		(*ModuleItem_TimelineHeadCard)(nil),
		(*ModuleItem_TimelineEventTextCard)(nil),
		(*ModuleItem_TimelineEventImageCard)(nil),
		(*ModuleItem_TimelineEventImagetextCard)(nil),
		(*ModuleItem_TimelineEventResourceCard)(nil),
		(*ModuleItem_TimelineMoreCard)(nil),
		(*ModuleItem_TimelineUnfoldCard)(nil),
		(*ModuleItem_OgvOneCard)(nil),
		(*ModuleItem_OgvThreeCard)(nil),
		(*ModuleItem_OgvMoreCard)(nil),
		(*ModuleItem_NavigationCard)(nil),
		(*ModuleItem_ReplyCard)(nil),
		(*ModuleItem_TabCard)(nil),
		(*ModuleItem_NewactHeader)(nil),
		(*ModuleItem_NewactAward)(nil),
		(*ModuleItem_NewactStatement)(nil),
		(*ModuleItem_ProgressCard)(nil),
		(*ModuleItem_SelectCard)(nil),
	}
	file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes[118].OneofWrappers = []interface{}{
		(*TimelineUnfoldCard_Card_TimelineHeadCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventTextCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventImageCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventImagetextCard)(nil),
		(*TimelineUnfoldCard_Card_TimelineEventResourceCard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_nativeact_v1_nativeact_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   120,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_app_nativeact_v1_nativeact_proto_goTypes,
		DependencyIndexes: file_bilibili_app_nativeact_v1_nativeact_proto_depIdxs,
		EnumInfos:         file_bilibili_app_nativeact_v1_nativeact_proto_enumTypes,
		MessageInfos:      file_bilibili_app_nativeact_v1_nativeact_proto_msgTypes,
	}.Build()
	File_bilibili_app_nativeact_v1_nativeact_proto = out.File
	file_bilibili_app_nativeact_v1_nativeact_proto_rawDesc = nil
	file_bilibili_app_nativeact_v1_nativeact_proto_goTypes = nil
	file_bilibili_app_nativeact_v1_nativeact_proto_depIdxs = nil
}
