// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/app/archive/v1/archive.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 稿件基本信息
type Arc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 稿件分P数
	Videos int64 `protobuf:"varint,2,opt,name=videos,proto3" json:"videos,omitempty"`
	// 分区id
	TypeId int32 `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// 二级分区名
	TypeName string `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	// 稿件类型
	// 1:原创 2:转载
	Copyright int32 `protobuf:"varint,5,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// 稿件封面url
	Pic string `protobuf:"bytes,6,opt,name=pic,proto3" json:"pic,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	// 稿件发布时间
	Pubdate int64 `protobuf:"varint,8,opt,name=pubdate,proto3" json:"pubdate,omitempty"`
	// 用户投稿时间
	Ctime int64 `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 稿件简介
	Desc string `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	// 稿件状态
	State int32 `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	// 访问属性
	// 0:全部可见 10000:登录可见
	Access int32 `protobuf:"varint,12,opt,name=access,proto3" json:"access,omitempty"`
	// 属性位配置(现在无了)
	Attribute int32 `protobuf:"varint,13,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// 空
	Tag string `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`
	// 空
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	// 稿件总时长(单位为秒)
	Duration int64 `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	// 参与的活动id
	MissionId int64 `protobuf:"varint,17,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	// 绑定的商单id
	OrderId int64 `protobuf:"varint,18,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// PGC稿件强制重定向url(如番剧、影视)
	RedirectUrl string `protobuf:"bytes,19,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// 空
	Forward int64 `protobuf:"varint,20,opt,name=forward,proto3" json:"forward,omitempty"`
	// 控制标志
	Rights *Rights `protobuf:"bytes,21,opt,name=rights,proto3" json:"rights,omitempty"`
	// UP主信息
	Author *Author `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	// 状态数
	Stat *Stat `protobuf:"bytes,23,opt,name=stat,proto3" json:"stat,omitempty"`
	// 空
	ReportResult string `protobuf:"bytes,24,opt,name=report_result,json=reportResult,proto3" json:"report_result,omitempty"`
	// 投稿时发送的动态内容
	Dynamic string `protobuf:"bytes,25,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	// 稿件1P cid
	FirstCid int64 `protobuf:"varint,26,opt,name=first_cid,json=firstCid,proto3" json:"first_cid,omitempty"`
	// 稿件1P 分辨率
	Dimension *Dimension `protobuf:"bytes,27,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 合作组成员列表
	StaffInfo []*StaffInfo `protobuf:"bytes,28,rep,name=staff_info,json=staffInfo,proto3" json:"staff_info,omitempty"`
	// UGC合集id
	SeasonId int64 `protobuf:"varint,29,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 新版属性位配置(也没用)
	AttributeV2 int64        `protobuf:"varint,30,opt,name=attribute_v2,json=attributeV2,proto3" json:"attribute_v2,omitempty"`
	SeasonTheme *SeasonTheme `protobuf:"bytes,31,opt,name=season_theme,json=seasonTheme,proto3" json:"season_theme,omitempty"`
	ShortLinkV2 string       `protobuf:"bytes,40,opt,name=short_link_v2,json=shortLinkV2,proto3" json:"short_link_v2,omitempty"`
	UpFromV2    int32        `protobuf:"varint,41,opt,name=up_from_v2,json=upFromV2,proto3" json:"up_from_v2,omitempty"`
	FirstFrame  string       `protobuf:"bytes,42,opt,name=first_frame,json=firstFrame,proto3" json:"first_frame,omitempty"`
}

func (x *Arc) Reset() {
	*x = Arc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arc) ProtoMessage() {}

func (x *Arc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arc.ProtoReflect.Descriptor instead.
func (*Arc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{0}
}

func (x *Arc) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Arc) GetVideos() int64 {
	if x != nil {
		return x.Videos
	}
	return 0
}

func (x *Arc) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Arc) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Arc) GetCopyright() int32 {
	if x != nil {
		return x.Copyright
	}
	return 0
}

func (x *Arc) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Arc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Arc) GetPubdate() int64 {
	if x != nil {
		return x.Pubdate
	}
	return 0
}

func (x *Arc) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Arc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Arc) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Arc) GetAccess() int32 {
	if x != nil {
		return x.Access
	}
	return 0
}

func (x *Arc) GetAttribute() int32 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Arc) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Arc) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Arc) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Arc) GetMissionId() int64 {
	if x != nil {
		return x.MissionId
	}
	return 0
}

func (x *Arc) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Arc) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *Arc) GetForward() int64 {
	if x != nil {
		return x.Forward
	}
	return 0
}

func (x *Arc) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *Arc) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Arc) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *Arc) GetReportResult() string {
	if x != nil {
		return x.ReportResult
	}
	return ""
}

func (x *Arc) GetDynamic() string {
	if x != nil {
		return x.Dynamic
	}
	return ""
}

func (x *Arc) GetFirstCid() int64 {
	if x != nil {
		return x.FirstCid
	}
	return 0
}

func (x *Arc) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Arc) GetStaffInfo() []*StaffInfo {
	if x != nil {
		return x.StaffInfo
	}
	return nil
}

func (x *Arc) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *Arc) GetAttributeV2() int64 {
	if x != nil {
		return x.AttributeV2
	}
	return 0
}

func (x *Arc) GetSeasonTheme() *SeasonTheme {
	if x != nil {
		return x.SeasonTheme
	}
	return nil
}

func (x *Arc) GetShortLinkV2() string {
	if x != nil {
		return x.ShortLinkV2
	}
	return ""
}

func (x *Arc) GetUpFromV2() int32 {
	if x != nil {
		return x.UpFromV2
	}
	return 0
}

func (x *Arc) GetFirstFrame() string {
	if x != nil {
		return x.FirstFrame
	}
	return ""
}

// UP主信息
type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UP主mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// UP主昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// UP主头像url
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{1}
}

func (x *Author) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

// 分辨率
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 宽度
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 高度
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 方向
	// 0:横屏 1:竖屏
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{2}
}

func (x *Dimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetRotate() int64 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

// 分P信息
type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频cid
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// 分P序号
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 源类型
	// vupload:B站 qq:腾讯 hunan:芒果
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 分P标题
	Part string `protobuf:"bytes,4,opt,name=part,proto3" json:"part,omitempty"`
	// 分P时长(单位为秒)
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// 外链vid
	Vid string `protobuf:"bytes,6,opt,name=vid,proto3" json:"vid,omitempty"`
	// 分P简介
	Desc string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	// 外链url
	WebLink string `protobuf:"bytes,8,opt,name=webLink,proto3" json:"webLink,omitempty"`
	// 分P分辨率
	Dimension  *Dimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
	FirstFrame string     `protobuf:"bytes,10,opt,name=first_frame,json=firstFrame,proto3" json:"first_frame,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{3}
}

func (x *Page) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Page) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Page) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Page) GetPart() string {
	if x != nil {
		return x.Part
	}
	return ""
}

func (x *Page) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Page) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *Page) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Page) GetWebLink() string {
	if x != nil {
		return x.WebLink
	}
	return ""
}

func (x *Page) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Page) GetFirstFrame() string {
	if x != nil {
		return x.FirstFrame
	}
	return ""
}

// 稿件控制标志
type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 老版是否付费
	Bp int32 `protobuf:"varint,1,opt,name=bp,proto3" json:"bp,omitempty"`
	// 允许充电
	Elec int32 `protobuf:"varint,2,opt,name=elec,proto3" json:"elec,omitempty"`
	// 允许下载
	Download int32 `protobuf:"varint,3,opt,name=download,proto3" json:"download,omitempty"`
	// 是否电影
	Movie int32 `protobuf:"varint,4,opt,name=movie,proto3" json:"movie,omitempty"`
	// PGC稿件需要付费
	Pay int32 `protobuf:"varint,5,opt,name=pay,proto3" json:"pay,omitempty"`
	// 是否高码率
	Hd5 int32 `protobuf:"varint,6,opt,name=hd5,proto3" json:"hd5,omitempty"`
	// 是否显示“禁止转载”标志
	NoReprint int32 `protobuf:"varint,7,opt,name=no_reprint,json=noReprint,proto3" json:"no_reprint,omitempty"`
	// 是否允许自动播放
	Autoplay int32 `protobuf:"varint,8,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	// UGC稿件需要付费(旧版)
	UgcPay int32 `protobuf:"varint,9,opt,name=ugc_pay,json=ugcPay,proto3" json:"ugc_pay,omitempty"`
	// 是否联合投稿
	IsCooperation int32 `protobuf:"varint,10,opt,name=is_cooperation,json=isCooperation,proto3" json:"is_cooperation,omitempty"`
	// 是否UGC付费预览
	UgcPayPreview int32 `protobuf:"varint,11,opt,name=ugc_pay_preview,json=ugcPayPreview,proto3" json:"ugc_pay_preview,omitempty"`
	// 是否禁止后台播放
	NoBackground int32 `protobuf:"varint,12,opt,name=no_background,json=noBackground,proto3" json:"no_background,omitempty"`
	// UGC稿件需要付费
	ArcPay int32 `protobuf:"varint,13,opt,name=arc_pay,json=arcPay,proto3" json:"arc_pay,omitempty"`
	// 是否已付费可自由观看
	PayFreeWatch int32 `protobuf:"varint,14,opt,name=pay_free_watch,json=payFreeWatch,proto3" json:"pay_free_watch,omitempty"`
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{4}
}

func (x *Rights) GetBp() int32 {
	if x != nil {
		return x.Bp
	}
	return 0
}

func (x *Rights) GetElec() int32 {
	if x != nil {
		return x.Elec
	}
	return 0
}

func (x *Rights) GetDownload() int32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *Rights) GetMovie() int32 {
	if x != nil {
		return x.Movie
	}
	return 0
}

func (x *Rights) GetPay() int32 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *Rights) GetHd5() int32 {
	if x != nil {
		return x.Hd5
	}
	return 0
}

func (x *Rights) GetNoReprint() int32 {
	if x != nil {
		return x.NoReprint
	}
	return 0
}

func (x *Rights) GetAutoplay() int32 {
	if x != nil {
		return x.Autoplay
	}
	return 0
}

func (x *Rights) GetUgcPay() int32 {
	if x != nil {
		return x.UgcPay
	}
	return 0
}

func (x *Rights) GetIsCooperation() int32 {
	if x != nil {
		return x.IsCooperation
	}
	return 0
}

func (x *Rights) GetUgcPayPreview() int32 {
	if x != nil {
		return x.UgcPayPreview
	}
	return 0
}

func (x *Rights) GetNoBackground() int32 {
	if x != nil {
		return x.NoBackground
	}
	return 0
}

func (x *Rights) GetArcPay() int32 {
	if x != nil {
		return x.ArcPay
	}
	return 0
}

func (x *Rights) GetPayFreeWatch() int32 {
	if x != nil {
		return x.PayFreeWatch
	}
	return 0
}

type SeasonTheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgColor         string `protobuf:"bytes,1,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	SelectedBgColor string `protobuf:"bytes,2,opt,name=selected_bg_color,json=selectedBgColor,proto3" json:"selected_bg_color,omitempty"`
	TextColor       string `protobuf:"bytes,3,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
}

func (x *SeasonTheme) Reset() {
	*x = SeasonTheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonTheme) ProtoMessage() {}

func (x *SeasonTheme) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonTheme.ProtoReflect.Descriptor instead.
func (*SeasonTheme) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{5}
}

func (x *SeasonTheme) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *SeasonTheme) GetSelectedBgColor() string {
	if x != nil {
		return x.SelectedBgColor
	}
	return ""
}

func (x *SeasonTheme) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

// 合作成员信息
type StaffInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成员mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 成员角色
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 属性位
	// 0:普通 1:赞助商金色标志
	Attribute int64 `protobuf:"varint,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
}

func (x *StaffInfo) Reset() {
	*x = StaffInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffInfo) ProtoMessage() {}

func (x *StaffInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffInfo.ProtoReflect.Descriptor instead.
func (*StaffInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{6}
}

func (x *StaffInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *StaffInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StaffInfo) GetAttribute() int64 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

// 状态数
type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 播放数(当屏蔽时为-1)
	View int32 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	// 弹幕数
	Danmaku int32 `protobuf:"varint,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	// 评论数
	Reply int32 `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	// 收藏数
	Fav int32 `protobuf:"varint,5,opt,name=fav,proto3" json:"fav,omitempty"`
	// 投币数
	Coin int32 `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	// 分享数
	Share int32 `protobuf:"varint,7,opt,name=share,proto3" json:"share,omitempty"`
	// 当前排名
	NowRank int32 `protobuf:"varint,8,opt,name=now_rank,json=nowRank,proto3" json:"now_rank,omitempty"`
	// 历史最高排名
	HisRank int32 `protobuf:"varint,9,opt,name=his_rank,json=hisRank,proto3" json:"his_rank,omitempty"`
	// 点赞数
	Like int32 `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
	// 点踩数(前端不可见故恒为0)
	Dislike int32 `protobuf:"varint,11,opt,name=dislike,proto3" json:"dislike,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_archive_v1_archive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_archive_v1_archive_proto_rawDescGZIP(), []int{7}
}

func (x *Stat) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Stat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Stat) GetDanmaku() int32 {
	if x != nil {
		return x.Danmaku
	}
	return 0
}

func (x *Stat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *Stat) GetFav() int32 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *Stat) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Stat) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *Stat) GetNowRank() int32 {
	if x != nil {
		return x.NowRank
	}
	return 0
}

func (x *Stat) GetHisRank() int32 {
	if x != nil {
		return x.HisRank
	}
	return 0
}

func (x *Stat) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Stat) GetDislike() int32 {
	if x != nil {
		return x.Dislike
	}
	return 0
}

var File_bilibili_app_archive_v1_archive_proto protoreflect.FileDescriptor

var file_bilibili_app_archive_v1_archive_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31,
	0x22, 0xe6, 0x08, 0x0a, 0x03, 0x41, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x70,
	0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x75, 0x62, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x75, 0x62, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x37, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x32, 0x12, 0x47, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x76, 0x32, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x32, 0x12, 0x1c, 0x0a, 0x0a, 0x75, 0x70,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x76, 0x32, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x75, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x06, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x22, 0x51, 0x0a,
	0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x93, 0x02, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x40, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x03, 0x0a, 0x06, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x62,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6c, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x65, 0x6c, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x64, 0x35,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x68, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x6f, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x75,
	0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x67, 0x63, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x67, 0x63, 0x50, 0x61, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x6f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x67, 0x63, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x75, 0x67, 0x63, 0x50, 0x61, 0x79, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x23,
	0x0a, 0x0d, 0x6e, 0x6f, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x6f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x72, 0x63, 0x50, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x46, 0x72, 0x65, 0x65, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x73, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x51, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x04, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x6e,
	0x6d, 0x61, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d,
	0x61, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x76,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75,
	0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63,
	0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_archive_v1_archive_proto_rawDescOnce sync.Once
	file_bilibili_app_archive_v1_archive_proto_rawDescData = file_bilibili_app_archive_v1_archive_proto_rawDesc
)

func file_bilibili_app_archive_v1_archive_proto_rawDescGZIP() []byte {
	file_bilibili_app_archive_v1_archive_proto_rawDescOnce.Do(func() {
		file_bilibili_app_archive_v1_archive_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_archive_v1_archive_proto_rawDescData)
	})
	return file_bilibili_app_archive_v1_archive_proto_rawDescData
}

var file_bilibili_app_archive_v1_archive_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bilibili_app_archive_v1_archive_proto_goTypes = []interface{}{
	(*Arc)(nil),         // 0: bilibili.app.archive.v1.Arc
	(*Author)(nil),      // 1: bilibili.app.archive.v1.Author
	(*Dimension)(nil),   // 2: bilibili.app.archive.v1.Dimension
	(*Page)(nil),        // 3: bilibili.app.archive.v1.Page
	(*Rights)(nil),      // 4: bilibili.app.archive.v1.Rights
	(*SeasonTheme)(nil), // 5: bilibili.app.archive.v1.SeasonTheme
	(*StaffInfo)(nil),   // 6: bilibili.app.archive.v1.StaffInfo
	(*Stat)(nil),        // 7: bilibili.app.archive.v1.Stat
}
var file_bilibili_app_archive_v1_archive_proto_depIdxs = []int32{
	4, // 0: bilibili.app.archive.v1.Arc.rights:type_name -> bilibili.app.archive.v1.Rights
	1, // 1: bilibili.app.archive.v1.Arc.author:type_name -> bilibili.app.archive.v1.Author
	7, // 2: bilibili.app.archive.v1.Arc.stat:type_name -> bilibili.app.archive.v1.Stat
	2, // 3: bilibili.app.archive.v1.Arc.dimension:type_name -> bilibili.app.archive.v1.Dimension
	6, // 4: bilibili.app.archive.v1.Arc.staff_info:type_name -> bilibili.app.archive.v1.StaffInfo
	5, // 5: bilibili.app.archive.v1.Arc.season_theme:type_name -> bilibili.app.archive.v1.SeasonTheme
	2, // 6: bilibili.app.archive.v1.Page.dimension:type_name -> bilibili.app.archive.v1.Dimension
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_bilibili_app_archive_v1_archive_proto_init() }
func file_bilibili_app_archive_v1_archive_proto_init() {
	if File_bilibili_app_archive_v1_archive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_archive_v1_archive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonTheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_archive_v1_archive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_archive_v1_archive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_app_archive_v1_archive_proto_goTypes,
		DependencyIndexes: file_bilibili_app_archive_v1_archive_proto_depIdxs,
		MessageInfos:      file_bilibili_app_archive_v1_archive_proto_msgTypes,
	}.Build()
	File_bilibili_app_archive_v1_archive_proto = out.File
	file_bilibili_app_archive_v1_archive_proto_rawDesc = nil
	file_bilibili_app_archive_v1_archive_proto_goTypes = nil
	file_bilibili_app_archive_v1_archive_proto_depIdxs = nil
}
