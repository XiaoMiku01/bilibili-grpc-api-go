// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/app/listener/v1/listener.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	v11 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/interfaces/v1"
	v12 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/playurl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardModuleType int32

const (
	CardModuleType_Module_invalid CardModuleType = 0
	CardModuleType_Module_header  CardModuleType = 1
	CardModuleType_Module_archive CardModuleType = 2
	CardModuleType_Module_cbtn    CardModuleType = 3
)

// Enum value maps for CardModuleType.
var (
	CardModuleType_name = map[int32]string{
		0: "Module_invalid",
		1: "Module_header",
		2: "Module_archive",
		3: "Module_cbtn",
	}
	CardModuleType_value = map[string]int32{
		"Module_invalid": 0,
		"Module_header":  1,
		"Module_archive": 2,
		"Module_cbtn":    3,
	}
)

func (x CardModuleType) Enum() *CardModuleType {
	p := new(CardModuleType)
	*p = x
	return p
}

func (x CardModuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardModuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_listener_v1_listener_proto_enumTypes[0].Descriptor()
}

func (CardModuleType) Type() protoreflect.EnumType {
	return &file_bilibili_app_listener_v1_listener_proto_enumTypes[0]
}

func (x CardModuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardModuleType.Descriptor instead.
func (CardModuleType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{0}
}

type ListOrder int32

const (
	ListOrder_NO_ORDER      ListOrder = 0 //
	ListOrder_ORDER_NORMAL  ListOrder = 1 //
	ListOrder_ORDER_REVERSE ListOrder = 2 //
	ListOrder_ORDER_RANDOM  ListOrder = 3 //
)

// Enum value maps for ListOrder.
var (
	ListOrder_name = map[int32]string{
		0: "NO_ORDER",
		1: "ORDER_NORMAL",
		2: "ORDER_REVERSE",
		3: "ORDER_RANDOM",
	}
	ListOrder_value = map[string]int32{
		"NO_ORDER":      0,
		"ORDER_NORMAL":  1,
		"ORDER_REVERSE": 2,
		"ORDER_RANDOM":  3,
	}
)

func (x ListOrder) Enum() *ListOrder {
	p := new(ListOrder)
	*p = x
	return p
}

func (x ListOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_listener_v1_listener_proto_enumTypes[1].Descriptor()
}

func (ListOrder) Type() protoreflect.EnumType {
	return &file_bilibili_app_listener_v1_listener_proto_enumTypes[1]
}

func (x ListOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOrder.Descriptor instead.
func (ListOrder) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{1}
}

type ListSortField int32

const (
	ListSortField_NO_SORT      ListSortField = 0 //
	ListSortField_SORT_CTIME   ListSortField = 1 //
	ListSortField_SORT_VIEWCNT ListSortField = 2 //
	ListSortField_SORT_FAVCNT  ListSortField = 3 //
)

// Enum value maps for ListSortField.
var (
	ListSortField_name = map[int32]string{
		0: "NO_SORT",
		1: "SORT_CTIME",
		2: "SORT_VIEWCNT",
		3: "SORT_FAVCNT",
	}
	ListSortField_value = map[string]int32{
		"NO_SORT":      0,
		"SORT_CTIME":   1,
		"SORT_VIEWCNT": 2,
		"SORT_FAVCNT":  3,
	}
)

func (x ListSortField) Enum() *ListSortField {
	p := new(ListSortField)
	*p = x
	return p
}

func (x ListSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_listener_v1_listener_proto_enumTypes[2].Descriptor()
}

func (ListSortField) Type() protoreflect.EnumType {
	return &file_bilibili_app_listener_v1_listener_proto_enumTypes[2]
}

func (x ListSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListSortField.Descriptor instead.
func (ListSortField) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{2}
}

type PlaylistSource int32

const (
	PlaylistSource_DEFAULT          PlaylistSource = 0 //
	PlaylistSource_MEM_SPACE        PlaylistSource = 1 //
	PlaylistSource_AUDIO_COLLECTION PlaylistSource = 2 //
	PlaylistSource_AUDIO_CARD       PlaylistSource = 3 //
	PlaylistSource_USER_FAVOURITE   PlaylistSource = 4 //
	PlaylistSource_UP_ARCHIVE       PlaylistSource = 5 //
	PlaylistSource_AUDIO_CACHE      PlaylistSource = 6 //
	PlaylistSource_PICK_CARD        PlaylistSource = 7 //
	PlaylistSource_MEDIA_LIST       PlaylistSource = 8 //
)

// Enum value maps for PlaylistSource.
var (
	PlaylistSource_name = map[int32]string{
		0: "DEFAULT",
		1: "MEM_SPACE",
		2: "AUDIO_COLLECTION",
		3: "AUDIO_CARD",
		4: "USER_FAVOURITE",
		5: "UP_ARCHIVE",
		6: "AUDIO_CACHE",
		7: "PICK_CARD",
		8: "MEDIA_LIST",
	}
	PlaylistSource_value = map[string]int32{
		"DEFAULT":          0,
		"MEM_SPACE":        1,
		"AUDIO_COLLECTION": 2,
		"AUDIO_CARD":       3,
		"USER_FAVOURITE":   4,
		"UP_ARCHIVE":       5,
		"AUDIO_CACHE":      6,
		"PICK_CARD":        7,
		"MEDIA_LIST":       8,
	}
)

func (x PlaylistSource) Enum() *PlaylistSource {
	p := new(PlaylistSource)
	*p = x
	return p
}

func (x PlaylistSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlaylistSource) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_listener_v1_listener_proto_enumTypes[3].Descriptor()
}

func (PlaylistSource) Type() protoreflect.EnumType {
	return &file_bilibili_app_listener_v1_listener_proto_enumTypes[3]
}

func (x PlaylistSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlaylistSource.Descriptor instead.
func (PlaylistSource) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{3}
}

type TopCardType int32

const (
	TopCardType_UNSPECIFIED     TopCardType = 0 //
	TopCardType_LISTEN_HISTORY  TopCardType = 1 //
	TopCardType_FAVORITE_FOLDER TopCardType = 2 //
	TopCardType_UP_RECALL       TopCardType = 3 //
	TopCardType_PICK_TODAY      TopCardType = 4 //
)

// Enum value maps for TopCardType.
var (
	TopCardType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "LISTEN_HISTORY",
		2: "FAVORITE_FOLDER",
		3: "UP_RECALL",
		4: "PICK_TODAY",
	}
	TopCardType_value = map[string]int32{
		"UNSPECIFIED":     0,
		"LISTEN_HISTORY":  1,
		"FAVORITE_FOLDER": 2,
		"UP_RECALL":       3,
		"PICK_TODAY":      4,
	}
)

func (x TopCardType) Enum() *TopCardType {
	p := new(TopCardType)
	*p = x
	return p
}

func (x TopCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_listener_v1_listener_proto_enumTypes[4].Descriptor()
}

func (TopCardType) Type() protoreflect.EnumType {
	return &file_bilibili_app_listener_v1_listener_proto_enumTypes[4]
}

func (x TopCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopCardType.Descriptor instead.
func (TopCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{4}
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid      int64           `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name     string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar   string          `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Relation *FollowRelation `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{0}
}

func (x *Author) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Author) GetRelation() *FollowRelation {
	if x != nil {
		return x.Relation
	}
	return nil
}

type BKArcDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*PlayItem    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,2,opt,name=playerArgs,proto3" json:"playerArgs,omitempty"`
}

func (x *BKArcDetailsReq) Reset() {
	*x = BKArcDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKArcDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKArcDetailsReq) ProtoMessage() {}

func (x *BKArcDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKArcDetailsReq.ProtoReflect.Descriptor instead.
func (*BKArcDetailsReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{1}
}

func (x *BKArcDetailsReq) GetItems() []*PlayItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BKArcDetailsReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type BKArcDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DetailItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BKArcDetailsResp) Reset() {
	*x = BKArcDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKArcDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKArcDetailsResp) ProtoMessage() {}

func (x *BKArcDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKArcDetailsResp.ProtoReflect.Descriptor instead.
func (*BKArcDetailsResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{2}
}

func (x *BKArcDetailsResp) GetList() []*DetailItem {
	if x != nil {
		return x.List
	}
	return nil
}

type BKArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid          int64        `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Title        string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover        string       `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Desc         string       `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Duration     int64        `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Rid          int32        `protobuf:"varint,6,opt,name=rid,proto3" json:"rid,omitempty"`
	Rname        string       `protobuf:"bytes,7,opt,name=rname,proto3" json:"rname,omitempty"`
	Publish      int64        `protobuf:"varint,8,opt,name=publish,proto3" json:"publish,omitempty"`
	DisplayedOid string       `protobuf:"bytes,9,opt,name=displayed_oid,json=displayedOid,proto3" json:"displayed_oid,omitempty"`
	Copyright    int32        `protobuf:"varint,10,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Rights       *BKArcRights `protobuf:"bytes,11,opt,name=rights,proto3" json:"rights,omitempty"`
}

func (x *BKArchive) Reset() {
	*x = BKArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKArchive) ProtoMessage() {}

func (x *BKArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKArchive.ProtoReflect.Descriptor instead.
func (*BKArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{3}
}

func (x *BKArchive) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *BKArchive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BKArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *BKArchive) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *BKArchive) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *BKArchive) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *BKArchive) GetRname() string {
	if x != nil {
		return x.Rname
	}
	return ""
}

func (x *BKArchive) GetPublish() int64 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *BKArchive) GetDisplayedOid() string {
	if x != nil {
		return x.DisplayedOid
	}
	return ""
}

func (x *BKArchive) GetCopyright() int32 {
	if x != nil {
		return x.Copyright
	}
	return 0
}

func (x *BKArchive) GetRights() *BKArcRights {
	if x != nil {
		return x.Rights
	}
	return nil
}

type BKArcPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid      int64  `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	SubId    int64  `protobuf:"varint,2,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Duration int64  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Page     int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *BKArcPart) Reset() {
	*x = BKArcPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKArcPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKArcPart) ProtoMessage() {}

func (x *BKArcPart) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKArcPart.ProtoReflect.Descriptor instead.
func (*BKArcPart) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{4}
}

func (x *BKArcPart) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *BKArcPart) GetSubId() int64 {
	if x != nil {
		return x.SubId
	}
	return 0
}

func (x *BKArcPart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BKArcPart) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *BKArcPart) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type BKArcRights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoReprint int32 `protobuf:"varint,1,opt,name=no_reprint,json=noReprint,proto3" json:"no_reprint,omitempty"`
}

func (x *BKArcRights) Reset() {
	*x = BKArcRights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKArcRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKArcRights) ProtoMessage() {}

func (x *BKArcRights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKArcRights.ProtoReflect.Descriptor instead.
func (*BKArcRights) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{5}
}

func (x *BKArcRights) GetNoReprint() int32 {
	if x != nil {
		return x.NoReprint
	}
	return 0
}

type BKStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Like      int32 `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"`
	Coin      int32 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Favourite int32 `protobuf:"varint,3,opt,name=favourite,proto3" json:"favourite,omitempty"`
	Reply     int32 `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Share     int32 `protobuf:"varint,5,opt,name=share,proto3" json:"share,omitempty"`
	View      int32 `protobuf:"varint,6,opt,name=view,proto3" json:"view,omitempty"`
	HasLike   bool  `protobuf:"varint,7,opt,name=has_like,json=hasLike,proto3" json:"has_like,omitempty"`
	HasCoin   bool  `protobuf:"varint,8,opt,name=has_coin,json=hasCoin,proto3" json:"has_coin,omitempty"`
	HasFav    bool  `protobuf:"varint,9,opt,name=has_fav,json=hasFav,proto3" json:"has_fav,omitempty"`
}

func (x *BKStat) Reset() {
	*x = BKStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKStat) ProtoMessage() {}

func (x *BKStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKStat.ProtoReflect.Descriptor instead.
func (*BKStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{6}
}

func (x *BKStat) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *BKStat) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *BKStat) GetFavourite() int32 {
	if x != nil {
		return x.Favourite
	}
	return 0
}

func (x *BKStat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *BKStat) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *BKStat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *BKStat) GetHasLike() bool {
	if x != nil {
		return x.HasLike
	}
	return false
}

func (x *BKStat) GetHasCoin() bool {
	if x != nil {
		return x.HasCoin
	}
	return false
}

func (x *BKStat) GetHasFav() bool {
	if x != nil {
		return x.HasFav
	}
	return false
}

type CardModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleType int32 `protobuf:"varint,1,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	// Types that are assignable to Module:
	//
	//	*CardModule_ModuleHeader
	//	*CardModule_ModuleArchive
	//	*CardModule_ModuleCbtn
	Module isCardModule_Module `protobuf_oneof:"module"`
}

func (x *CardModule) Reset() {
	*x = CardModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardModule) ProtoMessage() {}

func (x *CardModule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardModule.ProtoReflect.Descriptor instead.
func (*CardModule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{7}
}

func (x *CardModule) GetModuleType() int32 {
	if x != nil {
		return x.ModuleType
	}
	return 0
}

func (m *CardModule) GetModule() isCardModule_Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (x *CardModule) GetModuleHeader() *PkcmHeader {
	if x, ok := x.GetModule().(*CardModule_ModuleHeader); ok {
		return x.ModuleHeader
	}
	return nil
}

func (x *CardModule) GetModuleArchive() *PkcmArchive {
	if x, ok := x.GetModule().(*CardModule_ModuleArchive); ok {
		return x.ModuleArchive
	}
	return nil
}

func (x *CardModule) GetModuleCbtn() *PkcmCenterButton {
	if x, ok := x.GetModule().(*CardModule_ModuleCbtn); ok {
		return x.ModuleCbtn
	}
	return nil
}

type isCardModule_Module interface {
	isCardModule_Module()
}

type CardModule_ModuleHeader struct {
	ModuleHeader *PkcmHeader `protobuf:"bytes,2,opt,name=module_header,json=moduleHeader,proto3,oneof"`
}

type CardModule_ModuleArchive struct {
	ModuleArchive *PkcmArchive `protobuf:"bytes,3,opt,name=module_archive,json=moduleArchive,proto3,oneof"`
}

type CardModule_ModuleCbtn struct {
	ModuleCbtn *PkcmCenterButton `protobuf:"bytes,4,opt,name=module_cbtn,json=moduleCbtn,proto3,oneof"`
}

func (*CardModule_ModuleHeader) isCardModule_Module() {}

func (*CardModule_ModuleArchive) isCardModule_Module() {}

func (*CardModule_ModuleCbtn) isCardModule_Module() {}

type ClickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid    int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Action int32 `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ClickReq) Reset() {
	*x = ClickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickReq) ProtoMessage() {}

func (x *ClickReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickReq.ProtoReflect.Descriptor instead.
func (*ClickReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{8}
}

func (x *ClickReq) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ClickReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ClickResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClickResp) Reset() {
	*x = ClickResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickResp) ProtoMessage() {}

func (x *ClickResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickResp.ProtoReflect.Descriptor instead.
func (*ClickResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{9}
}

type CoinAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Num     int32     `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	ThumbUp bool      `protobuf:"varint,3,opt,name=thumb_up,json=thumbUp,proto3" json:"thumb_up,omitempty"`
}

func (x *CoinAddReq) Reset() {
	*x = CoinAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinAddReq) ProtoMessage() {}

func (x *CoinAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinAddReq.ProtoReflect.Descriptor instead.
func (*CoinAddReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{10}
}

func (x *CoinAddReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CoinAddReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CoinAddReq) GetThumbUp() bool {
	if x != nil {
		return x.ThumbUp
	}
	return false
}

type CoinAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CoinAddResp) Reset() {
	*x = CoinAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinAddResp) ProtoMessage() {}

func (x *CoinAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinAddResp.ProtoReflect.Descriptor instead.
func (*CoinAddResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{11}
}

func (x *CoinAddResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DashItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BaseUrl     string           `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	BackupUrl   []string         `protobuf:"bytes,3,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	Bandwidth   int32            `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	MimeType    string           `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Codecs      string           `protobuf:"bytes,6,opt,name=codecs,proto3" json:"codecs,omitempty"`
	SegmentBase *DashSegmentBase `protobuf:"bytes,12,opt,name=segment_base,json=segmentBase,proto3" json:"segment_base,omitempty"`
	Codecid     int32            `protobuf:"varint,13,opt,name=codecid,proto3" json:"codecid,omitempty"`
	Md5         string           `protobuf:"bytes,14,opt,name=md5,proto3" json:"md5,omitempty"`
	Size        int64            `protobuf:"varint,15,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *DashItem) Reset() {
	*x = DashItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashItem) ProtoMessage() {}

func (x *DashItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashItem.ProtoReflect.Descriptor instead.
func (*DashItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{12}
}

func (x *DashItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashItem) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *DashItem) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *DashItem) GetBandwidth() int32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *DashItem) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *DashItem) GetCodecs() string {
	if x != nil {
		return x.Codecs
	}
	return ""
}

func (x *DashItem) GetSegmentBase() *DashSegmentBase {
	if x != nil {
		return x.SegmentBase
	}
	return nil
}

func (x *DashItem) GetCodecid() int32 {
	if x != nil {
		return x.Codecid
	}
	return 0
}

func (x *DashItem) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *DashItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type DashSegmentBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initialization string `protobuf:"bytes,1,opt,name=initialization,proto3" json:"initialization,omitempty"`
	IndexRange     string `protobuf:"bytes,2,opt,name=index_range,json=indexRange,proto3" json:"index_range,omitempty"`
}

func (x *DashSegmentBase) Reset() {
	*x = DashSegmentBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashSegmentBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashSegmentBase) ProtoMessage() {}

func (x *DashSegmentBase) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashSegmentBase.ProtoReflect.Descriptor instead.
func (*DashSegmentBase) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{13}
}

func (x *DashSegmentBase) GetInitialization() string {
	if x != nil {
		return x.Initialization
	}
	return ""
}

func (x *DashSegmentBase) GetIndexRange() string {
	if x != nil {
		return x.IndexRange
	}
	return ""
}

type DetailItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item           *PlayItem           `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Arc            *BKArchive          `protobuf:"bytes,2,opt,name=arc,proto3" json:"arc,omitempty"`
	Parts          []*BKArcPart        `protobuf:"bytes,3,rep,name=parts,proto3" json:"parts,omitempty"`
	Owner          *Author             `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Stat           *BKStat             `protobuf:"bytes,5,opt,name=stat,proto3" json:"stat,omitempty"`
	LastPart       int64               `protobuf:"varint,6,opt,name=last_part,json=lastPart,proto3" json:"last_part,omitempty"`
	Progress       int64               `protobuf:"varint,7,opt,name=progress,proto3" json:"progress,omitempty"`
	Playable       int32               `protobuf:"varint,8,opt,name=playable,proto3" json:"playable,omitempty"`
	Message        string              `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	PlayerInfo     map[int64]*PlayInfo `protobuf:"bytes,10,rep,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AssociatedItem *PlayItem           `protobuf:"bytes,11,opt,name=associated_item,json=associatedItem,proto3" json:"associated_item,omitempty"`
	LastPlayTime   int64               `protobuf:"varint,12,opt,name=last_play_time,json=lastPlayTime,proto3" json:"last_play_time,omitempty"`
	HistoryTag     string              `protobuf:"bytes,13,opt,name=history_tag,json=historyTag,proto3" json:"history_tag,omitempty"`
	DeviceType     *v11.DeviceType     `protobuf:"bytes,14,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	UgcSeasonInfo  *FavFolder          `protobuf:"bytes,15,opt,name=ugc_season_info,json=ugcSeasonInfo,proto3" json:"ugc_season_info,omitempty"`
}

func (x *DetailItem) Reset() {
	*x = DetailItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailItem) ProtoMessage() {}

func (x *DetailItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailItem.ProtoReflect.Descriptor instead.
func (*DetailItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{14}
}

func (x *DetailItem) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DetailItem) GetArc() *BKArchive {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *DetailItem) GetParts() []*BKArcPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *DetailItem) GetOwner() *Author {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *DetailItem) GetStat() *BKStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *DetailItem) GetLastPart() int64 {
	if x != nil {
		return x.LastPart
	}
	return 0
}

func (x *DetailItem) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *DetailItem) GetPlayable() int32 {
	if x != nil {
		return x.Playable
	}
	return 0
}

func (x *DetailItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DetailItem) GetPlayerInfo() map[int64]*PlayInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *DetailItem) GetAssociatedItem() *PlayItem {
	if x != nil {
		return x.AssociatedItem
	}
	return nil
}

func (x *DetailItem) GetLastPlayTime() int64 {
	if x != nil {
		return x.LastPlayTime
	}
	return 0
}

func (x *DetailItem) GetHistoryTag() string {
	if x != nil {
		return x.HistoryTag
	}
	return ""
}

func (x *DetailItem) GetDeviceType() *v11.DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return nil
}

func (x *DetailItem) GetUgcSeasonInfo() *FavFolder {
	if x != nil {
		return x.UgcSeasonInfo
	}
	return nil
}

type EventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType int32     `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Item      *PlayItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *EventReq) Reset() {
	*x = EventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReq) ProtoMessage() {}

func (x *EventReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReq.ProtoReflect.Descriptor instead.
func (*EventReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{15}
}

func (x *EventReq) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *EventReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type EventResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventResp) Reset() {
	*x = EventResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResp) ProtoMessage() {}

func (x *EventResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResp.ProtoReflect.Descriptor instead.
func (*EventResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{16}
}

type EventTracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator   string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Batch      string `protobuf:"bytes,2,opt,name=batch,proto3" json:"batch,omitempty"`
	TrackId    string `protobuf:"bytes,3,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	EntityType string `protobuf:"bytes,4,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	EntityId   string `protobuf:"bytes,5,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	TrackJson  string `protobuf:"bytes,6,opt,name=track_json,json=trackJson,proto3" json:"track_json,omitempty"`
}

func (x *EventTracking) Reset() {
	*x = EventTracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTracking) ProtoMessage() {}

func (x *EventTracking) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTracking.ProtoReflect.Descriptor instead.
func (*EventTracking) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{17}
}

func (x *EventTracking) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *EventTracking) GetBatch() string {
	if x != nil {
		return x.Batch
	}
	return ""
}

func (x *EventTracking) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *EventTracking) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *EventTracking) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EventTracking) GetTrackJson() string {
	if x != nil {
		return x.TrackJson
	}
	return ""
}

type FavFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid          int64            `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType   int32            `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	Owner        *FavFolderAuthor `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Name         string           `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Cover        string           `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Desc         string           `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Count        int32            `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	Attr         int32            `protobuf:"varint,8,opt,name=attr,proto3" json:"attr,omitempty"`
	State        int32            `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	Favored      int32            `protobuf:"varint,10,opt,name=favored,proto3" json:"favored,omitempty"`
	Ctime        int64            `protobuf:"varint,11,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime        int64            `protobuf:"varint,12,opt,name=mtime,proto3" json:"mtime,omitempty"`
	StatFavCnt   int32            `protobuf:"varint,13,opt,name=stat_fav_cnt,json=statFavCnt,proto3" json:"stat_fav_cnt,omitempty"`
	StatShareCnt int32            `protobuf:"varint,14,opt,name=stat_share_cnt,json=statShareCnt,proto3" json:"stat_share_cnt,omitempty"`
	StatLikeCnt  int32            `protobuf:"varint,15,opt,name=stat_like_cnt,json=statLikeCnt,proto3" json:"stat_like_cnt,omitempty"`
	Stat_PlayCnt int32            `protobuf:"varint,16,opt,name=stat_Play_cnt,json=statPlayCnt,proto3" json:"stat_Play_cnt,omitempty"`
	StatReplyCnt int32            `protobuf:"varint,17,opt,name=stat_reply_cnt,json=statReplyCnt,proto3" json:"stat_reply_cnt,omitempty"`
	FavState     int32            `protobuf:"varint,18,opt,name=fav_state,json=favState,proto3" json:"fav_state,omitempty"`
}

func (x *FavFolder) Reset() {
	*x = FavFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolder) ProtoMessage() {}

func (x *FavFolder) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolder.ProtoReflect.Descriptor instead.
func (*FavFolder) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{18}
}

func (x *FavFolder) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolder) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (x *FavFolder) GetOwner() *FavFolderAuthor {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *FavFolder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavFolder) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FavFolder) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FavFolder) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FavFolder) GetAttr() int32 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *FavFolder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *FavFolder) GetFavored() int32 {
	if x != nil {
		return x.Favored
	}
	return 0
}

func (x *FavFolder) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *FavFolder) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *FavFolder) GetStatFavCnt() int32 {
	if x != nil {
		return x.StatFavCnt
	}
	return 0
}

func (x *FavFolder) GetStatShareCnt() int32 {
	if x != nil {
		return x.StatShareCnt
	}
	return 0
}

func (x *FavFolder) GetStatLikeCnt() int32 {
	if x != nil {
		return x.StatLikeCnt
	}
	return 0
}

func (x *FavFolder) GetStat_PlayCnt() int32 {
	if x != nil {
		return x.Stat_PlayCnt
	}
	return 0
}

func (x *FavFolder) GetStatReplyCnt() int32 {
	if x != nil {
		return x.StatReplyCnt
	}
	return 0
}

func (x *FavFolder) GetFavState() int32 {
	if x != nil {
		return x.FavState
	}
	return 0
}

type FavFolderAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32 `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	Action     int32 `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *FavFolderAction) Reset() {
	*x = FavFolderAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderAction) ProtoMessage() {}

func (x *FavFolderAction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderAction.ProtoReflect.Descriptor instead.
func (*FavFolderAction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{19}
}

func (x *FavFolderAction) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolderAction) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (x *FavFolderAction) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type FavFolderAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FavFolderAuthor) Reset() {
	*x = FavFolderAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderAuthor) ProtoMessage() {}

func (x *FavFolderAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderAuthor.ProtoReflect.Descriptor instead.
func (*FavFolderAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{20}
}

func (x *FavFolderAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *FavFolderAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FavFolderCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc       string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Public     int32  `protobuf:"varint,3,opt,name=public,proto3" json:"public,omitempty"`
	FolderType int32  `protobuf:"varint,4,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
}

func (x *FavFolderCreateReq) Reset() {
	*x = FavFolderCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderCreateReq) ProtoMessage() {}

func (x *FavFolderCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderCreateReq.ProtoReflect.Descriptor instead.
func (*FavFolderCreateReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{21}
}

func (x *FavFolderCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavFolderCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FavFolderCreateReq) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *FavFolderCreateReq) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

type FavFolderCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64  `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32  `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FavFolderCreateResp) Reset() {
	*x = FavFolderCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderCreateResp) ProtoMessage() {}

func (x *FavFolderCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderCreateResp.ProtoReflect.Descriptor instead.
func (*FavFolderCreateResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{22}
}

func (x *FavFolderCreateResp) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolderCreateResp) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (x *FavFolderCreateResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FavFolderDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32 `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
}

func (x *FavFolderDeleteReq) Reset() {
	*x = FavFolderDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderDeleteReq) ProtoMessage() {}

func (x *FavFolderDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderDeleteReq.ProtoReflect.Descriptor instead.
func (*FavFolderDeleteReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{23}
}

func (x *FavFolderDeleteReq) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolderDeleteReq) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

type FavFolderDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FavFolderDeleteResp) Reset() {
	*x = FavFolderDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderDeleteResp) ProtoMessage() {}

func (x *FavFolderDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderDeleteResp.ProtoReflect.Descriptor instead.
func (*FavFolderDeleteResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{24}
}

func (x *FavFolderDeleteResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FavFolderDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid            int64    `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType     int32    `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	FavMid         int64    `protobuf:"varint,3,opt,name=fav_mid,json=favMid,proto3" json:"fav_mid,omitempty"`
	LastItem       *FavItem `protobuf:"bytes,4,opt,name=last_item,json=lastItem,proto3" json:"last_item,omitempty"`
	PageSize       int32    `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NeedFolderInfo bool     `protobuf:"varint,6,opt,name=need_folder_info,json=needFolderInfo,proto3" json:"need_folder_info,omitempty"`
}

func (x *FavFolderDetailReq) Reset() {
	*x = FavFolderDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderDetailReq) ProtoMessage() {}

func (x *FavFolderDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderDetailReq.ProtoReflect.Descriptor instead.
func (*FavFolderDetailReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{25}
}

func (x *FavFolderDetailReq) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolderDetailReq) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (x *FavFolderDetailReq) GetFavMid() int64 {
	if x != nil {
		return x.FavMid
	}
	return 0
}

func (x *FavFolderDetailReq) GetLastItem() *FavItem {
	if x != nil {
		return x.LastItem
	}
	return nil
}

func (x *FavFolderDetailReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FavFolderDetailReq) GetNeedFolderInfo() bool {
	if x != nil {
		return x.NeedFolderInfo
	}
	return false
}

type FavFolderDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total      int32            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ReachEnd   bool             `protobuf:"varint,2,opt,name=reach_end,json=reachEnd,proto3" json:"reach_end,omitempty"`
	List       []*FavItemDetail `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	FolderInfo *FavFolder       `protobuf:"bytes,4,opt,name=folder_info,json=folderInfo,proto3" json:"folder_info,omitempty"`
}

func (x *FavFolderDetailResp) Reset() {
	*x = FavFolderDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderDetailResp) ProtoMessage() {}

func (x *FavFolderDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderDetailResp.ProtoReflect.Descriptor instead.
func (*FavFolderDetailResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{26}
}

func (x *FavFolderDetailResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FavFolderDetailResp) GetReachEnd() bool {
	if x != nil {
		return x.ReachEnd
	}
	return false
}

func (x *FavFolderDetailResp) GetList() []*FavItemDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FavFolderDetailResp) GetFolderInfo() *FavFolder {
	if x != nil {
		return x.FolderInfo
	}
	return nil
}

type FavFolderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderTypes []int32   `protobuf:"varint,1,rep,packed,name=folder_types,json=folderTypes,proto3" json:"folder_types,omitempty"`
	Item        *PlayItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *FavFolderListReq) Reset() {
	*x = FavFolderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderListReq) ProtoMessage() {}

func (x *FavFolderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderListReq.ProtoReflect.Descriptor instead.
func (*FavFolderListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{27}
}

func (x *FavFolderListReq) GetFolderTypes() []int32 {
	if x != nil {
		return x.FolderTypes
	}
	return nil
}

func (x *FavFolderListReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type FavFolderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FavFolder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FavFolderListResp) Reset() {
	*x = FavFolderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderListResp) ProtoMessage() {}

func (x *FavFolderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderListResp.ProtoReflect.Descriptor instead.
func (*FavFolderListResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{28}
}

func (x *FavFolderListResp) GetList() []*FavFolder {
	if x != nil {
		return x.List
	}
	return nil
}

type FavFolderMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32 `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
}

func (x *FavFolderMeta) Reset() {
	*x = FavFolderMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavFolderMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavFolderMeta) ProtoMessage() {}

func (x *FavFolderMeta) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavFolderMeta.ProtoReflect.Descriptor instead.
func (*FavFolderMeta) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{29}
}

func (x *FavFolderMeta) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavFolderMeta) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

type FavItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType int32          `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	Oid      int64          `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Fid      int64          `protobuf:"varint,3,opt,name=fid,proto3" json:"fid,omitempty"`
	Mid      int64          `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Mtime    int64          `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime    int64          `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Et       *EventTracking `protobuf:"bytes,7,opt,name=et,proto3" json:"et,omitempty"`
}

func (x *FavItem) Reset() {
	*x = FavItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItem) ProtoMessage() {}

func (x *FavItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItem.ProtoReflect.Descriptor instead.
func (*FavItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{30}
}

func (x *FavItem) GetItemType() int32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *FavItem) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *FavItem) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavItem) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *FavItem) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *FavItem) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *FavItem) GetEt() *EventTracking {
	if x != nil {
		return x.Et
	}
	return nil
}

type FavItemAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32 `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	// Types that are assignable to Item:
	//
	//	*FavItemAddReq_Play
	//	*FavItemAddReq_Fav
	Item isFavItemAddReq_Item `protobuf_oneof:"item"`
}

func (x *FavItemAddReq) Reset() {
	*x = FavItemAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemAddReq) ProtoMessage() {}

func (x *FavItemAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemAddReq.ProtoReflect.Descriptor instead.
func (*FavItemAddReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{31}
}

func (x *FavItemAddReq) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavItemAddReq) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (m *FavItemAddReq) GetItem() isFavItemAddReq_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *FavItemAddReq) GetPlay() *PlayItem {
	if x, ok := x.GetItem().(*FavItemAddReq_Play); ok {
		return x.Play
	}
	return nil
}

func (x *FavItemAddReq) GetFav() *FavItem {
	if x, ok := x.GetItem().(*FavItemAddReq_Fav); ok {
		return x.Fav
	}
	return nil
}

type isFavItemAddReq_Item interface {
	isFavItemAddReq_Item()
}

type FavItemAddReq_Play struct {
	Play *PlayItem `protobuf:"bytes,3,opt,name=play,proto3,oneof"`
}

type FavItemAddReq_Fav struct {
	Fav *FavItem `protobuf:"bytes,4,opt,name=fav,proto3,oneof"`
}

func (*FavItemAddReq_Play) isFavItemAddReq_Item() {}

func (*FavItemAddReq_Fav) isFavItemAddReq_Item() {}

type FavItemAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FavItemAddResp) Reset() {
	*x = FavItemAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemAddResp) ProtoMessage() {}

func (x *FavItemAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemAddResp.ProtoReflect.Descriptor instead.
func (*FavItemAddResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{32}
}

func (x *FavItemAddResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FavItemAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FavItemAuthor) Reset() {
	*x = FavItemAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemAuthor) ProtoMessage() {}

func (x *FavItemAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemAuthor.ProtoReflect.Descriptor instead.
func (*FavItemAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{33}
}

func (x *FavItemAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *FavItemAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FavItemBatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*FavFolderAction `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	// Types that are assignable to Item:
	//
	//	*FavItemBatchReq_Play
	//	*FavItemBatchReq_Fav
	Item isFavItemBatchReq_Item `protobuf_oneof:"item"`
}

func (x *FavItemBatchReq) Reset() {
	*x = FavItemBatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemBatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemBatchReq) ProtoMessage() {}

func (x *FavItemBatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemBatchReq.ProtoReflect.Descriptor instead.
func (*FavItemBatchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{34}
}

func (x *FavItemBatchReq) GetActions() []*FavFolderAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (m *FavItemBatchReq) GetItem() isFavItemBatchReq_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *FavItemBatchReq) GetPlay() *PlayItem {
	if x, ok := x.GetItem().(*FavItemBatchReq_Play); ok {
		return x.Play
	}
	return nil
}

func (x *FavItemBatchReq) GetFav() *FavItem {
	if x, ok := x.GetItem().(*FavItemBatchReq_Fav); ok {
		return x.Fav
	}
	return nil
}

type isFavItemBatchReq_Item interface {
	isFavItemBatchReq_Item()
}

type FavItemBatchReq_Play struct {
	Play *PlayItem `protobuf:"bytes,2,opt,name=play,proto3,oneof"`
}

type FavItemBatchReq_Fav struct {
	Fav *FavItem `protobuf:"bytes,3,opt,name=fav,proto3,oneof"`
}

func (*FavItemBatchReq_Play) isFavItemBatchReq_Item() {}

func (*FavItemBatchReq_Fav) isFavItemBatchReq_Item() {}

type FavItemBatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FavItemBatchResp) Reset() {
	*x = FavItemBatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemBatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemBatchResp) ProtoMessage() {}

func (x *FavItemBatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemBatchResp.ProtoReflect.Descriptor instead.
func (*FavItemBatchResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{35}
}

func (x *FavItemBatchResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FavItemDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid        int64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32 `protobuf:"varint,2,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
	// Types that are assignable to Item:
	//
	//	*FavItemDelReq_Play
	//	*FavItemDelReq_Fav
	Item isFavItemDelReq_Item `protobuf_oneof:"item"`
}

func (x *FavItemDelReq) Reset() {
	*x = FavItemDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemDelReq) ProtoMessage() {}

func (x *FavItemDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemDelReq.ProtoReflect.Descriptor instead.
func (*FavItemDelReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{36}
}

func (x *FavItemDelReq) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FavItemDelReq) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

func (m *FavItemDelReq) GetItem() isFavItemDelReq_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *FavItemDelReq) GetPlay() *PlayItem {
	if x, ok := x.GetItem().(*FavItemDelReq_Play); ok {
		return x.Play
	}
	return nil
}

func (x *FavItemDelReq) GetFav() *FavItem {
	if x, ok := x.GetItem().(*FavItemDelReq_Fav); ok {
		return x.Fav
	}
	return nil
}

type isFavItemDelReq_Item interface {
	isFavItemDelReq_Item()
}

type FavItemDelReq_Play struct {
	Play *PlayItem `protobuf:"bytes,3,opt,name=play,proto3,oneof"`
}

type FavItemDelReq_Fav struct {
	Fav *FavItem `protobuf:"bytes,4,opt,name=fav,proto3,oneof"`
}

func (*FavItemDelReq_Play) isFavItemDelReq_Item() {}

func (*FavItemDelReq_Fav) isFavItemDelReq_Item() {}

type FavItemDelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FavItemDelResp) Reset() {
	*x = FavItemDelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemDelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemDelResp) ProtoMessage() {}

func (x *FavItemDelResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemDelResp.ProtoReflect.Descriptor instead.
func (*FavItemDelResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{37}
}

func (x *FavItemDelResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FavItemDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item     *FavItem       `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Owner    *FavItemAuthor `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Stat     *FavItemStat   `protobuf:"bytes,3,opt,name=stat,proto3" json:"stat,omitempty"`
	Cover    string         `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Name     string         `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Duration int64          `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	State    int32          `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	Message  string         `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Parts    int32          `protobuf:"varint,9,opt,name=parts,proto3" json:"parts,omitempty"`
}

func (x *FavItemDetail) Reset() {
	*x = FavItemDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemDetail) ProtoMessage() {}

func (x *FavItemDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemDetail.ProtoReflect.Descriptor instead.
func (*FavItemDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{38}
}

func (x *FavItemDetail) GetItem() *FavItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *FavItemDetail) GetOwner() *FavItemAuthor {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *FavItemDetail) GetStat() *FavItemStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *FavItemDetail) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FavItemDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FavItemDetail) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FavItemDetail) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *FavItemDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FavItemDetail) GetParts() int32 {
	if x != nil {
		return x.Parts
	}
	return 0
}

type FavItemStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View  int32 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Reply int32 `protobuf:"varint,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *FavItemStat) Reset() {
	*x = FavItemStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavItemStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavItemStat) ProtoMessage() {}

func (x *FavItemStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavItemStat.ProtoReflect.Descriptor instead.
func (*FavItemStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{39}
}

func (x *FavItemStat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *FavItemStat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

type FavoredInAnyFoldersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderTypes []int32   `protobuf:"varint,1,rep,packed,name=folder_types,json=folderTypes,proto3" json:"folder_types,omitempty"`
	Item        *PlayItem `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *FavoredInAnyFoldersReq) Reset() {
	*x = FavoredInAnyFoldersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoredInAnyFoldersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoredInAnyFoldersReq) ProtoMessage() {}

func (x *FavoredInAnyFoldersReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoredInAnyFoldersReq.ProtoReflect.Descriptor instead.
func (*FavoredInAnyFoldersReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{40}
}

func (x *FavoredInAnyFoldersReq) GetFolderTypes() []int32 {
	if x != nil {
		return x.FolderTypes
	}
	return nil
}

func (x *FavoredInAnyFoldersReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type FavoredInAnyFoldersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Folders []*FavFolderMeta `protobuf:"bytes,1,rep,name=folders,proto3" json:"folders,omitempty"`
	Item    *PlayItem        `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *FavoredInAnyFoldersResp) Reset() {
	*x = FavoredInAnyFoldersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoredInAnyFoldersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoredInAnyFoldersResp) ProtoMessage() {}

func (x *FavoredInAnyFoldersResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoredInAnyFoldersResp.ProtoReflect.Descriptor instead.
func (*FavoredInAnyFoldersResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{41}
}

func (x *FavoredInAnyFoldersResp) GetFolders() []*FavFolderMeta {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *FavoredInAnyFoldersResp) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type FavTabShowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *FavTabShowReq) Reset() {
	*x = FavTabShowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavTabShowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavTabShowReq) ProtoMessage() {}

func (x *FavTabShowReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavTabShowReq.ProtoReflect.Descriptor instead.
func (*FavTabShowReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{42}
}

func (x *FavTabShowReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type FavTabShowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowMenu bool `protobuf:"varint,1,opt,name=show_menu,json=showMenu,proto3" json:"show_menu,omitempty"`
}

func (x *FavTabShowResp) Reset() {
	*x = FavTabShowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavTabShowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavTabShowResp) ProtoMessage() {}

func (x *FavTabShowResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavTabShowResp.ProtoReflect.Descriptor instead.
func (*FavTabShowResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{43}
}

func (x *FavTabShowResp) GetShowMenu() bool {
	if x != nil {
		return x.ShowMenu
	}
	return false
}

type FollowRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FollowRelation) Reset() {
	*x = FollowRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowRelation) ProtoMessage() {}

func (x *FollowRelation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowRelation.ProtoReflect.Descriptor instead.
func (*FollowRelation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{44}
}

func (x *FollowRelation) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FormatDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quality     int32  `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	Format      string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DisplayDesc string `protobuf:"bytes,4,opt,name=display_desc,json=displayDesc,proto3" json:"display_desc,omitempty"`
	Superscript string `protobuf:"bytes,5,opt,name=superscript,proto3" json:"superscript,omitempty"`
}

func (x *FormatDescription) Reset() {
	*x = FormatDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormatDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatDescription) ProtoMessage() {}

func (x *FormatDescription) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatDescription.ProtoReflect.Descriptor instead.
func (*FormatDescription) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{45}
}

func (x *FormatDescription) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *FormatDescription) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FormatDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FormatDescription) GetDisplayDesc() string {
	if x != nil {
		return x.DisplayDesc
	}
	return ""
}

func (x *FormatDescription) GetSuperscript() string {
	if x != nil {
		return x.Superscript
	}
	return ""
}

type MainFavMusicMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabType int32  `protobuf:"varint,1,opt,name=tab_type,json=tabType,proto3" json:"tab_type,omitempty"`
	Offset  string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MainFavMusicMenuListReq) Reset() {
	*x = MainFavMusicMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainFavMusicMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainFavMusicMenuListReq) ProtoMessage() {}

func (x *MainFavMusicMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainFavMusicMenuListReq.ProtoReflect.Descriptor instead.
func (*MainFavMusicMenuListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{46}
}

func (x *MainFavMusicMenuListReq) GetTabType() int32 {
	if x != nil {
		return x.TabType
	}
	return 0
}

func (x *MainFavMusicMenuListReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type MainFavMusicMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabType  int32        `protobuf:"varint,1,opt,name=tab_type,json=tabType,proto3" json:"tab_type,omitempty"`
	MenuList []*MusicMenu `protobuf:"bytes,2,rep,name=menu_list,json=menuList,proto3" json:"menu_list,omitempty"`
	HasMore  bool         `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset   string       `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MainFavMusicMenuListResp) Reset() {
	*x = MainFavMusicMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainFavMusicMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainFavMusicMenuListResp) ProtoMessage() {}

func (x *MainFavMusicMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainFavMusicMenuListResp.ProtoReflect.Descriptor instead.
func (*MainFavMusicMenuListResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{47}
}

func (x *MainFavMusicMenuListResp) GetTabType() int32 {
	if x != nil {
		return x.TabType
	}
	return 0
}

func (x *MainFavMusicMenuListResp) GetMenuList() []*MusicMenu {
	if x != nil {
		return x.MenuList
	}
	return nil
}

func (x *MainFavMusicMenuListResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *MainFavMusicMenuListResp) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type MainFavMusicSubTabListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MainFavMusicSubTabListReq) Reset() {
	*x = MainFavMusicSubTabListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainFavMusicSubTabListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainFavMusicSubTabListReq) ProtoMessage() {}

func (x *MainFavMusicSubTabListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainFavMusicSubTabListReq.ProtoReflect.Descriptor instead.
func (*MainFavMusicSubTabListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{48}
}

type MainFavMusicSubTabListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tabs          []*MusicSubTab                      `protobuf:"bytes,1,rep,name=tabs,proto3" json:"tabs,omitempty"`
	DefaultTabRes *MainFavMusicMenuListResp           `protobuf:"bytes,2,opt,name=default_tab_res,json=defaultTabRes,proto3" json:"default_tab_res,omitempty"`
	FirstPageRes  map[int32]*MainFavMusicMenuListResp `protobuf:"bytes,3,rep,name=first_page_res,json=firstPageRes,proto3" json:"first_page_res,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MainFavMusicSubTabListResp) Reset() {
	*x = MainFavMusicSubTabListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainFavMusicSubTabListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainFavMusicSubTabListResp) ProtoMessage() {}

func (x *MainFavMusicSubTabListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainFavMusicSubTabListResp.ProtoReflect.Descriptor instead.
func (*MainFavMusicSubTabListResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{49}
}

func (x *MainFavMusicSubTabListResp) GetTabs() []*MusicSubTab {
	if x != nil {
		return x.Tabs
	}
	return nil
}

func (x *MainFavMusicSubTabListResp) GetDefaultTabRes() *MainFavMusicMenuListResp {
	if x != nil {
		return x.DefaultTabRes
	}
	return nil
}

func (x *MainFavMusicSubTabListResp) GetFirstPageRes() map[int32]*MainFavMusicMenuListResp {
	if x != nil {
		return x.FirstPageRes
	}
	return nil
}

type MedialistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item      *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Title     string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover     string    `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Duration  int64     `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Parts     int32     `protobuf:"varint,5,opt,name=parts,proto3" json:"parts,omitempty"`
	UpMid     int64     `protobuf:"varint,6,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	UpName    string    `protobuf:"bytes,7,opt,name=up_name,json=upName,proto3" json:"up_name,omitempty"`
	State     int32     `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Message   string    `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	StatView  int64     `protobuf:"varint,10,opt,name=stat_view,json=statView,proto3" json:"stat_view,omitempty"`
	StatReply int64     `protobuf:"varint,11,opt,name=stat_reply,json=statReply,proto3" json:"stat_reply,omitempty"`
}

func (x *MedialistItem) Reset() {
	*x = MedialistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedialistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedialistItem) ProtoMessage() {}

func (x *MedialistItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedialistItem.ProtoReflect.Descriptor instead.
func (*MedialistItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{50}
}

func (x *MedialistItem) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MedialistItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MedialistItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MedialistItem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MedialistItem) GetParts() int32 {
	if x != nil {
		return x.Parts
	}
	return 0
}

func (x *MedialistItem) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *MedialistItem) GetUpName() string {
	if x != nil {
		return x.UpName
	}
	return ""
}

func (x *MedialistItem) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MedialistItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MedialistItem) GetStatView() int64 {
	if x != nil {
		return x.StatView
	}
	return 0
}

func (x *MedialistItem) GetStatReply() int64 {
	if x != nil {
		return x.StatReply
	}
	return 0
}

type MedialistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListType int64  `protobuf:"varint,1,opt,name=list_type,json=listType,proto3" json:"list_type,omitempty"`
	BizId    int64  `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Offset   string `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MedialistReq) Reset() {
	*x = MedialistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedialistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedialistReq) ProtoMessage() {}

func (x *MedialistReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedialistReq.ProtoReflect.Descriptor instead.
func (*MedialistReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{51}
}

func (x *MedialistReq) GetListType() int64 {
	if x != nil {
		return x.ListType
	}
	return 0
}

func (x *MedialistReq) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *MedialistReq) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type MedialistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	HasMore bool             `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Offset  string           `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Items   []*MedialistItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	UpInfo  *MedialistUpInfo `protobuf:"bytes,5,opt,name=up_info,json=upInfo,proto3" json:"up_info,omitempty"`
}

func (x *MedialistResp) Reset() {
	*x = MedialistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedialistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedialistResp) ProtoMessage() {}

func (x *MedialistResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedialistResp.ProtoReflect.Descriptor instead.
func (*MedialistResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{52}
}

func (x *MedialistResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MedialistResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *MedialistResp) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *MedialistResp) GetItems() []*MedialistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MedialistResp) GetUpInfo() *MedialistUpInfo {
	if x != nil {
		return x.UpInfo
	}
	return nil
}

type MedialistUpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Avatar string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Fans   int64  `protobuf:"varint,3,opt,name=fans,proto3" json:"fans,omitempty"`
	Name   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MedialistUpInfo) Reset() {
	*x = MedialistUpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedialistUpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedialistUpInfo) ProtoMessage() {}

func (x *MedialistUpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedialistUpInfo.ProtoReflect.Descriptor instead.
func (*MedialistUpInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{53}
}

func (x *MedialistUpInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MedialistUpInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MedialistUpInfo) GetFans() int64 {
	if x != nil {
		return x.Fans
	}
	return 0
}

func (x *MedialistUpInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MenuDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MenuDeleteReq) Reset() {
	*x = MenuDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDeleteReq) ProtoMessage() {}

func (x *MenuDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDeleteReq.ProtoReflect.Descriptor instead.
func (*MenuDeleteReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{54}
}

func (x *MenuDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MenuDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MenuDeleteResp) Reset() {
	*x = MenuDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDeleteResp) ProtoMessage() {}

func (x *MenuDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDeleteResp.ProtoReflect.Descriptor instead.
func (*MenuDeleteResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{55}
}

func (x *MenuDeleteResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MenuEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc     string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IsPublic int32  `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *MenuEditReq) Reset() {
	*x = MenuEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuEditReq) ProtoMessage() {}

func (x *MenuEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuEditReq.ProtoReflect.Descriptor instead.
func (*MenuEditReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{56}
}

func (x *MenuEditReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuEditReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuEditReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MenuEditReq) GetIsPublic() int32 {
	if x != nil {
		return x.IsPublic
	}
	return 0
}

type MenuEditResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MenuEditResp) Reset() {
	*x = MenuEditResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuEditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuEditResp) ProtoMessage() {}

func (x *MenuEditResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuEditResp.ProtoReflect.Descriptor instead.
func (*MenuEditResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{57}
}

func (x *MenuEditResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MenuSubscribeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action   int32 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	TargetId int64 `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *MenuSubscribeReq) Reset() {
	*x = MenuSubscribeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuSubscribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSubscribeReq) ProtoMessage() {}

func (x *MenuSubscribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSubscribeReq.ProtoReflect.Descriptor instead.
func (*MenuSubscribeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{58}
}

func (x *MenuSubscribeReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *MenuSubscribeReq) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type MenuSubscribeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MenuSubscribeResp) Reset() {
	*x = MenuSubscribeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuSubscribeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuSubscribeResp) ProtoMessage() {}

func (x *MenuSubscribeResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuSubscribeResp.ProtoReflect.Descriptor instead.
func (*MenuSubscribeResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{59}
}

func (x *MenuSubscribeResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MusicMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MenuType int32            `protobuf:"varint,2,opt,name=menu_type,json=menuType,proto3" json:"menu_type,omitempty"`
	Title    string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Desc     string           `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Cover    string           `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Owner    *MusicMenuAuthor `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	State    int32            `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	Attr     int64            `protobuf:"varint,8,opt,name=attr,proto3" json:"attr,omitempty"`
	Stat     *MusicMenuStat   `protobuf:"bytes,9,opt,name=stat,proto3" json:"stat,omitempty"`
	Total    int64            `protobuf:"varint,10,opt,name=total,proto3" json:"total,omitempty"`
	Ctime    int64            `protobuf:"varint,11,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Uri      string           `protobuf:"bytes,12,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *MusicMenu) Reset() {
	*x = MusicMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicMenu) ProtoMessage() {}

func (x *MusicMenu) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicMenu.ProtoReflect.Descriptor instead.
func (*MusicMenu) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{60}
}

func (x *MusicMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MusicMenu) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *MusicMenu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MusicMenu) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MusicMenu) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MusicMenu) GetOwner() *MusicMenuAuthor {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *MusicMenu) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MusicMenu) GetAttr() int64 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *MusicMenu) GetStat() *MusicMenuStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *MusicMenu) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MusicMenu) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *MusicMenu) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type MusicMenuAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *MusicMenuAuthor) Reset() {
	*x = MusicMenuAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicMenuAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicMenuAuthor) ProtoMessage() {}

func (x *MusicMenuAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicMenuAuthor.ProtoReflect.Descriptor instead.
func (*MusicMenuAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{61}
}

func (x *MusicMenuAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MusicMenuAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MusicMenuAuthor) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type MusicMenuStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Play  int64 `protobuf:"varint,1,opt,name=play,proto3" json:"play,omitempty"`
	Reply int64 `protobuf:"varint,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *MusicMenuStat) Reset() {
	*x = MusicMenuStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicMenuStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicMenuStat) ProtoMessage() {}

func (x *MusicMenuStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicMenuStat.ProtoReflect.Descriptor instead.
func (*MusicMenuStat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{62}
}

func (x *MusicMenuStat) GetPlay() int64 {
	if x != nil {
		return x.Play
	}
	return 0
}

func (x *MusicMenuStat) GetReply() int64 {
	if x != nil {
		return x.Reply
	}
	return 0
}

type MusicSubTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TabType int32  `protobuf:"varint,2,opt,name=tab_type,json=tabType,proto3" json:"tab_type,omitempty"`
	Total   int64  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MusicSubTab) Reset() {
	*x = MusicSubTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSubTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSubTab) ProtoMessage() {}

func (x *MusicSubTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSubTab.ProtoReflect.Descriptor instead.
func (*MusicSubTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{63}
}

func (x *MusicSubTab) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MusicSubTab) GetTabType() int32 {
	if x != nil {
		return x.TabType
	}
	return 0
}

func (x *MusicSubTab) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PageOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32     `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Direction int32     `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	LastItem  *PlayItem `protobuf:"bytes,3,opt,name=last_item,json=lastItem,proto3" json:"last_item,omitempty"`
}

func (x *PageOption) Reset() {
	*x = PageOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageOption) ProtoMessage() {}

func (x *PageOption) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageOption.ProtoReflect.Descriptor instead.
func (*PageOption) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{64}
}

func (x *PageOption) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageOption) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *PageOption) GetLastItem() *PlayItem {
	if x != nil {
		return x.LastItem
	}
	return nil
}

type PickArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item      *PlayItem          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Title     string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Owner     *PickArchiveAuthor `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Cover     string             `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Duration  int64              `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Parts     int32              `protobuf:"varint,6,opt,name=parts,proto3" json:"parts,omitempty"`
	StatView  int32              `protobuf:"varint,7,opt,name=stat_view,json=statView,proto3" json:"stat_view,omitempty"`
	StatReply int32              `protobuf:"varint,8,opt,name=stat_reply,json=statReply,proto3" json:"stat_reply,omitempty"`
	State     int32              `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	Message   string             `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PickArchive) Reset() {
	*x = PickArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickArchive) ProtoMessage() {}

func (x *PickArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickArchive.ProtoReflect.Descriptor instead.
func (*PickArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{65}
}

func (x *PickArchive) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PickArchive) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PickArchive) GetOwner() *PickArchiveAuthor {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *PickArchive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *PickArchive) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PickArchive) GetParts() int32 {
	if x != nil {
		return x.Parts
	}
	return 0
}

func (x *PickArchive) GetStatView() int32 {
	if x != nil {
		return x.StatView
	}
	return 0
}

func (x *PickArchive) GetStatReply() int32 {
	if x != nil {
		return x.StatReply
	}
	return 0
}

func (x *PickArchive) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PickArchive) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PickArchiveAuthor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PickArchiveAuthor) Reset() {
	*x = PickArchiveAuthor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickArchiveAuthor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickArchiveAuthor) ProtoMessage() {}

func (x *PickArchiveAuthor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickArchiveAuthor.ProtoReflect.Descriptor instead.
func (*PickArchiveAuthor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{66}
}

func (x *PickArchiveAuthor) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *PickArchiveAuthor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PickCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PickId   int64         `protobuf:"varint,1,opt,name=pick_id,json=pickId,proto3" json:"pick_id,omitempty"`
	CardId   int64         `protobuf:"varint,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	CardName string        `protobuf:"bytes,3,opt,name=card_name,json=cardName,proto3" json:"card_name,omitempty"`
	Modules  []*CardModule `protobuf:"bytes,4,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *PickCard) Reset() {
	*x = PickCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickCard) ProtoMessage() {}

func (x *PickCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickCard.ProtoReflect.Descriptor instead.
func (*PickCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{67}
}

func (x *PickCard) GetPickId() int64 {
	if x != nil {
		return x.PickId
	}
	return 0
}

func (x *PickCard) GetCardId() int64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *PickCard) GetCardName() string {
	if x != nil {
		return x.CardName
	}
	return ""
}

func (x *PickCard) GetModules() []*CardModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

type PickCardDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId int64 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PickId int64 `protobuf:"varint,2,opt,name=pick_id,json=pickId,proto3" json:"pick_id,omitempty"`
}

func (x *PickCardDetailReq) Reset() {
	*x = PickCardDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickCardDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickCardDetailReq) ProtoMessage() {}

func (x *PickCardDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickCardDetailReq.ProtoReflect.Descriptor instead.
func (*PickCardDetailReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{68}
}

func (x *PickCardDetailReq) GetCardId() int64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *PickCardDetailReq) GetPickId() int64 {
	if x != nil {
		return x.PickId
	}
	return 0
}

type PickCardDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId  int64         `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	PickId  int64         `protobuf:"varint,2,opt,name=pick_id,json=pickId,proto3" json:"pick_id,omitempty"`
	Modules []*CardModule `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *PickCardDetailResp) Reset() {
	*x = PickCardDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickCardDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickCardDetailResp) ProtoMessage() {}

func (x *PickCardDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickCardDetailResp.ProtoReflect.Descriptor instead.
func (*PickCardDetailResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{69}
}

func (x *PickCardDetailResp) GetCardId() int64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *PickCardDetailResp) GetPickId() int64 {
	if x != nil {
		return x.PickId
	}
	return 0
}

func (x *PickCardDetailResp) GetModules() []*CardModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

type PickFeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PickFeedReq) Reset() {
	*x = PickFeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickFeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickFeedReq) ProtoMessage() {}

func (x *PickFeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickFeedReq.ProtoReflect.Descriptor instead.
func (*PickFeedReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{70}
}

func (x *PickFeedReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PickFeedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64       `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Cards  []*PickCard `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *PickFeedResp) Reset() {
	*x = PickFeedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickFeedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickFeedResp) ProtoMessage() {}

func (x *PickFeedResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickFeedResp.ProtoReflect.Descriptor instead.
func (*PickFeedResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{71}
}

func (x *PickFeedResp) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PickFeedResp) GetCards() []*PickCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

type PkcmArchive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc        *PickArchive `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	PickReason string       `protobuf:"bytes,2,opt,name=pick_reason,json=pickReason,proto3" json:"pick_reason,omitempty"`
}

func (x *PkcmArchive) Reset() {
	*x = PkcmArchive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkcmArchive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkcmArchive) ProtoMessage() {}

func (x *PkcmArchive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkcmArchive.ProtoReflect.Descriptor instead.
func (*PkcmArchive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{72}
}

func (x *PkcmArchive) GetArc() *PickArchive {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *PkcmArchive) GetPickReason() string {
	if x != nil {
		return x.PickReason
	}
	return ""
}

type PkcmCenterButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconHead string `protobuf:"bytes,1,opt,name=icon_head,json=iconHead,proto3" json:"icon_head,omitempty"`
	IconTail string `protobuf:"bytes,2,opt,name=icon_tail,json=iconTail,proto3" json:"icon_tail,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Uri      string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *PkcmCenterButton) Reset() {
	*x = PkcmCenterButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkcmCenterButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkcmCenterButton) ProtoMessage() {}

func (x *PkcmCenterButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkcmCenterButton.ProtoReflect.Descriptor instead.
func (*PkcmCenterButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{73}
}

func (x *PkcmCenterButton) GetIconHead() string {
	if x != nil {
		return x.IconHead
	}
	return ""
}

func (x *PkcmCenterButton) GetIconTail() string {
	if x != nil {
		return x.IconTail
	}
	return ""
}

func (x *PkcmCenterButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PkcmCenterButton) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type PkcmHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc    string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	BtnIcon string `protobuf:"bytes,3,opt,name=btn_icon,json=btnIcon,proto3" json:"btn_icon,omitempty"`
	BtnText string `protobuf:"bytes,4,opt,name=btn_text,json=btnText,proto3" json:"btn_text,omitempty"`
	BtnUri  string `protobuf:"bytes,5,opt,name=btn_uri,json=btnUri,proto3" json:"btn_uri,omitempty"`
}

func (x *PkcmHeader) Reset() {
	*x = PkcmHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PkcmHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PkcmHeader) ProtoMessage() {}

func (x *PkcmHeader) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PkcmHeader.ProtoReflect.Descriptor instead.
func (*PkcmHeader) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{74}
}

func (x *PkcmHeader) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PkcmHeader) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PkcmHeader) GetBtnIcon() string {
	if x != nil {
		return x.BtnIcon
	}
	return ""
}

func (x *PkcmHeader) GetBtnText() string {
	if x != nil {
		return x.BtnText
	}
	return ""
}

func (x *PkcmHeader) GetBtnUri() string {
	if x != nil {
		return x.BtnUri
	}
	return ""
}

type PlayActionReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item      *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	FromSpmid string    `protobuf:"bytes,2,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
}

func (x *PlayActionReportReq) Reset() {
	*x = PlayActionReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayActionReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayActionReportReq) ProtoMessage() {}

func (x *PlayActionReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayActionReportReq.ProtoReflect.Descriptor instead.
func (*PlayActionReportReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{75}
}

func (x *PlayActionReportReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PlayActionReportReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

type PlayDASH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration      int32       `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	MinBufferTime float32     `protobuf:"fixed32,2,opt,name=min_buffer_time,json=minBufferTime,proto3" json:"min_buffer_time,omitempty"`
	Audio         []*DashItem `protobuf:"bytes,3,rep,name=audio,proto3" json:"audio,omitempty"`
}

func (x *PlayDASH) Reset() {
	*x = PlayDASH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayDASH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayDASH) ProtoMessage() {}

func (x *PlayDASH) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayDASH.ProtoReflect.Descriptor instead.
func (*PlayDASH) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{76}
}

func (x *PlayDASH) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PlayDASH) GetMinBufferTime() float32 {
	if x != nil {
		return x.MinBufferTime
	}
	return 0
}

func (x *PlayDASH) GetAudio() []*DashItem {
	if x != nil {
		return x.Audio
	}
	return nil
}

type PlayHistoryAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item      *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Progress  int64     `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	Duration  int64     `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	PlayStyle int32     `protobuf:"varint,4,opt,name=play_style,json=playStyle,proto3" json:"play_style,omitempty"`
}

func (x *PlayHistoryAddReq) Reset() {
	*x = PlayHistoryAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayHistoryAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayHistoryAddReq) ProtoMessage() {}

func (x *PlayHistoryAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayHistoryAddReq.ProtoReflect.Descriptor instead.
func (*PlayHistoryAddReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{77}
}

func (x *PlayHistoryAddReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PlayHistoryAddReq) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *PlayHistoryAddReq) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *PlayHistoryAddReq) GetPlayStyle() int32 {
	if x != nil {
		return x.PlayStyle
	}
	return 0
}

type PlayHistoryDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*PlayItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Truncate bool        `protobuf:"varint,2,opt,name=truncate,proto3" json:"truncate,omitempty"`
}

func (x *PlayHistoryDelReq) Reset() {
	*x = PlayHistoryDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayHistoryDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayHistoryDelReq) ProtoMessage() {}

func (x *PlayHistoryDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayHistoryDelReq.ProtoReflect.Descriptor instead.
func (*PlayHistoryDelReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{78}
}

func (x *PlayHistoryDelReq) GetItems() []*PlayItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PlayHistoryDelReq) GetTruncate() bool {
	if x != nil {
		return x.Truncate
	}
	return false
}

type PlayHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageOpt        *PageOption `protobuf:"bytes,1,opt,name=page_opt,json=pageOpt,proto3" json:"page_opt,omitempty"`
	LocalTodayZero int64       `protobuf:"varint,2,opt,name=local_today_zero,json=localTodayZero,proto3" json:"local_today_zero,omitempty"`
}

func (x *PlayHistoryReq) Reset() {
	*x = PlayHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayHistoryReq) ProtoMessage() {}

func (x *PlayHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayHistoryReq.ProtoReflect.Descriptor instead.
func (*PlayHistoryReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{79}
}

func (x *PlayHistoryReq) GetPageOpt() *PageOption {
	if x != nil {
		return x.PageOpt
	}
	return nil
}

func (x *PlayHistoryReq) GetLocalTodayZero() int64 {
	if x != nil {
		return x.LocalTodayZero
	}
	return 0
}

type PlayHistoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ReachEnd bool          `protobuf:"varint,2,opt,name=reach_end,json=reachEnd,proto3" json:"reach_end,omitempty"`
	List     []*DetailItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PlayHistoryResp) Reset() {
	*x = PlayHistoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayHistoryResp) ProtoMessage() {}

func (x *PlayHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayHistoryResp.ProtoReflect.Descriptor instead.
func (*PlayHistoryResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{80}
}

func (x *PlayHistoryResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PlayHistoryResp) GetReachEnd() bool {
	if x != nil {
		return x.ReachEnd
	}
	return false
}

func (x *PlayHistoryResp) GetList() []*DetailItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PlayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qn     int32  `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	QnType int32  `protobuf:"varint,3,opt,name=qn_type,json=qnType,proto3" json:"qn_type,omitempty"`
	// Types that are assignable to Info:
	//
	//	*PlayInfo_PlayUrl
	//	*PlayInfo_PlayDash
	Info         isPlayInfo_Info `protobuf_oneof:"info"`
	Fnver        int32           `protobuf:"varint,6,opt,name=fnver,proto3" json:"fnver,omitempty"`
	Fnval        int32           `protobuf:"varint,7,opt,name=fnval,proto3" json:"fnval,omitempty"`
	Formats      []int32         `protobuf:"varint,8,rep,packed,name=formats,proto3" json:"formats,omitempty"`
	VideoCodecid int32           `protobuf:"varint,9,opt,name=video_codecid,json=videoCodecid,proto3" json:"video_codecid,omitempty"`
	Length       int64           `protobuf:"varint,10,opt,name=length,proto3" json:"length,omitempty"`
	Code         int32           `protobuf:"varint,11,opt,name=code,proto3" json:"code,omitempty"`
	Message      string          `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	ExpireTime   int64           `protobuf:"varint,13,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Volume       *v12.VolumeInfo `protobuf:"bytes,14,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *PlayInfo) Reset() {
	*x = PlayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayInfo) ProtoMessage() {}

func (x *PlayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayInfo.ProtoReflect.Descriptor instead.
func (*PlayInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{81}
}

func (x *PlayInfo) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *PlayInfo) GetQnType() int32 {
	if x != nil {
		return x.QnType
	}
	return 0
}

func (m *PlayInfo) GetInfo() isPlayInfo_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *PlayInfo) GetPlayUrl() *PlayURL {
	if x, ok := x.GetInfo().(*PlayInfo_PlayUrl); ok {
		return x.PlayUrl
	}
	return nil
}

func (x *PlayInfo) GetPlayDash() *PlayDASH {
	if x, ok := x.GetInfo().(*PlayInfo_PlayDash); ok {
		return x.PlayDash
	}
	return nil
}

func (x *PlayInfo) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayInfo) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayInfo) GetFormats() []int32 {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *PlayInfo) GetVideoCodecid() int32 {
	if x != nil {
		return x.VideoCodecid
	}
	return 0
}

func (x *PlayInfo) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PlayInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PlayInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlayInfo) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *PlayInfo) GetVolume() *v12.VolumeInfo {
	if x != nil {
		return x.Volume
	}
	return nil
}

type isPlayInfo_Info interface {
	isPlayInfo_Info()
}

type PlayInfo_PlayUrl struct {
	PlayUrl *PlayURL `protobuf:"bytes,4,opt,name=play_url,json=playUrl,proto3,oneof"`
}

type PlayInfo_PlayDash struct {
	PlayDash *PlayDASH `protobuf:"bytes,5,opt,name=play_dash,json=playDash,proto3,oneof"`
}

func (*PlayInfo_PlayUrl) isPlayInfo_Info() {}

func (*PlayInfo_PlayDash) isPlayInfo_Info() {}

type PlayItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType int32          `protobuf:"varint,1,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	Oid      int64          `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	SubId    []int64        `protobuf:"varint,4,rep,packed,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	Et       *EventTracking `protobuf:"bytes,5,opt,name=et,proto3" json:"et,omitempty"`
}

func (x *PlayItem) Reset() {
	*x = PlayItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayItem) ProtoMessage() {}

func (x *PlayItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayItem.ProtoReflect.Descriptor instead.
func (*PlayItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{82}
}

func (x *PlayItem) GetItemType() int32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *PlayItem) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PlayItem) GetSubId() []int64 {
	if x != nil {
		return x.SubId
	}
	return nil
}

func (x *PlayItem) GetEt() *EventTracking {
	if x != nil {
		return x.Et
	}
	return nil
}

type PlaylistAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*PlayItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// Types that are assignable to Pos:
	//
	//	*PlaylistAddReq_After
	//	*PlaylistAddReq_Head
	//	*PlaylistAddReq_Tail
	Pos isPlaylistAddReq_Pos `protobuf_oneof:"pos"`
}

func (x *PlaylistAddReq) Reset() {
	*x = PlaylistAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistAddReq) ProtoMessage() {}

func (x *PlaylistAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistAddReq.ProtoReflect.Descriptor instead.
func (*PlaylistAddReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{83}
}

func (x *PlaylistAddReq) GetItems() []*PlayItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (m *PlaylistAddReq) GetPos() isPlaylistAddReq_Pos {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (x *PlaylistAddReq) GetAfter() *PlayItem {
	if x, ok := x.GetPos().(*PlaylistAddReq_After); ok {
		return x.After
	}
	return nil
}

func (x *PlaylistAddReq) GetHead() bool {
	if x, ok := x.GetPos().(*PlaylistAddReq_Head); ok {
		return x.Head
	}
	return false
}

func (x *PlaylistAddReq) GetTail() bool {
	if x, ok := x.GetPos().(*PlaylistAddReq_Tail); ok {
		return x.Tail
	}
	return false
}

type isPlaylistAddReq_Pos interface {
	isPlaylistAddReq_Pos()
}

type PlaylistAddReq_After struct {
	After *PlayItem `protobuf:"bytes,2,opt,name=after,proto3,oneof"`
}

type PlaylistAddReq_Head struct {
	Head bool `protobuf:"varint,3,opt,name=head,proto3,oneof"`
}

type PlaylistAddReq_Tail struct {
	Tail bool `protobuf:"varint,4,opt,name=tail,proto3,oneof"`
}

func (*PlaylistAddReq_After) isPlaylistAddReq_Pos() {}

func (*PlaylistAddReq_Head) isPlaylistAddReq_Pos() {}

func (*PlaylistAddReq_Tail) isPlaylistAddReq_Pos() {}

type PlaylistDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*PlayItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Truncate bool        `protobuf:"varint,2,opt,name=truncate,proto3" json:"truncate,omitempty"`
}

func (x *PlaylistDelReq) Reset() {
	*x = PlaylistDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistDelReq) ProtoMessage() {}

func (x *PlaylistDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistDelReq.ProtoReflect.Descriptor instead.
func (*PlaylistDelReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{84}
}

func (x *PlaylistDelReq) GetItems() []*PlayItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PlaylistDelReq) GetTruncate() bool {
	if x != nil {
		return x.Truncate
	}
	return false
}

type PlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       int32          `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Id         int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Anchor     *PlayItem      `protobuf:"bytes,3,opt,name=anchor,proto3" json:"anchor,omitempty"`
	PageOpt    *PageOption    `protobuf:"bytes,4,opt,name=page_opt,json=pageOpt,proto3" json:"page_opt,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	ExtraId    int64          `protobuf:"varint,6,opt,name=extra_id,json=extraId,proto3" json:"extra_id,omitempty"`
	SortOpt    *SortOption    `protobuf:"bytes,7,opt,name=sort_opt,json=sortOpt,proto3" json:"sort_opt,omitempty"`
}

func (x *PlaylistReq) Reset() {
	*x = PlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistReq) ProtoMessage() {}

func (x *PlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistReq.ProtoReflect.Descriptor instead.
func (*PlaylistReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{85}
}

func (x *PlaylistReq) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PlaylistReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlaylistReq) GetAnchor() *PlayItem {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *PlaylistReq) GetPageOpt() *PageOption {
	if x != nil {
		return x.PageOpt
	}
	return nil
}

func (x *PlaylistReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *PlaylistReq) GetExtraId() int64 {
	if x != nil {
		return x.ExtraId
	}
	return 0
}

func (x *PlaylistReq) GetSortOpt() *SortOption {
	if x != nil {
		return x.SortOpt
	}
	return nil
}

type PlaylistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ReachStart   bool          `protobuf:"varint,2,opt,name=reach_start,json=reachStart,proto3" json:"reach_start,omitempty"`
	ReachEnd     bool          `protobuf:"varint,3,opt,name=reach_end,json=reachEnd,proto3" json:"reach_end,omitempty"`
	List         []*DetailItem `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
	LastPlay     *PlayItem     `protobuf:"bytes,5,opt,name=last_play,json=lastPlay,proto3" json:"last_play,omitempty"`
	LastProgress int64         `protobuf:"varint,6,opt,name=last_progress,json=lastProgress,proto3" json:"last_progress,omitempty"`
}

func (x *PlaylistResp) Reset() {
	*x = PlaylistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaylistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistResp) ProtoMessage() {}

func (x *PlaylistResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistResp.ProtoReflect.Descriptor instead.
func (*PlaylistResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{86}
}

func (x *PlaylistResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PlaylistResp) GetReachStart() bool {
	if x != nil {
		return x.ReachStart
	}
	return false
}

func (x *PlaylistResp) GetReachEnd() bool {
	if x != nil {
		return x.ReachEnd
	}
	return false
}

func (x *PlaylistResp) GetList() []*DetailItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PlaylistResp) GetLastPlay() *PlayItem {
	if x != nil {
		return x.LastPlay
	}
	return nil
}

func (x *PlaylistResp) GetLastProgress() int64 {
	if x != nil {
		return x.LastProgress
	}
	return 0
}

type PlayURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Durl []*ResponseUrl `protobuf:"bytes,1,rep,name=durl,proto3" json:"durl,omitempty"`
}

func (x *PlayURL) Reset() {
	*x = PlayURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayURL) ProtoMessage() {}

func (x *PlayURL) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayURL.ProtoReflect.Descriptor instead.
func (*PlayURL) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{87}
}

func (x *PlayURL) GetDurl() []*ResponseUrl {
	if x != nil {
		return x.Durl
	}
	return nil
}

type PlayURLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *PlayItem      `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,2,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *PlayURLReq) Reset() {
	*x = PlayURLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayURLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayURLReq) ProtoMessage() {}

func (x *PlayURLReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayURLReq.ProtoReflect.Descriptor instead.
func (*PlayURLReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{88}
}

func (x *PlayURLReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PlayURLReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type PlayURLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *PlayItem           `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Playable   int32               `protobuf:"varint,2,opt,name=playable,proto3" json:"playable,omitempty"`
	Message    string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	PlayerInfo map[int64]*PlayInfo `protobuf:"bytes,4,rep,name=playerInfo,proto3" json:"playerInfo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlayURLResp) Reset() {
	*x = PlayURLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayURLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayURLResp) ProtoMessage() {}

func (x *PlayURLResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayURLResp.ProtoReflect.Descriptor instead.
func (*PlayURLResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{89}
}

func (x *PlayURLResp) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *PlayURLResp) GetPlayable() int32 {
	if x != nil {
		return x.Playable
	}
	return 0
}

func (x *PlayURLResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlayURLResp) GetPlayerInfo() map[int64]*PlayInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

type RcmdPlaylistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         int32          `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Id           int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	NeedHistory  bool           `protobuf:"varint,3,opt,name=need_history,json=needHistory,proto3" json:"need_history,omitempty"`
	NeedTopCards bool           `protobuf:"varint,4,opt,name=need_top_cards,json=needTopCards,proto3" json:"need_top_cards,omitempty"`
	PlayerArgs   *v1.PlayerArgs `protobuf:"bytes,5,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *RcmdPlaylistReq) Reset() {
	*x = RcmdPlaylistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdPlaylistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdPlaylistReq) ProtoMessage() {}

func (x *RcmdPlaylistReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdPlaylistReq.ProtoReflect.Descriptor instead.
func (*RcmdPlaylistReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{90}
}

func (x *RcmdPlaylistReq) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *RcmdPlaylistReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RcmdPlaylistReq) GetNeedHistory() bool {
	if x != nil {
		return x.NeedHistory
	}
	return false
}

func (x *RcmdPlaylistReq) GetNeedTopCards() bool {
	if x != nil {
		return x.NeedTopCards
	}
	return false
}

func (x *RcmdPlaylistReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

type RcmdPlaylistResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*DetailItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	HistoryLen int64         `protobuf:"varint,2,opt,name=history_len,json=historyLen,proto3" json:"history_len,omitempty"`
	TopCards   []*TopCard    `protobuf:"bytes,3,rep,name=top_cards,json=topCards,proto3" json:"top_cards,omitempty"`
}

func (x *RcmdPlaylistResp) Reset() {
	*x = RcmdPlaylistResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RcmdPlaylistResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RcmdPlaylistResp) ProtoMessage() {}

func (x *RcmdPlaylistResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RcmdPlaylistResp.ProtoReflect.Descriptor instead.
func (*RcmdPlaylistResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{91}
}

func (x *RcmdPlaylistResp) GetList() []*DetailItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RcmdPlaylistResp) GetHistoryLen() int64 {
	if x != nil {
		return x.HistoryLen
	}
	return 0
}

func (x *RcmdPlaylistResp) GetTopCards() []*TopCard {
	if x != nil {
		return x.TopCards
	}
	return nil
}

type ResponseUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order     int32    `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Length    int64    `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Size      int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Ahead     string   `protobuf:"bytes,4,opt,name=ahead,proto3" json:"ahead,omitempty"`
	Vhead     string   `protobuf:"bytes,5,opt,name=vhead,proto3" json:"vhead,omitempty"`
	Url       string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	BackupUrl []string `protobuf:"bytes,7,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	Md5       string   `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *ResponseUrl) Reset() {
	*x = ResponseUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUrl) ProtoMessage() {}

func (x *ResponseUrl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUrl.ProtoReflect.Descriptor instead.
func (*ResponseUrl) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{92}
}

func (x *ResponseUrl) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ResponseUrl) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ResponseUrl) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResponseUrl) GetAhead() string {
	if x != nil {
		return x.Ahead
	}
	return ""
}

func (x *ResponseUrl) GetVhead() string {
	if x != nil {
		return x.Vhead
	}
	return ""
}

func (x *ResponseUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseUrl) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *ResponseUrl) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type SortOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order     int32 `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	SortField int32 `protobuf:"varint,2,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`
}

func (x *SortOption) Reset() {
	*x = SortOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOption) ProtoMessage() {}

func (x *SortOption) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOption.ProtoReflect.Descriptor instead.
func (*SortOption) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{93}
}

func (x *SortOption) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SortOption) GetSortField() int32 {
	if x != nil {
		return x.SortField
	}
	return 0
}

type ThumbUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Action int32     `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ThumbUpReq) Reset() {
	*x = ThumbUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThumbUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbUpReq) ProtoMessage() {}

func (x *ThumbUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbUpReq.ProtoReflect.Descriptor instead.
func (*ThumbUpReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{94}
}

func (x *ThumbUpReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ThumbUpReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ThumbUpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ThumbUpResp) Reset() {
	*x = ThumbUpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThumbUpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbUpResp) ProtoMessage() {}

func (x *ThumbUpResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbUpResp.ProtoReflect.Descriptor instead.
func (*ThumbUpResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{95}
}

func (x *ThumbUpResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TopCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PlayStyle int32  `protobuf:"varint,2,opt,name=play_style,json=playStyle,proto3" json:"play_style,omitempty"`
	CardType  int32  `protobuf:"varint,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// Types that are assignable to Card:
	//
	//	*TopCard_ListenHistory
	//	*TopCard_FavFolder
	//	*TopCard_UpRecall
	//	*TopCard_PickToday
	Card      isTopCard_Card `protobuf_oneof:"card"`
	Pos       int64          `protobuf:"varint,8,opt,name=pos,proto3" json:"pos,omitempty"`
	TitleIcon string         `protobuf:"bytes,9,opt,name=title_icon,json=titleIcon,proto3" json:"title_icon,omitempty"`
}

func (x *TopCard) Reset() {
	*x = TopCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCard) ProtoMessage() {}

func (x *TopCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCard.ProtoReflect.Descriptor instead.
func (*TopCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{96}
}

func (x *TopCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TopCard) GetPlayStyle() int32 {
	if x != nil {
		return x.PlayStyle
	}
	return 0
}

func (x *TopCard) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (m *TopCard) GetCard() isTopCard_Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (x *TopCard) GetListenHistory() *TpcdHistory {
	if x, ok := x.GetCard().(*TopCard_ListenHistory); ok {
		return x.ListenHistory
	}
	return nil
}

func (x *TopCard) GetFavFolder() *TpcdFavFolder {
	if x, ok := x.GetCard().(*TopCard_FavFolder); ok {
		return x.FavFolder
	}
	return nil
}

func (x *TopCard) GetUpRecall() *TpcdUpRecall {
	if x, ok := x.GetCard().(*TopCard_UpRecall); ok {
		return x.UpRecall
	}
	return nil
}

func (x *TopCard) GetPickToday() *TpcdPickToday {
	if x, ok := x.GetCard().(*TopCard_PickToday); ok {
		return x.PickToday
	}
	return nil
}

func (x *TopCard) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *TopCard) GetTitleIcon() string {
	if x != nil {
		return x.TitleIcon
	}
	return ""
}

type isTopCard_Card interface {
	isTopCard_Card()
}

type TopCard_ListenHistory struct {
	ListenHistory *TpcdHistory `protobuf:"bytes,4,opt,name=listen_history,json=listenHistory,proto3,oneof"`
}

type TopCard_FavFolder struct {
	FavFolder *TpcdFavFolder `protobuf:"bytes,5,opt,name=fav_folder,json=favFolder,proto3,oneof"`
}

type TopCard_UpRecall struct {
	UpRecall *TpcdUpRecall `protobuf:"bytes,6,opt,name=up_recall,json=upRecall,proto3,oneof"`
}

type TopCard_PickToday struct {
	PickToday *TpcdPickToday `protobuf:"bytes,7,opt,name=pick_today,json=pickToday,proto3,oneof"`
}

func (*TopCard_ListenHistory) isTopCard_Card() {}

func (*TopCard_FavFolder) isTopCard_Card() {}

func (*TopCard_UpRecall) isTopCard_Card() {}

func (*TopCard_PickToday) isTopCard_Card() {}

type TpcdFavFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *DetailItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Text       string      `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Pic        string      `protobuf:"bytes,3,opt,name=pic,proto3" json:"pic,omitempty"`
	Fid        int64       `protobuf:"varint,4,opt,name=fid,proto3" json:"fid,omitempty"`
	FolderType int32       `protobuf:"varint,5,opt,name=folder_type,json=folderType,proto3" json:"folder_type,omitempty"`
}

func (x *TpcdFavFolder) Reset() {
	*x = TpcdFavFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TpcdFavFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TpcdFavFolder) ProtoMessage() {}

func (x *TpcdFavFolder) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TpcdFavFolder.ProtoReflect.Descriptor instead.
func (*TpcdFavFolder) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{97}
}

func (x *TpcdFavFolder) GetItem() *DetailItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TpcdFavFolder) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TpcdFavFolder) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *TpcdFavFolder) GetFid() int64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *TpcdFavFolder) GetFolderType() int32 {
	if x != nil {
		return x.FolderType
	}
	return 0
}

type TpcdHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *DetailItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Text string      `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Pic  string      `protobuf:"bytes,3,opt,name=pic,proto3" json:"pic,omitempty"`
}

func (x *TpcdHistory) Reset() {
	*x = TpcdHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TpcdHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TpcdHistory) ProtoMessage() {}

func (x *TpcdHistory) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TpcdHistory.ProtoReflect.Descriptor instead.
func (*TpcdHistory) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{98}
}

func (x *TpcdHistory) GetItem() *DetailItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TpcdHistory) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TpcdHistory) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

type TpcdPickToday struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       *DetailItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Text       string      `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Pic        string      `protobuf:"bytes,3,opt,name=pic,proto3" json:"pic,omitempty"`
	PickId     int64       `protobuf:"varint,4,opt,name=pick_id,json=pickId,proto3" json:"pick_id,omitempty"`
	PickCardId int64       `protobuf:"varint,5,opt,name=pick_card_id,json=pickCardId,proto3" json:"pick_card_id,omitempty"`
}

func (x *TpcdPickToday) Reset() {
	*x = TpcdPickToday{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TpcdPickToday) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TpcdPickToday) ProtoMessage() {}

func (x *TpcdPickToday) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TpcdPickToday.ProtoReflect.Descriptor instead.
func (*TpcdPickToday) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{99}
}

func (x *TpcdPickToday) GetItem() *DetailItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TpcdPickToday) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TpcdPickToday) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *TpcdPickToday) GetPickId() int64 {
	if x != nil {
		return x.PickId
	}
	return 0
}

func (x *TpcdPickToday) GetPickCardId() int64 {
	if x != nil {
		return x.PickCardId
	}
	return 0
}

type TpcdUpRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpMid          int64       `protobuf:"varint,1,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	Text           string      `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Avatar         string      `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	MedialistType  int64       `protobuf:"varint,4,opt,name=medialist_type,json=medialistType,proto3" json:"medialist_type,omitempty"`
	MedialistBizId int64       `protobuf:"varint,5,opt,name=medialist_biz_id,json=medialistBizId,proto3" json:"medialist_biz_id,omitempty"`
	Item           *DetailItem `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *TpcdUpRecall) Reset() {
	*x = TpcdUpRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TpcdUpRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TpcdUpRecall) ProtoMessage() {}

func (x *TpcdUpRecall) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TpcdUpRecall.ProtoReflect.Descriptor instead.
func (*TpcdUpRecall) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{100}
}

func (x *TpcdUpRecall) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *TpcdUpRecall) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TpcdUpRecall) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *TpcdUpRecall) GetMedialistType() int64 {
	if x != nil {
		return x.MedialistType
	}
	return 0
}

func (x *TpcdUpRecall) GetMedialistBizId() int64 {
	if x != nil {
		return x.MedialistBizId
	}
	return 0
}

func (x *TpcdUpRecall) GetItem() *DetailItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type TripleLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *PlayItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *TripleLikeReq) Reset() {
	*x = TripleLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripleLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripleLikeReq) ProtoMessage() {}

func (x *TripleLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripleLikeReq.ProtoReflect.Descriptor instead.
func (*TripleLikeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{101}
}

func (x *TripleLikeReq) GetItem() *PlayItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type TripleLikeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ThumbOk bool   `protobuf:"varint,2,opt,name=thumb_ok,json=thumbOk,proto3" json:"thumb_ok,omitempty"`
	CoinOk  bool   `protobuf:"varint,3,opt,name=coin_ok,json=coinOk,proto3" json:"coin_ok,omitempty"`
	FavOk   bool   `protobuf:"varint,4,opt,name=fav_ok,json=favOk,proto3" json:"fav_ok,omitempty"`
}

func (x *TripleLikeResp) Reset() {
	*x = TripleLikeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripleLikeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripleLikeResp) ProtoMessage() {}

func (x *TripleLikeResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_listener_v1_listener_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripleLikeResp.ProtoReflect.Descriptor instead.
func (*TripleLikeResp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_listener_v1_listener_proto_rawDescGZIP(), []int{102}
}

func (x *TripleLikeResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TripleLikeResp) GetThumbOk() bool {
	if x != nil {
		return x.ThumbOk
	}
	return false
}

func (x *TripleLikeResp) GetCoinOk() bool {
	if x != nil {
		return x.CoinOk
	}
	return false
}

func (x *TripleLikeResp) GetFavOk() bool {
	if x != nil {
		return x.FavOk
	}
	return false
}

var File_bilibili_app_listener_v1_listener_proto protoreflect.FileDescriptor

var file_bilibili_app_listener_v1_listener_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x28, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75,
	0x72, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x44, 0x0a, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73,
	0x22, 0x4c, 0x0a, 0x10, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbd,
	0x02, 0x0a, 0x09, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4f, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x3d, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x4b, 0x41, 0x72, 0x63,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x7a,
	0x0a, 0x09, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x50, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x75, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x42, 0x4b,
	0x41, 0x72, 0x63, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f,
	0x72, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e,
	0x6f, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x06, 0x42, 0x4b, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x46, 0x61, 0x76, 0x22, 0xa3, 0x02, 0x0a, 0x0a, 0x43, 0x61, 0x72,
	0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6b, 0x63, 0x6d, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6b, 0x63, 0x6d, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x63, 0x62, 0x74, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6b, 0x63, 0x6d, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x62, 0x74, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x34,
	0x0a, 0x08, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x71, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x5f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x55, 0x70, 0x22, 0x27, 0x0a, 0x0b, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb5, 0x02,
	0x0a, 0x08, 0x44, 0x61, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64,
	0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a, 0x0f, 0x44, 0x61, 0x73, 0x68, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0xf7, 0x06, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x35, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x03, 0x61, 0x72, 0x63, 0x12,
	0x39, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x4b, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b,
	0x0a, 0x0f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54,
	0x61, 0x67, 0x12, 0x47, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x75,
	0x67, 0x63, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x75, 0x67, 0x63, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x61, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x08, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x0b,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb9, 0x01, 0x0a, 0x0d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x96, 0x04, 0x0a, 0x09, 0x46, 0x61, 0x76, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x66, 0x61, 0x76, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x46, 0x61, 0x76, 0x43, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x43, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x5c, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x0f, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x12, 0x46, 0x61, 0x76, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62,
	0x0a, 0x13, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x47, 0x0a, 0x12, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x46,
	0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe7, 0x01, 0x0a,
	0x12, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x76, 0x5f, 0x6d, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x76, 0x4d, 0x69, 0x64, 0x12,
	0x3e, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x46, 0x61, 0x76, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x68, 0x45, 0x6e,
	0x64, 0x12, 0x3b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x44,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a, 0x10, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x4c, 0x0a, 0x11, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x42, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x07, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x02, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x65, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x46, 0x61,
	0x76, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x35, 0x0a, 0x03, 0x66, 0x61, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x66, 0x61, 0x76, 0x42,
	0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x2a, 0x0a, 0x0e, 0x46, 0x61, 0x76, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x46,
	0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x43,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x35, 0x0a,
	0x03, 0x66, 0x61, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x03, 0x66, 0x61, 0x76, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x2c, 0x0a, 0x10,
	0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0d, 0x46,
	0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x35, 0x0a, 0x03, 0x66, 0x61, 0x76,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x66, 0x61, 0x76,
	0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x2a, 0x0a, 0x0e, 0x46, 0x61, 0x76, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x73, 0x0a, 0x16,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x6e, 0x79, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x41,
	0x6e, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x21, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x54,
	0x61, 0x62, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x46,
	0x61, 0x76, 0x54, 0x61, 0x62, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x28, 0x0a, 0x0e, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x22, 0x4c, 0x0a, 0x17, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6d, 0x65, 0x6e,
	0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75,
	0x62, 0x54, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x96, 0x03, 0x0a, 0x1a,
	0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54,
	0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x61,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x61, 0x62, 0x52,
	0x04, 0x74, 0x61, 0x62, 0x73, 0x12, 0x5a, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x74, 0x61, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61,
	0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x12, 0x6c, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x53, 0x75, 0x62, 0x54, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x1a,
	0x73, 0x0a, 0x11, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x70, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70,
	0x4d, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5a, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x3d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x42,
	0x0a, 0x07, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x6c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x63, 0x0a, 0x0f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x61, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x4d, 0x65, 0x6e, 0x75,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x64, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x28, 0x0a, 0x0c, 0x4d, 0x65,
	0x6e, 0x75, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x2d, 0x0a,
	0x11, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xde, 0x02, 0x0a,
	0x09, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x4f, 0x0a,
	0x0f, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x39,
	0x0a, 0x0d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x52, 0x0a, 0x0b, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x61, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x88, 0x01,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xd2, 0x02, 0x0a, 0x0b, 0x50, 0x69, 0x63,
	0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a,
	0x11, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x08, 0x50, 0x69, 0x63,
	0x6b, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x50, 0x69, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x12,
	0x50, 0x69, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x69, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x60, 0x0a, 0x0c, 0x50,
	0x69, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x67, 0x0a,
	0x0b, 0x50, 0x6b, 0x63, 0x6d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x03,
	0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x52, 0x03, 0x61, 0x72, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x10, 0x50, 0x6b, 0x63, 0x6d, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x54, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x85, 0x01, 0x0a,
	0x0a, 0x50, 0x6b, 0x63, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x74, 0x6e, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x74, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x74, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x74,
	0x6e, 0x55, 0x72, 0x69, 0x22, 0x6c, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d,
	0x69, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x41, 0x53, 0x48, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0xa2, 0x01,
	0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x22, 0x69, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x22, 0x7b, 0x0a,
	0x0e, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x3f, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f,
	0x7a, 0x65, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x5a, 0x65, 0x72, 0x6f, 0x22, 0x7e, 0x0a, 0x0f, 0x50, 0x6c,
	0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x68, 0x45, 0x6e, 0x64,
	0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe5, 0x03, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x71, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x71, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x64, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x41, 0x53, 0x48, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6e, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x02, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x65, 0x74, 0x22, 0xb9,
	0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x04, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x05, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x66, 0x0a, 0x0e, 0x50, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74,
	0x22, 0x82, 0x02, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x45, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x44, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c,
	0x12, 0x39, 0x0a, 0x04, 0x64, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x04, 0x64, 0x75, 0x72, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x61, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x0f,
	0x52, 0x63, 0x6d, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6e, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0xad, 0x01,
	0x0a, 0x10, 0x52, 0x63, 0x6d, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x65, 0x6e, 0x12, 0x3e, 0x0a,
	0x09, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x68, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x68, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x68, 0x65, 0x61, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x68, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x41,
	0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x22, 0x5c, 0x0a, 0x0a, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x27, 0x0a, 0x0b, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x70, 0x63, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x0a, 0x66, 0x61, 0x76, 0x5f, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x70, 0x63, 0x64, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x66, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x12, 0x45, 0x0a, 0x09, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x70, 0x63, 0x64, 0x55, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x75,
	0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x5f,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x70, 0x63, 0x64, 0x50, 0x69, 0x63, 0x6b, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x63,
	0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x54,
	0x70, 0x63, 0x64, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x6d, 0x0a, 0x0b, 0x54, 0x70, 0x63, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x38,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x22, 0xaa,
	0x01, 0x0a, 0x0d, 0x54, 0x70, 0x63, 0x64, 0x50, 0x69, 0x63, 0x6b, 0x54, 0x6f, 0x64, 0x61, 0x79,
	0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x69, 0x63,
	0x6b, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x70, 0x69, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x0c,
	0x54, 0x70, 0x63, 0x64, 0x55, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x0a, 0x06,
	0x75, 0x70, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70,
	0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x7a, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x47, 0x0a, 0x0d, 0x54, 0x72,
	0x69, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x75, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x4f, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x69,
	0x6e, 0x4f, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x61, 0x76, 0x5f, 0x6f, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x61, 0x76, 0x4f, 0x6b, 0x2a, 0x5c, 0x0a, 0x0e, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x63, 0x62, 0x74, 0x6e, 0x10, 0x03, 0x2a, 0x50, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x52,
	0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x03, 0x2a, 0x4f, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x4f, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4f, 0x52, 0x54,
	0x5f, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4f, 0x52, 0x54,
	0x5f, 0x56, 0x49, 0x45, 0x57, 0x43, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4f,
	0x52, 0x54, 0x5f, 0x46, 0x41, 0x56, 0x43, 0x4e, 0x54, 0x10, 0x03, 0x2a, 0xa6, 0x01, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d,
	0x45, 0x4d, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x55, 0x52, 0x49,
	0x54, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x50, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49,
	0x56, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x43, 0x41,
	0x43, 0x48, 0x45, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x08, 0x2a, 0x66, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x5f, 0x48,
	0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x41, 0x56, 0x4f,
	0x52, 0x49, 0x54, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x49, 0x43, 0x4b, 0x5f, 0x54, 0x4f, 0x44, 0x41, 0x59, 0x10, 0x04, 0x32, 0xba, 0x13, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x56, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0c, 0x42, 0x6b, 0x61,
	0x72, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x4b, 0x41, 0x72, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x4b, 0x41, 0x72, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x59, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0b, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0b,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x12, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x65, 0x0a,
	0x0c, 0x52, 0x63, 0x6d, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x63, 0x6d, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x55, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x6c, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x5f, 0x0a, 0x0a, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x6c,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x56, 0x0a, 0x07, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x12, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x07, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0a, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64,
	0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0a, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x6c, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x0c, 0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a, 0x13, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x6e, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x6e, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x6e, 0x79, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0d, 0x46, 0x61, 0x76, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6e, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6e, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6e, 0x0a, 0x0f, 0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x64, 0x12, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x0e,
	0x50, 0x69, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x09, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xe5, 0x05, 0x0a, 0x05, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x12, 0x5f, 0x0a, 0x0a, 0x46, 0x61, 0x76, 0x54, 0x61, 0x62, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76,
	0x54, 0x61, 0x62, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x54, 0x61, 0x62, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x46,
	0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54, 0x61, 0x62, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x75, 0x62, 0x54,
	0x61, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7d, 0x0a, 0x14, 0x4d, 0x61,
	0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x76, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x08, 0x4d, 0x65, 0x6e,
	0x75, 0x45, 0x64, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x50, 0x0a, 0x05, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_listener_v1_listener_proto_rawDescOnce sync.Once
	file_bilibili_app_listener_v1_listener_proto_rawDescData = file_bilibili_app_listener_v1_listener_proto_rawDesc
)

func file_bilibili_app_listener_v1_listener_proto_rawDescGZIP() []byte {
	file_bilibili_app_listener_v1_listener_proto_rawDescOnce.Do(func() {
		file_bilibili_app_listener_v1_listener_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_listener_v1_listener_proto_rawDescData)
	})
	return file_bilibili_app_listener_v1_listener_proto_rawDescData
}

var file_bilibili_app_listener_v1_listener_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bilibili_app_listener_v1_listener_proto_msgTypes = make([]protoimpl.MessageInfo, 106)
var file_bilibili_app_listener_v1_listener_proto_goTypes = []interface{}{
	(CardModuleType)(0),                // 0: bilibili.app.listener.v1.CardModuleType
	(ListOrder)(0),                     // 1: bilibili.app.listener.v1.ListOrder
	(ListSortField)(0),                 // 2: bilibili.app.listener.v1.ListSortField
	(PlaylistSource)(0),                // 3: bilibili.app.listener.v1.PlaylistSource
	(TopCardType)(0),                   // 4: bilibili.app.listener.v1.TopCardType
	(*Author)(nil),                     // 5: bilibili.app.listener.v1.Author
	(*BKArcDetailsReq)(nil),            // 6: bilibili.app.listener.v1.BKArcDetailsReq
	(*BKArcDetailsResp)(nil),           // 7: bilibili.app.listener.v1.BKArcDetailsResp
	(*BKArchive)(nil),                  // 8: bilibili.app.listener.v1.BKArchive
	(*BKArcPart)(nil),                  // 9: bilibili.app.listener.v1.BKArcPart
	(*BKArcRights)(nil),                // 10: bilibili.app.listener.v1.BKArcRights
	(*BKStat)(nil),                     // 11: bilibili.app.listener.v1.BKStat
	(*CardModule)(nil),                 // 12: bilibili.app.listener.v1.CardModule
	(*ClickReq)(nil),                   // 13: bilibili.app.listener.v1.ClickReq
	(*ClickResp)(nil),                  // 14: bilibili.app.listener.v1.ClickResp
	(*CoinAddReq)(nil),                 // 15: bilibili.app.listener.v1.CoinAddReq
	(*CoinAddResp)(nil),                // 16: bilibili.app.listener.v1.CoinAddResp
	(*DashItem)(nil),                   // 17: bilibili.app.listener.v1.DashItem
	(*DashSegmentBase)(nil),            // 18: bilibili.app.listener.v1.DashSegmentBase
	(*DetailItem)(nil),                 // 19: bilibili.app.listener.v1.DetailItem
	(*EventReq)(nil),                   // 20: bilibili.app.listener.v1.EventReq
	(*EventResp)(nil),                  // 21: bilibili.app.listener.v1.EventResp
	(*EventTracking)(nil),              // 22: bilibili.app.listener.v1.EventTracking
	(*FavFolder)(nil),                  // 23: bilibili.app.listener.v1.FavFolder
	(*FavFolderAction)(nil),            // 24: bilibili.app.listener.v1.FavFolderAction
	(*FavFolderAuthor)(nil),            // 25: bilibili.app.listener.v1.FavFolderAuthor
	(*FavFolderCreateReq)(nil),         // 26: bilibili.app.listener.v1.FavFolderCreateReq
	(*FavFolderCreateResp)(nil),        // 27: bilibili.app.listener.v1.FavFolderCreateResp
	(*FavFolderDeleteReq)(nil),         // 28: bilibili.app.listener.v1.FavFolderDeleteReq
	(*FavFolderDeleteResp)(nil),        // 29: bilibili.app.listener.v1.FavFolderDeleteResp
	(*FavFolderDetailReq)(nil),         // 30: bilibili.app.listener.v1.FavFolderDetailReq
	(*FavFolderDetailResp)(nil),        // 31: bilibili.app.listener.v1.FavFolderDetailResp
	(*FavFolderListReq)(nil),           // 32: bilibili.app.listener.v1.FavFolderListReq
	(*FavFolderListResp)(nil),          // 33: bilibili.app.listener.v1.FavFolderListResp
	(*FavFolderMeta)(nil),              // 34: bilibili.app.listener.v1.FavFolderMeta
	(*FavItem)(nil),                    // 35: bilibili.app.listener.v1.FavItem
	(*FavItemAddReq)(nil),              // 36: bilibili.app.listener.v1.FavItemAddReq
	(*FavItemAddResp)(nil),             // 37: bilibili.app.listener.v1.FavItemAddResp
	(*FavItemAuthor)(nil),              // 38: bilibili.app.listener.v1.FavItemAuthor
	(*FavItemBatchReq)(nil),            // 39: bilibili.app.listener.v1.FavItemBatchReq
	(*FavItemBatchResp)(nil),           // 40: bilibili.app.listener.v1.FavItemBatchResp
	(*FavItemDelReq)(nil),              // 41: bilibili.app.listener.v1.FavItemDelReq
	(*FavItemDelResp)(nil),             // 42: bilibili.app.listener.v1.FavItemDelResp
	(*FavItemDetail)(nil),              // 43: bilibili.app.listener.v1.FavItemDetail
	(*FavItemStat)(nil),                // 44: bilibili.app.listener.v1.FavItemStat
	(*FavoredInAnyFoldersReq)(nil),     // 45: bilibili.app.listener.v1.FavoredInAnyFoldersReq
	(*FavoredInAnyFoldersResp)(nil),    // 46: bilibili.app.listener.v1.FavoredInAnyFoldersResp
	(*FavTabShowReq)(nil),              // 47: bilibili.app.listener.v1.FavTabShowReq
	(*FavTabShowResp)(nil),             // 48: bilibili.app.listener.v1.FavTabShowResp
	(*FollowRelation)(nil),             // 49: bilibili.app.listener.v1.FollowRelation
	(*FormatDescription)(nil),          // 50: bilibili.app.listener.v1.FormatDescription
	(*MainFavMusicMenuListReq)(nil),    // 51: bilibili.app.listener.v1.MainFavMusicMenuListReq
	(*MainFavMusicMenuListResp)(nil),   // 52: bilibili.app.listener.v1.MainFavMusicMenuListResp
	(*MainFavMusicSubTabListReq)(nil),  // 53: bilibili.app.listener.v1.MainFavMusicSubTabListReq
	(*MainFavMusicSubTabListResp)(nil), // 54: bilibili.app.listener.v1.MainFavMusicSubTabListResp
	(*MedialistItem)(nil),              // 55: bilibili.app.listener.v1.MedialistItem
	(*MedialistReq)(nil),               // 56: bilibili.app.listener.v1.MedialistReq
	(*MedialistResp)(nil),              // 57: bilibili.app.listener.v1.MedialistResp
	(*MedialistUpInfo)(nil),            // 58: bilibili.app.listener.v1.MedialistUpInfo
	(*MenuDeleteReq)(nil),              // 59: bilibili.app.listener.v1.MenuDeleteReq
	(*MenuDeleteResp)(nil),             // 60: bilibili.app.listener.v1.MenuDeleteResp
	(*MenuEditReq)(nil),                // 61: bilibili.app.listener.v1.MenuEditReq
	(*MenuEditResp)(nil),               // 62: bilibili.app.listener.v1.MenuEditResp
	(*MenuSubscribeReq)(nil),           // 63: bilibili.app.listener.v1.MenuSubscribeReq
	(*MenuSubscribeResp)(nil),          // 64: bilibili.app.listener.v1.MenuSubscribeResp
	(*MusicMenu)(nil),                  // 65: bilibili.app.listener.v1.MusicMenu
	(*MusicMenuAuthor)(nil),            // 66: bilibili.app.listener.v1.MusicMenuAuthor
	(*MusicMenuStat)(nil),              // 67: bilibili.app.listener.v1.MusicMenuStat
	(*MusicSubTab)(nil),                // 68: bilibili.app.listener.v1.MusicSubTab
	(*PageOption)(nil),                 // 69: bilibili.app.listener.v1.PageOption
	(*PickArchive)(nil),                // 70: bilibili.app.listener.v1.PickArchive
	(*PickArchiveAuthor)(nil),          // 71: bilibili.app.listener.v1.PickArchiveAuthor
	(*PickCard)(nil),                   // 72: bilibili.app.listener.v1.PickCard
	(*PickCardDetailReq)(nil),          // 73: bilibili.app.listener.v1.PickCardDetailReq
	(*PickCardDetailResp)(nil),         // 74: bilibili.app.listener.v1.PickCardDetailResp
	(*PickFeedReq)(nil),                // 75: bilibili.app.listener.v1.PickFeedReq
	(*PickFeedResp)(nil),               // 76: bilibili.app.listener.v1.PickFeedResp
	(*PkcmArchive)(nil),                // 77: bilibili.app.listener.v1.PkcmArchive
	(*PkcmCenterButton)(nil),           // 78: bilibili.app.listener.v1.PkcmCenterButton
	(*PkcmHeader)(nil),                 // 79: bilibili.app.listener.v1.PkcmHeader
	(*PlayActionReportReq)(nil),        // 80: bilibili.app.listener.v1.PlayActionReportReq
	(*PlayDASH)(nil),                   // 81: bilibili.app.listener.v1.PlayDASH
	(*PlayHistoryAddReq)(nil),          // 82: bilibili.app.listener.v1.PlayHistoryAddReq
	(*PlayHistoryDelReq)(nil),          // 83: bilibili.app.listener.v1.PlayHistoryDelReq
	(*PlayHistoryReq)(nil),             // 84: bilibili.app.listener.v1.PlayHistoryReq
	(*PlayHistoryResp)(nil),            // 85: bilibili.app.listener.v1.PlayHistoryResp
	(*PlayInfo)(nil),                   // 86: bilibili.app.listener.v1.PlayInfo
	(*PlayItem)(nil),                   // 87: bilibili.app.listener.v1.PlayItem
	(*PlaylistAddReq)(nil),             // 88: bilibili.app.listener.v1.PlaylistAddReq
	(*PlaylistDelReq)(nil),             // 89: bilibili.app.listener.v1.PlaylistDelReq
	(*PlaylistReq)(nil),                // 90: bilibili.app.listener.v1.PlaylistReq
	(*PlaylistResp)(nil),               // 91: bilibili.app.listener.v1.PlaylistResp
	(*PlayURL)(nil),                    // 92: bilibili.app.listener.v1.PlayURL
	(*PlayURLReq)(nil),                 // 93: bilibili.app.listener.v1.PlayURLReq
	(*PlayURLResp)(nil),                // 94: bilibili.app.listener.v1.PlayURLResp
	(*RcmdPlaylistReq)(nil),            // 95: bilibili.app.listener.v1.RcmdPlaylistReq
	(*RcmdPlaylistResp)(nil),           // 96: bilibili.app.listener.v1.RcmdPlaylistResp
	(*ResponseUrl)(nil),                // 97: bilibili.app.listener.v1.ResponseUrl
	(*SortOption)(nil),                 // 98: bilibili.app.listener.v1.SortOption
	(*ThumbUpReq)(nil),                 // 99: bilibili.app.listener.v1.ThumbUpReq
	(*ThumbUpResp)(nil),                // 100: bilibili.app.listener.v1.ThumbUpResp
	(*TopCard)(nil),                    // 101: bilibili.app.listener.v1.TopCard
	(*TpcdFavFolder)(nil),              // 102: bilibili.app.listener.v1.TpcdFavFolder
	(*TpcdHistory)(nil),                // 103: bilibili.app.listener.v1.TpcdHistory
	(*TpcdPickToday)(nil),              // 104: bilibili.app.listener.v1.TpcdPickToday
	(*TpcdUpRecall)(nil),               // 105: bilibili.app.listener.v1.TpcdUpRecall
	(*TripleLikeReq)(nil),              // 106: bilibili.app.listener.v1.TripleLikeReq
	(*TripleLikeResp)(nil),             // 107: bilibili.app.listener.v1.TripleLikeResp
	nil,                                // 108: bilibili.app.listener.v1.DetailItem.PlayerInfoEntry
	nil,                                // 109: bilibili.app.listener.v1.MainFavMusicSubTabListResp.FirstPageResEntry
	nil,                                // 110: bilibili.app.listener.v1.PlayURLResp.PlayerInfoEntry
	(*v1.PlayerArgs)(nil),              // 111: bilibili.app.archive.middleware.v1.PlayerArgs
	(*v11.DeviceType)(nil),             // 112: bilibili.app.interfaces.v1.DeviceType
	(*v12.VolumeInfo)(nil),             // 113: bilibili.app.playurl.v1.VolumeInfo
	(*emptypb.Empty)(nil),              // 114: google.protobuf.Empty
}
var file_bilibili_app_listener_v1_listener_proto_depIdxs = []int32{
	49,  // 0: bilibili.app.listener.v1.Author.relation:type_name -> bilibili.app.listener.v1.FollowRelation
	87,  // 1: bilibili.app.listener.v1.BKArcDetailsReq.items:type_name -> bilibili.app.listener.v1.PlayItem
	111, // 2: bilibili.app.listener.v1.BKArcDetailsReq.playerArgs:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	19,  // 3: bilibili.app.listener.v1.BKArcDetailsResp.list:type_name -> bilibili.app.listener.v1.DetailItem
	10,  // 4: bilibili.app.listener.v1.BKArchive.rights:type_name -> bilibili.app.listener.v1.BKArcRights
	79,  // 5: bilibili.app.listener.v1.CardModule.module_header:type_name -> bilibili.app.listener.v1.PkcmHeader
	77,  // 6: bilibili.app.listener.v1.CardModule.module_archive:type_name -> bilibili.app.listener.v1.PkcmArchive
	78,  // 7: bilibili.app.listener.v1.CardModule.module_cbtn:type_name -> bilibili.app.listener.v1.PkcmCenterButton
	87,  // 8: bilibili.app.listener.v1.CoinAddReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	18,  // 9: bilibili.app.listener.v1.DashItem.segment_base:type_name -> bilibili.app.listener.v1.DashSegmentBase
	87,  // 10: bilibili.app.listener.v1.DetailItem.item:type_name -> bilibili.app.listener.v1.PlayItem
	8,   // 11: bilibili.app.listener.v1.DetailItem.arc:type_name -> bilibili.app.listener.v1.BKArchive
	9,   // 12: bilibili.app.listener.v1.DetailItem.parts:type_name -> bilibili.app.listener.v1.BKArcPart
	5,   // 13: bilibili.app.listener.v1.DetailItem.owner:type_name -> bilibili.app.listener.v1.Author
	11,  // 14: bilibili.app.listener.v1.DetailItem.stat:type_name -> bilibili.app.listener.v1.BKStat
	108, // 15: bilibili.app.listener.v1.DetailItem.player_info:type_name -> bilibili.app.listener.v1.DetailItem.PlayerInfoEntry
	87,  // 16: bilibili.app.listener.v1.DetailItem.associated_item:type_name -> bilibili.app.listener.v1.PlayItem
	112, // 17: bilibili.app.listener.v1.DetailItem.device_type:type_name -> bilibili.app.interfaces.v1.DeviceType
	23,  // 18: bilibili.app.listener.v1.DetailItem.ugc_season_info:type_name -> bilibili.app.listener.v1.FavFolder
	87,  // 19: bilibili.app.listener.v1.EventReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	25,  // 20: bilibili.app.listener.v1.FavFolder.owner:type_name -> bilibili.app.listener.v1.FavFolderAuthor
	35,  // 21: bilibili.app.listener.v1.FavFolderDetailReq.last_item:type_name -> bilibili.app.listener.v1.FavItem
	43,  // 22: bilibili.app.listener.v1.FavFolderDetailResp.list:type_name -> bilibili.app.listener.v1.FavItemDetail
	23,  // 23: bilibili.app.listener.v1.FavFolderDetailResp.folder_info:type_name -> bilibili.app.listener.v1.FavFolder
	87,  // 24: bilibili.app.listener.v1.FavFolderListReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	23,  // 25: bilibili.app.listener.v1.FavFolderListResp.list:type_name -> bilibili.app.listener.v1.FavFolder
	22,  // 26: bilibili.app.listener.v1.FavItem.et:type_name -> bilibili.app.listener.v1.EventTracking
	87,  // 27: bilibili.app.listener.v1.FavItemAddReq.play:type_name -> bilibili.app.listener.v1.PlayItem
	35,  // 28: bilibili.app.listener.v1.FavItemAddReq.fav:type_name -> bilibili.app.listener.v1.FavItem
	24,  // 29: bilibili.app.listener.v1.FavItemBatchReq.actions:type_name -> bilibili.app.listener.v1.FavFolderAction
	87,  // 30: bilibili.app.listener.v1.FavItemBatchReq.play:type_name -> bilibili.app.listener.v1.PlayItem
	35,  // 31: bilibili.app.listener.v1.FavItemBatchReq.fav:type_name -> bilibili.app.listener.v1.FavItem
	87,  // 32: bilibili.app.listener.v1.FavItemDelReq.play:type_name -> bilibili.app.listener.v1.PlayItem
	35,  // 33: bilibili.app.listener.v1.FavItemDelReq.fav:type_name -> bilibili.app.listener.v1.FavItem
	35,  // 34: bilibili.app.listener.v1.FavItemDetail.item:type_name -> bilibili.app.listener.v1.FavItem
	38,  // 35: bilibili.app.listener.v1.FavItemDetail.owner:type_name -> bilibili.app.listener.v1.FavItemAuthor
	44,  // 36: bilibili.app.listener.v1.FavItemDetail.stat:type_name -> bilibili.app.listener.v1.FavItemStat
	87,  // 37: bilibili.app.listener.v1.FavoredInAnyFoldersReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	34,  // 38: bilibili.app.listener.v1.FavoredInAnyFoldersResp.folders:type_name -> bilibili.app.listener.v1.FavFolderMeta
	87,  // 39: bilibili.app.listener.v1.FavoredInAnyFoldersResp.item:type_name -> bilibili.app.listener.v1.PlayItem
	65,  // 40: bilibili.app.listener.v1.MainFavMusicMenuListResp.menu_list:type_name -> bilibili.app.listener.v1.MusicMenu
	68,  // 41: bilibili.app.listener.v1.MainFavMusicSubTabListResp.tabs:type_name -> bilibili.app.listener.v1.MusicSubTab
	52,  // 42: bilibili.app.listener.v1.MainFavMusicSubTabListResp.default_tab_res:type_name -> bilibili.app.listener.v1.MainFavMusicMenuListResp
	109, // 43: bilibili.app.listener.v1.MainFavMusicSubTabListResp.first_page_res:type_name -> bilibili.app.listener.v1.MainFavMusicSubTabListResp.FirstPageResEntry
	87,  // 44: bilibili.app.listener.v1.MedialistItem.item:type_name -> bilibili.app.listener.v1.PlayItem
	55,  // 45: bilibili.app.listener.v1.MedialistResp.items:type_name -> bilibili.app.listener.v1.MedialistItem
	58,  // 46: bilibili.app.listener.v1.MedialistResp.up_info:type_name -> bilibili.app.listener.v1.MedialistUpInfo
	66,  // 47: bilibili.app.listener.v1.MusicMenu.owner:type_name -> bilibili.app.listener.v1.MusicMenuAuthor
	67,  // 48: bilibili.app.listener.v1.MusicMenu.stat:type_name -> bilibili.app.listener.v1.MusicMenuStat
	87,  // 49: bilibili.app.listener.v1.PageOption.last_item:type_name -> bilibili.app.listener.v1.PlayItem
	87,  // 50: bilibili.app.listener.v1.PickArchive.item:type_name -> bilibili.app.listener.v1.PlayItem
	71,  // 51: bilibili.app.listener.v1.PickArchive.owner:type_name -> bilibili.app.listener.v1.PickArchiveAuthor
	12,  // 52: bilibili.app.listener.v1.PickCard.modules:type_name -> bilibili.app.listener.v1.CardModule
	12,  // 53: bilibili.app.listener.v1.PickCardDetailResp.modules:type_name -> bilibili.app.listener.v1.CardModule
	72,  // 54: bilibili.app.listener.v1.PickFeedResp.cards:type_name -> bilibili.app.listener.v1.PickCard
	70,  // 55: bilibili.app.listener.v1.PkcmArchive.arc:type_name -> bilibili.app.listener.v1.PickArchive
	87,  // 56: bilibili.app.listener.v1.PlayActionReportReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	17,  // 57: bilibili.app.listener.v1.PlayDASH.audio:type_name -> bilibili.app.listener.v1.DashItem
	87,  // 58: bilibili.app.listener.v1.PlayHistoryAddReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	87,  // 59: bilibili.app.listener.v1.PlayHistoryDelReq.items:type_name -> bilibili.app.listener.v1.PlayItem
	69,  // 60: bilibili.app.listener.v1.PlayHistoryReq.page_opt:type_name -> bilibili.app.listener.v1.PageOption
	19,  // 61: bilibili.app.listener.v1.PlayHistoryResp.list:type_name -> bilibili.app.listener.v1.DetailItem
	92,  // 62: bilibili.app.listener.v1.PlayInfo.play_url:type_name -> bilibili.app.listener.v1.PlayURL
	81,  // 63: bilibili.app.listener.v1.PlayInfo.play_dash:type_name -> bilibili.app.listener.v1.PlayDASH
	113, // 64: bilibili.app.listener.v1.PlayInfo.volume:type_name -> bilibili.app.playurl.v1.VolumeInfo
	22,  // 65: bilibili.app.listener.v1.PlayItem.et:type_name -> bilibili.app.listener.v1.EventTracking
	87,  // 66: bilibili.app.listener.v1.PlaylistAddReq.items:type_name -> bilibili.app.listener.v1.PlayItem
	87,  // 67: bilibili.app.listener.v1.PlaylistAddReq.after:type_name -> bilibili.app.listener.v1.PlayItem
	87,  // 68: bilibili.app.listener.v1.PlaylistDelReq.items:type_name -> bilibili.app.listener.v1.PlayItem
	87,  // 69: bilibili.app.listener.v1.PlaylistReq.anchor:type_name -> bilibili.app.listener.v1.PlayItem
	69,  // 70: bilibili.app.listener.v1.PlaylistReq.page_opt:type_name -> bilibili.app.listener.v1.PageOption
	111, // 71: bilibili.app.listener.v1.PlaylistReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	98,  // 72: bilibili.app.listener.v1.PlaylistReq.sort_opt:type_name -> bilibili.app.listener.v1.SortOption
	19,  // 73: bilibili.app.listener.v1.PlaylistResp.list:type_name -> bilibili.app.listener.v1.DetailItem
	87,  // 74: bilibili.app.listener.v1.PlaylistResp.last_play:type_name -> bilibili.app.listener.v1.PlayItem
	97,  // 75: bilibili.app.listener.v1.PlayURL.durl:type_name -> bilibili.app.listener.v1.ResponseUrl
	87,  // 76: bilibili.app.listener.v1.PlayURLReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	111, // 77: bilibili.app.listener.v1.PlayURLReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	87,  // 78: bilibili.app.listener.v1.PlayURLResp.item:type_name -> bilibili.app.listener.v1.PlayItem
	110, // 79: bilibili.app.listener.v1.PlayURLResp.playerInfo:type_name -> bilibili.app.listener.v1.PlayURLResp.PlayerInfoEntry
	111, // 80: bilibili.app.listener.v1.RcmdPlaylistReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	19,  // 81: bilibili.app.listener.v1.RcmdPlaylistResp.list:type_name -> bilibili.app.listener.v1.DetailItem
	101, // 82: bilibili.app.listener.v1.RcmdPlaylistResp.top_cards:type_name -> bilibili.app.listener.v1.TopCard
	87,  // 83: bilibili.app.listener.v1.ThumbUpReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	103, // 84: bilibili.app.listener.v1.TopCard.listen_history:type_name -> bilibili.app.listener.v1.TpcdHistory
	102, // 85: bilibili.app.listener.v1.TopCard.fav_folder:type_name -> bilibili.app.listener.v1.TpcdFavFolder
	105, // 86: bilibili.app.listener.v1.TopCard.up_recall:type_name -> bilibili.app.listener.v1.TpcdUpRecall
	104, // 87: bilibili.app.listener.v1.TopCard.pick_today:type_name -> bilibili.app.listener.v1.TpcdPickToday
	19,  // 88: bilibili.app.listener.v1.TpcdFavFolder.item:type_name -> bilibili.app.listener.v1.DetailItem
	19,  // 89: bilibili.app.listener.v1.TpcdHistory.item:type_name -> bilibili.app.listener.v1.DetailItem
	19,  // 90: bilibili.app.listener.v1.TpcdPickToday.item:type_name -> bilibili.app.listener.v1.DetailItem
	19,  // 91: bilibili.app.listener.v1.TpcdUpRecall.item:type_name -> bilibili.app.listener.v1.DetailItem
	87,  // 92: bilibili.app.listener.v1.TripleLikeReq.item:type_name -> bilibili.app.listener.v1.PlayItem
	86,  // 93: bilibili.app.listener.v1.DetailItem.PlayerInfoEntry.value:type_name -> bilibili.app.listener.v1.PlayInfo
	52,  // 94: bilibili.app.listener.v1.MainFavMusicSubTabListResp.FirstPageResEntry.value:type_name -> bilibili.app.listener.v1.MainFavMusicMenuListResp
	86,  // 95: bilibili.app.listener.v1.PlayURLResp.PlayerInfoEntry.value:type_name -> bilibili.app.listener.v1.PlayInfo
	114, // 96: bilibili.app.listener.v1.Listener.Ping:input_type -> google.protobuf.Empty
	93,  // 97: bilibili.app.listener.v1.Listener.PlayUrl:input_type -> bilibili.app.listener.v1.PlayURLReq
	6,   // 98: bilibili.app.listener.v1.Listener.BkarcDetails:input_type -> bilibili.app.listener.v1.BKArcDetailsReq
	90,  // 99: bilibili.app.listener.v1.Listener.Playlist:input_type -> bilibili.app.listener.v1.PlaylistReq
	88,  // 100: bilibili.app.listener.v1.Listener.PlaylistAdd:input_type -> bilibili.app.listener.v1.PlaylistAddReq
	89,  // 101: bilibili.app.listener.v1.Listener.PlaylistDel:input_type -> bilibili.app.listener.v1.PlaylistDelReq
	95,  // 102: bilibili.app.listener.v1.Listener.RcmdPlaylist:input_type -> bilibili.app.listener.v1.RcmdPlaylistReq
	84,  // 103: bilibili.app.listener.v1.Listener.PlayHistory:input_type -> bilibili.app.listener.v1.PlayHistoryReq
	82,  // 104: bilibili.app.listener.v1.Listener.PlayHistoryAdd:input_type -> bilibili.app.listener.v1.PlayHistoryAddReq
	83,  // 105: bilibili.app.listener.v1.Listener.PlayHistoryDel:input_type -> bilibili.app.listener.v1.PlayHistoryDelReq
	80,  // 106: bilibili.app.listener.v1.Listener.PlayActionReport:input_type -> bilibili.app.listener.v1.PlayActionReportReq
	106, // 107: bilibili.app.listener.v1.Listener.TripleLike:input_type -> bilibili.app.listener.v1.TripleLikeReq
	99,  // 108: bilibili.app.listener.v1.Listener.ThumbUp:input_type -> bilibili.app.listener.v1.ThumbUpReq
	15,  // 109: bilibili.app.listener.v1.Listener.CoinAdd:input_type -> bilibili.app.listener.v1.CoinAddReq
	36,  // 110: bilibili.app.listener.v1.Listener.FavItemAdd:input_type -> bilibili.app.listener.v1.FavItemAddReq
	41,  // 111: bilibili.app.listener.v1.Listener.FavItemDel:input_type -> bilibili.app.listener.v1.FavItemDelReq
	39,  // 112: bilibili.app.listener.v1.Listener.FavItemBatch:input_type -> bilibili.app.listener.v1.FavItemBatchReq
	45,  // 113: bilibili.app.listener.v1.Listener.FavoredInAnyFolders:input_type -> bilibili.app.listener.v1.FavoredInAnyFoldersReq
	32,  // 114: bilibili.app.listener.v1.Listener.FavFolderList:input_type -> bilibili.app.listener.v1.FavFolderListReq
	30,  // 115: bilibili.app.listener.v1.Listener.FavFolderDetail:input_type -> bilibili.app.listener.v1.FavFolderDetailReq
	26,  // 116: bilibili.app.listener.v1.Listener.FavFolderCreate:input_type -> bilibili.app.listener.v1.FavFolderCreateReq
	28,  // 117: bilibili.app.listener.v1.Listener.FavFolderDelete:input_type -> bilibili.app.listener.v1.FavFolderDeleteReq
	75,  // 118: bilibili.app.listener.v1.Listener.PickFeed:input_type -> bilibili.app.listener.v1.PickFeedReq
	73,  // 119: bilibili.app.listener.v1.Listener.PickCardDetail:input_type -> bilibili.app.listener.v1.PickCardDetailReq
	56,  // 120: bilibili.app.listener.v1.Listener.Medialist:input_type -> bilibili.app.listener.v1.MedialistReq
	20,  // 121: bilibili.app.listener.v1.Listener.Event:input_type -> bilibili.app.listener.v1.EventReq
	47,  // 122: bilibili.app.listener.v1.Music.FavTabShow:input_type -> bilibili.app.listener.v1.FavTabShowReq
	53,  // 123: bilibili.app.listener.v1.Music.MainFavMusicSubTabList:input_type -> bilibili.app.listener.v1.MainFavMusicSubTabListReq
	51,  // 124: bilibili.app.listener.v1.Music.MainFavMusicMenuList:input_type -> bilibili.app.listener.v1.MainFavMusicMenuListReq
	61,  // 125: bilibili.app.listener.v1.Music.MenuEdit:input_type -> bilibili.app.listener.v1.MenuEditReq
	59,  // 126: bilibili.app.listener.v1.Music.MenuDelete:input_type -> bilibili.app.listener.v1.MenuDeleteReq
	63,  // 127: bilibili.app.listener.v1.Music.MenuSubscribe:input_type -> bilibili.app.listener.v1.MenuSubscribeReq
	13,  // 128: bilibili.app.listener.v1.Music.Click:input_type -> bilibili.app.listener.v1.ClickReq
	114, // 129: bilibili.app.listener.v1.Listener.Ping:output_type -> google.protobuf.Empty
	94,  // 130: bilibili.app.listener.v1.Listener.PlayUrl:output_type -> bilibili.app.listener.v1.PlayURLResp
	7,   // 131: bilibili.app.listener.v1.Listener.BkarcDetails:output_type -> bilibili.app.listener.v1.BKArcDetailsResp
	91,  // 132: bilibili.app.listener.v1.Listener.Playlist:output_type -> bilibili.app.listener.v1.PlaylistResp
	114, // 133: bilibili.app.listener.v1.Listener.PlaylistAdd:output_type -> google.protobuf.Empty
	114, // 134: bilibili.app.listener.v1.Listener.PlaylistDel:output_type -> google.protobuf.Empty
	96,  // 135: bilibili.app.listener.v1.Listener.RcmdPlaylist:output_type -> bilibili.app.listener.v1.RcmdPlaylistResp
	85,  // 136: bilibili.app.listener.v1.Listener.PlayHistory:output_type -> bilibili.app.listener.v1.PlayHistoryResp
	114, // 137: bilibili.app.listener.v1.Listener.PlayHistoryAdd:output_type -> google.protobuf.Empty
	114, // 138: bilibili.app.listener.v1.Listener.PlayHistoryDel:output_type -> google.protobuf.Empty
	114, // 139: bilibili.app.listener.v1.Listener.PlayActionReport:output_type -> google.protobuf.Empty
	107, // 140: bilibili.app.listener.v1.Listener.TripleLike:output_type -> bilibili.app.listener.v1.TripleLikeResp
	100, // 141: bilibili.app.listener.v1.Listener.ThumbUp:output_type -> bilibili.app.listener.v1.ThumbUpResp
	16,  // 142: bilibili.app.listener.v1.Listener.CoinAdd:output_type -> bilibili.app.listener.v1.CoinAddResp
	37,  // 143: bilibili.app.listener.v1.Listener.FavItemAdd:output_type -> bilibili.app.listener.v1.FavItemAddResp
	42,  // 144: bilibili.app.listener.v1.Listener.FavItemDel:output_type -> bilibili.app.listener.v1.FavItemDelResp
	40,  // 145: bilibili.app.listener.v1.Listener.FavItemBatch:output_type -> bilibili.app.listener.v1.FavItemBatchResp
	46,  // 146: bilibili.app.listener.v1.Listener.FavoredInAnyFolders:output_type -> bilibili.app.listener.v1.FavoredInAnyFoldersResp
	33,  // 147: bilibili.app.listener.v1.Listener.FavFolderList:output_type -> bilibili.app.listener.v1.FavFolderListResp
	31,  // 148: bilibili.app.listener.v1.Listener.FavFolderDetail:output_type -> bilibili.app.listener.v1.FavFolderDetailResp
	27,  // 149: bilibili.app.listener.v1.Listener.FavFolderCreate:output_type -> bilibili.app.listener.v1.FavFolderCreateResp
	29,  // 150: bilibili.app.listener.v1.Listener.FavFolderDelete:output_type -> bilibili.app.listener.v1.FavFolderDeleteResp
	76,  // 151: bilibili.app.listener.v1.Listener.PickFeed:output_type -> bilibili.app.listener.v1.PickFeedResp
	74,  // 152: bilibili.app.listener.v1.Listener.PickCardDetail:output_type -> bilibili.app.listener.v1.PickCardDetailResp
	57,  // 153: bilibili.app.listener.v1.Listener.Medialist:output_type -> bilibili.app.listener.v1.MedialistResp
	21,  // 154: bilibili.app.listener.v1.Listener.Event:output_type -> bilibili.app.listener.v1.EventResp
	48,  // 155: bilibili.app.listener.v1.Music.FavTabShow:output_type -> bilibili.app.listener.v1.FavTabShowResp
	54,  // 156: bilibili.app.listener.v1.Music.MainFavMusicSubTabList:output_type -> bilibili.app.listener.v1.MainFavMusicSubTabListResp
	52,  // 157: bilibili.app.listener.v1.Music.MainFavMusicMenuList:output_type -> bilibili.app.listener.v1.MainFavMusicMenuListResp
	62,  // 158: bilibili.app.listener.v1.Music.MenuEdit:output_type -> bilibili.app.listener.v1.MenuEditResp
	60,  // 159: bilibili.app.listener.v1.Music.MenuDelete:output_type -> bilibili.app.listener.v1.MenuDeleteResp
	64,  // 160: bilibili.app.listener.v1.Music.MenuSubscribe:output_type -> bilibili.app.listener.v1.MenuSubscribeResp
	14,  // 161: bilibili.app.listener.v1.Music.Click:output_type -> bilibili.app.listener.v1.ClickResp
	129, // [129:162] is the sub-list for method output_type
	96,  // [96:129] is the sub-list for method input_type
	96,  // [96:96] is the sub-list for extension type_name
	96,  // [96:96] is the sub-list for extension extendee
	0,   // [0:96] is the sub-list for field type_name
}

func init() { file_bilibili_app_listener_v1_listener_proto_init() }
func file_bilibili_app_listener_v1_listener_proto_init() {
	if File_bilibili_app_listener_v1_listener_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_listener_v1_listener_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKArcDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKArcDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKArcPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKArcRights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashSegmentBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavFolderMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemBatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemBatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemDelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavItemStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoredInAnyFoldersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoredInAnyFoldersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavTabShowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavTabShowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormatDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainFavMusicMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainFavMusicMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainFavMusicSubTabListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainFavMusicSubTabListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedialistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedialistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedialistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MedialistUpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuEditResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuSubscribeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuSubscribeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicMenuAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicMenuStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicSubTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickArchiveAuthor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickCardDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickCardDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickFeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickFeedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkcmArchive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkcmCenterButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PkcmHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayActionReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayDASH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayHistoryAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayHistoryDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayHistoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaylistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayURLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayURLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdPlaylistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RcmdPlaylistResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThumbUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThumbUpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TpcdFavFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TpcdHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TpcdPickToday); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TpcdUpRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripleLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_listener_v1_listener_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripleLikeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*CardModule_ModuleHeader)(nil),
		(*CardModule_ModuleArchive)(nil),
		(*CardModule_ModuleCbtn)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*FavItemAddReq_Play)(nil),
		(*FavItemAddReq_Fav)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*FavItemBatchReq_Play)(nil),
		(*FavItemBatchReq_Fav)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*FavItemDelReq_Play)(nil),
		(*FavItemDelReq_Fav)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[81].OneofWrappers = []interface{}{
		(*PlayInfo_PlayUrl)(nil),
		(*PlayInfo_PlayDash)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[83].OneofWrappers = []interface{}{
		(*PlaylistAddReq_After)(nil),
		(*PlaylistAddReq_Head)(nil),
		(*PlaylistAddReq_Tail)(nil),
	}
	file_bilibili_app_listener_v1_listener_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*TopCard_ListenHistory)(nil),
		(*TopCard_FavFolder)(nil),
		(*TopCard_UpRecall)(nil),
		(*TopCard_PickToday)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_listener_v1_listener_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   106,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_bilibili_app_listener_v1_listener_proto_goTypes,
		DependencyIndexes: file_bilibili_app_listener_v1_listener_proto_depIdxs,
		EnumInfos:         file_bilibili_app_listener_v1_listener_proto_enumTypes,
		MessageInfos:      file_bilibili_app_listener_v1_listener_proto_msgTypes,
	}.Build()
	File_bilibili_app_listener_v1_listener_proto = out.File
	file_bilibili_app_listener_v1_listener_proto_rawDesc = nil
	file_bilibili_app_listener_v1_listener_proto_goTypes = nil
	file_bilibili_app_listener_v1_listener_proto_depIdxs = nil
}
