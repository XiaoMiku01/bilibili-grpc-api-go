// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: bilibili/app/show/rank/v1/rank.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 排行榜列表项
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 封面url
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	// 参数(稿件avid)
	Param string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	// 跳转uri
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	// 重定向url
	RedirectUrl string `protobuf:"bytes,5,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// 跳转类型
	// av:视频稿件
	Goto string `protobuf:"bytes,6,opt,name=goto,proto3" json:"goto,omitempty"`
	// 播放数
	Play int32 `protobuf:"varint,7,opt,name=play,proto3" json:"play,omitempty"`
	// 弹幕数
	Danmaku int32 `protobuf:"varint,8,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	// UP主mid
	Mid int64 `protobuf:"varint,9,opt,name=mid,proto3" json:"mid,omitempty"`
	// UP主昵称
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// UP主头像url
	Face string `protobuf:"bytes,11,opt,name=face,proto3" json:"face,omitempty"`
	// 评论数
	Reply int32 `protobuf:"varint,12,opt,name=reply,proto3" json:"reply,omitempty"`
	// 收藏数
	Favourite int32 `protobuf:"varint,13,opt,name=favourite,proto3" json:"favourite,omitempty"`
	// 发布时间
	PubDate int64 `protobuf:"varint,14,opt,name=pub_date,json=pubDate,proto3" json:"pub_date,omitempty"`
	// 分区tid
	Rid int32 `protobuf:"varint,15,opt,name=rid,proto3" json:"rid,omitempty"`
	// 子分区名
	Rname string `protobuf:"bytes,16,opt,name=rname,proto3" json:"rname,omitempty"`
	// 视频总时长
	Duration int64 `protobuf:"varint,17,opt,name=duration,proto3" json:"duration,omitempty"`
	// 点赞数
	Like int32 `protobuf:"varint,18,opt,name=like,proto3" json:"like,omitempty"`
	// 1P cid
	Cid int64 `protobuf:"varint,19,opt,name=cid,proto3" json:"cid,omitempty"`
	// 综合评分
	Pts int64 `protobuf:"varint,20,opt,name=pts,proto3" json:"pts,omitempty"`
	// 合作视频文案
	Cooperation string `protobuf:"bytes,21,opt,name=cooperation,proto3" json:"cooperation,omitempty"`
	// 属性位
	// 0:未关注 1:已关注
	Attribute int32 `protobuf:"varint,22,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// UP主粉丝数
	Follower int64 `protobuf:"varint,23,opt,name=follower,proto3" json:"follower,omitempty"`
	// UP主认证信息
	OfficialVerify *OfficialVerify `protobuf:"bytes,24,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	// 同一UP收起子项列表
	Children []*Item `protobuf:"bytes,25,rep,name=children,proto3" json:"children,omitempty"`
	// 关系信息
	Relation *Relation `protobuf:"bytes,26,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Item) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *Item) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Item) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *Item) GetGoto() string {
	if x != nil {
		return x.Goto
	}
	return ""
}

func (x *Item) GetPlay() int32 {
	if x != nil {
		return x.Play
	}
	return 0
}

func (x *Item) GetDanmaku() int32 {
	if x != nil {
		return x.Danmaku
	}
	return 0
}

func (x *Item) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Item) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *Item) GetFavourite() int32 {
	if x != nil {
		return x.Favourite
	}
	return 0
}

func (x *Item) GetPubDate() int64 {
	if x != nil {
		return x.PubDate
	}
	return 0
}

func (x *Item) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *Item) GetRname() string {
	if x != nil {
		return x.Rname
	}
	return ""
}

func (x *Item) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Item) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Item) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Item) GetPts() int64 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *Item) GetCooperation() string {
	if x != nil {
		return x.Cooperation
	}
	return ""
}

func (x *Item) GetAttribute() int32 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Item) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

func (x *Item) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *Item) GetChildren() []*Item {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Item) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

// 认证信息
type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 认证类型
	// -1:无认证 0:个人认证 1:机构认证
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 认证描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{1}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 全站排行榜-请求
type RankAllResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 必须为"all"
	Order string `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	// 页码
	// 默认1页
	Pn int32 `protobuf:"varint,2,opt,name=pn,proto3" json:"pn,omitempty"`
	// 每页项数
	// 默认100项，最大100
	Ps int32 `protobuf:"varint,3,opt,name=ps,proto3" json:"ps,omitempty"`
}

func (x *RankAllResultReq) Reset() {
	*x = RankAllResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankAllResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankAllResultReq) ProtoMessage() {}

func (x *RankAllResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankAllResultReq.ProtoReflect.Descriptor instead.
func (*RankAllResultReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{2}
}

func (x *RankAllResultReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *RankAllResultReq) GetPn() int32 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *RankAllResultReq) GetPs() int32 {
	if x != nil {
		return x.Ps
	}
	return 0
}

// 排行榜信息-响应
type RankListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排行榜列表
	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RankListReply) Reset() {
	*x = RankListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankListReply) ProtoMessage() {}

func (x *RankListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankListReply.ProtoReflect.Descriptor instead.
func (*RankListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{3}
}

func (x *RankListReply) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// 分区排行榜-请求
type RankRegionResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 一级分区tid(二级分区不可用)
	// 0:全站
	Rid int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// 页码
	// 默认1页
	Pn int32 `protobuf:"varint,2,opt,name=pn,proto3" json:"pn,omitempty"`
	// 每页项数
	// 默认100项，最大100
	Ps int32 `protobuf:"varint,3,opt,name=ps,proto3" json:"ps,omitempty"`
}

func (x *RankRegionResultReq) Reset() {
	*x = RankRegionResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRegionResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRegionResultReq) ProtoMessage() {}

func (x *RankRegionResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRegionResultReq.ProtoReflect.Descriptor instead.
func (*RankRegionResultReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{4}
}

func (x *RankRegionResultReq) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RankRegionResultReq) GetPn() int32 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *RankRegionResultReq) GetPs() int32 {
	if x != nil {
		return x.Ps
	}
	return 0
}

// 关系信息
type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关系状态id
	// 1:未关注 2:已关注 3:被关注 4:互相关注
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 是否关注
	IsFollow int32 `protobuf:"varint,2,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	// 是否粉丝
	IsFollowed int32 `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_show_rank_v1_rank_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP(), []int{5}
}

func (x *Relation) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Relation) GetIsFollow() int32 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *Relation) GetIsFollowed() int32 {
	if x != nil {
		return x.IsFollowed
	}
	return 0
}

var File_bilibili_app_show_rank_v1_rank_proto protoreflect.FileDescriptor

var file_bilibili_app_show_rank_v1_rank_proto_rawDesc = []byte{
	0x0a, 0x24, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73,
	0x68, 0x6f, 0x77, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x22, 0xe3, 0x05, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x75, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x75, 0x62, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x4d, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0e,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x36,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x48, 0x0a, 0x10,
	0x52, 0x61, 0x6e, 0x6b, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x70, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x70, 0x73, 0x22, 0x60, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x32, 0xbc, 0x01, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x56, 0x0a,
	0x07, 0x52, 0x61, 0x6e, 0x6b, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x6e, 0x6b, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x73, 0x68,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67,
	0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x73,
	0x68, 0x6f, 0x77, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_show_rank_v1_rank_proto_rawDescOnce sync.Once
	file_bilibili_app_show_rank_v1_rank_proto_rawDescData = file_bilibili_app_show_rank_v1_rank_proto_rawDesc
)

func file_bilibili_app_show_rank_v1_rank_proto_rawDescGZIP() []byte {
	file_bilibili_app_show_rank_v1_rank_proto_rawDescOnce.Do(func() {
		file_bilibili_app_show_rank_v1_rank_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_show_rank_v1_rank_proto_rawDescData)
	})
	return file_bilibili_app_show_rank_v1_rank_proto_rawDescData
}

var file_bilibili_app_show_rank_v1_rank_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bilibili_app_show_rank_v1_rank_proto_goTypes = []interface{}{
	(*Item)(nil),                // 0: bilibili.app.show.v1.Item
	(*OfficialVerify)(nil),      // 1: bilibili.app.show.v1.OfficialVerify
	(*RankAllResultReq)(nil),    // 2: bilibili.app.show.v1.RankAllResultReq
	(*RankListReply)(nil),       // 3: bilibili.app.show.v1.RankListReply
	(*RankRegionResultReq)(nil), // 4: bilibili.app.show.v1.RankRegionResultReq
	(*Relation)(nil),            // 5: bilibili.app.show.v1.Relation
}
var file_bilibili_app_show_rank_v1_rank_proto_depIdxs = []int32{
	1, // 0: bilibili.app.show.v1.Item.official_verify:type_name -> bilibili.app.show.v1.OfficialVerify
	0, // 1: bilibili.app.show.v1.Item.children:type_name -> bilibili.app.show.v1.Item
	5, // 2: bilibili.app.show.v1.Item.relation:type_name -> bilibili.app.show.v1.Relation
	0, // 3: bilibili.app.show.v1.RankListReply.items:type_name -> bilibili.app.show.v1.Item
	2, // 4: bilibili.app.show.v1.Rank.RankAll:input_type -> bilibili.app.show.v1.RankAllResultReq
	4, // 5: bilibili.app.show.v1.Rank.RankRegion:input_type -> bilibili.app.show.v1.RankRegionResultReq
	3, // 6: bilibili.app.show.v1.Rank.RankAll:output_type -> bilibili.app.show.v1.RankListReply
	3, // 7: bilibili.app.show.v1.Rank.RankRegion:output_type -> bilibili.app.show.v1.RankListReply
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bilibili_app_show_rank_v1_rank_proto_init() }
func file_bilibili_app_show_rank_v1_rank_proto_init() {
	if File_bilibili_app_show_rank_v1_rank_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankAllResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRegionResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_show_rank_v1_rank_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_show_rank_v1_rank_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_show_rank_v1_rank_proto_goTypes,
		DependencyIndexes: file_bilibili_app_show_rank_v1_rank_proto_depIdxs,
		MessageInfos:      file_bilibili_app_show_rank_v1_rank_proto_msgTypes,
	}.Build()
	File_bilibili_app_show_rank_v1_rank_proto = out.File
	file_bilibili_app_show_rank_v1_rank_proto_rawDesc = nil
	file_bilibili_app_show_rank_v1_rank_proto_goTypes = nil
	file_bilibili_app_show_rank_v1_rank_proto_depIdxs = nil
}
