// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: bilibili/app/interfaces/v1/history.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/archive/middleware/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 设备标识代码
type DT int32

const (
	DT_Unknown DT = 0 // 未知
	DT_Phone   DT = 1 // 手机端
	DT_Pad     DT = 2 // ipad端
	DT_PC      DT = 3 // web端
	DT_TV      DT = 4 // TV端
	DT_Car     DT = 5 // 车机端
	DT_Iot     DT = 6 // 物联设备
	DT_AndPad  DT = 7 // apad端
)

// Enum value maps for DT.
var (
	DT_name = map[int32]string{
		0: "Unknown",
		1: "Phone",
		2: "Pad",
		3: "PC",
		4: "TV",
		5: "Car",
		6: "Iot",
		7: "AndPad",
	}
	DT_value = map[string]int32{
		"Unknown": 0,
		"Phone":   1,
		"Pad":     2,
		"PC":      3,
		"TV":      4,
		"Car":     5,
		"Iot":     6,
		"AndPad":  7,
	}
)

func (x DT) Enum() *DT {
	p := new(DT)
	*p = x
	return p
}

func (x DT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DT) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_interfaces_v1_history_proto_enumTypes[0].Descriptor()
}

func (DT) Type() protoreflect.EnumType {
	return &file_bilibili_app_interfaces_v1_history_proto_enumTypes[0]
}

func (x DT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DT.Descriptor instead.
func (DT) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{0}
}

// 搜索历史记录来源
type HistorySource int32

const (
	HistorySource_history_VALUE  HistorySource = 0 // 主站历史记录页
	HistorySource_shopping_VALUE HistorySource = 1 // 会员购浏览记录
)

// Enum value maps for HistorySource.
var (
	HistorySource_name = map[int32]string{
		0: "history_VALUE",
		1: "shopping_VALUE",
	}
	HistorySource_value = map[string]int32{
		"history_VALUE":  0,
		"shopping_VALUE": 1,
	}
)

func (x HistorySource) Enum() *HistorySource {
	p := new(HistorySource)
	*p = x
	return p
}

func (x HistorySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HistorySource) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_interfaces_v1_history_proto_enumTypes[1].Descriptor()
}

func (HistorySource) Type() protoreflect.EnumType {
	return &file_bilibili_app_interfaces_v1_history_proto_enumTypes[1]
}

func (x HistorySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HistorySource.Descriptor instead.
func (HistorySource) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{1}
}

// 专栏卡片
type CardArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面url
	Covers []string `protobuf:"bytes,1,rep,name=covers,proto3" json:"covers,omitempty"`
	// UP主昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// UP主mid
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 是否展示关注按钮
	DisplayAttention bool `protobuf:"varint,4,opt,name=displayAttention,proto3" json:"displayAttention,omitempty"`
	// 角标
	Badge string `protobuf:"bytes,5,opt,name=badge,proto3" json:"badge,omitempty"`
	// 关系信息
	Relation *Relation `protobuf:"bytes,6,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *CardArticle) Reset() {
	*x = CardArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardArticle) ProtoMessage() {}

func (x *CardArticle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardArticle.ProtoReflect.Descriptor instead.
func (*CardArticle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{0}
}

func (x *CardArticle) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *CardArticle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardArticle) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CardArticle) GetDisplayAttention() bool {
	if x != nil {
		return x.DisplayAttention
	}
	return false
}

func (x *CardArticle) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *CardArticle) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

// 课程卡片
type CardCheese struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面url
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// 观看进度
	Progress int64 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 总计时长
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// 单集标题
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	State int64 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CardCheese) Reset() {
	*x = CardCheese{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCheese) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCheese) ProtoMessage() {}

func (x *CardCheese) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCheese.ProtoReflect.Descriptor instead.
func (*CardCheese) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{1}
}

func (x *CardCheese) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardCheese) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CardCheese) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CardCheese) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CardCheese) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 直播卡片
type CardLive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面url
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// 主播昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 主播mid
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 直播分区名
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	// 直播状态
	Ststus int32 `protobuf:"varint,5,opt,name=ststus,proto3" json:"ststus,omitempty"`
	// 是否展示关注按钮
	DisplayAttention bool `protobuf:"varint,6,opt,name=display_attention,json=displayAttention,proto3" json:"display_attention,omitempty"`
	// 关系信息
	Relation *Relation `protobuf:"bytes,7,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *CardLive) Reset() {
	*x = CardLive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardLive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardLive) ProtoMessage() {}

func (x *CardLive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardLive.ProtoReflect.Descriptor instead.
func (*CardLive) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{2}
}

func (x *CardLive) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardLive) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardLive) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CardLive) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CardLive) GetStstus() int32 {
	if x != nil {
		return x.Ststus
	}
	return 0
}

func (x *CardLive) GetDisplayAttention() bool {
	if x != nil {
		return x.DisplayAttention
	}
	return false
}

func (x *CardLive) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

// pgc稿件卡片
type CardOGV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面url
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// 观看进度
	Progress int64 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 总计时长
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// 单集标题
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Badge string `protobuf:"bytes,5,opt,name=badge,proto3" json:"badge,omitempty"`
	State int64 `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CardOGV) Reset() {
	*x = CardOGV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardOGV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardOGV) ProtoMessage() {}

func (x *CardOGV) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardOGV.ProtoReflect.Descriptor instead.
func (*CardOGV) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{3}
}

func (x *CardOGV) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardOGV) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CardOGV) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CardOGV) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CardOGV) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *CardOGV) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// ugc稿件卡片
type CardUGC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封面url
	Cover string `protobuf:"bytes,1,opt,name=cover,proto3" json:"cover,omitempty"`
	// 观看进度
	Progress int64 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 视频长度
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// UP主昵称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// UP主mid
	Mid int64 `protobuf:"varint,5,opt,name=mid,proto3" json:"mid,omitempty"`
	// 是否展示关注按钮
	DisplayAttention bool `protobuf:"varint,6,opt,name=display_attention,json=displayAttention,proto3" json:"display_attention,omitempty"`
	// 历史观看视频cid
	Cid int64 `protobuf:"varint,7,opt,name=cid,proto3" json:"cid,omitempty"`
	// 历史观看视频分P
	Page int32 `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	// 历史观看视频分P的标题
	Subtitle string `protobuf:"bytes,9,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 关系信息
	Relation *Relation `protobuf:"bytes,10,opt,name=relation,proto3" json:"relation,omitempty"`
	// 稿件bvid
	Bvid string `protobuf:"bytes,11,opt,name=bvid,proto3" json:"bvid,omitempty"`
	// 总分P数
	Videos int64 `protobuf:"varint,12,opt,name=videos,proto3" json:"videos,omitempty"`
	// 短链接
	ShortLink string `protobuf:"bytes,13,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	// 分享副标题
	ShareSubtitle string `protobuf:"bytes,14,opt,name=share_subtitle,json=shareSubtitle,proto3" json:"share_subtitle,omitempty"`
	// 播放数
	View int64 `protobuf:"varint,15,opt,name=view,proto3" json:"view,omitempty"`
	State int64 `protobuf:"varint,16,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CardUGC) Reset() {
	*x = CardUGC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardUGC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardUGC) ProtoMessage() {}

func (x *CardUGC) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardUGC.ProtoReflect.Descriptor instead.
func (*CardUGC) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{4}
}

func (x *CardUGC) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardUGC) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *CardUGC) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CardUGC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardUGC) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CardUGC) GetDisplayAttention() bool {
	if x != nil {
		return x.DisplayAttention
	}
	return false
}

func (x *CardUGC) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CardUGC) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CardUGC) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CardUGC) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

func (x *CardUGC) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *CardUGC) GetVideos() int64 {
	if x != nil {
		return x.Videos
	}
	return 0
}

func (x *CardUGC) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *CardUGC) GetShareSubtitle() string {
	if x != nil {
		return x.ShareSubtitle
	}
	return ""
}

func (x *CardUGC) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *CardUGC) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 清空历史记录-请求
type ClearReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
}

func (x *ClearReq) Reset() {
	*x = ClearReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearReq) ProtoMessage() {}

func (x *ClearReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearReq.ProtoReflect.Descriptor instead.
func (*ClearReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{5}
}

func (x *ClearReq) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

// 游标信息
type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 本页最大值游标值
	Max int64 `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	// 本页最大值游标类型
	MaxTp int32 `protobuf:"varint,2,opt,name=maxTp,proto3" json:"maxTp,omitempty"`
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{6}
}

func (x *Cursor) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Cursor) GetMaxTp() int32 {
	if x != nil {
		return x.MaxTp
	}
	return 0
}

// 历史记录卡片信息
type CursorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主体数据
	//
	// Types that are assignable to CardItem:
	//
	//	*CursorItem_CardUgc
	//	*CursorItem_CardOgv
	//	*CursorItem_CardArticle
	//	*CursorItem_CardLive
	//	*CursorItem_CardCheese
	CardItem isCursorItem_CardItem `protobuf_oneof:"card_item"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 目标uri/url
	Uri string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	// 观看时间
	ViewAt int64 `protobuf:"varint,8,opt,name=viewAt,proto3" json:"viewAt,omitempty"`
	// 历史记录id
	Kid int64 `protobuf:"varint,9,opt,name=kid,proto3" json:"kid,omitempty"`
	// 业务id
	Oid int64 `protobuf:"varint,10,opt,name=oid,proto3" json:"oid,omitempty"`
	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,11,opt,name=business,proto3" json:"business,omitempty"`
	// 业务类型代码
	Tp int32 `protobuf:"varint,12,opt,name=tp,proto3" json:"tp,omitempty"`
	// 设备标识
	Dt *DeviceType `protobuf:"bytes,13,opt,name=dt,proto3" json:"dt,omitempty"`
	// 是否有分享按钮
	HasShare bool `protobuf:"varint,14,opt,name=has_share,json=hasShare,proto3" json:"has_share,omitempty"`
}

func (x *CursorItem) Reset() {
	*x = CursorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorItem) ProtoMessage() {}

func (x *CursorItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorItem.ProtoReflect.Descriptor instead.
func (*CursorItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{7}
}

func (m *CursorItem) GetCardItem() isCursorItem_CardItem {
	if m != nil {
		return m.CardItem
	}
	return nil
}

func (x *CursorItem) GetCardUgc() *CardUGC {
	if x, ok := x.GetCardItem().(*CursorItem_CardUgc); ok {
		return x.CardUgc
	}
	return nil
}

func (x *CursorItem) GetCardOgv() *CardOGV {
	if x, ok := x.GetCardItem().(*CursorItem_CardOgv); ok {
		return x.CardOgv
	}
	return nil
}

func (x *CursorItem) GetCardArticle() *CardArticle {
	if x, ok := x.GetCardItem().(*CursorItem_CardArticle); ok {
		return x.CardArticle
	}
	return nil
}

func (x *CursorItem) GetCardLive() *CardLive {
	if x, ok := x.GetCardItem().(*CursorItem_CardLive); ok {
		return x.CardLive
	}
	return nil
}

func (x *CursorItem) GetCardCheese() *CardCheese {
	if x, ok := x.GetCardItem().(*CursorItem_CardCheese); ok {
		return x.CardCheese
	}
	return nil
}

func (x *CursorItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CursorItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CursorItem) GetViewAt() int64 {
	if x != nil {
		return x.ViewAt
	}
	return 0
}

func (x *CursorItem) GetKid() int64 {
	if x != nil {
		return x.Kid
	}
	return 0
}

func (x *CursorItem) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CursorItem) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *CursorItem) GetTp() int32 {
	if x != nil {
		return x.Tp
	}
	return 0
}

func (x *CursorItem) GetDt() *DeviceType {
	if x != nil {
		return x.Dt
	}
	return nil
}

func (x *CursorItem) GetHasShare() bool {
	if x != nil {
		return x.HasShare
	}
	return false
}

type isCursorItem_CardItem interface {
	isCursorItem_CardItem()
}

type CursorItem_CardUgc struct {
	// ugc稿件
	CardUgc *CardUGC `protobuf:"bytes,1,opt,name=card_ugc,json=cardUgc,proto3,oneof"`
}

type CursorItem_CardOgv struct {
	// pgc稿件
	CardOgv *CardOGV `protobuf:"bytes,2,opt,name=card_ogv,json=cardOgv,proto3,oneof"`
}

type CursorItem_CardArticle struct {
	// 专栏
	CardArticle *CardArticle `protobuf:"bytes,3,opt,name=card_article,json=cardArticle,proto3,oneof"`
}

type CursorItem_CardLive struct {
	// 直播
	CardLive *CardLive `protobuf:"bytes,4,opt,name=card_live,json=cardLive,proto3,oneof"`
}

type CursorItem_CardCheese struct {
	// 课程
	CardCheese *CardCheese `protobuf:"bytes,5,opt,name=card_cheese,json=cardCheese,proto3,oneof"`
}

func (*CursorItem_CardUgc) isCursorItem_CardItem() {}

func (*CursorItem_CardOgv) isCursorItem_CardItem() {}

func (*CursorItem_CardArticle) isCursorItem_CardItem() {}

func (*CursorItem_CardLive) isCursorItem_CardItem() {}

func (*CursorItem_CardCheese) isCursorItem_CardItem() {}

// 获取历史记录列表(旧版)-响应
type CursorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片内容
	Items []*CursorItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 顶部tab
	Tab []*CursorTab `protobuf:"bytes,2,rep,name=tab,proto3" json:"tab,omitempty"`
	// 游标信息
	Cursor *Cursor `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 是否未拉取完
	HasMore bool `protobuf:"varint,4,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
}

func (x *CursorReply) Reset() {
	*x = CursorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorReply) ProtoMessage() {}

func (x *CursorReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorReply.ProtoReflect.Descriptor instead.
func (*CursorReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{8}
}

func (x *CursorReply) GetItems() []*CursorItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CursorReply) GetTab() []*CursorTab {
	if x != nil {
		return x.Tab
	}
	return nil
}

func (x *CursorReply) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *CursorReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// 获取历史记录列表(旧版)-请求
type CursorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游标信息
	Cursor *Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 业务类型
	// all:全部 archive:视频 live:直播 article:专栏
	Business string `protobuf:"bytes,2,opt,name=business,proto3" json:"business,omitempty"`
	// 秒开参数(旧版)
	PlayerPreload *PlayerPreloadParams `protobuf:"bytes,3,opt,name=player_preload,json=playerPreload,proto3" json:"player_preload,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
}

func (x *CursorReq) Reset() {
	*x = CursorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorReq) ProtoMessage() {}

func (x *CursorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorReq.ProtoReflect.Descriptor instead.
func (*CursorReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{9}
}

func (x *CursorReq) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *CursorReq) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *CursorReq) GetPlayerPreload() *PlayerPreloadParams {
	if x != nil {
		return x.PlayerPreload
	}
	return nil
}

func (x *CursorReq) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

// 业务分类表
type CursorTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型
	Business string `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 路由uri
	Router string `protobuf:"bytes,3,opt,name=router,proto3" json:"router,omitempty"`
	// tab定位
	Focus bool `protobuf:"varint,4,opt,name=focus,proto3" json:"focus,omitempty"`
}

func (x *CursorTab) Reset() {
	*x = CursorTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorTab) ProtoMessage() {}

func (x *CursorTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorTab.ProtoReflect.Descriptor instead.
func (*CursorTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{10}
}

func (x *CursorTab) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *CursorTab) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CursorTab) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *CursorTab) GetFocus() bool {
	if x != nil {
		return x.Focus
	}
	return false
}

// 获取历史记录列表-响应
type CursorV2Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片内容
	Items []*CursorItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 游标信息
	Cursor *Cursor `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 是否未拉取完
	HasMore bool `protobuf:"varint,3,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	EmptyLink string `protobuf:"bytes,4,opt,name=empty_link,json=emptyLink,proto3" json:"empty_link,omitempty"`
}

func (x *CursorV2Reply) Reset() {
	*x = CursorV2Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorV2Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorV2Reply) ProtoMessage() {}

func (x *CursorV2Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorV2Reply.ProtoReflect.Descriptor instead.
func (*CursorV2Reply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{11}
}

func (x *CursorV2Reply) GetItems() []*CursorItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CursorV2Reply) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *CursorV2Reply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *CursorV2Reply) GetEmptyLink() string {
	if x != nil {
		return x.EmptyLink
	}
	return ""
}

// 获取历史记录列表-请求
type CursorV2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 游标信息
	Cursor *Cursor `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,2,opt,name=business,proto3" json:"business,omitempty"`
	// 秒开参数(旧版)
	PlayerPreload *PlayerPreloadParams `protobuf:"bytes,3,opt,name=player_preload,json=playerPreload,proto3" json:"player_preload,omitempty"`
	// 秒开参数
	PlayerArgs *v1.PlayerArgs `protobuf:"bytes,4,opt,name=player_args,json=playerArgs,proto3" json:"player_args,omitempty"`
	// 是否选择本机的播放历史
	IsLocal bool `protobuf:"varint,5,opt,name=is_local,json=isLocal,proto3" json:"is_local,omitempty"`
}

func (x *CursorV2Req) Reset() {
	*x = CursorV2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorV2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorV2Req) ProtoMessage() {}

func (x *CursorV2Req) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorV2Req.ProtoReflect.Descriptor instead.
func (*CursorV2Req) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{12}
}

func (x *CursorV2Req) GetCursor() *Cursor {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *CursorV2Req) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *CursorV2Req) GetPlayerPreload() *PlayerPreloadParams {
	if x != nil {
		return x.PlayerPreload
	}
	return nil
}

func (x *CursorV2Req) GetPlayerArgs() *v1.PlayerArgs {
	if x != nil {
		return x.PlayerArgs
	}
	return nil
}

func (x *CursorV2Req) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

// 删除历史记录-请求
type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 历史记录信息
	HisInfo *HisInfo `protobuf:"bytes,1,opt,name=his_info,json=hisInfo,proto3" json:"his_info,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteReq) GetHisInfo() *HisInfo {
	if x != nil {
		return x.HisInfo
	}
	return nil
}

// 设备类型
type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 设备标识代码
	Type DT `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.interface.v1.DT" json:"type,omitempty"`
	// 图标url
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{14}
}

func (x *DeviceType) GetType() DT {
	if x != nil {
		return x.Type
	}
	return DT_Unknown
}

func (x *DeviceType) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 历史记录信息
type HisInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	// 历史记录id
	Kid int64 `protobuf:"varint,2,opt,name=kid,proto3" json:"kid,omitempty"`
}

func (x *HisInfo) Reset() {
	*x = HisInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HisInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HisInfo) ProtoMessage() {}

func (x *HisInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HisInfo.ProtoReflect.Descriptor instead.
func (*HisInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{15}
}

func (x *HisInfo) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *HisInfo) GetKid() int64 {
	if x != nil {
		return x.Kid
	}
	return 0
}

// 获取历史记录tab-响应
type HistoryTabReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tab列表
	Tab []*CursorTab `protobuf:"bytes,1,rep,name=tab,proto3" json:"tab,omitempty"`
}

func (x *HistoryTabReply) Reset() {
	*x = HistoryTabReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryTabReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTabReply) ProtoMessage() {}

func (x *HistoryTabReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTabReply.ProtoReflect.Descriptor instead.
func (*HistoryTabReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{16}
}

func (x *HistoryTabReply) GetTab() []*CursorTab {
	if x != nil {
		return x.Tab
	}
	return nil
}

// 获取历史记录tab-请求
type HistoryTabReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	// 查询请求来源
	Source HistorySource `protobuf:"varint,2,opt,name=source,proto3,enum=bilibili.app.interface.v1.HistorySource" json:"source,omitempty"`
	// 搜索关键词
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *HistoryTabReq) Reset() {
	*x = HistoryTabReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryTabReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTabReq) ProtoMessage() {}

func (x *HistoryTabReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTabReq.ProtoReflect.Descriptor instead.
func (*HistoryTabReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{17}
}

func (x *HistoryTabReq) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *HistoryTabReq) GetSource() HistorySource {
	if x != nil {
		return x.Source
	}
	return HistorySource_history_VALUE
}

func (x *HistoryTabReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 获取最新的历史记录-响应
type LatestHistoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片内容
	Items *CursorItem `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
	// 场景
	Scene string `protobuf:"bytes,2,opt,name=scene,proto3" json:"scene,omitempty"`
	// 弹窗停留时间
	Rtime int64 `protobuf:"varint,3,opt,name=rtime,proto3" json:"rtime,omitempty"`
	// 分组的标志(客户端埋点上报)
	Flag string `protobuf:"bytes,4,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *LatestHistoryReply) Reset() {
	*x = LatestHistoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestHistoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHistoryReply) ProtoMessage() {}

func (x *LatestHistoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHistoryReply.ProtoReflect.Descriptor instead.
func (*LatestHistoryReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{18}
}

func (x *LatestHistoryReply) GetItems() *CursorItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LatestHistoryReply) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *LatestHistoryReply) GetRtime() int64 {
	if x != nil {
		return x.Rtime
	}
	return 0
}

func (x *LatestHistoryReply) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

// 获取最新的历史记录-请求
type LatestHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,1,opt,name=business,proto3" json:"business,omitempty"`
	// 秒开参数
	PlayerPreload *PlayerPreloadParams `protobuf:"bytes,2,opt,name=player_preload,json=playerPreload,proto3" json:"player_preload,omitempty"`
}

func (x *LatestHistoryReq) Reset() {
	*x = LatestHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHistoryReq) ProtoMessage() {}

func (x *LatestHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHistoryReq.ProtoReflect.Descriptor instead.
func (*LatestHistoryReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{19}
}

func (x *LatestHistoryReq) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *LatestHistoryReq) GetPlayerPreload() *PlayerPreloadParams {
	if x != nil {
		return x.PlayerPreload
	}
	return nil
}

// 空响应
type NoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReply) Reset() {
	*x = NoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReply) ProtoMessage() {}

func (x *NoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReply.ProtoReflect.Descriptor instead.
func (*NoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{20}
}

// 页面信息
type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前页码
	Pn int64 `protobuf:"varint,1,opt,name=pn,proto3" json:"pn,omitempty"`
	// 总计条目数
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{21}
}

func (x *Page) GetPn() int64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *Page) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 秒开参数
type PlayerPreloadParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 清晰度
	Qn int64 `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	// 流版本
	Fnver int64 `protobuf:"varint,2,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 流类型
	Fnval int64 `protobuf:"varint,3,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否强制域名
	ForceHost int64 `protobuf:"varint,4,opt,name=forceHost,proto3" json:"forceHost,omitempty"`
	// 是否4K
	Fourk int64 `protobuf:"varint,5,opt,name=fourk,proto3" json:"fourk,omitempty"`
}

func (x *PlayerPreloadParams) Reset() {
	*x = PlayerPreloadParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPreloadParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPreloadParams) ProtoMessage() {}

func (x *PlayerPreloadParams) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPreloadParams.ProtoReflect.Descriptor instead.
func (*PlayerPreloadParams) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{22}
}

func (x *PlayerPreloadParams) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayerPreloadParams) GetFnver() int64 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayerPreloadParams) GetFnval() int64 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayerPreloadParams) GetForceHost() int64 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayerPreloadParams) GetFourk() int64 {
	if x != nil {
		return x.Fourk
	}
	return 0
}

// 关系信息
type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关系状态
	// 1:未关注 2:已关注 3:被关注 4:互关
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 用户关注UP主
	IsFollow int32 `protobuf:"varint,2,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	// UP主关注用户
	IsFollowed int32 `protobuf:"varint,3,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{23}
}

func (x *Relation) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Relation) GetIsFollow() int32 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *Relation) GetIsFollowed() int32 {
	if x != nil {
		return x.IsFollowed
	}
	return 0
}

// 搜索历史记录-响应
type SearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片内容
	Items []*CursorItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 是否未拉取完
	HasMore bool `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	// 页面信息
	Page *Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *SearchReply) Reset() {
	*x = SearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReply) ProtoMessage() {}

func (x *SearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReply.ProtoReflect.Descriptor instead.
func (*SearchReply) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{24}
}

func (x *SearchReply) GetItems() []*CursorItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchReply) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 搜索历史记录-请求
type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关键词
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	// 页码
	Pn int64 `protobuf:"varint,2,opt,name=pn,proto3" json:"pn,omitempty"`
	// 业务类型
	// archive:视频 live:直播 article:专栏 goods:商品 show:展演
	Business string `protobuf:"bytes,3,opt,name=business,proto3" json:"business,omitempty"`
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_interfaces_v1_history_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP(), []int{25}
}

func (x *SearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchReq) GetPn() int64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *SearchReq) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

var File_bilibili_app_interfaces_v1_history_proto protoreflect.FileDescriptor

var file_bilibili_app_interfaces_v1_history_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x30, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f,
	0x61, 0x70, 0x70, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x72,
	0x64, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x73, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x73, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x72,
	0x64, 0x4f, 0x47, 0x56, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc9, 0x03, 0x0a, 0x07, 0x43,
	0x61, 0x72, 0x64, 0x55, 0x47, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x30,
	0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x78, 0x54, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x54, 0x70,
	0x22, 0xda, 0x04, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x3f, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x67, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x55, 0x47, 0x43, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x67, 0x63,
	0x12, 0x3f, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x67, 0x76, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x4f, 0x47, 0x56, 0x48, 0x00, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x67,
	0x76, 0x12, 0x4b, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x42,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x76, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x43, 0x68, 0x65, 0x65, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x70, 0x12, 0x35, 0x0a, 0x02,
	0x64, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x02, 0x64, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xd7, 0x01,
	0x0a, 0x0b, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x03, 0x74, 0x61,
	0x62, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x52, 0x03, 0x74,
	0x61, 0x62, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x8a, 0x02, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x55, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x22, 0x69, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x61,
	0x62, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x39,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d,
	0x6f, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x22, 0xa7, 0x02, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x55, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x4f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x08, 0x68, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x68, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x54, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x37, 0x0a,
	0x07, 0x48, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x61, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x03, 0x74, 0x61, 0x62,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x52, 0x03, 0x74, 0x61,
	0x62, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x62,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x40, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x12,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22,
	0x85, 0x01, 0x0a, 0x10, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x55, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x85, 0x01, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66,
	0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x22, 0x60, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2a, 0x53, 0x0a, 0x02, 0x44, 0x54, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x61, 0x64, 0x10, 0x02,
	0x12, 0x06, 0x0a, 0x02, 0x50, 0x43, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x56, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x6f, 0x74,
	0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x64, 0x10, 0x07, 0x2a, 0x36,
	0x0a, 0x0d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x11, 0x0a, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x32, 0x8e, 0x05, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x62, 0x0a, 0x0a, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x62,
	0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x61,
	0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c,
	0x0a, 0x08, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x32, 0x12, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x56, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x0d, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_interfaces_v1_history_proto_rawDescOnce sync.Once
	file_bilibili_app_interfaces_v1_history_proto_rawDescData = file_bilibili_app_interfaces_v1_history_proto_rawDesc
)

func file_bilibili_app_interfaces_v1_history_proto_rawDescGZIP() []byte {
	file_bilibili_app_interfaces_v1_history_proto_rawDescOnce.Do(func() {
		file_bilibili_app_interfaces_v1_history_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_interfaces_v1_history_proto_rawDescData)
	})
	return file_bilibili_app_interfaces_v1_history_proto_rawDescData
}

var file_bilibili_app_interfaces_v1_history_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bilibili_app_interfaces_v1_history_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_bilibili_app_interfaces_v1_history_proto_goTypes = []interface{}{
	(DT)(0),                     // 0: bilibili.app.interface.v1.DT
	(HistorySource)(0),          // 1: bilibili.app.interface.v1.HistorySource
	(*CardArticle)(nil),         // 2: bilibili.app.interface.v1.CardArticle
	(*CardCheese)(nil),          // 3: bilibili.app.interface.v1.CardCheese
	(*CardLive)(nil),            // 4: bilibili.app.interface.v1.CardLive
	(*CardOGV)(nil),             // 5: bilibili.app.interface.v1.CardOGV
	(*CardUGC)(nil),             // 6: bilibili.app.interface.v1.CardUGC
	(*ClearReq)(nil),            // 7: bilibili.app.interface.v1.ClearReq
	(*Cursor)(nil),              // 8: bilibili.app.interface.v1.Cursor
	(*CursorItem)(nil),          // 9: bilibili.app.interface.v1.CursorItem
	(*CursorReply)(nil),         // 10: bilibili.app.interface.v1.CursorReply
	(*CursorReq)(nil),           // 11: bilibili.app.interface.v1.CursorReq
	(*CursorTab)(nil),           // 12: bilibili.app.interface.v1.CursorTab
	(*CursorV2Reply)(nil),       // 13: bilibili.app.interface.v1.CursorV2Reply
	(*CursorV2Req)(nil),         // 14: bilibili.app.interface.v1.CursorV2Req
	(*DeleteReq)(nil),           // 15: bilibili.app.interface.v1.DeleteReq
	(*DeviceType)(nil),          // 16: bilibili.app.interface.v1.DeviceType
	(*HisInfo)(nil),             // 17: bilibili.app.interface.v1.HisInfo
	(*HistoryTabReply)(nil),     // 18: bilibili.app.interface.v1.HistoryTabReply
	(*HistoryTabReq)(nil),       // 19: bilibili.app.interface.v1.HistoryTabReq
	(*LatestHistoryReply)(nil),  // 20: bilibili.app.interface.v1.LatestHistoryReply
	(*LatestHistoryReq)(nil),    // 21: bilibili.app.interface.v1.LatestHistoryReq
	(*NoReply)(nil),             // 22: bilibili.app.interface.v1.NoReply
	(*Page)(nil),                // 23: bilibili.app.interface.v1.Page
	(*PlayerPreloadParams)(nil), // 24: bilibili.app.interface.v1.PlayerPreloadParams
	(*Relation)(nil),            // 25: bilibili.app.interface.v1.Relation
	(*SearchReply)(nil),         // 26: bilibili.app.interface.v1.SearchReply
	(*SearchReq)(nil),           // 27: bilibili.app.interface.v1.SearchReq
	(*v1.PlayerArgs)(nil),       // 28: bilibili.app.archive.middleware.v1.PlayerArgs
}
var file_bilibili_app_interfaces_v1_history_proto_depIdxs = []int32{
	25, // 0: bilibili.app.interface.v1.CardArticle.relation:type_name -> bilibili.app.interface.v1.Relation
	25, // 1: bilibili.app.interface.v1.CardLive.relation:type_name -> bilibili.app.interface.v1.Relation
	25, // 2: bilibili.app.interface.v1.CardUGC.relation:type_name -> bilibili.app.interface.v1.Relation
	6,  // 3: bilibili.app.interface.v1.CursorItem.card_ugc:type_name -> bilibili.app.interface.v1.CardUGC
	5,  // 4: bilibili.app.interface.v1.CursorItem.card_ogv:type_name -> bilibili.app.interface.v1.CardOGV
	2,  // 5: bilibili.app.interface.v1.CursorItem.card_article:type_name -> bilibili.app.interface.v1.CardArticle
	4,  // 6: bilibili.app.interface.v1.CursorItem.card_live:type_name -> bilibili.app.interface.v1.CardLive
	3,  // 7: bilibili.app.interface.v1.CursorItem.card_cheese:type_name -> bilibili.app.interface.v1.CardCheese
	16, // 8: bilibili.app.interface.v1.CursorItem.dt:type_name -> bilibili.app.interface.v1.DeviceType
	9,  // 9: bilibili.app.interface.v1.CursorReply.items:type_name -> bilibili.app.interface.v1.CursorItem
	12, // 10: bilibili.app.interface.v1.CursorReply.tab:type_name -> bilibili.app.interface.v1.CursorTab
	8,  // 11: bilibili.app.interface.v1.CursorReply.cursor:type_name -> bilibili.app.interface.v1.Cursor
	8,  // 12: bilibili.app.interface.v1.CursorReq.cursor:type_name -> bilibili.app.interface.v1.Cursor
	24, // 13: bilibili.app.interface.v1.CursorReq.player_preload:type_name -> bilibili.app.interface.v1.PlayerPreloadParams
	28, // 14: bilibili.app.interface.v1.CursorReq.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	9,  // 15: bilibili.app.interface.v1.CursorV2Reply.items:type_name -> bilibili.app.interface.v1.CursorItem
	8,  // 16: bilibili.app.interface.v1.CursorV2Reply.cursor:type_name -> bilibili.app.interface.v1.Cursor
	8,  // 17: bilibili.app.interface.v1.CursorV2Req.cursor:type_name -> bilibili.app.interface.v1.Cursor
	24, // 18: bilibili.app.interface.v1.CursorV2Req.player_preload:type_name -> bilibili.app.interface.v1.PlayerPreloadParams
	28, // 19: bilibili.app.interface.v1.CursorV2Req.player_args:type_name -> bilibili.app.archive.middleware.v1.PlayerArgs
	17, // 20: bilibili.app.interface.v1.DeleteReq.his_info:type_name -> bilibili.app.interface.v1.HisInfo
	0,  // 21: bilibili.app.interface.v1.DeviceType.type:type_name -> bilibili.app.interface.v1.DT
	12, // 22: bilibili.app.interface.v1.HistoryTabReply.tab:type_name -> bilibili.app.interface.v1.CursorTab
	1,  // 23: bilibili.app.interface.v1.HistoryTabReq.source:type_name -> bilibili.app.interface.v1.HistorySource
	9,  // 24: bilibili.app.interface.v1.LatestHistoryReply.items:type_name -> bilibili.app.interface.v1.CursorItem
	24, // 25: bilibili.app.interface.v1.LatestHistoryReq.player_preload:type_name -> bilibili.app.interface.v1.PlayerPreloadParams
	9,  // 26: bilibili.app.interface.v1.SearchReply.items:type_name -> bilibili.app.interface.v1.CursorItem
	23, // 27: bilibili.app.interface.v1.SearchReply.page:type_name -> bilibili.app.interface.v1.Page
	19, // 28: bilibili.app.interface.v1.History.HistoryTab:input_type -> bilibili.app.interface.v1.HistoryTabReq
	11, // 29: bilibili.app.interface.v1.History.Cursor:input_type -> bilibili.app.interface.v1.CursorReq
	14, // 30: bilibili.app.interface.v1.History.CursorV2:input_type -> bilibili.app.interface.v1.CursorV2Req
	15, // 31: bilibili.app.interface.v1.History.Delete:input_type -> bilibili.app.interface.v1.DeleteReq
	27, // 32: bilibili.app.interface.v1.History.Search:input_type -> bilibili.app.interface.v1.SearchReq
	7,  // 33: bilibili.app.interface.v1.History.Clear:input_type -> bilibili.app.interface.v1.ClearReq
	21, // 34: bilibili.app.interface.v1.History.LatestHistory:input_type -> bilibili.app.interface.v1.LatestHistoryReq
	18, // 35: bilibili.app.interface.v1.History.HistoryTab:output_type -> bilibili.app.interface.v1.HistoryTabReply
	10, // 36: bilibili.app.interface.v1.History.Cursor:output_type -> bilibili.app.interface.v1.CursorReply
	13, // 37: bilibili.app.interface.v1.History.CursorV2:output_type -> bilibili.app.interface.v1.CursorV2Reply
	22, // 38: bilibili.app.interface.v1.History.Delete:output_type -> bilibili.app.interface.v1.NoReply
	26, // 39: bilibili.app.interface.v1.History.Search:output_type -> bilibili.app.interface.v1.SearchReply
	22, // 40: bilibili.app.interface.v1.History.Clear:output_type -> bilibili.app.interface.v1.NoReply
	20, // 41: bilibili.app.interface.v1.History.LatestHistory:output_type -> bilibili.app.interface.v1.LatestHistoryReply
	35, // [35:42] is the sub-list for method output_type
	28, // [28:35] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_bilibili_app_interfaces_v1_history_proto_init() }
func file_bilibili_app_interfaces_v1_history_proto_init() {
	if File_bilibili_app_interfaces_v1_history_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardCheese); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardLive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardOGV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardUGC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cursor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorV2Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorV2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HisInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryTabReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryTabReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestHistoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPreloadParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_interfaces_v1_history_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_interfaces_v1_history_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*CursorItem_CardUgc)(nil),
		(*CursorItem_CardOgv)(nil),
		(*CursorItem_CardArticle)(nil),
		(*CursorItem_CardLive)(nil),
		(*CursorItem_CardCheese)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_interfaces_v1_history_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_app_interfaces_v1_history_proto_goTypes,
		DependencyIndexes: file_bilibili_app_interfaces_v1_history_proto_depIdxs,
		EnumInfos:         file_bilibili_app_interfaces_v1_history_proto_enumTypes,
		MessageInfos:      file_bilibili_app_interfaces_v1_history_proto_msgTypes,
	}.Build()
	File_bilibili_app_interfaces_v1_history_proto = out.File
	file_bilibili_app_interfaces_v1_history_proto_rawDesc = nil
	file_bilibili_app_interfaces_v1_history_proto_goTypes = nil
	file_bilibili_app_interfaces_v1_history_proto_depIdxs = nil
}
