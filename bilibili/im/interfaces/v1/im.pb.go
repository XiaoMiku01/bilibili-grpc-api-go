// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: bilibili/im/interfaces/v1/im.proto

package v1

import (
	_type "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/im/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ENUM_FOLD int32

const (
	ENUM_FOLD_FOLD_NO      ENUM_FOLD = 0 //
	ENUM_FOLD_FOLD_YES     ENUM_FOLD = 1 //
	ENUM_FOLD_FOLD_UNKNOWN ENUM_FOLD = 2 //
)

// Enum value maps for ENUM_FOLD.
var (
	ENUM_FOLD_name = map[int32]string{
		0: "FOLD_NO",
		1: "FOLD_YES",
		2: "FOLD_UNKNOWN",
	}
	ENUM_FOLD_value = map[string]int32{
		"FOLD_NO":      0,
		"FOLD_YES":     1,
		"FOLD_UNKNOWN": 2,
	}
)

func (x ENUM_FOLD) Enum() *ENUM_FOLD {
	p := new(ENUM_FOLD)
	*p = x
	return p
}

func (x ENUM_FOLD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENUM_FOLD) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_im_interfaces_v1_im_proto_enumTypes[0].Descriptor()
}

func (ENUM_FOLD) Type() protoreflect.EnumType {
	return &file_bilibili_im_interfaces_v1_im_proto_enumTypes[0]
}

func (x ENUM_FOLD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENUM_FOLD.Descriptor instead.
func (ENUM_FOLD) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{0}
}

type ENUM_UNREAD_TYPE int32

const (
	ENUM_UNREAD_TYPE_UNREAD_TYPE_ALL      ENUM_UNREAD_TYPE = 0 //
	ENUM_UNREAD_TYPE_UNREAD_TYPE_FOLLOW   ENUM_UNREAD_TYPE = 1 //
	ENUM_UNREAD_TYPE_UNREAD_TYPE_UNFOLLOW ENUM_UNREAD_TYPE = 2 //
	ENUM_UNREAD_TYPE_UNREAD_TYPE_DUSTBIN  ENUM_UNREAD_TYPE = 3 //
)

// Enum value maps for ENUM_UNREAD_TYPE.
var (
	ENUM_UNREAD_TYPE_name = map[int32]string{
		0: "UNREAD_TYPE_ALL",
		1: "UNREAD_TYPE_FOLLOW",
		2: "UNREAD_TYPE_UNFOLLOW",
		3: "UNREAD_TYPE_DUSTBIN",
	}
	ENUM_UNREAD_TYPE_value = map[string]int32{
		"UNREAD_TYPE_ALL":      0,
		"UNREAD_TYPE_FOLLOW":   1,
		"UNREAD_TYPE_UNFOLLOW": 2,
		"UNREAD_TYPE_DUSTBIN":  3,
	}
)

func (x ENUM_UNREAD_TYPE) Enum() *ENUM_UNREAD_TYPE {
	p := new(ENUM_UNREAD_TYPE)
	*p = x
	return p
}

func (x ENUM_UNREAD_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENUM_UNREAD_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_im_interfaces_v1_im_proto_enumTypes[1].Descriptor()
}

func (ENUM_UNREAD_TYPE) Type() protoreflect.EnumType {
	return &file_bilibili_im_interfaces_v1_im_proto_enumTypes[1]
}

func (x ENUM_UNREAD_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENUM_UNREAD_TYPE.Descriptor instead.
func (ENUM_UNREAD_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{1}
}

type SESSION_TYPE int32

const (
	SESSION_TYPE_UNKNOWN                  SESSION_TYPE = 0 //
	SESSION_TYPE_UN_FOLD_SESSION          SESSION_TYPE = 1 //
	SESSION_TYPE_UN_FOLLOW_SINGLE_SESSION SESSION_TYPE = 2 //
	SESSION_TYPE_MY_GROUP_SESSION         SESSION_TYPE = 3 //
	SESSION_TYPE_ALL_SESSION              SESSION_TYPE = 4 //
	SESSION_TYPE_DUSTBIN_SESSION          SESSION_TYPE = 5 //
)

// Enum value maps for SESSION_TYPE.
var (
	SESSION_TYPE_name = map[int32]string{
		0: "UNKNOWN",
		1: "UN_FOLD_SESSION",
		2: "UN_FOLLOW_SINGLE_SESSION",
		3: "MY_GROUP_SESSION",
		4: "ALL_SESSION",
		5: "DUSTBIN_SESSION",
	}
	SESSION_TYPE_value = map[string]int32{
		"UNKNOWN":                  0,
		"UN_FOLD_SESSION":          1,
		"UN_FOLLOW_SINGLE_SESSION": 2,
		"MY_GROUP_SESSION":         3,
		"ALL_SESSION":              4,
		"DUSTBIN_SESSION":          5,
	}
)

func (x SESSION_TYPE) Enum() *SESSION_TYPE {
	p := new(SESSION_TYPE)
	*p = x
	return p
}

func (x SESSION_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SESSION_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_im_interfaces_v1_im_proto_enumTypes[2].Descriptor()
}

func (SESSION_TYPE) Type() protoreflect.EnumType {
	return &file_bilibili_im_interfaces_v1_im_proto_enumTypes[2]
}

func (x SESSION_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SESSION_TYPE.Descriptor instead.
func (SESSION_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{2}
}

// 空请求
type DummyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idl uint32 `protobuf:"varint,1,opt,name=idl,proto3" json:"idl,omitempty"`
}

func (x *DummyReq) Reset() {
	*x = DummyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DummyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DummyReq) ProtoMessage() {}

func (x *DummyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DummyReq.ProtoReflect.Descriptor instead.
func (*DummyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{0}
}

func (x *DummyReq) GetIdl() uint32 {
	if x != nil {
		return x.Idl
	}
	return 0
}

// 空响应
type DummyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DummyRsp) Reset() {
	*x = DummyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DummyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DummyRsp) ProtoMessage() {}

func (x *DummyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DummyRsp.ProtoReflect.Descriptor instead.
func (*DummyRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{1}
}

// 表情资源信息
type EmotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 表情
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 表情url
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 表情大小
	// 0:未知 1:min 2:max
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// gif url
	GifUrl string `protobuf:"bytes,4,opt,name=gif_url,json=gifUrl,proto3" json:"gif_url,omitempty"`
}

func (x *EmotionInfo) Reset() {
	*x = EmotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotionInfo) ProtoMessage() {}

func (x *EmotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotionInfo.ProtoReflect.Descriptor instead.
func (*EmotionInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{2}
}

func (x *EmotionInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *EmotionInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EmotionInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *EmotionInfo) GetGifUrl() string {
	if x != nil {
		return x.GifUrl
	}
	return ""
}

type MsgDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgKey int64 `protobuf:"varint,1,opt,name=msg_key,json=msgKey,proto3" json:"msg_key,omitempty"`
	Seqno int64 `protobuf:"varint,2,opt,name=seqno,proto3" json:"seqno,omitempty"`
}

func (x *MsgDetail) Reset() {
	*x = MsgDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDetail) ProtoMessage() {}

func (x *MsgDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDetail.ProtoReflect.Descriptor instead.
func (*MsgDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{3}
}

func (x *MsgDetail) GetMsgKey() int64 {
	if x != nil {
		return x.MsgKey
	}
	return 0
}

func (x *MsgDetail) GetSeqno() int64 {
	if x != nil {
		return x.Seqno
	}
	return 0
}

type MsgFeedUnreadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unread map[string]int64 `protobuf:"bytes,1,rep,name=unread,proto3" json:"unread,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MsgFeedUnreadRsp) Reset() {
	*x = MsgFeedUnreadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFeedUnreadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFeedUnreadRsp) ProtoMessage() {}

func (x *MsgFeedUnreadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFeedUnreadRsp.ProtoReflect.Descriptor instead.
func (*MsgFeedUnreadRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{4}
}

func (x *MsgFeedUnreadRsp) GetUnread() map[string]int64 {
	if x != nil {
		return x.Unread
	}
	return nil
}

// 更新应援团小助手消息已拉取进度-请求
type ReqAckAssisMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckSeqno uint64 `protobuf:"varint,1,opt,name=ack_seqno,json=ackSeqno,proto3" json:"ack_seqno,omitempty"`
}

func (x *ReqAckAssisMsg) Reset() {
	*x = ReqAckAssisMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAckAssisMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAckAssisMsg) ProtoMessage() {}

func (x *ReqAckAssisMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAckAssisMsg.ProtoReflect.Descriptor instead.
func (*ReqAckAssisMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{5}
}

func (x *ReqAckAssisMsg) GetAckSeqno() uint64 {
	if x != nil {
		return x.AckSeqno
	}
	return 0
}

// 拉取已读消息-请求
type ReqAckSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTs uint64 `protobuf:"varint,1,opt,name=begin_ts,json=beginTs,proto3" json:"begin_ts,omitempty"`
	EndTs uint32 `protobuf:"varint,2,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReqAckSessions) Reset() {
	*x = ReqAckSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAckSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAckSessions) ProtoMessage() {}

func (x *ReqAckSessions) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAckSessions.ProtoReflect.Descriptor instead.
func (*ReqAckSessions) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{6}
}

func (x *ReqAckSessions) GetBeginTs() uint64 {
	if x != nil {
		return x.BeginTs
	}
	return 0
}

func (x *ReqAckSessions) GetEndTs() uint32 {
	if x != nil {
		return x.EndTs
	}
	return 0
}

func (x *ReqAckSessions) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 批量删除会话-请求
type ReqBatRmSess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqBatRmSess) Reset() {
	*x = ReqBatRmSess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatRmSess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatRmSess) ProtoMessage() {}

func (x *ReqBatRmSess) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatRmSess.ProtoReflect.Descriptor instead.
func (*ReqBatRmSess) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{7}
}

type ReqCloseClearUnreadUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqCloseClearUnreadUI) Reset() {
	*x = ReqCloseClearUnreadUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCloseClearUnreadUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCloseClearUnreadUI) ProtoMessage() {}

func (x *ReqCloseClearUnreadUI) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCloseClearUnreadUI.ProtoReflect.Descriptor instead.
func (*ReqCloseClearUnreadUI) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{8}
}

type ReqGetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId int64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	SessionType int32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	MsgDetail []*MsgDetail `protobuf:"bytes,3,rep,name=msg_detail,json=msgDetail,proto3" json:"msg_detail,omitempty"`
}

func (x *ReqGetMsg) Reset() {
	*x = ReqGetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetMsg) ProtoMessage() {}

func (x *ReqGetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetMsg.ProtoReflect.Descriptor instead.
func (*ReqGetMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{9}
}

func (x *ReqGetMsg) GetTalkerId() int64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqGetMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqGetMsg) GetMsgDetail() []*MsgDetail {
	if x != nil {
		return x.MsgDetail
	}
	return nil
}

// 拉取会话记录列表-请求
type ReqGetSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTs uint64 `protobuf:"varint,1,opt,name=begin_ts,json=beginTs,proto3" json:"begin_ts,omitempty"`
	EndTs uint64 `protobuf:"varint,2,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	SessionType uint32 `protobuf:"varint,4,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	UnfollowFold uint32 `protobuf:"varint,5,opt,name=unfollow_fold,json=unfollowFold,proto3" json:"unfollow_fold,omitempty"`
	GroupFold uint32 `protobuf:"varint,6,opt,name=group_fold,json=groupFold,proto3" json:"group_fold,omitempty"`
	SortRule uint32 `protobuf:"varint,7,opt,name=sort_rule,json=sortRule,proto3" json:"sort_rule,omitempty"`
	// 青少年模式
	TeenagerMode uint32 `protobuf:"varint,8,opt,name=teenager_mode,json=teenagerMode,proto3" json:"teenager_mode,omitempty"`
	// 课堂模式
	LessonsMode uint32 `protobuf:"varint,9,opt,name=lessons_mode,json=lessonsMode,proto3" json:"lessons_mode,omitempty"`
}

func (x *ReqGetSessions) Reset() {
	*x = ReqGetSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSessions) ProtoMessage() {}

func (x *ReqGetSessions) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSessions.ProtoReflect.Descriptor instead.
func (*ReqGetSessions) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{10}
}

func (x *ReqGetSessions) GetBeginTs() uint64 {
	if x != nil {
		return x.BeginTs
	}
	return 0
}

func (x *ReqGetSessions) GetEndTs() uint64 {
	if x != nil {
		return x.EndTs
	}
	return 0
}

func (x *ReqGetSessions) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReqGetSessions) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqGetSessions) GetUnfollowFold() uint32 {
	if x != nil {
		return x.UnfollowFold
	}
	return 0
}

func (x *ReqGetSessions) GetGroupFold() uint32 {
	if x != nil {
		return x.GroupFold
	}
	return 0
}

func (x *ReqGetSessions) GetSortRule() uint32 {
	if x != nil {
		return x.SortRule
	}
	return 0
}

func (x *ReqGetSessions) GetTeenagerMode() uint32 {
	if x != nil {
		return x.TeenagerMode
	}
	return 0
}

func (x *ReqGetSessions) GetLessonsMode() uint32 {
	if x != nil {
		return x.LessonsMode
	}
	return 0
}

// -请求
type ReqGetSpecificSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 具体会话详情
	TalkerSessions []*SimpleSession `protobuf:"bytes,1,rep,name=talker_sessions,json=talkerSessions,proto3" json:"talker_sessions,omitempty"`
}

func (x *ReqGetSpecificSessions) Reset() {
	*x = ReqGetSpecificSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSpecificSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSpecificSessions) ProtoMessage() {}

func (x *ReqGetSpecificSessions) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSpecificSessions.ProtoReflect.Descriptor instead.
func (*ReqGetSpecificSessions) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{11}
}

func (x *ReqGetSpecificSessions) GetTalkerSessions() []*SimpleSession {
	if x != nil {
		return x.TalkerSessions
	}
	return nil
}

// 应援团消息助手-请求
type ReqGroupAssisMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSeqno uint64 `protobuf:"varint,1,opt,name=client_seqno,json=clientSeqno,proto3" json:"client_seqno,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReqGroupAssisMsg) Reset() {
	*x = ReqGroupAssisMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGroupAssisMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGroupAssisMsg) ProtoMessage() {}

func (x *ReqGroupAssisMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGroupAssisMsg.ProtoReflect.Descriptor instead.
func (*ReqGroupAssisMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{12}
}

func (x *ReqGroupAssisMsg) GetClientSeqno() uint64 {
	if x != nil {
		return x.ClientSeqno
	}
	return 0
}

func (x *ReqGroupAssisMsg) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReqLiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TalkerId int64 `protobuf:"varint,2,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
}

func (x *ReqLiveInfo) Reset() {
	*x = ReqLiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqLiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqLiveInfo) ProtoMessage() {}

func (x *ReqLiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqLiveInfo.ProtoReflect.Descriptor instead.
func (*ReqLiveInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{13}
}

func (x *ReqLiveInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqLiveInfo) GetTalkerId() int64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

// 拉取新消息-请求
type ReqNewSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTs uint64 `protobuf:"varint,1,opt,name=begin_ts,json=beginTs,proto3" json:"begin_ts,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	TeenagerMode uint32 `protobuf:"varint,3,opt,name=teenager_mode,json=teenagerMode,proto3" json:"teenager_mode,omitempty"`
	// 课堂模式
	LessonsMode uint32 `protobuf:"varint,4,opt,name=lessons_mode,json=lessonsMode,proto3" json:"lessons_mode,omitempty"`
}

func (x *ReqNewSessions) Reset() {
	*x = ReqNewSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqNewSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqNewSessions) ProtoMessage() {}

func (x *ReqNewSessions) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqNewSessions.ProtoReflect.Descriptor instead.
func (*ReqNewSessions) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{14}
}

func (x *ReqNewSessions) GetBeginTs() uint64 {
	if x != nil {
		return x.BeginTs
	}
	return 0
}

func (x *ReqNewSessions) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReqNewSessions) GetTeenagerMode() uint32 {
	if x != nil {
		return x.TeenagerMode
	}
	return 0
}

func (x *ReqNewSessions) GetLessonsMode() uint32 {
	if x != nil {
		return x.LessonsMode
	}
	return 0
}

// 同步关系-请求
type ReqRelationSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端当前seqno
	ClientRelationOplogSeqno uint64 `protobuf:"varint,1,opt,name=client_relation_oplog_seqno,json=clientRelationOplogSeqno,proto3" json:"client_relation_oplog_seqno,omitempty"`
}

func (x *ReqRelationSync) Reset() {
	*x = ReqRelationSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRelationSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRelationSync) ProtoMessage() {}

func (x *ReqRelationSync) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRelationSync.ProtoReflect.Descriptor instead.
func (*ReqRelationSync) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{15}
}

func (x *ReqRelationSync) GetClientRelationOplogSeqno() uint64 {
	if x != nil {
		return x.ClientRelationOplogSeqno
	}
	return 0
}

// 删除会话记录-请求
type ReqRemoveSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
}

func (x *ReqRemoveSession) Reset() {
	*x = ReqRemoveSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRemoveSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRemoveSession) ProtoMessage() {}

func (x *ReqRemoveSession) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRemoveSession.ProtoReflect.Descriptor instead.
func (*ReqRemoveSession) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{16}
}

func (x *ReqRemoveSession) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqRemoveSession) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

// 发送消息-请求
type ReqSendMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息内容
	Msg *_type.Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Cookie string `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Cookie2 string `protobuf:"bytes,3,opt,name=cookie2,proto3" json:"cookie2,omitempty"`
	ErrorCode int32 `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	DevId string `protobuf:"bytes,5,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
}

func (x *ReqSendMsg) Reset() {
	*x = ReqSendMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendMsg) ProtoMessage() {}

func (x *ReqSendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendMsg.ProtoReflect.Descriptor instead.
func (*ReqSendMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{17}
}

func (x *ReqSendMsg) GetMsg() *_type.Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ReqSendMsg) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *ReqSendMsg) GetCookie2() string {
	if x != nil {
		return x.Cookie2
	}
	return ""
}

func (x *ReqSendMsg) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReqSendMsg) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

// 拉取会话详情-请求
type ReqSessionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	Uid uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ReqSessionDetail) Reset() {
	*x = ReqSessionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionDetail) ProtoMessage() {}

func (x *ReqSessionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionDetail.ProtoReflect.Descriptor instead.
func (*ReqSessionDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{18}
}

func (x *ReqSessionDetail) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqSessionDetail) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqSessionDetail) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 批量拉取会话详情-请求
type ReqSessionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话详情请求列表
	SessIds []*ReqSessionDetail `protobuf:"bytes,1,rep,name=sess_ids,json=sessIds,proto3" json:"sess_ids,omitempty"`
}

func (x *ReqSessionDetails) Reset() {
	*x = ReqSessionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionDetails) ProtoMessage() {}

func (x *ReqSessionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionDetails.ProtoReflect.Descriptor instead.
func (*ReqSessionDetails) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{19}
}

func (x *ReqSessionDetails) GetSessIds() []*ReqSessionDetail {
	if x != nil {
		return x.SessIds
	}
	return nil
}

// 同步版本拉取消息-请求
type ReqSessionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	SessionType int32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	EndSeqno uint64 `protobuf:"varint,3,opt,name=end_seqno,json=endSeqno,proto3" json:"end_seqno,omitempty"`
	BeginSeqno uint64 `protobuf:"varint,4,opt,name=begin_seqno,json=beginSeqno,proto3" json:"begin_seqno,omitempty"`
	Size int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Order int32 `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	DevId string `protobuf:"bytes,7,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
}

func (x *ReqSessionMsg) Reset() {
	*x = ReqSessionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSessionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSessionMsg) ProtoMessage() {}

func (x *ReqSessionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSessionMsg.ProtoReflect.Descriptor instead.
func (*ReqSessionMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{20}
}

func (x *ReqSessionMsg) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqSessionMsg) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqSessionMsg) GetEndSeqno() uint64 {
	if x != nil {
		return x.EndSeqno
	}
	return 0
}

func (x *ReqSessionMsg) GetBeginSeqno() uint64 {
	if x != nil {
		return x.BeginSeqno
	}
	return 0
}

func (x *ReqSessionMsg) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReqSessionMsg) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ReqSessionMsg) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

// 置顶聊天-请求
type ReqSetTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	// 0:置顶 1:取消置顶
	OpType uint32 `protobuf:"varint,3,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
}

func (x *ReqSetTop) Reset() {
	*x = ReqSetTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSetTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSetTop) ProtoMessage() {}

func (x *ReqSetTop) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSetTop.ProtoReflect.Descriptor instead.
func (*ReqSetTop) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{21}
}

func (x *ReqSetTop) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqSetTop) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqSetTop) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

// 拉取最近私信分享列表-请求
type ReqShareList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页大小 最大20
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReqShareList) Reset() {
	*x = ReqShareList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqShareList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqShareList) ProtoMessage() {}

func (x *ReqShareList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqShareList.ProtoReflect.Descriptor instead.
func (*ReqShareList) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{22}
}

func (x *ReqShareList) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReqShowClearUnreadUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnreadType int32 `protobuf:"varint,1,opt,name=unread_type,json=unreadType,proto3" json:"unread_type,omitempty"`
	ShowUnfollowList int32 `protobuf:"varint,2,opt,name=show_unfollow_list,json=showUnfollowList,proto3" json:"show_unfollow_list,omitempty"`
	ShowDustbin int32 `protobuf:"varint,4,opt,name=show_dustbin,json=showDustbin,proto3" json:"show_dustbin,omitempty"`
}

func (x *ReqShowClearUnreadUI) Reset() {
	*x = ReqShowClearUnreadUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqShowClearUnreadUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqShowClearUnreadUI) ProtoMessage() {}

func (x *ReqShowClearUnreadUI) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqShowClearUnreadUI.ProtoReflect.Descriptor instead.
func (*ReqShowClearUnreadUI) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{23}
}

func (x *ReqShowClearUnreadUI) GetUnreadType() int32 {
	if x != nil {
		return x.UnreadType
	}
	return 0
}

func (x *ReqShowClearUnreadUI) GetShowUnfollowList() int32 {
	if x != nil {
		return x.ShowUnfollowList
	}
	return 0
}

func (x *ReqShowClearUnreadUI) GetShowDustbin() int32 {
	if x != nil {
		return x.ShowDustbin
	}
	return 0
}

// 未读私信数-请求
type ReqSingleUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnreadType int32 `protobuf:"varint,1,opt,name=unread_type,json=unreadType,proto3" json:"unread_type,omitempty"`
	ShowUnfollowList int32 `protobuf:"varint,2,opt,name=show_unfollow_list,json=showUnfollowList,proto3" json:"show_unfollow_list,omitempty"`
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	ShowDustbin int32 `protobuf:"varint,4,opt,name=show_dustbin,json=showDustbin,proto3" json:"show_dustbin,omitempty"`
}

func (x *ReqSingleUnread) Reset() {
	*x = ReqSingleUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSingleUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSingleUnread) ProtoMessage() {}

func (x *ReqSingleUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSingleUnread.ProtoReflect.Descriptor instead.
func (*ReqSingleUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{24}
}

func (x *ReqSingleUnread) GetUnreadType() int32 {
	if x != nil {
		return x.UnreadType
	}
	return 0
}

func (x *ReqSingleUnread) GetShowUnfollowList() int32 {
	if x != nil {
		return x.ShowUnfollowList
	}
	return 0
}

func (x *ReqSingleUnread) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqSingleUnread) GetShowDustbin() int32 {
	if x != nil {
		return x.ShowDustbin
	}
	return 0
}

// -请求
type ReqSpecificSingleUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 具体会话详情
	TalkerSessions []*SimpleSession `protobuf:"bytes,1,rep,name=talker_sessions,json=talkerSessions,proto3" json:"talker_sessions,omitempty"`
}

func (x *ReqSpecificSingleUnread) Reset() {
	*x = ReqSpecificSingleUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSpecificSingleUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSpecificSingleUnread) ProtoMessage() {}

func (x *ReqSpecificSingleUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSpecificSingleUnread.ProtoReflect.Descriptor instead.
func (*ReqSpecificSingleUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{25}
}

func (x *ReqSpecificSingleUnread) GetTalkerSessions() []*SimpleSession {
	if x != nil {
		return x.TalkerSessions
	}
	return nil
}

// 确认同步进度-请求
type ReqSyncAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSeqno uint64 `protobuf:"varint,1,opt,name=client_seqno,json=clientSeqno,proto3" json:"client_seqno,omitempty"`
}

func (x *ReqSyncAck) Reset() {
	*x = ReqSyncAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSyncAck) ProtoMessage() {}

func (x *ReqSyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSyncAck.ProtoReflect.Descriptor instead.
func (*ReqSyncAck) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{26}
}

func (x *ReqSyncAck) GetClientSeqno() uint64 {
	if x != nil {
		return x.ClientSeqno
	}
	return 0
}

type ReqTotalUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnreadType int32 `protobuf:"varint,1,opt,name=unread_type,json=unreadType,proto3" json:"unread_type,omitempty"`
	ShowUnfollowList int32 `protobuf:"varint,2,opt,name=show_unfollow_list,json=showUnfollowList,proto3" json:"show_unfollow_list,omitempty"`
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	ShowDustbin int32 `protobuf:"varint,4,opt,name=show_dustbin,json=showDustbin,proto3" json:"show_dustbin,omitempty"`
	SingleunreadOn int32 `protobuf:"varint,5,opt,name=singleunread_on,json=singleunreadOn,proto3" json:"singleunread_on,omitempty"`
	MsgfeedOn int32 `protobuf:"varint,6,opt,name=msgfeed_on,json=msgfeedOn,proto3" json:"msgfeed_on,omitempty"`
	SysupOn int32 `protobuf:"varint,7,opt,name=sysup_on,json=sysupOn,proto3" json:"sysup_on,omitempty"`
}

func (x *ReqTotalUnread) Reset() {
	*x = ReqTotalUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTotalUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTotalUnread) ProtoMessage() {}

func (x *ReqTotalUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTotalUnread.ProtoReflect.Descriptor instead.
func (*ReqTotalUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{27}
}

func (x *ReqTotalUnread) GetUnreadType() int32 {
	if x != nil {
		return x.UnreadType
	}
	return 0
}

func (x *ReqTotalUnread) GetShowUnfollowList() int32 {
	if x != nil {
		return x.ShowUnfollowList
	}
	return 0
}

func (x *ReqTotalUnread) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqTotalUnread) GetShowDustbin() int32 {
	if x != nil {
		return x.ShowDustbin
	}
	return 0
}

func (x *ReqTotalUnread) GetSingleunreadOn() int32 {
	if x != nil {
		return x.SingleunreadOn
	}
	return 0
}

func (x *ReqTotalUnread) GetMsgfeedOn() int32 {
	if x != nil {
		return x.MsgfeedOn
	}
	return 0
}

func (x *ReqTotalUnread) GetSysupOn() int32 {
	if x != nil {
		return x.SysupOn
	}
	return 0
}

// 更新已读进度-请求
type ReqUpdateAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 聊天对象uid，可以为用户id或者为群id
	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	// 会话类型
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	// 已读的最大seqno
	AckSeqno uint64 `protobuf:"varint,3,opt,name=ack_seqno,json=ackSeqno,proto3" json:"ack_seqno,omitempty"`
}

func (x *ReqUpdateAck) Reset() {
	*x = ReqUpdateAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateAck) ProtoMessage() {}

func (x *ReqUpdateAck) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateAck.ProtoReflect.Descriptor instead.
func (*ReqUpdateAck) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{28}
}

func (x *ReqUpdateAck) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqUpdateAck) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *ReqUpdateAck) GetAckSeqno() uint64 {
	if x != nil {
		return x.AckSeqno
	}
	return 0
}

type ReqUpdateIntercept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TalkerId int64 `protobuf:"varint,2,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReqUpdateIntercept) Reset() {
	*x = ReqUpdateIntercept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateIntercept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateIntercept) ProtoMessage() {}

func (x *ReqUpdateIntercept) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateIntercept.ProtoReflect.Descriptor instead.
func (*ReqUpdateIntercept) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{29}
}

func (x *ReqUpdateIntercept) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReqUpdateIntercept) GetTalkerId() int64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ReqUpdateIntercept) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReqUpdateTotalUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqUpdateTotalUnread) Reset() {
	*x = ReqUpdateTotalUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpdateTotalUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateTotalUnread) ProtoMessage() {}

func (x *ReqUpdateTotalUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateTotalUnread.ProtoReflect.Descriptor instead.
func (*ReqUpdateTotalUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{30}
}

type RspCloseClearUnreadUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspCloseClearUnreadUI) Reset() {
	*x = RspCloseClearUnreadUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspCloseClearUnreadUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspCloseClearUnreadUI) ProtoMessage() {}

func (x *RspCloseClearUnreadUI) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspCloseClearUnreadUI.ProtoReflect.Descriptor instead.
func (*RspCloseClearUnreadUI) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{31}
}

type RspGetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []*_type.Msg `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RspGetMsg) Reset() {
	*x = RspGetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetMsg) ProtoMessage() {}

func (x *RspGetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetMsg.ProtoReflect.Descriptor instead.
func (*RspGetMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{32}
}

func (x *RspGetMsg) GetMsg() []*_type.Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type RspLiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiveStatus int64 `protobuf:"varint,1,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *RspLiveInfo) Reset() {
	*x = RspLiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspLiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspLiveInfo) ProtoMessage() {}

func (x *RspLiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspLiveInfo.ProtoReflect.Descriptor instead.
func (*RspLiveInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{33}
}

func (x *RspLiveInfo) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *RspLiveInfo) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

// 我创建的应援团未读数-响应
type RspMyGroupUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 未读消息数
	UnreadCount uint32 `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
}

func (x *RspMyGroupUnread) Reset() {
	*x = RspMyGroupUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspMyGroupUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspMyGroupUnread) ProtoMessage() {}

func (x *RspMyGroupUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspMyGroupUnread.ProtoReflect.Descriptor instead.
func (*RspMyGroupUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{34}
}

func (x *RspMyGroupUnread) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// 同步关系-响应
type RspRelationSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Full int32 `protobuf:"varint,1,opt,name=full,proto3" json:"full,omitempty"`
	// 增量日志
	RelationLogs []*_type.RelationLog `protobuf:"bytes,2,rep,name=relation_logs,json=relationLogs,proto3" json:"relation_logs,omitempty"`
	// 全量列表
	FriendList []*_type.FriendRelation `protobuf:"bytes,3,rep,name=friend_list,json=friendList,proto3" json:"friend_list,omitempty"`
	// 服务器端最大的relation seqno
	ServerRelationOplogSeqno uint64 `protobuf:"varint,4,opt,name=server_relation_oplog_seqno,json=serverRelationOplogSeqno,proto3" json:"server_relation_oplog_seqno,omitempty"`
	// 全量列表
	GroupList []*_type.GroupRelation `protobuf:"bytes,5,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
}

func (x *RspRelationSync) Reset() {
	*x = RspRelationSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspRelationSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspRelationSync) ProtoMessage() {}

func (x *RspRelationSync) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspRelationSync.ProtoReflect.Descriptor instead.
func (*RspRelationSync) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{35}
}

func (x *RspRelationSync) GetFull() int32 {
	if x != nil {
		return x.Full
	}
	return 0
}

func (x *RspRelationSync) GetRelationLogs() []*_type.RelationLog {
	if x != nil {
		return x.RelationLogs
	}
	return nil
}

func (x *RspRelationSync) GetFriendList() []*_type.FriendRelation {
	if x != nil {
		return x.FriendList
	}
	return nil
}

func (x *RspRelationSync) GetServerRelationOplogSeqno() uint64 {
	if x != nil {
		return x.ServerRelationOplogSeqno
	}
	return 0
}

func (x *RspRelationSync) GetGroupList() []*_type.GroupRelation {
	if x != nil {
		return x.GroupList
	}
	return nil
}

// 发送消息-响应
type RspSendMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgKey uint64 `protobuf:"varint,1,opt,name=msg_key,json=msgKey,proto3" json:"msg_key,omitempty"`
	// 表情资源信息
	EInfos []*EmotionInfo `protobuf:"bytes,2,rep,name=e_infos,json=eInfos,proto3" json:"e_infos,omitempty"`
	MsgContent string `protobuf:"bytes,3,opt,name=msg_content,json=msgContent,proto3" json:"msg_content,omitempty"`
	KeyHitInfos *_type.KeyHitInfos `protobuf:"bytes,4,opt,name=key_hit_infos,json=keyHitInfos,proto3" json:"key_hit_infos,omitempty"`
}

func (x *RspSendMsg) Reset() {
	*x = RspSendMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSendMsg) ProtoMessage() {}

func (x *RspSendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSendMsg.ProtoReflect.Descriptor instead.
func (*RspSendMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{36}
}

func (x *RspSendMsg) GetMsgKey() uint64 {
	if x != nil {
		return x.MsgKey
	}
	return 0
}

func (x *RspSendMsg) GetEInfos() []*EmotionInfo {
	if x != nil {
		return x.EInfos
	}
	return nil
}

func (x *RspSendMsg) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

func (x *RspSendMsg) GetKeyHitInfos() *_type.KeyHitInfos {
	if x != nil {
		return x.KeyHitInfos
	}
	return nil
}

// 批量拉取会话详情-响应
type RspSessionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会话详情列表
	SessInfos []*_type.SessionInfo `protobuf:"bytes,1,rep,name=sess_infos,json=sessInfos,proto3" json:"sess_infos,omitempty"`
}

func (x *RspSessionDetails) Reset() {
	*x = RspSessionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessionDetails) ProtoMessage() {}

func (x *RspSessionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessionDetails.ProtoReflect.Descriptor instead.
func (*RspSessionDetails) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{37}
}

func (x *RspSessionDetails) GetSessInfos() []*_type.SessionInfo {
	if x != nil {
		return x.SessInfos
	}
	return nil
}

// 同步版本拉取消息-响应
type RspSessionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*_type.Msg `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HasMore int32 `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	MinSeqno uint64 `protobuf:"varint,3,opt,name=min_seqno,json=minSeqno,proto3" json:"min_seqno,omitempty"`
	MaxSeqno uint64 `protobuf:"varint,4,opt,name=max_seqno,json=maxSeqno,proto3" json:"max_seqno,omitempty"`
	// 表情资源信息
	EInfos []*EmotionInfo `protobuf:"bytes,5,rep,name=e_infos,json=eInfos,proto3" json:"e_infos,omitempty"`
}

func (x *RspSessionMsg) Reset() {
	*x = RspSessionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessionMsg) ProtoMessage() {}

func (x *RspSessionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessionMsg.ProtoReflect.Descriptor instead.
func (*RspSessionMsg) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{38}
}

func (x *RspSessionMsg) GetMessages() []*_type.Msg {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RspSessionMsg) GetHasMore() int32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *RspSessionMsg) GetMinSeqno() uint64 {
	if x != nil {
		return x.MinSeqno
	}
	return 0
}

func (x *RspSessionMsg) GetMaxSeqno() uint64 {
	if x != nil {
		return x.MaxSeqno
	}
	return 0
}

func (x *RspSessionMsg) GetEInfos() []*EmotionInfo {
	if x != nil {
		return x.EInfos
	}
	return nil
}

// 拉取消息-响应
type RspSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionList []*_type.SessionInfo `protobuf:"bytes,1,rep,name=session_list,json=sessionList,proto3" json:"session_list,omitempty"`
	HasMore uint32 `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 标记反垃圾会话是否在清理中
	AntiDisturbCleaning bool `protobuf:"varint,3,opt,name=anti_disturb_cleaning,json=antiDisturbCleaning,proto3" json:"anti_disturb_cleaning,omitempty"`
	// 当session_list为空时，会返回该字段用于判断通讯录是否为空，1表示空，0表示非空
	IsAddressListEmpty int32 `protobuf:"varint,4,opt,name=is_address_list_empty,json=isAddressListEmpty,proto3" json:"is_address_list_empty,omitempty"`
	SystemMsg map[int32]int64 `protobuf:"bytes,5,rep,name=system_msg,json=systemMsg,proto3" json:"system_msg,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ShowLevel bool `protobuf:"varint,6,opt,name=show_level,json=showLevel,proto3" json:"show_level,omitempty"`
}

func (x *RspSessions) Reset() {
	*x = RspSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSessions) ProtoMessage() {}

func (x *RspSessions) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSessions.ProtoReflect.Descriptor instead.
func (*RspSessions) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{39}
}

func (x *RspSessions) GetSessionList() []*_type.SessionInfo {
	if x != nil {
		return x.SessionList
	}
	return nil
}

func (x *RspSessions) GetHasMore() uint32 {
	if x != nil {
		return x.HasMore
	}
	return 0
}

func (x *RspSessions) GetAntiDisturbCleaning() bool {
	if x != nil {
		return x.AntiDisturbCleaning
	}
	return false
}

func (x *RspSessions) GetIsAddressListEmpty() int32 {
	if x != nil {
		return x.IsAddressListEmpty
	}
	return 0
}

func (x *RspSessions) GetSystemMsg() map[int32]int64 {
	if x != nil {
		return x.SystemMsg
	}
	return nil
}

func (x *RspSessions) GetShowLevel() bool {
	if x != nil {
		return x.ShowLevel
	}
	return false
}

// 拉取最近私信分享列表-响应
type RspShareList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 最近会话列表
	SessionList []*ShareSessionInfo `protobuf:"bytes,1,rep,name=session_list,json=sessionList,proto3" json:"session_list,omitempty"`
	IsAddressListEmpty int32 `protobuf:"varint,2,opt,name=IsAddressListEmpty,proto3" json:"IsAddressListEmpty,omitempty"`
}

func (x *RspShareList) Reset() {
	*x = RspShareList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspShareList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspShareList) ProtoMessage() {}

func (x *RspShareList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspShareList.ProtoReflect.Descriptor instead.
func (*RspShareList) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{40}
}

func (x *RspShareList) GetSessionList() []*ShareSessionInfo {
	if x != nil {
		return x.SessionList
	}
	return nil
}

func (x *RspShareList) GetIsAddressListEmpty() int32 {
	if x != nil {
		return x.IsAddressListEmpty
	}
	return 0
}

type RspShowClearUnreadUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *RspShowClearUnreadUI) Reset() {
	*x = RspShowClearUnreadUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspShowClearUnreadUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspShowClearUnreadUI) ProtoMessage() {}

func (x *RspShowClearUnreadUI) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspShowClearUnreadUI.ProtoReflect.Descriptor instead.
func (*RspShowClearUnreadUI) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{41}
}

func (x *RspShowClearUnreadUI) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *RspShowClearUnreadUI) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 未读私信数-响应
type RspSingleUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 未关注用户私信数
	UnfollowUnread uint64 `protobuf:"varint,1,opt,name=unfollow_unread,json=unfollowUnread,proto3" json:"unfollow_unread,omitempty"`
	// 已关注用户私信数
	FollowUnread uint64 `protobuf:"varint,2,opt,name=follow_unread,json=followUnread,proto3" json:"follow_unread,omitempty"`
	// 未关注人列表是否有新业务通知
	UnfollowPushMsg uint32 `protobuf:"varint,3,opt,name=unfollow_push_msg,json=unfollowPushMsg,proto3" json:"unfollow_push_msg,omitempty"`
	DustbinPushMsg int32 `protobuf:"varint,4,opt,name=dustbin_push_msg,json=dustbinPushMsg,proto3" json:"dustbin_push_msg,omitempty"`
	DustbinUnread int64 `protobuf:"varint,5,opt,name=dustbin_unread,json=dustbinUnread,proto3" json:"dustbin_unread,omitempty"`
	BizMsgUnfollowUnread int64 `protobuf:"varint,6,opt,name=biz_msg_unfollow_unread,json=bizMsgUnfollowUnread,proto3" json:"biz_msg_unfollow_unread,omitempty"`
	BizMsgFollowUnread int64 `protobuf:"varint,7,opt,name=biz_msg_follow_unread,json=bizMsgFollowUnread,proto3" json:"biz_msg_follow_unread,omitempty"`
}

func (x *RspSingleUnread) Reset() {
	*x = RspSingleUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSingleUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSingleUnread) ProtoMessage() {}

func (x *RspSingleUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSingleUnread.ProtoReflect.Descriptor instead.
func (*RspSingleUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{42}
}

func (x *RspSingleUnread) GetUnfollowUnread() uint64 {
	if x != nil {
		return x.UnfollowUnread
	}
	return 0
}

func (x *RspSingleUnread) GetFollowUnread() uint64 {
	if x != nil {
		return x.FollowUnread
	}
	return 0
}

func (x *RspSingleUnread) GetUnfollowPushMsg() uint32 {
	if x != nil {
		return x.UnfollowPushMsg
	}
	return 0
}

func (x *RspSingleUnread) GetDustbinPushMsg() int32 {
	if x != nil {
		return x.DustbinPushMsg
	}
	return 0
}

func (x *RspSingleUnread) GetDustbinUnread() int64 {
	if x != nil {
		return x.DustbinUnread
	}
	return 0
}

func (x *RspSingleUnread) GetBizMsgUnfollowUnread() int64 {
	if x != nil {
		return x.BizMsgUnfollowUnread
	}
	return 0
}

func (x *RspSingleUnread) GetBizMsgFollowUnread() int64 {
	if x != nil {
		return x.BizMsgFollowUnread
	}
	return 0
}

// -响应
type RspSpecificSingleUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key -> 用户uid, value ->未读数
	TalkerUnreadCnt map[uint64]uint64 `protobuf:"bytes,1,rep,name=talkerUnreadCnt,proto3" json:"talkerUnreadCnt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 总未读数
	AllUnreadCnt uint64 `protobuf:"varint,2,opt,name=allUnreadCnt,proto3" json:"allUnreadCnt,omitempty"`
}

func (x *RspSpecificSingleUnread) Reset() {
	*x = RspSpecificSingleUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSpecificSingleUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSpecificSingleUnread) ProtoMessage() {}

func (x *RspSpecificSingleUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSpecificSingleUnread.ProtoReflect.Descriptor instead.
func (*RspSpecificSingleUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{43}
}

func (x *RspSpecificSingleUnread) GetTalkerUnreadCnt() map[uint64]uint64 {
	if x != nil {
		return x.TalkerUnreadCnt
	}
	return nil
}

func (x *RspSpecificSingleUnread) GetAllUnreadCnt() uint64 {
	if x != nil {
		return x.AllUnreadCnt
	}
	return 0
}

// 确认同步进度-响应
type RspSyncAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspSyncAck) Reset() {
	*x = RspSyncAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSyncAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSyncAck) ProtoMessage() {}

func (x *RspSyncAck) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSyncAck.ProtoReflect.Descriptor instead.
func (*RspSyncAck) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{44}
}

type RspTotalUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionSingleUnread *SessionSingleUnreadRsp `protobuf:"bytes,1,opt,name=session_single_unread,json=sessionSingleUnread,proto3" json:"session_single_unread,omitempty"`
	MsgFeedUnread *MsgFeedUnreadRsp `protobuf:"bytes,2,opt,name=msg_feed_unread,json=msgFeedUnread,proto3" json:"msg_feed_unread,omitempty"`
	SysMsgInterfaceLastMsg *SysMsgInterfaceLastMsgRsp `protobuf:"bytes,3,opt,name=sys_msg_interface_last_msg,json=sysMsgInterfaceLastMsg,proto3" json:"sys_msg_interface_last_msg,omitempty"`
	TotalUnread int32 `protobuf:"varint,4,opt,name=total_unread,json=totalUnread,proto3" json:"total_unread,omitempty"`
}

func (x *RspTotalUnread) Reset() {
	*x = RspTotalUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspTotalUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspTotalUnread) ProtoMessage() {}

func (x *RspTotalUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspTotalUnread.ProtoReflect.Descriptor instead.
func (*RspTotalUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{45}
}

func (x *RspTotalUnread) GetSessionSingleUnread() *SessionSingleUnreadRsp {
	if x != nil {
		return x.SessionSingleUnread
	}
	return nil
}

func (x *RspTotalUnread) GetMsgFeedUnread() *MsgFeedUnreadRsp {
	if x != nil {
		return x.MsgFeedUnread
	}
	return nil
}

func (x *RspTotalUnread) GetSysMsgInterfaceLastMsg() *SysMsgInterfaceLastMsgRsp {
	if x != nil {
		return x.SysMsgInterfaceLastMsg
	}
	return nil
}

func (x *RspTotalUnread) GetTotalUnread() int32 {
	if x != nil {
		return x.TotalUnread
	}
	return 0
}

type RspUpdateTotalUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspUpdateTotalUnread) Reset() {
	*x = RspUpdateTotalUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUpdateTotalUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUpdateTotalUnread) ProtoMessage() {}

func (x *RspUpdateTotalUnread) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUpdateTotalUnread.ProtoReflect.Descriptor instead.
func (*RspUpdateTotalUnread) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{46}
}

type SessionSingleUnreadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnfollowUnread int64 `protobuf:"varint,1,opt,name=unfollow_unread,json=unfollowUnread,proto3" json:"unfollow_unread,omitempty"`
	FollowUnread int64 `protobuf:"varint,2,opt,name=follow_unread,json=followUnread,proto3" json:"follow_unread,omitempty"`
	UnfollowPushMsg int32 `protobuf:"varint,3,opt,name=unfollow_push_msg,json=unfollowPushMsg,proto3" json:"unfollow_push_msg,omitempty"`
	DustbinPushMsg int32 `protobuf:"varint,4,opt,name=dustbin_push_msg,json=dustbinPushMsg,proto3" json:"dustbin_push_msg,omitempty"`
	DustbinUnread int64 `protobuf:"varint,5,opt,name=dustbin_unread,json=dustbinUnread,proto3" json:"dustbin_unread,omitempty"`
}

func (x *SessionSingleUnreadRsp) Reset() {
	*x = SessionSingleUnreadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionSingleUnreadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSingleUnreadRsp) ProtoMessage() {}

func (x *SessionSingleUnreadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSingleUnreadRsp.ProtoReflect.Descriptor instead.
func (*SessionSingleUnreadRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{47}
}

func (x *SessionSingleUnreadRsp) GetUnfollowUnread() int64 {
	if x != nil {
		return x.UnfollowUnread
	}
	return 0
}

func (x *SessionSingleUnreadRsp) GetFollowUnread() int64 {
	if x != nil {
		return x.FollowUnread
	}
	return 0
}

func (x *SessionSingleUnreadRsp) GetUnfollowPushMsg() int32 {
	if x != nil {
		return x.UnfollowPushMsg
	}
	return 0
}

func (x *SessionSingleUnreadRsp) GetDustbinPushMsg() int32 {
	if x != nil {
		return x.DustbinPushMsg
	}
	return 0
}

func (x *SessionSingleUnreadRsp) GetDustbinUnread() int64 {
	if x != nil {
		return x.DustbinUnread
	}
	return 0
}

// 会话信息，用于私信分享
type ShareSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	TalkerUname string `protobuf:"bytes,2,opt,name=talker_uname,json=talkerUname,proto3" json:"talker_uname,omitempty"`
	TalkerIcon string `protobuf:"bytes,3,opt,name=talker_icon,json=talkerIcon,proto3" json:"talker_icon,omitempty"`
	// 认证信息
	// -1: 无认证 0:个人认证 1:机构认证
	OfficialType int32 `protobuf:"varint,4,opt,name=official_type,json=officialType,proto3" json:"official_type,omitempty"`
}

func (x *ShareSessionInfo) Reset() {
	*x = ShareSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSessionInfo) ProtoMessage() {}

func (x *ShareSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSessionInfo.ProtoReflect.Descriptor instead.
func (*ShareSessionInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{48}
}

func (x *ShareSessionInfo) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *ShareSessionInfo) GetTalkerUname() string {
	if x != nil {
		return x.TalkerUname
	}
	return ""
}

func (x *ShareSessionInfo) GetTalkerIcon() string {
	if x != nil {
		return x.TalkerIcon
	}
	return ""
}

func (x *ShareSessionInfo) GetOfficialType() int32 {
	if x != nil {
		return x.OfficialType
	}
	return 0
}

type SimpleSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 聊天对象uid，可以为用户id或者为群id
	TalkerId uint64 `protobuf:"varint,1,opt,name=talker_id,json=talkerId,proto3" json:"talker_id,omitempty"`
	// 会话类型
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
}

func (x *SimpleSession) Reset() {
	*x = SimpleSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSession) ProtoMessage() {}

func (x *SimpleSession) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSession.ProtoReflect.Descriptor instead.
func (*SimpleSession) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{49}
}

func (x *SimpleSession) GetTalkerId() uint64 {
	if x != nil {
		return x.TalkerId
	}
	return 0
}

func (x *SimpleSession) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type SysMsgInterfaceLastMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unread int32 `protobuf:"varint,1,opt,name=unread,proto3" json:"unread,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Time string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Id int64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysMsgInterfaceLastMsgRsp) Reset() {
	*x = SysMsgInterfaceLastMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMsgInterfaceLastMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMsgInterfaceLastMsgRsp) ProtoMessage() {}

func (x *SysMsgInterfaceLastMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_im_interfaces_v1_im_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMsgInterfaceLastMsgRsp.ProtoReflect.Descriptor instead.
func (*SysMsgInterfaceLastMsgRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP(), []int{50}
}

func (x *SysMsgInterfaceLastMsgRsp) GetUnread() int32 {
	if x != nil {
		return x.Unread
	}
	return 0
}

func (x *SysMsgInterfaceLastMsgRsp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMsgInterfaceLastMsgRsp) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *SysMsgInterfaceLastMsgRsp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_bilibili_im_interfaces_v1_im_proto protoreflect.FileDescriptor

var file_bilibili_im_interfaces_v1_im_proto_rawDesc = []byte{
	0x0a, 0x22, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x69, 0x6d, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x19, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x69, 0x6d, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x08, 0x44, 0x75,
	0x6d, 0x6d, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x6c, 0x22, 0x10, 0x0a, 0x08, 0x44, 0x75, 0x6d, 0x6d,
	0x79, 0x52, 0x73, 0x70, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x60, 0x0a, 0x0b, 0x45, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x55, 0x72, 0x6c, 0x22, 0x3a, 0x0a, 0x09,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x4d, 0x73, 0x67,
	0x46, 0x65, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12, 0x4f, 0x0a,
	0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x65,
	0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x39,
	0x0a, 0x0b, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x71,
	0x41, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x63, 0x6b, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x61, 0x63, 0x6b, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x22, 0x56, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x41,
	0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x52, 0x6d, 0x53, 0x65, 0x73, 0x73,
	0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xa2, 0x02, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x54,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x65,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x6b, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x74,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49,
	0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x73, 0x69, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x4e,
	0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x65,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x50, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65,
	0x71, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x6c, 0x6f, 0x67, 0x53, 0x65,
	0x71, 0x6e, 0x6f, 0x22, 0x52, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x5b, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x09, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x6c,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x53, 0x68, 0x6f,
	0x77, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x68, 0x6f,
	0x77, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e,
	0x22, 0x95, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x6e,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x75,
	0x73, 0x74, 0x62, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x6f,
	0x77, 0x44, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x22, 0x6c, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x71, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x6e, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x73, 0x67,
	0x66, 0x65, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x75, 0x70, 0x5f,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x73, 0x75, 0x70, 0x4f,
	0x6e, 0x22, 0x6b, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x22, 0x5b,
	0x0a, 0x12, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x52,
	0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x73, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x22, 0x34, 0x0a, 0x09,
	0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x49, 0x0a, 0x0b, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x35, 0x0a,
	0x10, 0x52, 0x73, 0x70, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x0f, 0x52, 0x73, 0x70, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x12, 0x42, 0x0a, 0x0d,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x41, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x71,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x71,
	0x6e, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x52, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0d,
	0x6b, 0x65, 0x79, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x51, 0x0a, 0x11, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x3f, 0x0a, 0x07,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x84, 0x03,
	0x0a, 0x0b, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6e,
	0x74, 0x69, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6e, 0x74, 0x69, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x31,
	0x0a, 0x15, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x54, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x73, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x52, 0x73, 0x70, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x44, 0x0a, 0x14, 0x52, 0x73, 0x70, 0x53, 0x68, 0x6f, 0x77,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xc6, 0x02, 0x0a, 0x0f,
	0x52, 0x73, 0x70, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x75, 0x73,
	0x74, 0x62, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x5f, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x75, 0x73,
	0x74, 0x62, 0x69, 0x6e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x62, 0x69,
	0x7a, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x62, 0x69, 0x7a,
	0x4d, 0x73, 0x67, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x62, 0x69, 0x7a, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x17, 0x52, 0x73, 0x70, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x71, 0x0a, 0x0f, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x61,
	0x6c, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0f, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6e, 0x74, 0x1a, 0x42, 0x0a, 0x14, 0x54, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0c, 0x0a, 0x0a, 0x52,
	0x73, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x6b, 0x22, 0xe1, 0x02, 0x0a, 0x0e, 0x52, 0x73,
	0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x65, 0x0a, 0x15,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x52, 0x13,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x53, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x65, 0x64,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x46, 0x65,
	0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x70, 0x0a, 0x1a, 0x73, 0x79, 0x73, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x52,
	0x73, 0x70, 0x52, 0x16, 0x73, 0x79, 0x73, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x52, 0x73, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x6e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x75, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x6e, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x75,
	0x73, 0x74, 0x62, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x50, 0x75, 0x73,
	0x68, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x73, 0x74, 0x62, 0x69, 0x6e, 0x5f,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x75,
	0x73, 0x74, 0x62, 0x69, 0x6e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x10,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x55, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x38, 0x0a, 0x09, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x46,
	0x4f, 0x4c, 0x44, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4f, 0x4c, 0x44, 0x5f, 0x4e, 0x4f, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x4f, 0x4c, 0x44, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x4f, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02,
	0x2a, 0x72, 0x0a, 0x10, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x55, 0x53, 0x54, 0x42,
	0x49, 0x4e, 0x10, 0x03, 0x2a, 0x8a, 0x01, 0x0a, 0x0c, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x5f, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x5f, 0x46, 0x4f,
	0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x59, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x55, 0x53, 0x54, 0x42, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x32, 0xe8, 0x14, 0x0a, 0x0b, 0x49, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x66, 0x0a, 0x0c, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x57, 0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x6b, 0x12, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x63, 0x6b, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x73, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x6b, 0x12, 0x6a, 0x0a, 0x14, 0x53,
	0x79, 0x6e, 0x63, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x73, 0x67, 0x73, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73,
	0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x0b, 0x4e, 0x65, 0x77,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x60, 0x0a, 0x0b, 0x41,
	0x63, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x63, 0x6b, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x59, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6b, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70, 0x12, 0x61, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70,
	0x12, 0x66, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x61, 0x0a, 0x0d, 0x4d, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x4d, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x5b, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x66, 0x6c, 0x77, 0x52, 0x65, 0x61, 0x64, 0x12, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x73, 0x73, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67,
	0x12, 0x5d, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x12,
	0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x41,
	0x63, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70, 0x12,
	0x5b, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x1d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6d, 0x0a, 0x0f,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x2c, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61,
	0x74, 0x52, 0x6d, 0x53, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x52, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x09,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x73, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x14, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x70, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5d, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x73, 0x70, 0x4c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x66, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x75, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55, 0x49, 0x12, 0x78, 0x0a, 0x12, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x55,
	0x49, 0x12, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x55, 0x49, 0x1a, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69,
	0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x73, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x55, 0x49, 0x12, 0x75, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x2f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x69, 0x6d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x46, 0x5a, 0x44,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d,
	0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2f, 0x69, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_im_interfaces_v1_im_proto_rawDescOnce sync.Once
	file_bilibili_im_interfaces_v1_im_proto_rawDescData = file_bilibili_im_interfaces_v1_im_proto_rawDesc
)

func file_bilibili_im_interfaces_v1_im_proto_rawDescGZIP() []byte {
	file_bilibili_im_interfaces_v1_im_proto_rawDescOnce.Do(func() {
		file_bilibili_im_interfaces_v1_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_im_interfaces_v1_im_proto_rawDescData)
	})
	return file_bilibili_im_interfaces_v1_im_proto_rawDescData
}

var file_bilibili_im_interfaces_v1_im_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bilibili_im_interfaces_v1_im_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_bilibili_im_interfaces_v1_im_proto_goTypes = []interface{}{
	(ENUM_FOLD)(0),                    // 0: bilibili.im.interfaces.v1.ENUM_FOLD
	(ENUM_UNREAD_TYPE)(0),             // 1: bilibili.im.interfaces.v1.ENUM_UNREAD_TYPE
	(SESSION_TYPE)(0),                 // 2: bilibili.im.interfaces.v1.SESSION_TYPE
	(*DummyReq)(nil),                  // 3: bilibili.im.interfaces.v1.DummyReq
	(*DummyRsp)(nil),                  // 4: bilibili.im.interfaces.v1.DummyRsp
	(*EmotionInfo)(nil),               // 5: bilibili.im.interfaces.v1.EmotionInfo
	(*MsgDetail)(nil),                 // 6: bilibili.im.interfaces.v1.MsgDetail
	(*MsgFeedUnreadRsp)(nil),          // 7: bilibili.im.interfaces.v1.MsgFeedUnreadRsp
	(*ReqAckAssisMsg)(nil),            // 8: bilibili.im.interfaces.v1.ReqAckAssisMsg
	(*ReqAckSessions)(nil),            // 9: bilibili.im.interfaces.v1.ReqAckSessions
	(*ReqBatRmSess)(nil),              // 10: bilibili.im.interfaces.v1.ReqBatRmSess
	(*ReqCloseClearUnreadUI)(nil),     // 11: bilibili.im.interfaces.v1.ReqCloseClearUnreadUI
	(*ReqGetMsg)(nil),                 // 12: bilibili.im.interfaces.v1.ReqGetMsg
	(*ReqGetSessions)(nil),            // 13: bilibili.im.interfaces.v1.ReqGetSessions
	(*ReqGetSpecificSessions)(nil),    // 14: bilibili.im.interfaces.v1.ReqGetSpecificSessions
	(*ReqGroupAssisMsg)(nil),          // 15: bilibili.im.interfaces.v1.ReqGroupAssisMsg
	(*ReqLiveInfo)(nil),               // 16: bilibili.im.interfaces.v1.ReqLiveInfo
	(*ReqNewSessions)(nil),            // 17: bilibili.im.interfaces.v1.ReqNewSessions
	(*ReqRelationSync)(nil),           // 18: bilibili.im.interfaces.v1.ReqRelationSync
	(*ReqRemoveSession)(nil),          // 19: bilibili.im.interfaces.v1.ReqRemoveSession
	(*ReqSendMsg)(nil),                // 20: bilibili.im.interfaces.v1.ReqSendMsg
	(*ReqSessionDetail)(nil),          // 21: bilibili.im.interfaces.v1.ReqSessionDetail
	(*ReqSessionDetails)(nil),         // 22: bilibili.im.interfaces.v1.ReqSessionDetails
	(*ReqSessionMsg)(nil),             // 23: bilibili.im.interfaces.v1.ReqSessionMsg
	(*ReqSetTop)(nil),                 // 24: bilibili.im.interfaces.v1.ReqSetTop
	(*ReqShareList)(nil),              // 25: bilibili.im.interfaces.v1.ReqShareList
	(*ReqShowClearUnreadUI)(nil),      // 26: bilibili.im.interfaces.v1.ReqShowClearUnreadUI
	(*ReqSingleUnread)(nil),           // 27: bilibili.im.interfaces.v1.ReqSingleUnread
	(*ReqSpecificSingleUnread)(nil),   // 28: bilibili.im.interfaces.v1.ReqSpecificSingleUnread
	(*ReqSyncAck)(nil),                // 29: bilibili.im.interfaces.v1.ReqSyncAck
	(*ReqTotalUnread)(nil),            // 30: bilibili.im.interfaces.v1.ReqTotalUnread
	(*ReqUpdateAck)(nil),              // 31: bilibili.im.interfaces.v1.ReqUpdateAck
	(*ReqUpdateIntercept)(nil),        // 32: bilibili.im.interfaces.v1.ReqUpdateIntercept
	(*ReqUpdateTotalUnread)(nil),      // 33: bilibili.im.interfaces.v1.ReqUpdateTotalUnread
	(*RspCloseClearUnreadUI)(nil),     // 34: bilibili.im.interfaces.v1.RspCloseClearUnreadUI
	(*RspGetMsg)(nil),                 // 35: bilibili.im.interfaces.v1.RspGetMsg
	(*RspLiveInfo)(nil),               // 36: bilibili.im.interfaces.v1.RspLiveInfo
	(*RspMyGroupUnread)(nil),          // 37: bilibili.im.interfaces.v1.RspMyGroupUnread
	(*RspRelationSync)(nil),           // 38: bilibili.im.interfaces.v1.RspRelationSync
	(*RspSendMsg)(nil),                // 39: bilibili.im.interfaces.v1.RspSendMsg
	(*RspSessionDetails)(nil),         // 40: bilibili.im.interfaces.v1.RspSessionDetails
	(*RspSessionMsg)(nil),             // 41: bilibili.im.interfaces.v1.RspSessionMsg
	(*RspSessions)(nil),               // 42: bilibili.im.interfaces.v1.RspSessions
	(*RspShareList)(nil),              // 43: bilibili.im.interfaces.v1.RspShareList
	(*RspShowClearUnreadUI)(nil),      // 44: bilibili.im.interfaces.v1.RspShowClearUnreadUI
	(*RspSingleUnread)(nil),           // 45: bilibili.im.interfaces.v1.RspSingleUnread
	(*RspSpecificSingleUnread)(nil),   // 46: bilibili.im.interfaces.v1.RspSpecificSingleUnread
	(*RspSyncAck)(nil),                // 47: bilibili.im.interfaces.v1.RspSyncAck
	(*RspTotalUnread)(nil),            // 48: bilibili.im.interfaces.v1.RspTotalUnread
	(*RspUpdateTotalUnread)(nil),      // 49: bilibili.im.interfaces.v1.RspUpdateTotalUnread
	(*SessionSingleUnreadRsp)(nil),    // 50: bilibili.im.interfaces.v1.SessionSingleUnreadRsp
	(*ShareSessionInfo)(nil),          // 51: bilibili.im.interfaces.v1.ShareSessionInfo
	(*SimpleSession)(nil),             // 52: bilibili.im.interfaces.v1.SimpleSession
	(*SysMsgInterfaceLastMsgRsp)(nil), // 53: bilibili.im.interfaces.v1.SysMsgInterfaceLastMsgRsp
	nil,                               // 54: bilibili.im.interfaces.v1.MsgFeedUnreadRsp.UnreadEntry
	nil,                               // 55: bilibili.im.interfaces.v1.RspSessions.SystemMsgEntry
	nil,                               // 56: bilibili.im.interfaces.v1.RspSpecificSingleUnread.TalkerUnreadCntEntry
	(*_type.Msg)(nil),                 // 57: bilibili.im.type.Msg
	(*_type.RelationLog)(nil),         // 58: bilibili.im.type.RelationLog
	(*_type.FriendRelation)(nil),      // 59: bilibili.im.type.FriendRelation
	(*_type.GroupRelation)(nil),       // 60: bilibili.im.type.GroupRelation
	(*_type.KeyHitInfos)(nil),         // 61: bilibili.im.type.KeyHitInfos
	(*_type.SessionInfo)(nil),         // 62: bilibili.im.type.SessionInfo
}
var file_bilibili_im_interfaces_v1_im_proto_depIdxs = []int32{
	54, // 0: bilibili.im.interfaces.v1.MsgFeedUnreadRsp.unread:type_name -> bilibili.im.interfaces.v1.MsgFeedUnreadRsp.UnreadEntry
	6,  // 1: bilibili.im.interfaces.v1.ReqGetMsg.msg_detail:type_name -> bilibili.im.interfaces.v1.MsgDetail
	52, // 2: bilibili.im.interfaces.v1.ReqGetSpecificSessions.talker_sessions:type_name -> bilibili.im.interfaces.v1.SimpleSession
	57, // 3: bilibili.im.interfaces.v1.ReqSendMsg.msg:type_name -> bilibili.im.type.Msg
	21, // 4: bilibili.im.interfaces.v1.ReqSessionDetails.sess_ids:type_name -> bilibili.im.interfaces.v1.ReqSessionDetail
	52, // 5: bilibili.im.interfaces.v1.ReqSpecificSingleUnread.talker_sessions:type_name -> bilibili.im.interfaces.v1.SimpleSession
	57, // 6: bilibili.im.interfaces.v1.RspGetMsg.msg:type_name -> bilibili.im.type.Msg
	58, // 7: bilibili.im.interfaces.v1.RspRelationSync.relation_logs:type_name -> bilibili.im.type.RelationLog
	59, // 8: bilibili.im.interfaces.v1.RspRelationSync.friend_list:type_name -> bilibili.im.type.FriendRelation
	60, // 9: bilibili.im.interfaces.v1.RspRelationSync.group_list:type_name -> bilibili.im.type.GroupRelation
	5,  // 10: bilibili.im.interfaces.v1.RspSendMsg.e_infos:type_name -> bilibili.im.interfaces.v1.EmotionInfo
	61, // 11: bilibili.im.interfaces.v1.RspSendMsg.key_hit_infos:type_name -> bilibili.im.type.KeyHitInfos
	62, // 12: bilibili.im.interfaces.v1.RspSessionDetails.sess_infos:type_name -> bilibili.im.type.SessionInfo
	57, // 13: bilibili.im.interfaces.v1.RspSessionMsg.messages:type_name -> bilibili.im.type.Msg
	5,  // 14: bilibili.im.interfaces.v1.RspSessionMsg.e_infos:type_name -> bilibili.im.interfaces.v1.EmotionInfo
	62, // 15: bilibili.im.interfaces.v1.RspSessions.session_list:type_name -> bilibili.im.type.SessionInfo
	55, // 16: bilibili.im.interfaces.v1.RspSessions.system_msg:type_name -> bilibili.im.interfaces.v1.RspSessions.SystemMsgEntry
	51, // 17: bilibili.im.interfaces.v1.RspShareList.session_list:type_name -> bilibili.im.interfaces.v1.ShareSessionInfo
	56, // 18: bilibili.im.interfaces.v1.RspSpecificSingleUnread.talkerUnreadCnt:type_name -> bilibili.im.interfaces.v1.RspSpecificSingleUnread.TalkerUnreadCntEntry
	50, // 19: bilibili.im.interfaces.v1.RspTotalUnread.session_single_unread:type_name -> bilibili.im.interfaces.v1.SessionSingleUnreadRsp
	7,  // 20: bilibili.im.interfaces.v1.RspTotalUnread.msg_feed_unread:type_name -> bilibili.im.interfaces.v1.MsgFeedUnreadRsp
	53, // 21: bilibili.im.interfaces.v1.RspTotalUnread.sys_msg_interface_last_msg:type_name -> bilibili.im.interfaces.v1.SysMsgInterfaceLastMsgRsp
	20, // 22: bilibili.im.interfaces.v1.ImInterface.SendMsg:input_type -> bilibili.im.interfaces.v1.ReqSendMsg
	18, // 23: bilibili.im.interfaces.v1.ImInterface.SyncRelation:input_type -> bilibili.im.interfaces.v1.ReqRelationSync
	29, // 24: bilibili.im.interfaces.v1.ImInterface.SyncAck:input_type -> bilibili.im.interfaces.v1.ReqSyncAck
	23, // 25: bilibili.im.interfaces.v1.ImInterface.SyncFetchSessionMsgs:input_type -> bilibili.im.interfaces.v1.ReqSessionMsg
	13, // 26: bilibili.im.interfaces.v1.ImInterface.GetSessions:input_type -> bilibili.im.interfaces.v1.ReqGetSessions
	17, // 27: bilibili.im.interfaces.v1.ImInterface.NewSessions:input_type -> bilibili.im.interfaces.v1.ReqNewSessions
	9,  // 28: bilibili.im.interfaces.v1.ImInterface.AckSessions:input_type -> bilibili.im.interfaces.v1.ReqAckSessions
	31, // 29: bilibili.im.interfaces.v1.ImInterface.UpdateAck:input_type -> bilibili.im.interfaces.v1.ReqUpdateAck
	24, // 30: bilibili.im.interfaces.v1.ImInterface.SetTop:input_type -> bilibili.im.interfaces.v1.ReqSetTop
	19, // 31: bilibili.im.interfaces.v1.ImInterface.RemoveSession:input_type -> bilibili.im.interfaces.v1.ReqRemoveSession
	27, // 32: bilibili.im.interfaces.v1.ImInterface.SingleUnread:input_type -> bilibili.im.interfaces.v1.ReqSingleUnread
	3,  // 33: bilibili.im.interfaces.v1.ImInterface.MyGroupUnread:input_type -> bilibili.im.interfaces.v1.DummyReq
	3,  // 34: bilibili.im.interfaces.v1.ImInterface.UpdateUnflwRead:input_type -> bilibili.im.interfaces.v1.DummyReq
	15, // 35: bilibili.im.interfaces.v1.ImInterface.GroupAssisMsg:input_type -> bilibili.im.interfaces.v1.ReqGroupAssisMsg
	8,  // 36: bilibili.im.interfaces.v1.ImInterface.AckAssisMsg:input_type -> bilibili.im.interfaces.v1.ReqAckAssisMsg
	21, // 37: bilibili.im.interfaces.v1.ImInterface.SessionDetail:input_type -> bilibili.im.interfaces.v1.ReqSessionDetail
	22, // 38: bilibili.im.interfaces.v1.ImInterface.BatchSessDetail:input_type -> bilibili.im.interfaces.v1.ReqSessionDetails
	10, // 39: bilibili.im.interfaces.v1.ImInterface.BatchRmSessions:input_type -> bilibili.im.interfaces.v1.ReqBatRmSess
	25, // 40: bilibili.im.interfaces.v1.ImInterface.ShareList:input_type -> bilibili.im.interfaces.v1.ReqShareList
	28, // 41: bilibili.im.interfaces.v1.ImInterface.SpecificSingleUnread:input_type -> bilibili.im.interfaces.v1.ReqSpecificSingleUnread
	14, // 42: bilibili.im.interfaces.v1.ImInterface.GetSpecificSessions:input_type -> bilibili.im.interfaces.v1.ReqGetSpecificSessions
	16, // 43: bilibili.im.interfaces.v1.ImInterface.GetLiveInfo:input_type -> bilibili.im.interfaces.v1.ReqLiveInfo
	30, // 44: bilibili.im.interfaces.v1.ImInterface.GetTotalUnread:input_type -> bilibili.im.interfaces.v1.ReqTotalUnread
	26, // 45: bilibili.im.interfaces.v1.ImInterface.ShowClearUnreadUI:input_type -> bilibili.im.interfaces.v1.ReqShowClearUnreadUI
	11, // 46: bilibili.im.interfaces.v1.ImInterface.CloseClearUnreadUI:input_type -> bilibili.im.interfaces.v1.ReqCloseClearUnreadUI
	33, // 47: bilibili.im.interfaces.v1.ImInterface.UpdateTotalUnread:input_type -> bilibili.im.interfaces.v1.ReqUpdateTotalUnread
	39, // 48: bilibili.im.interfaces.v1.ImInterface.SendMsg:output_type -> bilibili.im.interfaces.v1.RspSendMsg
	38, // 49: bilibili.im.interfaces.v1.ImInterface.SyncRelation:output_type -> bilibili.im.interfaces.v1.RspRelationSync
	47, // 50: bilibili.im.interfaces.v1.ImInterface.SyncAck:output_type -> bilibili.im.interfaces.v1.RspSyncAck
	41, // 51: bilibili.im.interfaces.v1.ImInterface.SyncFetchSessionMsgs:output_type -> bilibili.im.interfaces.v1.RspSessionMsg
	42, // 52: bilibili.im.interfaces.v1.ImInterface.GetSessions:output_type -> bilibili.im.interfaces.v1.RspSessions
	42, // 53: bilibili.im.interfaces.v1.ImInterface.NewSessions:output_type -> bilibili.im.interfaces.v1.RspSessions
	42, // 54: bilibili.im.interfaces.v1.ImInterface.AckSessions:output_type -> bilibili.im.interfaces.v1.RspSessions
	4,  // 55: bilibili.im.interfaces.v1.ImInterface.UpdateAck:output_type -> bilibili.im.interfaces.v1.DummyRsp
	4,  // 56: bilibili.im.interfaces.v1.ImInterface.SetTop:output_type -> bilibili.im.interfaces.v1.DummyRsp
	4,  // 57: bilibili.im.interfaces.v1.ImInterface.RemoveSession:output_type -> bilibili.im.interfaces.v1.DummyRsp
	45, // 58: bilibili.im.interfaces.v1.ImInterface.SingleUnread:output_type -> bilibili.im.interfaces.v1.RspSingleUnread
	37, // 59: bilibili.im.interfaces.v1.ImInterface.MyGroupUnread:output_type -> bilibili.im.interfaces.v1.RspMyGroupUnread
	4,  // 60: bilibili.im.interfaces.v1.ImInterface.UpdateUnflwRead:output_type -> bilibili.im.interfaces.v1.DummyRsp
	41, // 61: bilibili.im.interfaces.v1.ImInterface.GroupAssisMsg:output_type -> bilibili.im.interfaces.v1.RspSessionMsg
	4,  // 62: bilibili.im.interfaces.v1.ImInterface.AckAssisMsg:output_type -> bilibili.im.interfaces.v1.DummyRsp
	62, // 63: bilibili.im.interfaces.v1.ImInterface.SessionDetail:output_type -> bilibili.im.type.SessionInfo
	40, // 64: bilibili.im.interfaces.v1.ImInterface.BatchSessDetail:output_type -> bilibili.im.interfaces.v1.RspSessionDetails
	4,  // 65: bilibili.im.interfaces.v1.ImInterface.BatchRmSessions:output_type -> bilibili.im.interfaces.v1.DummyRsp
	43, // 66: bilibili.im.interfaces.v1.ImInterface.ShareList:output_type -> bilibili.im.interfaces.v1.RspShareList
	46, // 67: bilibili.im.interfaces.v1.ImInterface.SpecificSingleUnread:output_type -> bilibili.im.interfaces.v1.RspSpecificSingleUnread
	42, // 68: bilibili.im.interfaces.v1.ImInterface.GetSpecificSessions:output_type -> bilibili.im.interfaces.v1.RspSessions
	36, // 69: bilibili.im.interfaces.v1.ImInterface.GetLiveInfo:output_type -> bilibili.im.interfaces.v1.RspLiveInfo
	48, // 70: bilibili.im.interfaces.v1.ImInterface.GetTotalUnread:output_type -> bilibili.im.interfaces.v1.RspTotalUnread
	44, // 71: bilibili.im.interfaces.v1.ImInterface.ShowClearUnreadUI:output_type -> bilibili.im.interfaces.v1.RspShowClearUnreadUI
	34, // 72: bilibili.im.interfaces.v1.ImInterface.CloseClearUnreadUI:output_type -> bilibili.im.interfaces.v1.RspCloseClearUnreadUI
	49, // 73: bilibili.im.interfaces.v1.ImInterface.UpdateTotalUnread:output_type -> bilibili.im.interfaces.v1.RspUpdateTotalUnread
	48, // [48:74] is the sub-list for method output_type
	22, // [22:48] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_bilibili_im_interfaces_v1_im_proto_init() }
func file_bilibili_im_interfaces_v1_im_proto_init() {
	if File_bilibili_im_interfaces_v1_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DummyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DummyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFeedUnreadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAckAssisMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAckSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatRmSess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCloseClearUnreadUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetSpecificSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGroupAssisMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqLiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqNewSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRelationSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqRemoveSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSessionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSetTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqShareList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqShowClearUnreadUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSingleUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSpecificSingleUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSyncAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTotalUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateIntercept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpdateTotalUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspCloseClearUnreadUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspLiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspMyGroupUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspRelationSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSendMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspShareList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspShowClearUnreadUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSingleUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSpecificSingleUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSyncAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspTotalUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUpdateTotalUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionSingleUnreadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_im_interfaces_v1_im_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMsgInterfaceLastMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_im_interfaces_v1_im_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_im_interfaces_v1_im_proto_goTypes,
		DependencyIndexes: file_bilibili_im_interfaces_v1_im_proto_depIdxs,
		EnumInfos:         file_bilibili_im_interfaces_v1_im_proto_enumTypes,
		MessageInfos:      file_bilibili_im_interfaces_v1_im_proto_msgTypes,
	}.Build()
	File_bilibili_im_interfaces_v1_im_proto = out.File
	file_bilibili_im_interfaces_v1_im_proto_rawDesc = nil
	file_bilibili_im_interfaces_v1_im_proto_goTypes = nil
	file_bilibili_im_interfaces_v1_im_proto_depIdxs = nil
}
