// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: bilibili/dagw/component/avatar/v1/avatar.proto

package v1

import (
	common "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/dagw/component/avatar/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvatarItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerSize *common.SizeSpec `protobuf:"bytes,1,opt,name=container_size,json=containerSize,proto3" json:"container_size,omitempty"`
	Layers []*LayerGroup `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
	FallbackLayers *LayerGroup `protobuf:"bytes,3,opt,name=fallback_layers,json=fallbackLayers,proto3" json:"fallback_layers,omitempty"`
	Mid int64 `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *AvatarItem) Reset() {
	*x = AvatarItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarItem) ProtoMessage() {}

func (x *AvatarItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarItem.ProtoReflect.Descriptor instead.
func (*AvatarItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarItem) GetContainerSize() *common.SizeSpec {
	if x != nil {
		return x.ContainerSize
	}
	return nil
}

func (x *AvatarItem) GetLayers() []*LayerGroup {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *AvatarItem) GetFallbackLayers() *LayerGroup {
	if x != nil {
		return x.FallbackLayers
	}
	return nil
}

func (x *AvatarItem) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type BasicLayerResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResType int32 `protobuf:"varint,1,opt,name=res_type,json=resType,proto3" json:"res_type,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*BasicLayerResource_ResImage
	//	*BasicLayerResource_ResAnimation
	//	*BasicLayerResource_ResNativeDraw
	Payload isBasicLayerResource_Payload `protobuf_oneof:"payload"`
}

func (x *BasicLayerResource) Reset() {
	*x = BasicLayerResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicLayerResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicLayerResource) ProtoMessage() {}

func (x *BasicLayerResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicLayerResource.ProtoReflect.Descriptor instead.
func (*BasicLayerResource) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{1}
}

func (x *BasicLayerResource) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (m *BasicLayerResource) GetPayload() isBasicLayerResource_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *BasicLayerResource) GetResImage() *ResImage {
	if x, ok := x.GetPayload().(*BasicLayerResource_ResImage); ok {
		return x.ResImage
	}
	return nil
}

func (x *BasicLayerResource) GetResAnimation() *ResAnimation {
	if x, ok := x.GetPayload().(*BasicLayerResource_ResAnimation); ok {
		return x.ResAnimation
	}
	return nil
}

func (x *BasicLayerResource) GetResNativeDraw() *ResNativeDraw {
	if x, ok := x.GetPayload().(*BasicLayerResource_ResNativeDraw); ok {
		return x.ResNativeDraw
	}
	return nil
}

type isBasicLayerResource_Payload interface {
	isBasicLayerResource_Payload()
}

type BasicLayerResource_ResImage struct {
	ResImage *ResImage `protobuf:"bytes,2,opt,name=res_image,json=resImage,proto3,oneof"`
}

type BasicLayerResource_ResAnimation struct {
	ResAnimation *ResAnimation `protobuf:"bytes,3,opt,name=res_animation,json=resAnimation,proto3,oneof"`
}

type BasicLayerResource_ResNativeDraw struct {
	// /
	ResNativeDraw *ResNativeDraw `protobuf:"bytes,4,opt,name=res_native_draw,json=resNativeDraw,proto3,oneof"`
}

func (*BasicLayerResource_ResImage) isBasicLayerResource_Payload() {}

func (*BasicLayerResource_ResAnimation) isBasicLayerResource_Payload() {}

func (*BasicLayerResource_ResNativeDraw) isBasicLayerResource_Payload() {}

type GeneralConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebCssStyle map[string]string `protobuf:"bytes,1,rep,name=web_css_style,json=webCssStyle,proto3" json:"web_css_style,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GeneralConfig) Reset() {
	*x = GeneralConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralConfig) ProtoMessage() {}

func (x *GeneralConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralConfig.ProtoReflect.Descriptor instead.
func (*GeneralConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{2}
}

func (x *GeneralConfig) GetWebCssStyle() map[string]string {
	if x != nil {
		return x.WebCssStyle
	}
	return nil
}

type Layer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayerId string `protobuf:"bytes,1,opt,name=layer_id,json=layerId,proto3" json:"layer_id,omitempty"`
	Visible bool `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	GeneralSpec *common.LayerGeneralSpec `protobuf:"bytes,3,opt,name=general_spec,json=generalSpec,proto3" json:"general_spec,omitempty"`
	LayerConfig *LayerConfig `protobuf:"bytes,4,opt,name=layer_config,json=layerConfig,proto3" json:"layer_config,omitempty"`
	Resource *BasicLayerResource `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *Layer) Reset() {
	*x = Layer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layer) ProtoMessage() {}

func (x *Layer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layer.ProtoReflect.Descriptor instead.
func (*Layer) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{3}
}

func (x *Layer) GetLayerId() string {
	if x != nil {
		return x.LayerId
	}
	return ""
}

func (x *Layer) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *Layer) GetGeneralSpec() *common.LayerGeneralSpec {
	if x != nil {
		return x.GeneralSpec
	}
	return nil
}

func (x *Layer) GetLayerConfig() *LayerConfig {
	if x != nil {
		return x.LayerConfig
	}
	return nil
}

func (x *Layer) GetResource() *BasicLayerResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type LayerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags map[string]*LayerTagConfig `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsCritical bool `protobuf:"varint,2,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
	AllowOverPaint bool `protobuf:"varint,3,opt,name=allow_over_paint,json=allowOverPaint,proto3" json:"allow_over_paint,omitempty"`
	LayerMask *common.MaskProperty `protobuf:"bytes,4,opt,name=layer_mask,json=layerMask,proto3" json:"layer_mask,omitempty"`
}

func (x *LayerConfig) Reset() {
	*x = LayerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerConfig) ProtoMessage() {}

func (x *LayerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerConfig.ProtoReflect.Descriptor instead.
func (*LayerConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{4}
}

func (x *LayerConfig) GetTags() map[string]*LayerTagConfig {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *LayerConfig) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

func (x *LayerConfig) GetAllowOverPaint() bool {
	if x != nil {
		return x.AllowOverPaint
	}
	return false
}

func (x *LayerConfig) GetLayerMask() *common.MaskProperty {
	if x != nil {
		return x.LayerMask
	}
	return nil
}

type LayerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Layers []*Layer `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
	GroupMask *common.MaskProperty `protobuf:"bytes,3,opt,name=group_mask,json=groupMask,proto3" json:"group_mask,omitempty"`
	IsCriticalGroup bool `protobuf:"varint,4,opt,name=is_critical_group,json=isCriticalGroup,proto3" json:"is_critical_group,omitempty"`
}

func (x *LayerGroup) Reset() {
	*x = LayerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerGroup) ProtoMessage() {}

func (x *LayerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerGroup.ProtoReflect.Descriptor instead.
func (*LayerGroup) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{5}
}

func (x *LayerGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *LayerGroup) GetLayers() []*Layer {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *LayerGroup) GetGroupMask() *common.MaskProperty {
	if x != nil {
		return x.GroupMask
	}
	return nil
}

func (x *LayerGroup) GetIsCriticalGroup() bool {
	if x != nil {
		return x.IsCriticalGroup
	}
	return false
}

type LayerTagConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigType int32 `protobuf:"varint,1,opt,name=config_type,json=configType,proto3" json:"config_type,omitempty"`
	// Types that are assignable to Config:
	//
	//	*LayerTagConfig_GeneralConfig
	//	*LayerTagConfig_GyroConfig
	//	*LayerTagConfig_CommentDoubleClickConfig
	//	*LayerTagConfig_LiveAnimeConfig
	Config isLayerTagConfig_Config `protobuf_oneof:"config"`
}

func (x *LayerTagConfig) Reset() {
	*x = LayerTagConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayerTagConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayerTagConfig) ProtoMessage() {}

func (x *LayerTagConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayerTagConfig.ProtoReflect.Descriptor instead.
func (*LayerTagConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{6}
}

func (x *LayerTagConfig) GetConfigType() int32 {
	if x != nil {
		return x.ConfigType
	}
	return 0
}

func (m *LayerTagConfig) GetConfig() isLayerTagConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *LayerTagConfig) GetGeneralConfig() *GeneralConfig {
	if x, ok := x.GetConfig().(*LayerTagConfig_GeneralConfig); ok {
		return x.GeneralConfig
	}
	return nil
}

func (x *LayerTagConfig) GetGyroConfig() *GyroConfig {
	if x, ok := x.GetConfig().(*LayerTagConfig_GyroConfig); ok {
		return x.GyroConfig
	}
	return nil
}

func (x *LayerTagConfig) GetCommentDoubleClickConfig() *CommentDoubleClickConfig {
	if x, ok := x.GetConfig().(*LayerTagConfig_CommentDoubleClickConfig); ok {
		return x.CommentDoubleClickConfig
	}
	return nil
}

func (x *LayerTagConfig) GetLiveAnimeConfig() *LiveAnimeConfig {
	if x, ok := x.GetConfig().(*LayerTagConfig_LiveAnimeConfig); ok {
		return x.LiveAnimeConfig
	}
	return nil
}

type isLayerTagConfig_Config interface {
	isLayerTagConfig_Config()
}

type LayerTagConfig_GeneralConfig struct {
	GeneralConfig *GeneralConfig `protobuf:"bytes,2,opt,name=general_config,json=generalConfig,proto3,oneof"`
}

type LayerTagConfig_GyroConfig struct {
	GyroConfig *GyroConfig `protobuf:"bytes,3,opt,name=gyro_config,json=gyroConfig,proto3,oneof"`
}

type LayerTagConfig_CommentDoubleClickConfig struct {
	CommentDoubleClickConfig *CommentDoubleClickConfig `protobuf:"bytes,4,opt,name=comment_doubleClick_config,json=commentDoubleClickConfig,proto3,oneof"`
}

type LayerTagConfig_LiveAnimeConfig struct {
	LiveAnimeConfig *LiveAnimeConfig `protobuf:"bytes,5,opt,name=live_anime_config,json=liveAnimeConfig,proto3,oneof"`
}

func (*LayerTagConfig_GeneralConfig) isLayerTagConfig_Config() {}

func (*LayerTagConfig_GyroConfig) isLayerTagConfig_Config() {}

func (*LayerTagConfig_CommentDoubleClickConfig) isLayerTagConfig_Config() {}

func (*LayerTagConfig_LiveAnimeConfig) isLayerTagConfig_Config() {}

type ResAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebpSrc *common.ResourceSource `protobuf:"bytes,1,opt,name=webp_src,json=webpSrc,proto3" json:"webp_src,omitempty"`
}

func (x *ResAnimation) Reset() {
	*x = ResAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAnimation) ProtoMessage() {}

func (x *ResAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResAnimation.ProtoReflect.Descriptor instead.
func (*ResAnimation) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{7}
}

func (x *ResAnimation) GetWebpSrc() *common.ResourceSource {
	if x != nil {
		return x.WebpSrc
	}
	return nil
}

type ResImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSrc *common.ResourceSource `protobuf:"bytes,1,opt,name=image_src,json=imageSrc,proto3" json:"image_src,omitempty"`
}

func (x *ResImage) Reset() {
	*x = ResImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResImage) ProtoMessage() {}

func (x *ResImage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResImage.ProtoReflect.Descriptor instead.
func (*ResImage) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{8}
}

func (x *ResImage) GetImageSrc() *common.ResourceSource {
	if x != nil {
		return x.ImageSrc
	}
	return nil
}

type ResNativeDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawSrc *common.ResourceSource `protobuf:"bytes,1,opt,name=draw_src,json=drawSrc,proto3" json:"draw_src,omitempty"`
}

func (x *ResNativeDraw) Reset() {
	*x = ResNativeDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResNativeDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResNativeDraw) ProtoMessage() {}

func (x *ResNativeDraw) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResNativeDraw.ProtoReflect.Descriptor instead.
func (*ResNativeDraw) Descriptor() ([]byte, []int) {
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP(), []int{9}
}

func (x *ResNativeDraw) GetDrawSrc() *common.ResourceSource {
	if x != nil {
		return x.DrawSrc
	}
	return nil
}

var File_bilibili_dagw_component_avatar_v1_avatar_proto protoreflect.FileDescriptor

var file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x61, 0x67, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x32, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x61,
	0x67, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2f, 0x64, 0x61, 0x67, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x02, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x56, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x45,
	0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x66,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22,
	0xba, 0x02, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x61, 0x77,
	0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x61,
	0x77, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb6, 0x01, 0x0a,
	0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65,
	0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x63, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x57, 0x65, 0x62, 0x43, 0x73, 0x73, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x43, 0x73, 0x73,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x43, 0x73, 0x73, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbe, 0x02, 0x0a, 0x05, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x51, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xe6, 0x02, 0x0a, 0x0b, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x12,
	0x52, 0x0a, 0x0a, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x09, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x61, 0x73, 0x6b, 0x1a, 0x6a, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67,
	0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xe9, 0x01, 0x0a, 0x0a, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x6b, 0x12,
	0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xdd, 0x03, 0x0a, 0x0e,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x59, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x57, 0x0a, 0x0b, 0x67, 0x79,
	0x72, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x47, 0x79, 0x72, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x79, 0x72, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x82, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x18,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x67, 0x0a, 0x11, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x60, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x08, 0x77,
	0x65, 0x62, 0x70, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x77, 0x65, 0x62, 0x70, 0x53, 0x72, 0x63, 0x22, 0x5e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72, 0x63, 0x22, 0x61, 0x0a,
	0x0d, 0x52, 0x65, 0x73, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x72, 0x61, 0x77, 0x12, 0x50,
	0x0a, 0x08, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x64, 0x72, 0x61, 0x77, 0x53, 0x72, 0x63,
	0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58,
	0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x61, 0x67, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescOnce sync.Once
	file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescData = file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDesc
)

func file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescGZIP() []byte {
	file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescOnce.Do(func() {
		file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescData)
	})
	return file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDescData
}

var file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_bilibili_dagw_component_avatar_v1_avatar_proto_goTypes = []interface{}{
	(*AvatarItem)(nil),               // 0: bilibili.dagw.component.avatar.v1.AvatarItem
	(*BasicLayerResource)(nil),       // 1: bilibili.dagw.component.avatar.v1.BasicLayerResource
	(*GeneralConfig)(nil),            // 2: bilibili.dagw.component.avatar.v1.GeneralConfig
	(*Layer)(nil),                    // 3: bilibili.dagw.component.avatar.v1.Layer
	(*LayerConfig)(nil),              // 4: bilibili.dagw.component.avatar.v1.LayerConfig
	(*LayerGroup)(nil),               // 5: bilibili.dagw.component.avatar.v1.LayerGroup
	(*LayerTagConfig)(nil),           // 6: bilibili.dagw.component.avatar.v1.LayerTagConfig
	(*ResAnimation)(nil),             // 7: bilibili.dagw.component.avatar.v1.ResAnimation
	(*ResImage)(nil),                 // 8: bilibili.dagw.component.avatar.v1.ResImage
	(*ResNativeDraw)(nil),            // 9: bilibili.dagw.component.avatar.v1.ResNativeDraw
	nil,                              // 10: bilibili.dagw.component.avatar.v1.GeneralConfig.WebCssStyleEntry
	nil,                              // 11: bilibili.dagw.component.avatar.v1.LayerConfig.TagsEntry
	(*common.SizeSpec)(nil),          // 12: bilibili.dagw.component.avatar.common.SizeSpec
	(*common.LayerGeneralSpec)(nil),  // 13: bilibili.dagw.component.avatar.common.LayerGeneralSpec
	(*common.MaskProperty)(nil),      // 14: bilibili.dagw.component.avatar.common.MaskProperty
	(*GyroConfig)(nil),               // 15: bilibili.dagw.component.avatar.v1.plugin.GyroConfig
	(*CommentDoubleClickConfig)(nil), // 16: bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig
	(*LiveAnimeConfig)(nil),          // 17: bilibili.dagw.component.avatar.v1.plugin.LiveAnimeConfig
	(*common.ResourceSource)(nil),    // 18: bilibili.dagw.component.avatar.common.ResourceSource
}
var file_bilibili_dagw_component_avatar_v1_avatar_proto_depIdxs = []int32{
	12, // 0: bilibili.dagw.component.avatar.v1.AvatarItem.container_size:type_name -> bilibili.dagw.component.avatar.common.SizeSpec
	5,  // 1: bilibili.dagw.component.avatar.v1.AvatarItem.layers:type_name -> bilibili.dagw.component.avatar.v1.LayerGroup
	5,  // 2: bilibili.dagw.component.avatar.v1.AvatarItem.fallback_layers:type_name -> bilibili.dagw.component.avatar.v1.LayerGroup
	8,  // 3: bilibili.dagw.component.avatar.v1.BasicLayerResource.res_image:type_name -> bilibili.dagw.component.avatar.v1.ResImage
	7,  // 4: bilibili.dagw.component.avatar.v1.BasicLayerResource.res_animation:type_name -> bilibili.dagw.component.avatar.v1.ResAnimation
	9,  // 5: bilibili.dagw.component.avatar.v1.BasicLayerResource.res_native_draw:type_name -> bilibili.dagw.component.avatar.v1.ResNativeDraw
	10, // 6: bilibili.dagw.component.avatar.v1.GeneralConfig.web_css_style:type_name -> bilibili.dagw.component.avatar.v1.GeneralConfig.WebCssStyleEntry
	13, // 7: bilibili.dagw.component.avatar.v1.Layer.general_spec:type_name -> bilibili.dagw.component.avatar.common.LayerGeneralSpec
	4,  // 8: bilibili.dagw.component.avatar.v1.Layer.layer_config:type_name -> bilibili.dagw.component.avatar.v1.LayerConfig
	1,  // 9: bilibili.dagw.component.avatar.v1.Layer.resource:type_name -> bilibili.dagw.component.avatar.v1.BasicLayerResource
	11, // 10: bilibili.dagw.component.avatar.v1.LayerConfig.tags:type_name -> bilibili.dagw.component.avatar.v1.LayerConfig.TagsEntry
	14, // 11: bilibili.dagw.component.avatar.v1.LayerConfig.layer_mask:type_name -> bilibili.dagw.component.avatar.common.MaskProperty
	3,  // 12: bilibili.dagw.component.avatar.v1.LayerGroup.layers:type_name -> bilibili.dagw.component.avatar.v1.Layer
	14, // 13: bilibili.dagw.component.avatar.v1.LayerGroup.group_mask:type_name -> bilibili.dagw.component.avatar.common.MaskProperty
	2,  // 14: bilibili.dagw.component.avatar.v1.LayerTagConfig.general_config:type_name -> bilibili.dagw.component.avatar.v1.GeneralConfig
	15, // 15: bilibili.dagw.component.avatar.v1.LayerTagConfig.gyro_config:type_name -> bilibili.dagw.component.avatar.v1.plugin.GyroConfig
	16, // 16: bilibili.dagw.component.avatar.v1.LayerTagConfig.comment_doubleClick_config:type_name -> bilibili.dagw.component.avatar.v1.plugin.CommentDoubleClickConfig
	17, // 17: bilibili.dagw.component.avatar.v1.LayerTagConfig.live_anime_config:type_name -> bilibili.dagw.component.avatar.v1.plugin.LiveAnimeConfig
	18, // 18: bilibili.dagw.component.avatar.v1.ResAnimation.webp_src:type_name -> bilibili.dagw.component.avatar.common.ResourceSource
	18, // 19: bilibili.dagw.component.avatar.v1.ResImage.image_src:type_name -> bilibili.dagw.component.avatar.common.ResourceSource
	18, // 20: bilibili.dagw.component.avatar.v1.ResNativeDraw.draw_src:type_name -> bilibili.dagw.component.avatar.common.ResourceSource
	6,  // 21: bilibili.dagw.component.avatar.v1.LayerConfig.TagsEntry.value:type_name -> bilibili.dagw.component.avatar.v1.LayerTagConfig
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_bilibili_dagw_component_avatar_v1_avatar_proto_init() }
func file_bilibili_dagw_component_avatar_v1_avatar_proto_init() {
	if File_bilibili_dagw_component_avatar_v1_avatar_proto != nil {
		return
	}
	file_bilibili_dagw_component_avatar_v1_plugin_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicLayerResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Layer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayerTagConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResNativeDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BasicLayerResource_ResImage)(nil),
		(*BasicLayerResource_ResAnimation)(nil),
		(*BasicLayerResource_ResNativeDraw)(nil),
	}
	file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*LayerTagConfig_GeneralConfig)(nil),
		(*LayerTagConfig_GyroConfig)(nil),
		(*LayerTagConfig_CommentDoubleClickConfig)(nil),
		(*LayerTagConfig_LiveAnimeConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_dagw_component_avatar_v1_avatar_proto_goTypes,
		DependencyIndexes: file_bilibili_dagw_component_avatar_v1_avatar_proto_depIdxs,
		MessageInfos:      file_bilibili_dagw_component_avatar_v1_avatar_proto_msgTypes,
	}.Build()
	File_bilibili_dagw_component_avatar_v1_avatar_proto = out.File
	file_bilibili_dagw_component_avatar_v1_avatar_proto_rawDesc = nil
	file_bilibili_dagw_component_avatar_v1_avatar_proto_goTypes = nil
	file_bilibili_dagw_component_avatar_v1_avatar_proto_depIdxs = nil
}
