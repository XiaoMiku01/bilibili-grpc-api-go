// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: bilibili/api/probe/v1/probe.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category int32

const (
	Category_CATEGORY_UNSPECIFIED Category = 0 //
	Category_CATEGORY_ONE         Category = 1 //
	Category_CATEGORY_TWO         Category = 2 //
	Category_CATEGORY_THREE       Category = 3 //
	Category_CATEGORY_FOUR        Category = 4 //
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0: "CATEGORY_UNSPECIFIED",
		1: "CATEGORY_ONE",
		2: "CATEGORY_TWO",
		3: "CATEGORY_THREE",
		4: "CATEGORY_FOUR",
	}
	Category_value = map[string]int32{
		"CATEGORY_UNSPECIFIED": 0,
		"CATEGORY_ONE":         1,
		"CATEGORY_TWO":         2,
		"CATEGORY_THREE":       3,
		"CATEGORY_FOUR":        4,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_api_probe_v1_probe_proto_enumTypes[0].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_bilibili_api_probe_v1_probe_proto_enumTypes[0]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{0}
}

// Deprecated
type ErrorReason int32

const (
	ErrorReason_PROBE_UNSPECIFIED       ErrorReason = 0 //
	ErrorReason_PROBE_CATEGORY_NOTFOUND ErrorReason = 1 //
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0: "PROBE_UNSPECIFIED",
		1: "PROBE_CATEGORY_NOTFOUND",
	}
	ErrorReason_value = map[string]int32{
		"PROBE_UNSPECIFIED":       0,
		"PROBE_CATEGORY_NOTFOUND": 1,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_api_probe_v1_probe_proto_enumTypes[1].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_bilibili_api_probe_v1_probe_proto_enumTypes[1]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{1}
}

type CodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Id1 string `protobuf:"bytes,2,opt,name=id1,proto3" json:"id1,omitempty"`
	Code int64 `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	MessageS string `protobuf:"bytes,4,opt,name=message_s,json=messageS,proto3" json:"message_s,omitempty"`
}

func (x *CodeReply) Reset() {
	*x = CodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReply) ProtoMessage() {}

func (x *CodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReply.ProtoReflect.Descriptor instead.
func (*CodeReply) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{0}
}

func (x *CodeReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CodeReply) GetId1() string {
	if x != nil {
		return x.Id1
	}
	return ""
}

func (x *CodeReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CodeReply) GetMessageS() string {
	if x != nil {
		return x.MessageS
	}
	return ""
}

type CodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeReq) Reset() {
	*x = CodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReq) ProtoMessage() {}

func (x *CodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReq.ProtoReflect.Descriptor instead.
func (*CodeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{1}
}

func (x *CodeReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CreateTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTopic) Reset() {
	*x = CreateTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopic) ProtoMessage() {}

func (x *CreateTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopic.ProtoReflect.Descriptor instead.
func (*CreateTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTopic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreatTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task string `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *CreatTask) Reset() {
	*x = CreatTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatTask) ProtoMessage() {}

func (x *CreatTask) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatTask.ProtoReflect.Descriptor instead.
func (*CreatTask) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{3}
}

func (x *CreatTask) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

type DynamicMessageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *SimpleMessage `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *DynamicMessageUpdate) Reset() {
	*x = DynamicMessageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicMessageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicMessageUpdate) ProtoMessage() {}

func (x *DynamicMessageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicMessageUpdate.ProtoReflect.Descriptor instead.
func (*DynamicMessageUpdate) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{4}
}

func (x *DynamicMessageUpdate) GetBody() *SimpleMessage {
	if x != nil {
		return x.Body
	}
	return nil
}

type Embedded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolVal bool `protobuf:"varint,1,opt,name=bool_val,json=boolVal,proto3" json:"bool_val,omitempty"`
	Int32Val int32 `protobuf:"varint,2,opt,name=int32_val,json=int32Val,proto3" json:"int32_val,omitempty"`
	Int64Val int64 `protobuf:"varint,3,opt,name=int64_val,json=int64Val,proto3" json:"int64_val,omitempty"`
	FloatVal float32 `protobuf:"fixed32,4,opt,name=float_val,json=floatVal,proto3" json:"float_val,omitempty"`
	DoubleVal float64 `protobuf:"fixed64,5,opt,name=double_val,json=doubleVal,proto3" json:"double_val,omitempty"`
	StringVal string `protobuf:"bytes,6,opt,name=string_val,json=stringVal,proto3" json:"string_val,omitempty"`
	RepeatedBoolVal []bool `protobuf:"varint,7,rep,packed,name=repeated_bool_val,json=repeatedBoolVal,proto3" json:"repeated_bool_val,omitempty"`
	RepeatedInt32Val []int32 `protobuf:"varint,8,rep,packed,name=repeated_int32_val,json=repeatedInt32Val,proto3" json:"repeated_int32_val,omitempty"`
	RepeatedInt64Val []int64 `protobuf:"varint,9,rep,packed,name=repeated_int64_val,json=repeatedInt64Val,proto3" json:"repeated_int64_val,omitempty"`
	RepeatedFloatVal []float32 `protobuf:"fixed32,10,rep,packed,name=repeated_float_val,json=repeatedFloatVal,proto3" json:"repeated_float_val,omitempty"`
	RepeatedDoubleVal []float64 `protobuf:"fixed64,11,rep,packed,name=repeated_double_val,json=repeatedDoubleVal,proto3" json:"repeated_double_val,omitempty"`
	RepeatedStringVal []string `protobuf:"bytes,12,rep,name=repeated_string_val,json=repeatedStringVal,proto3" json:"repeated_string_val,omitempty"`
	MapStringVal map[string]string `protobuf:"bytes,13,rep,name=map_string_val,json=mapStringVal,proto3" json:"map_string_val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapErrorVal map[string]*ErrorMessage `protobuf:"bytes,14,rep,name=map_error_val,json=mapErrorVal,proto3" json:"map_error_val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Embedded) Reset() {
	*x = Embedded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embedded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedded) ProtoMessage() {}

func (x *Embedded) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedded.ProtoReflect.Descriptor instead.
func (*Embedded) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{5}
}

func (x *Embedded) GetBoolVal() bool {
	if x != nil {
		return x.BoolVal
	}
	return false
}

func (x *Embedded) GetInt32Val() int32 {
	if x != nil {
		return x.Int32Val
	}
	return 0
}

func (x *Embedded) GetInt64Val() int64 {
	if x != nil {
		return x.Int64Val
	}
	return 0
}

func (x *Embedded) GetFloatVal() float32 {
	if x != nil {
		return x.FloatVal
	}
	return 0
}

func (x *Embedded) GetDoubleVal() float64 {
	if x != nil {
		return x.DoubleVal
	}
	return 0
}

func (x *Embedded) GetStringVal() string {
	if x != nil {
		return x.StringVal
	}
	return ""
}

func (x *Embedded) GetRepeatedBoolVal() []bool {
	if x != nil {
		return x.RepeatedBoolVal
	}
	return nil
}

func (x *Embedded) GetRepeatedInt32Val() []int32 {
	if x != nil {
		return x.RepeatedInt32Val
	}
	return nil
}

func (x *Embedded) GetRepeatedInt64Val() []int64 {
	if x != nil {
		return x.RepeatedInt64Val
	}
	return nil
}

func (x *Embedded) GetRepeatedFloatVal() []float32 {
	if x != nil {
		return x.RepeatedFloatVal
	}
	return nil
}

func (x *Embedded) GetRepeatedDoubleVal() []float64 {
	if x != nil {
		return x.RepeatedDoubleVal
	}
	return nil
}

func (x *Embedded) GetRepeatedStringVal() []string {
	if x != nil {
		return x.RepeatedStringVal
	}
	return nil
}

func (x *Embedded) GetMapStringVal() map[string]string {
	if x != nil {
		return x.MapStringVal
	}
	return nil
}

func (x *Embedded) GetMapErrorVal() map[string]*ErrorMessage {
	if x != nil {
		return x.MapErrorVal
	}
	return nil
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{6}
}

func (x *ErrorMessage) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProbeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ProbeReply) Reset() {
	*x = ProbeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeReply) ProtoMessage() {}

func (x *ProbeReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeReply.ProtoReflect.Descriptor instead.
func (*ProbeReply) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{7}
}

func (x *ProbeReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProbeReply) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ProbeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Buvid string `protobuf:"bytes,2,opt,name=buvid,proto3" json:"buvid,omitempty"`
}

func (x *ProbeReq) Reset() {
	*x = ProbeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeReq) ProtoMessage() {}

func (x *ProbeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeReq.ProtoReflect.Descriptor instead.
func (*ProbeReq) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{8}
}

func (x *ProbeReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ProbeReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

type ProbeStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ProbeStreamReply) Reset() {
	*x = ProbeStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeStreamReply) ProtoMessage() {}

func (x *ProbeStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeStreamReply.ProtoReflect.Descriptor instead.
func (*ProbeStreamReply) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{9}
}

func (x *ProbeStreamReply) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ProbeStreamReply) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ProbeStreamReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ProbeStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Sequence int64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *ProbeStreamReq) Reset() {
	*x = ProbeStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeStreamReq) ProtoMessage() {}

func (x *ProbeStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeStreamReq.ProtoReflect.Descriptor instead.
func (*ProbeStreamReq) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{10}
}

func (x *ProbeStreamReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ProbeStreamReq) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type ProbeSubReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId int64 `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *ProbeSubReply) Reset() {
	*x = ProbeSubReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeSubReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeSubReply) ProtoMessage() {}

func (x *ProbeSubReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeSubReply.ProtoReflect.Descriptor instead.
func (*ProbeSubReply) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{11}
}

func (x *ProbeSubReply) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

type ProbeSubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buvid string `protobuf:"bytes,1,opt,name=buvid,proto3" json:"buvid,omitempty"`
}

func (x *ProbeSubReq) Reset() {
	*x = ProbeSubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeSubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeSubReq) ProtoMessage() {}

func (x *ProbeSubReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeSubReq.ProtoReflect.Descriptor instead.
func (*ProbeSubReq) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{12}
}

func (x *ProbeSubReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

type SimpleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num int64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Lang string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Cate int32 `protobuf:"varint,4,opt,name=cate,proto3" json:"cate,omitempty"`
	Embedded *Embedded `protobuf:"bytes,5,opt,name=embedded,proto3" json:"embedded,omitempty"`
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{13}
}

func (x *SimpleMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleMessage) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SimpleMessage) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SimpleMessage) GetCate() int32 {
	if x != nil {
		return x.Cate
	}
	return 0
}

func (x *SimpleMessage) GetEmbedded() *Embedded {
	if x != nil {
		return x.Embedded
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Cache bool `protobuf:"varint,3,opt,name=cache,proto3" json:"cache,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_api_probe_v1_probe_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_bilibili_api_probe_v1_probe_proto_rawDescGZIP(), []int{14}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Task) GetCache() bool {
	if x != nil {
		return x.Cache
	}
	return false
}

var File_bilibili_api_probe_v1_probe_proto protoreflect.FileDescriptor

var file_bilibili_api_probe_v1_probe_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x5e, 0x0a, 0x09, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x22, 0x1d, 0x0a, 0x07, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x50, 0x0a, 0x14, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xa5, 0x06, 0x0a, 0x08,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x02, 0x52, 0x10, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x01, 0x52, 0x11, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x57,
	0x0a, 0x0e, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6d, 0x61, 0x70, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x2e,
	0x4d, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x6d, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x1a, 0x3f, 0x0a,
	0x11, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63,
	0x0a, 0x10, 0x4d, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x54, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x0a, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x32, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75,
	0x76, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75,
	0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x76, 0x69, 0x64,
	0x22, 0x96, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x08,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x52,
	0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2a, 0x6f, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x4f,
	0x55, 0x52, 0x10, 0x04, 0x2a, 0x41, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x42, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52,
	0x4f, 0x42, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x32, 0xd7, 0x02, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x12, 0x4c, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4d, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c,
	0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x07,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x32, 0xd2, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x52, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x45, 0x63, 0x68, 0x6f, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58,
	0x0a, 0x0a, 0x45, 0x63, 0x68, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x45, 0x63, 0x68, 0x6f,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x65, 0x0a, 0x09, 0x45, 0x63, 0x68, 0x6f, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bilibili_api_probe_v1_probe_proto_rawDescOnce sync.Once
	file_bilibili_api_probe_v1_probe_proto_rawDescData = file_bilibili_api_probe_v1_probe_proto_rawDesc
)

func file_bilibili_api_probe_v1_probe_proto_rawDescGZIP() []byte {
	file_bilibili_api_probe_v1_probe_proto_rawDescOnce.Do(func() {
		file_bilibili_api_probe_v1_probe_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_api_probe_v1_probe_proto_rawDescData)
	})
	return file_bilibili_api_probe_v1_probe_proto_rawDescData
}

var file_bilibili_api_probe_v1_probe_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bilibili_api_probe_v1_probe_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_bilibili_api_probe_v1_probe_proto_goTypes = []interface{}{
	(Category)(0),                // 0: bilibili.api.probe.v1.Category
	(ErrorReason)(0),             // 1: bilibili.api.probe.v1.ErrorReason
	(*CodeReply)(nil),            // 2: bilibili.api.probe.v1.CodeReply
	(*CodeReq)(nil),              // 3: bilibili.api.probe.v1.CodeReq
	(*CreateTopic)(nil),          // 4: bilibili.api.probe.v1.CreateTopic
	(*CreatTask)(nil),            // 5: bilibili.api.probe.v1.CreatTask
	(*DynamicMessageUpdate)(nil), // 6: bilibili.api.probe.v1.DynamicMessageUpdate
	(*Embedded)(nil),             // 7: bilibili.api.probe.v1.Embedded
	(*ErrorMessage)(nil),         // 8: bilibili.api.probe.v1.ErrorMessage
	(*ProbeReply)(nil),           // 9: bilibili.api.probe.v1.ProbeReply
	(*ProbeReq)(nil),             // 10: bilibili.api.probe.v1.ProbeReq
	(*ProbeStreamReply)(nil),     // 11: bilibili.api.probe.v1.ProbeStreamReply
	(*ProbeStreamReq)(nil),       // 12: bilibili.api.probe.v1.ProbeStreamReq
	(*ProbeSubReply)(nil),        // 13: bilibili.api.probe.v1.ProbeSubReply
	(*ProbeSubReq)(nil),          // 14: bilibili.api.probe.v1.ProbeSubReq
	(*SimpleMessage)(nil),        // 15: bilibili.api.probe.v1.SimpleMessage
	(*Task)(nil),                 // 16: bilibili.api.probe.v1.Task
	nil,                          // 17: bilibili.api.probe.v1.Embedded.MapStringValEntry
	nil,                          // 18: bilibili.api.probe.v1.Embedded.MapErrorValEntry
}
var file_bilibili_api_probe_v1_probe_proto_depIdxs = []int32{
	15, // 0: bilibili.api.probe.v1.DynamicMessageUpdate.body:type_name -> bilibili.api.probe.v1.SimpleMessage
	17, // 1: bilibili.api.probe.v1.Embedded.map_string_val:type_name -> bilibili.api.probe.v1.Embedded.MapStringValEntry
	18, // 2: bilibili.api.probe.v1.Embedded.map_error_val:type_name -> bilibili.api.probe.v1.Embedded.MapErrorValEntry
	7,  // 3: bilibili.api.probe.v1.SimpleMessage.embedded:type_name -> bilibili.api.probe.v1.Embedded
	8,  // 4: bilibili.api.probe.v1.Embedded.MapErrorValEntry.value:type_name -> bilibili.api.probe.v1.ErrorMessage
	3,  // 5: bilibili.api.probe.v1.Probe.TestCode:input_type -> bilibili.api.probe.v1.CodeReq
	10, // 6: bilibili.api.probe.v1.Probe.TestReq:input_type -> bilibili.api.probe.v1.ProbeReq
	12, // 7: bilibili.api.probe.v1.Probe.TestStream:input_type -> bilibili.api.probe.v1.ProbeStreamReq
	14, // 8: bilibili.api.probe.v1.Probe.TestSub:input_type -> bilibili.api.probe.v1.ProbeSubReq
	15, // 9: bilibili.api.probe.v1.ProbeService.Echo:input_type -> bilibili.api.probe.v1.SimpleMessage
	15, // 10: bilibili.api.probe.v1.ProbeService.EchoBody:input_type -> bilibili.api.probe.v1.SimpleMessage
	15, // 11: bilibili.api.probe.v1.ProbeService.EchoDelete:input_type -> bilibili.api.probe.v1.SimpleMessage
	8,  // 12: bilibili.api.probe.v1.ProbeService.EchoError:input_type -> bilibili.api.probe.v1.ErrorMessage
	6,  // 13: bilibili.api.probe.v1.ProbeService.EchoPatch:input_type -> bilibili.api.probe.v1.DynamicMessageUpdate
	2,  // 14: bilibili.api.probe.v1.Probe.TestCode:output_type -> bilibili.api.probe.v1.CodeReply
	9,  // 15: bilibili.api.probe.v1.Probe.TestReq:output_type -> bilibili.api.probe.v1.ProbeReply
	11, // 16: bilibili.api.probe.v1.Probe.TestStream:output_type -> bilibili.api.probe.v1.ProbeStreamReply
	13, // 17: bilibili.api.probe.v1.Probe.TestSub:output_type -> bilibili.api.probe.v1.ProbeSubReply
	15, // 18: bilibili.api.probe.v1.ProbeService.Echo:output_type -> bilibili.api.probe.v1.SimpleMessage
	15, // 19: bilibili.api.probe.v1.ProbeService.EchoBody:output_type -> bilibili.api.probe.v1.SimpleMessage
	15, // 20: bilibili.api.probe.v1.ProbeService.EchoDelete:output_type -> bilibili.api.probe.v1.SimpleMessage
	8,  // 21: bilibili.api.probe.v1.ProbeService.EchoError:output_type -> bilibili.api.probe.v1.ErrorMessage
	6,  // 22: bilibili.api.probe.v1.ProbeService.EchoPatch:output_type -> bilibili.api.probe.v1.DynamicMessageUpdate
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_bilibili_api_probe_v1_probe_proto_init() }
func file_bilibili_api_probe_v1_probe_proto_init() {
	if File_bilibili_api_probe_v1_probe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_api_probe_v1_probe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicMessageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embedded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeSubReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeSubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_api_probe_v1_probe_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_api_probe_v1_probe_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_bilibili_api_probe_v1_probe_proto_goTypes,
		DependencyIndexes: file_bilibili_api_probe_v1_probe_proto_depIdxs,
		EnumInfos:         file_bilibili_api_probe_v1_probe_proto_enumTypes,
		MessageInfos:      file_bilibili_api_probe_v1_probe_proto_msgTypes,
	}.Build()
	File_bilibili_api_probe_v1_probe_proto = out.File
	file_bilibili_api_probe_v1_probe_proto_rawDesc = nil
	file_bilibili_api_probe_v1_probe_proto_goTypes = nil
	file_bilibili_api_probe_v1_probe_proto_depIdxs = nil
}
