// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: bilibili/dynamic/common/dynamic.proto

package common

import (
	v2 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/dynamic/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// at分组类型
type AtGroupType int32

const (
	AtGroupType_AT_GROUP_TYPE_DEFAULT AtGroupType = 0 // 默认
	AtGroupType_AT_GROUP_TYPE_RECENT  AtGroupType = 1 // 最近联系
	AtGroupType_AT_GROUP_TYPE_FOLLOW  AtGroupType = 2 // 我的关注（互相关注 > 单向关注）
	AtGroupType_AT_GROUP_TYPE_FANS    AtGroupType = 3 // 我的粉丝
	AtGroupType_AT_GROUP_TYPE_OTHERS  AtGroupType = 4 // 其他
)

// Enum value maps for AtGroupType.
var (
	AtGroupType_name = map[int32]string{
		0: "AT_GROUP_TYPE_DEFAULT",
		1: "AT_GROUP_TYPE_RECENT",
		2: "AT_GROUP_TYPE_FOLLOW",
		3: "AT_GROUP_TYPE_FANS",
		4: "AT_GROUP_TYPE_OTHERS",
	}
	AtGroupType_value = map[string]int32{
		"AT_GROUP_TYPE_DEFAULT": 0,
		"AT_GROUP_TYPE_RECENT":  1,
		"AT_GROUP_TYPE_FOLLOW":  2,
		"AT_GROUP_TYPE_FANS":    3,
		"AT_GROUP_TYPE_OTHERS":  4,
	}
)

func (x AtGroupType) Enum() *AtGroupType {
	p := new(AtGroupType)
	*p = x
	return p
}

func (x AtGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AtGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[0].Descriptor()
}

func (AtGroupType) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[0]
}

func (x AtGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AtGroupType.Descriptor instead.
func (AtGroupType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{0}
}

type AttachCardType int32

const (
	AttachCardType_ATTACH_CARD_NONE              AttachCardType = 0  // 无
	AttachCardType_ATTACH_CARD_GOODS             AttachCardType = 1  // 商品卡
	AttachCardType_ATTACH_CARD_VOTE              AttachCardType = 2  // 投票卡
	AttachCardType_ATTACH_CARD_UGC               AttachCardType = 3  // ugc视频卡
	AttachCardType_ATTACH_CARD_ACTIVITY          AttachCardType = 4  // 帮推
	AttachCardType_ATTACH_CARD_OFFICIAL_ACTIVITY AttachCardType = 5  // 官方活动
	AttachCardType_ATTACH_CARD_TOPIC             AttachCardType = 6  // 话题活动
	AttachCardType_ATTACH_CARD_OGV               AttachCardType = 7  // OGV
	AttachCardType_ATTACH_CARD_AUTO_OGV          AttachCardType = 8  // OGV自动出卡
	AttachCardType_ATTACH_CARD_GAME              AttachCardType = 9  // 游戏
	AttachCardType_ATTACH_CARD_MANGA             AttachCardType = 10 // 漫画
	AttachCardType_ATTACH_CARD_DECORATION        AttachCardType = 11 // 装扮
	AttachCardType_ATTACH_CARD_MATCH             AttachCardType = 12 // 赛事
	AttachCardType_ATTACH_CARD_PUGV              AttachCardType = 13 // 课程
	AttachCardType_ATTACH_CARD_RESERVE           AttachCardType = 14 // 预约
	AttachCardType_ATTACH_CARD_UP_TOPIC          AttachCardType = 15 // up主话题活动
)

// Enum value maps for AttachCardType.
var (
	AttachCardType_name = map[int32]string{
		0:  "ATTACH_CARD_NONE",
		1:  "ATTACH_CARD_GOODS",
		2:  "ATTACH_CARD_VOTE",
		3:  "ATTACH_CARD_UGC",
		4:  "ATTACH_CARD_ACTIVITY",
		5:  "ATTACH_CARD_OFFICIAL_ACTIVITY",
		6:  "ATTACH_CARD_TOPIC",
		7:  "ATTACH_CARD_OGV",
		8:  "ATTACH_CARD_AUTO_OGV",
		9:  "ATTACH_CARD_GAME",
		10: "ATTACH_CARD_MANGA",
		11: "ATTACH_CARD_DECORATION",
		12: "ATTACH_CARD_MATCH",
		13: "ATTACH_CARD_PUGV",
		14: "ATTACH_CARD_RESERVE",
		15: "ATTACH_CARD_UP_TOPIC",
	}
	AttachCardType_value = map[string]int32{
		"ATTACH_CARD_NONE":              0,
		"ATTACH_CARD_GOODS":             1,
		"ATTACH_CARD_VOTE":              2,
		"ATTACH_CARD_UGC":               3,
		"ATTACH_CARD_ACTIVITY":          4,
		"ATTACH_CARD_OFFICIAL_ACTIVITY": 5,
		"ATTACH_CARD_TOPIC":             6,
		"ATTACH_CARD_OGV":               7,
		"ATTACH_CARD_AUTO_OGV":          8,
		"ATTACH_CARD_GAME":              9,
		"ATTACH_CARD_MANGA":             10,
		"ATTACH_CARD_DECORATION":        11,
		"ATTACH_CARD_MATCH":             12,
		"ATTACH_CARD_PUGV":              13,
		"ATTACH_CARD_RESERVE":           14,
		"ATTACH_CARD_UP_TOPIC":          15,
	}
)

func (x AttachCardType) Enum() *AttachCardType {
	p := new(AttachCardType)
	*p = x
	return p
}

func (x AttachCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[1].Descriptor()
}

func (AttachCardType) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[1]
}

func (x AttachCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachCardType.Descriptor instead.
func (AttachCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{1}
}

type ContentType int32

const (
	ContentType_CONTENT_TYPE_NONE ContentType = 0  // 占位
	ContentType_TEXT              ContentType = 1  // 文本，简单内容，biz_id就是文本
	ContentType_AT                ContentType = 2  // @用户，简单内容，biz_id是用户uid
	ContentType_LOTTERY           ContentType = 3  // 抽奖，简单内容，biz_id是抽奖id
	ContentType_VOTE              ContentType = 4  // 投票，简单内容，biz_id是投票id
	ContentType_TOPIC             ContentType = 5  // 话题，简单内容，biz_id是话题id
	ContentType_GOODS             ContentType = 6  // 商品文字链，复杂内容，定义在GoodsContent结构，biz_id为空
	ContentType_BV                ContentType = 7  // bv，简单内容，biz_id是bvid，包括"BV1"等内容
	ContentType_AV                ContentType = 8  // av，简单内容，biz_id是avid
	ContentType_EMOJI             ContentType = 9  // 表情，简单内容，biz_id为空
	ContentType_USER              ContentType = 10 // 外露用户，暂未使用
	ContentType_CV                ContentType = 11 // 专栏，简单内容，biz_id是cvid
	ContentType_VC                ContentType = 12 // 废弃业务，无用
	ContentType_WEB               ContentType = 13 // 网址，简单内容，biz_id是网页链接
	ContentType_TAOBAO            ContentType = 14 // 淘宝内容，暂时不用
	ContentType_MAIL              ContentType = 15 // 邮箱，简单内容，biz_id是邮箱地址
	ContentType_OGV_SEASON        ContentType = 16 // 番剧season，简单内容，biz_id是番剧的season_id
	ContentType_OGV_EP            ContentType = 17 // 番剧ep，简单内容，biz_id是番剧的epid
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0:  "CONTENT_TYPE_NONE",
		1:  "TEXT",
		2:  "AT",
		3:  "LOTTERY",
		4:  "VOTE",
		5:  "TOPIC",
		6:  "GOODS",
		7:  "BV",
		8:  "AV",
		9:  "EMOJI",
		10: "USER",
		11: "CV",
		12: "VC",
		13: "WEB",
		14: "TAOBAO",
		15: "MAIL",
		16: "OGV_SEASON",
		17: "OGV_EP",
	}
	ContentType_value = map[string]int32{
		"CONTENT_TYPE_NONE": 0,
		"TEXT":              1,
		"AT":                2,
		"LOTTERY":           3,
		"VOTE":              4,
		"TOPIC":             5,
		"GOODS":             6,
		"BV":                7,
		"AV":                8,
		"EMOJI":             9,
		"USER":              10,
		"CV":                11,
		"VC":                12,
		"WEB":               13,
		"TAOBAO":            14,
		"MAIL":              15,
		"OGV_SEASON":        16,
		"OGV_EP":            17,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[2].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[2]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{2}
}

// 发布页预校验场景
type CreateInitCheckScene int32

const (
	CreateInitCheckScene_CREATE_INIT_CHECK_SCENE_INVALID       CreateInitCheckScene = 0 //
	CreateInitCheckScene_CREATE_INIT_CHECK_SCENE_NORMAL        CreateInitCheckScene = 1 // 动态页面右上角点击进入发布页
	CreateInitCheckScene_CREATE_INIT_CHECK_SCENE_REPOST        CreateInitCheckScene = 2 // 动态feed流转发、三点分享，动态详情页转发
	CreateInitCheckScene_CREATE_INIT_CHECK_SCENE_SHARE         CreateInitCheckScene = 3 // 其他页面分享到动态
	CreateInitCheckScene_CREATE_INIT_CHECK_SCENE_RESERVE_SHARE CreateInitCheckScene = 4 //
)

// Enum value maps for CreateInitCheckScene.
var (
	CreateInitCheckScene_name = map[int32]string{
		0: "CREATE_INIT_CHECK_SCENE_INVALID",
		1: "CREATE_INIT_CHECK_SCENE_NORMAL",
		2: "CREATE_INIT_CHECK_SCENE_REPOST",
		3: "CREATE_INIT_CHECK_SCENE_SHARE",
		4: "CREATE_INIT_CHECK_SCENE_RESERVE_SHARE",
	}
	CreateInitCheckScene_value = map[string]int32{
		"CREATE_INIT_CHECK_SCENE_INVALID":       0,
		"CREATE_INIT_CHECK_SCENE_NORMAL":        1,
		"CREATE_INIT_CHECK_SCENE_REPOST":        2,
		"CREATE_INIT_CHECK_SCENE_SHARE":         3,
		"CREATE_INIT_CHECK_SCENE_RESERVE_SHARE": 4,
	}
)

func (x CreateInitCheckScene) Enum() *CreateInitCheckScene {
	p := new(CreateInitCheckScene)
	*p = x
	return p
}

func (x CreateInitCheckScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateInitCheckScene) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[3].Descriptor()
}

func (CreateInitCheckScene) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[3]
}

func (x CreateInitCheckScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateInitCheckScene.Descriptor instead.
func (CreateInitCheckScene) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{3}
}

// 发布类型（场景）
type CreateScene int32

const (
	CreateScene_CREATE_SCENE_INVALID               CreateScene = 0 //
	CreateScene_CREATE_SCENE_CREATE_WORD           CreateScene = 1 // 发布纯文字动态
	CreateScene_CREATE_SCENE_CREATE_DRAW           CreateScene = 2 // 发布图文动态
	CreateScene_CREATE_SCENE_CREATE_DYN_VIDEO      CreateScene = 3 // 发布动态视频
	CreateScene_CREATE_SCENE_REPOST                CreateScene = 4 // 转发动态
	CreateScene_CREATE_SCENE_SHARE_BIZ             CreateScene = 5 // 分享业务方资源
	CreateScene_CREATE_SCENE_SHARE_PAGE            CreateScene = 6 // 分享网页（通用模板）
	CreateScene_CREATE_SCENE_SHARE_PROGRAM         CreateScene = 7 // 分享小程序
	CreateScene_CREATE_SCENE_REPLY_SYNC            CreateScene = 8 // 评论同步到动态
	CreateScene_CREATE_SCENE_REPLY_CREATE_ACTIVITY CreateScene = 9 // 评论同步到动态并且发起活动
)

// Enum value maps for CreateScene.
var (
	CreateScene_name = map[int32]string{
		0: "CREATE_SCENE_INVALID",
		1: "CREATE_SCENE_CREATE_WORD",
		2: "CREATE_SCENE_CREATE_DRAW",
		3: "CREATE_SCENE_CREATE_DYN_VIDEO",
		4: "CREATE_SCENE_REPOST",
		5: "CREATE_SCENE_SHARE_BIZ",
		6: "CREATE_SCENE_SHARE_PAGE",
		7: "CREATE_SCENE_SHARE_PROGRAM",
		8: "CREATE_SCENE_REPLY_SYNC",
		9: "CREATE_SCENE_REPLY_CREATE_ACTIVITY",
	}
	CreateScene_value = map[string]int32{
		"CREATE_SCENE_INVALID":               0,
		"CREATE_SCENE_CREATE_WORD":           1,
		"CREATE_SCENE_CREATE_DRAW":           2,
		"CREATE_SCENE_CREATE_DYN_VIDEO":      3,
		"CREATE_SCENE_REPOST":                4,
		"CREATE_SCENE_SHARE_BIZ":             5,
		"CREATE_SCENE_SHARE_PAGE":            6,
		"CREATE_SCENE_SHARE_PROGRAM":         7,
		"CREATE_SCENE_REPLY_SYNC":            8,
		"CREATE_SCENE_REPLY_CREATE_ACTIVITY": 9,
	}
)

func (x CreateScene) Enum() *CreateScene {
	p := new(CreateScene)
	*p = x
	return p
}

func (x CreateScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateScene) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[4].Descriptor()
}

func (CreateScene) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[4]
}

func (x CreateScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateScene.Descriptor instead.
func (CreateScene) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{4}
}

type ReserveSource int32

const (
	ReserveSource_RESERVE_SOURCE_NEW        ReserveSource = 0 //
	ReserveSource_RESERVE_SOURCE_ASSOCIATED ReserveSource = 1 //
)

// Enum value maps for ReserveSource.
var (
	ReserveSource_name = map[int32]string{
		0: "RESERVE_SOURCE_NEW",
		1: "RESERVE_SOURCE_ASSOCIATED",
	}
	ReserveSource_value = map[string]int32{
		"RESERVE_SOURCE_NEW":        0,
		"RESERVE_SOURCE_ASSOCIATED": 1,
	}
)

func (x ReserveSource) Enum() *ReserveSource {
	p := new(ReserveSource)
	*p = x
	return p
}

func (x ReserveSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveSource) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[5].Descriptor()
}

func (ReserveSource) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[5]
}

func (x ReserveSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveSource.Descriptor instead.
func (ReserveSource) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{5}
}

type UpPermissionType int32

const (
	UpPermissionType_UP_PERMISSION_TYPE_NONE              UpPermissionType = 0 // 占位
	UpPermissionType_UP_PERMISSION_TYPE_LOTTERY           UpPermissionType = 1 // 是否是抽奖的灰度用户，默认不是
	UpPermissionType_UP_PERMISSION_TYPE_CLIP_PUBLISHED    UpPermissionType = 2 // 之前是否发过小视频，默认没发过
	UpPermissionType_UP_PERMISSION_TYPE_UGC_ATTACH_CARD   UpPermissionType = 3 // 是否可以添加ugc附加卡，默认不可以
	UpPermissionType_UP_PERMISSION_TYPE_GOODS_ATTACH_CARD UpPermissionType = 4 // 是否有权限添加商品附加卡
	UpPermissionType_UP_PERMISSION_TYPE_CHOOSE_COMMENT    UpPermissionType = 5 // 是否有权限自主精选评论白名单，默认没有
	UpPermissionType_UP_PERMISSION_TYPE_CONTROL_COMMENT   UpPermissionType = 6 // 是否有权限关闭评论区，默认有
	UpPermissionType_UP_PERMISSION_TYPE_CONTROL_DANMU     UpPermissionType = 7 // 是否有权限关闭弹幕（仅对动态视频生效），默认有
	UpPermissionType_UP_PERMISSION_TYPE_VIDEO_RESERVE     UpPermissionType = 8 // 是否可以发起稿件预约
	UpPermissionType_UP_PERMISSION_TYPE_LIVE_RESERVE      UpPermissionType = 9 // 是否可以发起直播预约
)

// Enum value maps for UpPermissionType.
var (
	UpPermissionType_name = map[int32]string{
		0: "UP_PERMISSION_TYPE_NONE",
		1: "UP_PERMISSION_TYPE_LOTTERY",
		2: "UP_PERMISSION_TYPE_CLIP_PUBLISHED",
		3: "UP_PERMISSION_TYPE_UGC_ATTACH_CARD",
		4: "UP_PERMISSION_TYPE_GOODS_ATTACH_CARD",
		5: "UP_PERMISSION_TYPE_CHOOSE_COMMENT",
		6: "UP_PERMISSION_TYPE_CONTROL_COMMENT",
		7: "UP_PERMISSION_TYPE_CONTROL_DANMU",
		8: "UP_PERMISSION_TYPE_VIDEO_RESERVE",
		9: "UP_PERMISSION_TYPE_LIVE_RESERVE",
	}
	UpPermissionType_value = map[string]int32{
		"UP_PERMISSION_TYPE_NONE":              0,
		"UP_PERMISSION_TYPE_LOTTERY":           1,
		"UP_PERMISSION_TYPE_CLIP_PUBLISHED":    2,
		"UP_PERMISSION_TYPE_UGC_ATTACH_CARD":   3,
		"UP_PERMISSION_TYPE_GOODS_ATTACH_CARD": 4,
		"UP_PERMISSION_TYPE_CHOOSE_COMMENT":    5,
		"UP_PERMISSION_TYPE_CONTROL_COMMENT":   6,
		"UP_PERMISSION_TYPE_CONTROL_DANMU":     7,
		"UP_PERMISSION_TYPE_VIDEO_RESERVE":     8,
		"UP_PERMISSION_TYPE_LIVE_RESERVE":      9,
	}
)

func (x UpPermissionType) Enum() *UpPermissionType {
	p := new(UpPermissionType)
	*p = x
	return p
}

func (x UpPermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpPermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_common_dynamic_proto_enumTypes[6].Descriptor()
}

func (UpPermissionType) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_common_dynamic_proto_enumTypes[6]
}

func (x UpPermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpPermissionType.Descriptor instead.
func (UpPermissionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{6}
}

// at分组信息
type AtGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分组类型
	GroupType AtGroupType `protobuf:"varint,1,opt,name=group_type,json=groupType,proto3,enum=bilibili.dynamic.AtGroupType" json:"group_type,omitempty"`
	// 分组名称
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// items
	Items []*AtItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AtGroup) Reset() {
	*x = AtGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtGroup) ProtoMessage() {}

func (x *AtGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtGroup.ProtoReflect.Descriptor instead.
func (*AtGroup) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{0}
}

func (x *AtGroup) GetGroupType() AtGroupType {
	if x != nil {
		return x.GroupType
	}
	return AtGroupType_AT_GROUP_TYPE_DEFAULT
}

func (x *AtGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AtGroup) GetItems() []*AtItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// at返回单条信息
type AtItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 头像
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 粉丝数
	Fans int32 `protobuf:"varint,4,opt,name=fans,proto3" json:"fans,omitempty"`
	// 认证信息
	OfficialVerifyType int32 `protobuf:"varint,5,opt,name=official_verify_type,json=officialVerifyType,proto3" json:"official_verify_type,omitempty"`
}

func (x *AtItem) Reset() {
	*x = AtItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtItem) ProtoMessage() {}

func (x *AtItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtItem.ProtoReflect.Descriptor instead.
func (*AtItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{1}
}

func (x *AtItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AtItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AtItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *AtItem) GetFans() int32 {
	if x != nil {
		return x.Fans
	}
	return 0
}

func (x *AtItem) GetOfficialVerifyType() int32 {
	if x != nil {
		return x.OfficialVerifyType
	}
	return 0
}

// at列表-请求
type AtListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *AtListReq) Reset() {
	*x = AtListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtListReq) ProtoMessage() {}

func (x *AtListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtListReq.ProtoReflect.Descriptor instead.
func (*AtListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{2}
}

func (x *AtListReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// at列表-响应
type AtListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分组信息
	Groups []*AtGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *AtListRsp) Reset() {
	*x = AtListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtListRsp) ProtoMessage() {}

func (x *AtListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtListRsp.ProtoReflect.Descriptor instead.
func (*AtListRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{3}
}

func (x *AtListRsp) GetGroups() []*AtGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

// at搜索-请求
type AtSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 关键字
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *AtSearchReq) Reset() {
	*x = AtSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtSearchReq) ProtoMessage() {}

func (x *AtSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtSearchReq.ProtoReflect.Descriptor instead.
func (*AtSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{4}
}

func (x *AtSearchReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AtSearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type BottomBusiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务方资源id
	Rid int64 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// 业务方类型，定义在BottomBizType中
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *BottomBusiness) Reset() {
	*x = BottomBusiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BottomBusiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BottomBusiness) ProtoMessage() {}

func (x *BottomBusiness) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BottomBusiness.ProtoReflect.Descriptor instead.
func (*BottomBusiness) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{5}
}

func (x *BottomBusiness) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *BottomBusiness) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CreateActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityState int32 `protobuf:"varint,2,opt,name=activity_state,json=activityState,proto3" json:"activity_state,omitempty"`
	IsNewActivity int32 `protobuf:"varint,3,opt,name=is_new_activity,json=isNewActivity,proto3" json:"is_new_activity,omitempty"`
	Action int32 `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateActivity) Reset() {
	*x = CreateActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateActivity) ProtoMessage() {}

func (x *CreateActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateActivity.ProtoReflect.Descriptor instead.
func (*CreateActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{6}
}

func (x *CreateActivity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *CreateActivity) GetActivityState() int32 {
	if x != nil {
		return x.ActivityState
	}
	return 0
}

func (x *CreateActivity) GetIsNewActivity() int32 {
	if x != nil {
		return x.IsNewActivity
	}
	return 0
}

func (x *CreateActivity) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// 动态附带的附加大卡
type CreateAttachCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品大卡
	Goods *CreateGoodsCard `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods,omitempty"`
	// 通用附加大卡，目前仅限定Match,Game,Ugc,Pugv,Reserve，且同时只能有一个
	CommonCard *CreateCommonAttachCard `protobuf:"bytes,2,opt,name=common_card,json=commonCard,proto3" json:"common_card,omitempty"`
}

func (x *CreateAttachCard) Reset() {
	*x = CreateAttachCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttachCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttachCard) ProtoMessage() {}

func (x *CreateAttachCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttachCard.ProtoReflect.Descriptor instead.
func (*CreateAttachCard) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{7}
}

func (x *CreateAttachCard) GetGoods() *CreateGoodsCard {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *CreateAttachCard) GetCommonCard() *CreateCommonAttachCard {
	if x != nil {
		return x.CommonCard
	}
	return nil
}

// 发布页预校验-响应
type CreateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发布相关的配置项
	Setting *PublishSetting `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	// 用户具有的发布权限
	Permission *UpPermission `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	// 分享渠道信息
	ShareInfo *ShareChannel `protobuf:"bytes,3,opt,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
	// 小黄条
	YellowBar *PublishYellowBar `protobuf:"bytes,4,opt,name=yellow_bar,json=yellowBar,proto3" json:"yellow_bar,omitempty"`
	PlusRedDot *PlusRedDot `protobuf:"bytes,5,opt,name=plus_red_dot,json=plusRedDot,proto3" json:"plus_red_dot,omitempty"`
}

func (x *CreateCheckResp) Reset() {
	*x = CreateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckResp) ProtoMessage() {}

func (x *CreateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckResp.ProtoReflect.Descriptor instead.
func (*CreateCheckResp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCheckResp) GetSetting() *PublishSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *CreateCheckResp) GetPermission() *UpPermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *CreateCheckResp) GetShareInfo() *ShareChannel {
	if x != nil {
		return x.ShareInfo
	}
	return nil
}

func (x *CreateCheckResp) GetYellowBar() *PublishYellowBar {
	if x != nil {
		return x.YellowBar
	}
	return nil
}

func (x *CreateCheckResp) GetPlusRedDot() *PlusRedDot {
	if x != nil {
		return x.PlusRedDot
	}
	return nil
}

// 创建动态时附带的通用附加卡详情
type CreateCommonAttachCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用附加卡的类型
	Type AttachCardType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.dynamic.AttachCardType" json:"type,omitempty"`
	// 通用附加卡的业务id
	BizId int64 `protobuf:"varint,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	ReserveSource int32 `protobuf:"varint,3,opt,name=reserve_source,json=reserveSource,proto3" json:"reserve_source,omitempty"`
	ReserveLottery int32 `protobuf:"varint,4,opt,name=reserve_lottery,json=reserveLottery,proto3" json:"reserve_lottery,omitempty"`
}

func (x *CreateCommonAttachCard) Reset() {
	*x = CreateCommonAttachCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommonAttachCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommonAttachCard) ProtoMessage() {}

func (x *CreateCommonAttachCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommonAttachCard.ProtoReflect.Descriptor instead.
func (*CreateCommonAttachCard) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{9}
}

func (x *CreateCommonAttachCard) GetType() AttachCardType {
	if x != nil {
		return x.Type
	}
	return AttachCardType_ATTACH_CARD_NONE
}

func (x *CreateCommonAttachCard) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *CreateCommonAttachCard) GetReserveSource() int32 {
	if x != nil {
		return x.ReserveSource
	}
	return 0
}

func (x *CreateCommonAttachCard) GetReserveLottery() int32 {
	if x != nil {
		return x.ReserveLottery
	}
	return 0
}

// 动态-描述文字模块
type CreateContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 描述信息（已按高亮拆分）
	Contents []*CreateContentItem `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
}

func (x *CreateContent) Reset() {
	*x = CreateContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContent) ProtoMessage() {}

func (x *CreateContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContent.ProtoReflect.Descriptor instead.
func (*CreateContent) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{10}
}

func (x *CreateContent) GetContents() []*CreateContentItem {
	if x != nil {
		return x.Contents
	}
	return nil
}

// 文本描述
type CreateContentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 原始文案
	RawText string `protobuf:"bytes,1,opt,name=raw_text,json=rawText,proto3" json:"raw_text,omitempty"`
	// 类型
	Type ContentType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.dynamic.ContentType" json:"type,omitempty"`
	// 简单内容，可能为文字，BVID，AVID，uid等；复杂内容需要单独定义结构体
	BizId string `protobuf:"bytes,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 商品内容
	Goods *GoodsContent `protobuf:"bytes,4,opt,name=goods,proto3" json:"goods,omitempty"`
}

func (x *CreateContentItem) Reset() {
	*x = CreateContentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentItem) ProtoMessage() {}

func (x *CreateContentItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentItem.ProtoReflect.Descriptor instead.
func (*CreateContentItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{11}
}

func (x *CreateContentItem) GetRawText() string {
	if x != nil {
		return x.RawText
	}
	return ""
}

func (x *CreateContentItem) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_CONTENT_TYPE_NONE
}

func (x *CreateContentItem) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *CreateContentItem) GetGoods() *GoodsContent {
	if x != nil {
		return x.Goods
	}
	return nil
}

type CreateDynVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投稿平台来源，具体写什么@产品
	RelationFrom string `protobuf:"bytes,1,opt,name=relation_from,json=relationFrom,proto3" json:"relation_from,omitempty"`
	// 1 — 投稿入口 + 相册选择视频 2 — 投稿入口 + 拍摄 3 — 小视频入口 + 相册选择视频 4 — 小视频入口 + 拍摄
	BizFrom int32 `protobuf:"varint,3,opt,name=biz_from,json=bizFrom,proto3" json:"biz_from,omitempty"`
	// 投稿类型:  2-转载、1-自制
	Copyright int32 `protobuf:"varint,4,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// 是否公开投稿 0允许公开，1不允许公开 默认 0公开
	NoPublic int32 `protobuf:"varint,5,opt,name=no_public,json=noPublic,proto3" json:"no_public,omitempty"`
	// 是否允许转载字段 0允许，1不允许，默认为0    copyright = 1 自制的时候默认勾选上no_reprint=1
	NoReprint int32 `protobuf:"varint,6,opt,name=no_reprint,json=noReprint,proto3" json:"no_reprint,omitempty"`
	// 转载的时候必须填写，非空字符串
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	// 稿件封面必须填写,不能为空 封面不支持其他源站链接 请确保 cover 是 先经过上传接口
	Cover string `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	// 稿件分区ID 必须是有效的二级分区ID
	Tid int64 `protobuf:"varint,10,opt,name=tid,proto3" json:"tid,omitempty"`
	// 标签 多个标签请使用英文逗号连接
	Tag string `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag,omitempty"`
	// 稿件描述
	Desc string `protobuf:"bytes,12,opt,name=desc,proto3" json:"desc,omitempty"`
	// 当前输入环境下有，就输入http://domain/x/app/archive/desc/format返回的desc_format值
	// 如果返回null就输入默认为0， 表示当前环境（分区+投稿类型）不参与简介格式化
	DescFormatId int64 `protobuf:"varint,13,opt,name=desc_format_id,json=descFormatId,proto3" json:"desc_format_id,omitempty"`
	// 稿件是否开启充电面板，1为是, 0为否
	OpenElec int32 `protobuf:"varint,14,opt,name=open_elec,json=openElec,proto3" json:"open_elec,omitempty"`
	// 定时发布的时间
	Dtime int32 `protobuf:"varint,15,opt,name=dtime,proto3" json:"dtime,omitempty"`
	// 分P聚合字段
	Videos []*DynVideoMultiP `protobuf:"bytes,16,rep,name=videos,proto3" json:"videos,omitempty"`
	// 水印信息
	Watermark *DynVideoWatermark `protobuf:"bytes,17,opt,name=watermark,proto3" json:"watermark,omitempty"`
	// 新增加通过tag来参加活动
	MissionId int64 `protobuf:"varint,18,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	// 新增加可以添加动态内容
	Dynamic string `protobuf:"bytes,19,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	// 序列化后的extend_info扩展信息
	DynamicExtension string `protobuf:"bytes,20,opt,name=dynamic_extension,json=dynamicExtension,proto3" json:"dynamic_extension,omitempty"`
	// 客户端控制字段
	DynamicCtrl string `protobuf:"bytes,21,opt,name=dynamic_ctrl,json=dynamicCtrl,proto3" json:"dynamic_ctrl,omitempty"`
	// 动态来源
	DynamicFrom string `protobuf:"bytes,22,opt,name=dynamic_from,json=dynamicFrom,proto3" json:"dynamic_from,omitempty"`
	// 抽奖服务生成的ID
	LotteryId int64 `protobuf:"varint,23,opt,name=lottery_id,json=lotteryId,proto3" json:"lottery_id,omitempty"`
	Vote *DynVideoVote `protobuf:"bytes,24,opt,name=vote,proto3" json:"vote,omitempty"`
	// 精选评论开关, true为开
	UpSelectionReply bool `protobuf:"varint,25,opt,name=up_selection_reply,json=upSelectionReply,proto3" json:"up_selection_reply,omitempty"`
	// up主关闭评论
	UpCloseReply bool `protobuf:"varint,26,opt,name=up_close_reply,json=upCloseReply,proto3" json:"up_close_reply,omitempty"`
	// up主关闭弹幕
	UpCloseDanmu bool `protobuf:"varint,27,opt,name=up_close_danmu,json=upCloseDanmu,proto3" json:"up_close_danmu,omitempty"`
	// 稿件投稿来源
	UpFrom int64 `protobuf:"varint,28,opt,name=up_from,json=upFrom,proto3" json:"up_from,omitempty"`
	Duration int64 `protobuf:"varint,29,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *CreateDynVideo) Reset() {
	*x = CreateDynVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDynVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDynVideo) ProtoMessage() {}

func (x *CreateDynVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDynVideo.ProtoReflect.Descriptor instead.
func (*CreateDynVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{12}
}

func (x *CreateDynVideo) GetRelationFrom() string {
	if x != nil {
		return x.RelationFrom
	}
	return ""
}

func (x *CreateDynVideo) GetBizFrom() int32 {
	if x != nil {
		return x.BizFrom
	}
	return 0
}

func (x *CreateDynVideo) GetCopyright() int32 {
	if x != nil {
		return x.Copyright
	}
	return 0
}

func (x *CreateDynVideo) GetNoPublic() int32 {
	if x != nil {
		return x.NoPublic
	}
	return 0
}

func (x *CreateDynVideo) GetNoReprint() int32 {
	if x != nil {
		return x.NoReprint
	}
	return 0
}

func (x *CreateDynVideo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CreateDynVideo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateDynVideo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDynVideo) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *CreateDynVideo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CreateDynVideo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateDynVideo) GetDescFormatId() int64 {
	if x != nil {
		return x.DescFormatId
	}
	return 0
}

func (x *CreateDynVideo) GetOpenElec() int32 {
	if x != nil {
		return x.OpenElec
	}
	return 0
}

func (x *CreateDynVideo) GetDtime() int32 {
	if x != nil {
		return x.Dtime
	}
	return 0
}

func (x *CreateDynVideo) GetVideos() []*DynVideoMultiP {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *CreateDynVideo) GetWatermark() *DynVideoWatermark {
	if x != nil {
		return x.Watermark
	}
	return nil
}

func (x *CreateDynVideo) GetMissionId() int64 {
	if x != nil {
		return x.MissionId
	}
	return 0
}

func (x *CreateDynVideo) GetDynamic() string {
	if x != nil {
		return x.Dynamic
	}
	return ""
}

func (x *CreateDynVideo) GetDynamicExtension() string {
	if x != nil {
		return x.DynamicExtension
	}
	return ""
}

func (x *CreateDynVideo) GetDynamicCtrl() string {
	if x != nil {
		return x.DynamicCtrl
	}
	return ""
}

func (x *CreateDynVideo) GetDynamicFrom() string {
	if x != nil {
		return x.DynamicFrom
	}
	return ""
}

func (x *CreateDynVideo) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

func (x *CreateDynVideo) GetVote() *DynVideoVote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *CreateDynVideo) GetUpSelectionReply() bool {
	if x != nil {
		return x.UpSelectionReply
	}
	return false
}

func (x *CreateDynVideo) GetUpCloseReply() bool {
	if x != nil {
		return x.UpCloseReply
	}
	return false
}

func (x *CreateDynVideo) GetUpCloseDanmu() bool {
	if x != nil {
		return x.UpCloseDanmu
	}
	return false
}

func (x *CreateDynVideo) GetUpFrom() int64 {
	if x != nil {
		return x.UpFrom
	}
	return 0
}

func (x *CreateDynVideo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 创建动态视频的应答包（透传给客户端）
type CreateDynVideoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 稿件id
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 说明信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 推荐的活动信息
	SubmitactBanner *DynVideoSubmitActBanner `protobuf:"bytes,3,opt,name=submitact_banner,json=submitactBanner,proto3" json:"submitact_banner,omitempty"`
	PushIntro *DynVideoPushIntro `protobuf:"bytes,4,opt,name=push_intro,json=pushIntro,proto3" json:"push_intro,omitempty"`
}

func (x *CreateDynVideoResult) Reset() {
	*x = CreateDynVideoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDynVideoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDynVideoResult) ProtoMessage() {}

func (x *CreateDynVideoResult) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDynVideoResult.ProtoReflect.Descriptor instead.
func (*CreateDynVideoResult) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDynVideoResult) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CreateDynVideoResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDynVideoResult) GetSubmitactBanner() *DynVideoSubmitActBanner {
	if x != nil {
		return x.SubmitactBanner
	}
	return nil
}

func (x *CreateDynVideoResult) GetPushIntro() *DynVideoPushIntro {
	if x != nil {
		return x.PushIntro
	}
	return nil
}

// 创建动态时附带的商品大卡详情
type CreateGoodsCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品大卡中的商品id
	ItemId []string `protobuf:"bytes,1,rep,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *CreateGoodsCard) Reset() {
	*x = CreateGoodsCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsCard) ProtoMessage() {}

func (x *CreateGoodsCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsCard.ProtoReflect.Descriptor instead.
func (*CreateGoodsCard) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{14}
}

func (x *CreateGoodsCard) GetItemId() []string {
	if x != nil {
		return x.ItemId
	}
	return nil
}

// 动态创建时的特殊选项
type CreateOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论区展示UP自己精选的评论
	UpChooseComment int32 `protobuf:"varint,1,opt,name=up_choose_comment,json=upChooseComment,proto3" json:"up_choose_comment,omitempty"`
	// 初始评论区是关闭状态
	CloseComment int32 `protobuf:"varint,2,opt,name=close_comment,json=closeComment,proto3" json:"close_comment,omitempty"`
	// 该动态不会被折叠
	// 目前仅抽奖开奖动态不会被折叠
	FoldExclude int32 `protobuf:"varint,3,opt,name=fold_exclude,json=foldExclude,proto3" json:"fold_exclude,omitempty"`
	// 审核等级，仅服务端发布时有效
	// 100：自动过审
	// 非100：默认的内网审核
	// 默认为0
	AuditLevel int32 `protobuf:"varint,4,opt,name=audit_level,json=auditLevel,proto3" json:"audit_level,omitempty"`
	// 根据转发内容同步生成一条源动态/资源的评论
	// 仅转发和分享时有效
	SyncToComment int32 `protobuf:"varint,5,opt,name=sync_to_comment,json=syncToComment,proto3" json:"sync_to_comment,omitempty"`
	VideoShareInfo *VideoShareInfo `protobuf:"bytes,6,opt,name=video_share_info,json=videoShareInfo,proto3" json:"video_share_info,omitempty"`
	Activity *CreateActivity `protobuf:"bytes,7,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *CreateOption) Reset() {
	*x = CreateOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOption) ProtoMessage() {}

func (x *CreateOption) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOption.ProtoReflect.Descriptor instead.
func (*CreateOption) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{15}
}

func (x *CreateOption) GetUpChooseComment() int32 {
	if x != nil {
		return x.UpChooseComment
	}
	return 0
}

func (x *CreateOption) GetCloseComment() int32 {
	if x != nil {
		return x.CloseComment
	}
	return 0
}

func (x *CreateOption) GetFoldExclude() int32 {
	if x != nil {
		return x.FoldExclude
	}
	return 0
}

func (x *CreateOption) GetAuditLevel() int32 {
	if x != nil {
		return x.AuditLevel
	}
	return 0
}

func (x *CreateOption) GetSyncToComment() int32 {
	if x != nil {
		return x.SyncToComment
	}
	return 0
}

func (x *CreateOption) GetVideoShareInfo() *VideoShareInfo {
	if x != nil {
		return x.VideoShareInfo
	}
	return nil
}

func (x *CreateOption) GetActivity() *CreateActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

// 创建图文动态时的图片信息
type CreatePic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上传图片URL
	ImgSrc string `protobuf:"bytes,1,opt,name=img_src,json=imgSrc,proto3" json:"img_src,omitempty"`
	// 图片宽度
	ImgWidth float64 `protobuf:"fixed64,2,opt,name=img_width,json=imgWidth,proto3" json:"img_width,omitempty"`
	// 图片高度
	ImgHeight float64 `protobuf:"fixed64,3,opt,name=img_height,json=imgHeight,proto3" json:"img_height,omitempty"`
	// 图片大小，单位KB
	ImgSize float64 `protobuf:"fixed64,4,opt,name=img_size,json=imgSize,proto3" json:"img_size,omitempty"`
	ImgTags []*CreatePicTag `protobuf:"bytes,5,rep,name=img_tags,json=imgTags,proto3" json:"img_tags,omitempty"`
}

func (x *CreatePic) Reset() {
	*x = CreatePic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePic) ProtoMessage() {}

func (x *CreatePic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePic.ProtoReflect.Descriptor instead.
func (*CreatePic) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{16}
}

func (x *CreatePic) GetImgSrc() string {
	if x != nil {
		return x.ImgSrc
	}
	return ""
}

func (x *CreatePic) GetImgWidth() float64 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *CreatePic) GetImgHeight() float64 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

func (x *CreatePic) GetImgSize() float64 {
	if x != nil {
		return x.ImgSize
	}
	return 0
}

func (x *CreatePic) GetImgTags() []*CreatePicTag {
	if x != nil {
		return x.ImgTags
	}
	return nil
}

type CreatePicTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Tid int64 `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Text string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	TextString string `protobuf:"bytes,5,opt,name=text_string,json=textString,proto3" json:"text_string,omitempty"`
	Type int64 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	SourceType int64 `protobuf:"varint,7,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	SchemaUrl string `protobuf:"bytes,9,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	JumpUrl string `protobuf:"bytes,10,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Orientation int64 `protobuf:"varint,11,opt,name=orientation,proto3" json:"orientation,omitempty"`
	X int64 `protobuf:"varint,12,opt,name=x,proto3" json:"x,omitempty"`
	Y int64 `protobuf:"varint,13,opt,name=y,proto3" json:"y,omitempty"`
	Poi string `protobuf:"bytes,14,opt,name=poi,proto3" json:"poi,omitempty"`
}

func (x *CreatePicTag) Reset() {
	*x = CreatePicTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePicTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePicTag) ProtoMessage() {}

func (x *CreatePicTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePicTag.ProtoReflect.Descriptor instead.
func (*CreatePicTag) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePicTag) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CreatePicTag) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *CreatePicTag) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *CreatePicTag) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreatePicTag) GetTextString() string {
	if x != nil {
		return x.TextString
	}
	return ""
}

func (x *CreatePicTag) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreatePicTag) GetSourceType() int64 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *CreatePicTag) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreatePicTag) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

func (x *CreatePicTag) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *CreatePicTag) GetOrientation() int64 {
	if x != nil {
		return x.Orientation
	}
	return 0
}

func (x *CreatePicTag) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CreatePicTag) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *CreatePicTag) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

// 创建动态-响应
type CreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态id
	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 动态id str
	DynIdStr string `protobuf:"bytes,2,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
	// 动态的类型
	DynType int64 `protobuf:"varint,3,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 动态id
	DynRid int64 `protobuf:"varint,4,opt,name=dyn_rid,json=dynRid,proto3" json:"dyn_rid,omitempty"`
	// 假卡
	FakeCard *v2.DynamicItem `protobuf:"bytes,5,opt,name=fake_card,json=fakeCard,proto3" json:"fake_card,omitempty"`
	// 视频
	VideoResult *CreateDynVideoResult `protobuf:"bytes,6,opt,name=video_result,json=videoResult,proto3" json:"video_result,omitempty"`
}

func (x *CreateResp) Reset() {
	*x = CreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResp) ProtoMessage() {}

func (x *CreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResp.ProtoReflect.Descriptor instead.
func (*CreateResp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{18}
}

func (x *CreateResp) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *CreateResp) GetDynIdStr() string {
	if x != nil {
		return x.DynIdStr
	}
	return ""
}

func (x *CreateResp) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *CreateResp) GetDynRid() int64 {
	if x != nil {
		return x.DynRid
	}
	return 0
}

func (x *CreateResp) GetFakeCard() *v2.DynamicItem {
	if x != nil {
		return x.FakeCard
	}
	return nil
}

func (x *CreateResp) GetVideoResult() *CreateDynVideoResult {
	if x != nil {
		return x.VideoResult
	}
	return nil
}

// 动态附带的小卡
type CreateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// lbs小卡
	Lbs *ExtLbs `protobuf:"bytes,1,opt,name=lbs,proto3" json:"lbs,omitempty"`
	// 游戏通过SDK发布的动态需要带上游戏小卡
	SdkGame *BottomBusiness `protobuf:"bytes,2,opt,name=sdk_game,json=sdkGame,proto3" json:"sdk_game,omitempty"`
	// 必剪发布的动态需要带上必剪小卡
	Diversion *BottomBusiness `protobuf:"bytes,3,opt,name=diversion,proto3" json:"diversion,omitempty"`
}

func (x *CreateTag) Reset() {
	*x = CreateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTag) ProtoMessage() {}

func (x *CreateTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTag.ProtoReflect.Descriptor instead.
func (*CreateTag) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{19}
}

func (x *CreateTag) GetLbs() *ExtLbs {
	if x != nil {
		return x.Lbs
	}
	return nil
}

func (x *CreateTag) GetSdkGame() *BottomBusiness {
	if x != nil {
		return x.SdkGame
	}
	return nil
}

func (x *CreateTag) GetDiversion() *BottomBusiness {
	if x != nil {
		return x.Diversion
	}
	return nil
}

type CreateTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTopic) Reset() {
	*x = CreateTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopic) ProtoMessage() {}

func (x *CreateTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopic.ProtoReflect.Descriptor instead.
func (*CreateTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{20}
}

func (x *CreateTopic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTopic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 动态的标识
type DynIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态id
	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	// 动态反向id，通过(type+rid组合)也可以唯一标识一个动态，与dyn_id出现任意一个即可
	RevsId *DynRevsId `protobuf:"bytes,2,opt,name=revs_id,json=revsId,proto3" json:"revs_id,omitempty"`
}

func (x *DynIdentity) Reset() {
	*x = DynIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynIdentity) ProtoMessage() {}

func (x *DynIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynIdentity.ProtoReflect.Descriptor instead.
func (*DynIdentity) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{21}
}

func (x *DynIdentity) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *DynIdentity) GetRevsId() *DynRevsId {
	if x != nil {
		return x.RevsId
	}
	return nil
}

type DynRevsId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态类型
	DynType int64 `protobuf:"varint,1,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	// 业务id
	Rid int64 `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *DynRevsId) Reset() {
	*x = DynRevsId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynRevsId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynRevsId) ProtoMessage() {}

func (x *DynRevsId) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynRevsId.ProtoReflect.Descriptor instead.
func (*DynRevsId) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{22}
}

func (x *DynRevsId) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *DynRevsId) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

// 动态视频分P视频编辑环境上报信息
type DynVideoEditor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Upfrom int32 `protobuf:"varint,2,opt,name=upfrom,proto3" json:"upfrom,omitempty"`
	// 滤镜
	Filters string `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	// 字体
	Fonts string `protobuf:"bytes,4,opt,name=fonts,proto3" json:"fonts,omitempty"`
	// 字幕
	Subtitles string `protobuf:"bytes,5,opt,name=subtitles,proto3" json:"subtitles,omitempty"`
	// bgm
	Bgms string `protobuf:"bytes,6,opt,name=bgms,proto3" json:"bgms,omitempty"`
	// 3d拍摄贴纸
	Stickers string `protobuf:"bytes,7,opt,name=stickers,proto3" json:"stickers,omitempty"`
	// 2d投稿贴纸
	VideoupStickers string `protobuf:"bytes,8,opt,name=videoup_stickers,json=videoupStickers,proto3" json:"videoup_stickers,omitempty"`
	// 视频转场特效
	Trans string `protobuf:"bytes,9,opt,name=trans,proto3" json:"trans,omitempty"`
	// 编辑器的主题使用相关
	Makeups string `protobuf:"bytes,10,opt,name=makeups,proto3" json:"makeups,omitempty"`
	// 整容之外科手术
	Surgerys string `protobuf:"bytes,11,opt,name=surgerys,proto3" json:"surgerys,omitempty"`
	// 美摄特定的videofx
	Videofxs string `protobuf:"bytes,12,opt,name=videofxs,proto3" json:"videofxs,omitempty"`
	// 编辑器的主题使用相关
	Themes string `protobuf:"bytes,13,opt,name=themes,proto3" json:"themes,omitempty"`
	// 拍摄之稿件合拍
	Cooperates string `protobuf:"bytes,14,opt,name=cooperates,proto3" json:"cooperates,omitempty"`
	// 拍摄之音乐卡点视频
	Rhythms string `protobuf:"bytes,15,opt,name=rhythms,proto3" json:"rhythms,omitempty"`
	// mvp特效
	Effects string `protobuf:"bytes,16,opt,name=effects,proto3" json:"effects,omitempty"`
	// mvp背景
	Backgrounds string `protobuf:"bytes,17,opt,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	// mvp视频
	Videos string `protobuf:"bytes,18,opt,name=videos,proto3" json:"videos,omitempty"`
	// mvp音效
	Sounds string `protobuf:"bytes,19,opt,name=sounds,proto3" json:"sounds,omitempty"`
	// mvp花字
	Flowers string `protobuf:"bytes,20,opt,name=flowers,proto3" json:"flowers,omitempty"`
	// mvp封面模板
	CoverTemplates string `protobuf:"bytes,21,opt,name=cover_templates,json=coverTemplates,proto3" json:"cover_templates,omitempty"`
	// tts
	Tts string `protobuf:"bytes,22,opt,name=tts,proto3" json:"tts,omitempty"`
	// openings
	Openings string `protobuf:"bytes,23,opt,name=openings,proto3" json:"openings,omitempty"`
	// 录音题词
	RecordText bool `protobuf:"varint,24,opt,name=record_text,json=recordText,proto3" json:"record_text,omitempty"`
	// 虚拟形象上报
	Vupers string `protobuf:"bytes,25,opt,name=vupers,proto3" json:"vupers,omitempty"`
	Features string `protobuf:"bytes,26,opt,name=features,proto3" json:"features,omitempty"`
	BcutFeatures string `protobuf:"bytes,27,opt,name=bcut_features,json=bcutFeatures,proto3" json:"bcut_features,omitempty"`
	AudioRecord int32 `protobuf:"varint,28,opt,name=audio_record,json=audioRecord,proto3" json:"audio_record,omitempty"`
	Camera int32 `protobuf:"varint,29,opt,name=camera,proto3" json:"camera,omitempty"`
	Speed int32 `protobuf:"varint,30,opt,name=speed,proto3" json:"speed,omitempty"`
	CameraRotate int32 `protobuf:"varint,31,opt,name=camera_rotate,json=cameraRotate,proto3" json:"camera_rotate,omitempty"`
	ScreenRecord int32 `protobuf:"varint,32,opt,name=screen_record,json=screenRecord,proto3" json:"screen_record,omitempty"`
	DefaultEnd int32 `protobuf:"varint,33,opt,name=default_end,json=defaultEnd,proto3" json:"default_end,omitempty"`
	Duration int32 `protobuf:"varint,34,opt,name=duration,proto3" json:"duration,omitempty"`
	PicCount int32 `protobuf:"varint,35,opt,name=pic_count,json=picCount,proto3" json:"pic_count,omitempty"`
	VideoCount int32 `protobuf:"varint,36,opt,name=video_count,json=videoCount,proto3" json:"video_count,omitempty"`
	ShotDuration int32 `protobuf:"varint,37,opt,name=shot_duration,json=shotDuration,proto3" json:"shot_duration,omitempty"`
	ShotGame string `protobuf:"bytes,38,opt,name=shot_game,json=shotGame,proto3" json:"shot_game,omitempty"`
	Highlight bool `protobuf:"varint,39,opt,name=highlight,proto3" json:"highlight,omitempty"`
	HighlightCnt int32 `protobuf:"varint,40,opt,name=highlight_cnt,json=highlightCnt,proto3" json:"highlight_cnt,omitempty"`
	PipCount int32 `protobuf:"varint,41,opt,name=pip_count,json=pipCount,proto3" json:"pip_count,omitempty"`
}

func (x *DynVideoEditor) Reset() {
	*x = DynVideoEditor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoEditor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoEditor) ProtoMessage() {}

func (x *DynVideoEditor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoEditor.ProtoReflect.Descriptor instead.
func (*DynVideoEditor) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{23}
}

func (x *DynVideoEditor) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *DynVideoEditor) GetUpfrom() int32 {
	if x != nil {
		return x.Upfrom
	}
	return 0
}

func (x *DynVideoEditor) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *DynVideoEditor) GetFonts() string {
	if x != nil {
		return x.Fonts
	}
	return ""
}

func (x *DynVideoEditor) GetSubtitles() string {
	if x != nil {
		return x.Subtitles
	}
	return ""
}

func (x *DynVideoEditor) GetBgms() string {
	if x != nil {
		return x.Bgms
	}
	return ""
}

func (x *DynVideoEditor) GetStickers() string {
	if x != nil {
		return x.Stickers
	}
	return ""
}

func (x *DynVideoEditor) GetVideoupStickers() string {
	if x != nil {
		return x.VideoupStickers
	}
	return ""
}

func (x *DynVideoEditor) GetTrans() string {
	if x != nil {
		return x.Trans
	}
	return ""
}

func (x *DynVideoEditor) GetMakeups() string {
	if x != nil {
		return x.Makeups
	}
	return ""
}

func (x *DynVideoEditor) GetSurgerys() string {
	if x != nil {
		return x.Surgerys
	}
	return ""
}

func (x *DynVideoEditor) GetVideofxs() string {
	if x != nil {
		return x.Videofxs
	}
	return ""
}

func (x *DynVideoEditor) GetThemes() string {
	if x != nil {
		return x.Themes
	}
	return ""
}

func (x *DynVideoEditor) GetCooperates() string {
	if x != nil {
		return x.Cooperates
	}
	return ""
}

func (x *DynVideoEditor) GetRhythms() string {
	if x != nil {
		return x.Rhythms
	}
	return ""
}

func (x *DynVideoEditor) GetEffects() string {
	if x != nil {
		return x.Effects
	}
	return ""
}

func (x *DynVideoEditor) GetBackgrounds() string {
	if x != nil {
		return x.Backgrounds
	}
	return ""
}

func (x *DynVideoEditor) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *DynVideoEditor) GetSounds() string {
	if x != nil {
		return x.Sounds
	}
	return ""
}

func (x *DynVideoEditor) GetFlowers() string {
	if x != nil {
		return x.Flowers
	}
	return ""
}

func (x *DynVideoEditor) GetCoverTemplates() string {
	if x != nil {
		return x.CoverTemplates
	}
	return ""
}

func (x *DynVideoEditor) GetTts() string {
	if x != nil {
		return x.Tts
	}
	return ""
}

func (x *DynVideoEditor) GetOpenings() string {
	if x != nil {
		return x.Openings
	}
	return ""
}

func (x *DynVideoEditor) GetRecordText() bool {
	if x != nil {
		return x.RecordText
	}
	return false
}

func (x *DynVideoEditor) GetVupers() string {
	if x != nil {
		return x.Vupers
	}
	return ""
}

func (x *DynVideoEditor) GetFeatures() string {
	if x != nil {
		return x.Features
	}
	return ""
}

func (x *DynVideoEditor) GetBcutFeatures() string {
	if x != nil {
		return x.BcutFeatures
	}
	return ""
}

func (x *DynVideoEditor) GetAudioRecord() int32 {
	if x != nil {
		return x.AudioRecord
	}
	return 0
}

func (x *DynVideoEditor) GetCamera() int32 {
	if x != nil {
		return x.Camera
	}
	return 0
}

func (x *DynVideoEditor) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *DynVideoEditor) GetCameraRotate() int32 {
	if x != nil {
		return x.CameraRotate
	}
	return 0
}

func (x *DynVideoEditor) GetScreenRecord() int32 {
	if x != nil {
		return x.ScreenRecord
	}
	return 0
}

func (x *DynVideoEditor) GetDefaultEnd() int32 {
	if x != nil {
		return x.DefaultEnd
	}
	return 0
}

func (x *DynVideoEditor) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DynVideoEditor) GetPicCount() int32 {
	if x != nil {
		return x.PicCount
	}
	return 0
}

func (x *DynVideoEditor) GetVideoCount() int32 {
	if x != nil {
		return x.VideoCount
	}
	return 0
}

func (x *DynVideoEditor) GetShotDuration() int32 {
	if x != nil {
		return x.ShotDuration
	}
	return 0
}

func (x *DynVideoEditor) GetShotGame() string {
	if x != nil {
		return x.ShotGame
	}
	return ""
}

func (x *DynVideoEditor) GetHighlight() bool {
	if x != nil {
		return x.Highlight
	}
	return false
}

func (x *DynVideoEditor) GetHighlightCnt() int32 {
	if x != nil {
		return x.HighlightCnt
	}
	return 0
}

func (x *DynVideoEditor) GetPipCount() int32 {
	if x != nil {
		return x.PipCount
	}
	return 0
}

type DynVideoHotAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActId int64 `protobuf:"varint,1,opt,name=act_id,json=actId,proto3" json:"act_id,omitempty"`
	Etime int64 `protobuf:"varint,2,opt,name=etime,proto3" json:"etime,omitempty"`
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Pic string `protobuf:"bytes,4,opt,name=pic,proto3" json:"pic,omitempty"`
	Stime int64 `protobuf:"varint,5,opt,name=stime,proto3" json:"stime,omitempty"`
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *DynVideoHotAct) Reset() {
	*x = DynVideoHotAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoHotAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoHotAct) ProtoMessage() {}

func (x *DynVideoHotAct) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoHotAct.ProtoReflect.Descriptor instead.
func (*DynVideoHotAct) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{24}
}

func (x *DynVideoHotAct) GetActId() int64 {
	if x != nil {
		return x.ActId
	}
	return 0
}

func (x *DynVideoHotAct) GetEtime() int64 {
	if x != nil {
		return x.Etime
	}
	return 0
}

func (x *DynVideoHotAct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DynVideoHotAct) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *DynVideoHotAct) GetStime() int64 {
	if x != nil {
		return x.Stime
	}
	return 0
}

func (x *DynVideoHotAct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynVideoHotAct) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

// 动态视频分P聚合字段
type DynVideoMultiP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分P标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 分P的文件名
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	// 编辑环境上报信息
	Editor *DynVideoEditor `protobuf:"bytes,4,opt,name=editor,proto3" json:"editor,omitempty"`
}

func (x *DynVideoMultiP) Reset() {
	*x = DynVideoMultiP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoMultiP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoMultiP) ProtoMessage() {}

func (x *DynVideoMultiP) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoMultiP.ProtoReflect.Descriptor instead.
func (*DynVideoMultiP) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{25}
}

func (x *DynVideoMultiP) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynVideoMultiP) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DynVideoMultiP) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *DynVideoMultiP) GetEditor() *DynVideoEditor {
	if x != nil {
		return x.Editor
	}
	return nil
}

type DynVideoPushIntro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *DynVideoPushIntro) Reset() {
	*x = DynVideoPushIntro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoPushIntro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoPushIntro) ProtoMessage() {}

func (x *DynVideoPushIntro) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoPushIntro.ProtoReflect.Descriptor instead.
func (*DynVideoPushIntro) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{26}
}

func (x *DynVideoPushIntro) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *DynVideoPushIntro) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type DynVideoSubmitActBanner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotactText string `protobuf:"bytes,1,opt,name=hotact_text,json=hotactText,proto3" json:"hotact_text,omitempty"`
	HotactUrl string `protobuf:"bytes,2,opt,name=hotact_url,json=hotactUrl,proto3" json:"hotact_url,omitempty"`
	List []*DynVideoHotAct `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DynVideoSubmitActBanner) Reset() {
	*x = DynVideoSubmitActBanner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoSubmitActBanner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoSubmitActBanner) ProtoMessage() {}

func (x *DynVideoSubmitActBanner) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoSubmitActBanner.ProtoReflect.Descriptor instead.
func (*DynVideoSubmitActBanner) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{27}
}

func (x *DynVideoSubmitActBanner) GetHotactText() string {
	if x != nil {
		return x.HotactText
	}
	return ""
}

func (x *DynVideoSubmitActBanner) GetHotactUrl() string {
	if x != nil {
		return x.HotactUrl
	}
	return ""
}

func (x *DynVideoSubmitActBanner) GetList() []*DynVideoHotAct {
	if x != nil {
		return x.List
	}
	return nil
}

type DynVideoVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId int64 `protobuf:"varint,1,opt,name=vote_id,json=voteId,proto3" json:"vote_id,omitempty"`
	VoteTitle string `protobuf:"bytes,2,opt,name=vote_title,json=voteTitle,proto3" json:"vote_title,omitempty"`
	TopForReply int32 `protobuf:"varint,3,opt,name=top_for_reply,json=topForReply,proto3" json:"top_for_reply,omitempty"`
}

func (x *DynVideoVote) Reset() {
	*x = DynVideoVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoVote) ProtoMessage() {}

func (x *DynVideoVote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoVote.ProtoReflect.Descriptor instead.
func (*DynVideoVote) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{28}
}

func (x *DynVideoVote) GetVoteId() int64 {
	if x != nil {
		return x.VoteId
	}
	return 0
}

func (x *DynVideoVote) GetVoteTitle() string {
	if x != nil {
		return x.VoteTitle
	}
	return ""
}

func (x *DynVideoVote) GetTopForReply() int32 {
	if x != nil {
		return x.TopForReply
	}
	return 0
}

// 动态视频水印信息
type DynVideoWatermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 水印状态
	// 0-关闭 1-打开 2-预览
	State int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	// 类型
	// 1-用户昵称类型 2-用户id类型 3-用户名在logo下面
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 位置
	// 1-左上 2-右上 3-左下 4-右下
	Position int32 `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *DynVideoWatermark) Reset() {
	*x = DynVideoWatermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynVideoWatermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynVideoWatermark) ProtoMessage() {}

func (x *DynVideoWatermark) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynVideoWatermark.ProtoReflect.Descriptor instead.
func (*DynVideoWatermark) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{29}
}

func (x *DynVideoWatermark) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *DynVideoWatermark) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DynVideoWatermark) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type ExtLbs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Distance int64 `protobuf:"varint,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Poi string `protobuf:"bytes,4,opt,name=poi,proto3" json:"poi,omitempty"`
	Location *LbsLoc `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	ShowTitle string `protobuf:"bytes,6,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	ShowDistance string `protobuf:"bytes,8,opt,name=show_distance,json=showDistance,proto3" json:"show_distance,omitempty"`
}

func (x *ExtLbs) Reset() {
	*x = ExtLbs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtLbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtLbs) ProtoMessage() {}

func (x *ExtLbs) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtLbs.ProtoReflect.Descriptor instead.
func (*ExtLbs) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{30}
}

func (x *ExtLbs) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExtLbs) GetDistance() int64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ExtLbs) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ExtLbs) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

func (x *ExtLbs) GetLocation() *LbsLoc {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ExtLbs) GetShowTitle() string {
	if x != nil {
		return x.ShowTitle
	}
	return ""
}

func (x *ExtLbs) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExtLbs) GetShowDistance() string {
	if x != nil {
		return x.ShowDistance
	}
	return ""
}

// 根据name取uid-请求
type GetUidByNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询昵称列表
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *GetUidByNameReq) Reset() {
	*x = GetUidByNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUidByNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUidByNameReq) ProtoMessage() {}

func (x *GetUidByNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUidByNameReq.ProtoReflect.Descriptor instead.
func (*GetUidByNameReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{31}
}

func (x *GetUidByNameReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// 根据name取uid-响应
type GetUidByNameRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// k:昵称 v:mid
	Uids map[string]int64 `protobuf:"bytes,1,rep,name=uids,proto3" json:"uids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUidByNameRsp) Reset() {
	*x = GetUidByNameRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUidByNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUidByNameRsp) ProtoMessage() {}

func (x *GetUidByNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUidByNameRsp.ProtoReflect.Descriptor instead.
func (*GetUidByNameRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{32}
}

func (x *GetUidByNameRsp) GetUids() map[string]int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

// 发布时附带的商品卡的详细内容
type GoodsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品类型
	// 1淘宝、2会员购
	SourceType int32 `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 商品的id
	ItemId int64 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 店铺的id，兼容老版本
	ShopId int64 `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
}

func (x *GoodsContent) Reset() {
	*x = GoodsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsContent) ProtoMessage() {}

func (x *GoodsContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsContent.ProtoReflect.Descriptor instead.
func (*GoodsContent) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{33}
}

func (x *GoodsContent) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *GoodsContent) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GoodsContent) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

// UP已经创建的活动列表
type LaunchedActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块名称，示例："已创建的活动"
	ModuleTitle string `protobuf:"bytes,1,opt,name=module_title,json=moduleTitle,proto3" json:"module_title,omitempty"`
	// 已创建的活动列表
	Activities []*LaunchedActivityItem `protobuf:"bytes,2,rep,name=activities,proto3" json:"activities,omitempty"`
	// 展示更多按钮
	// 已创建活动大于5个时下发
	ShowMore *ShowMoreLaunchedActivity `protobuf:"bytes,3,opt,name=show_more,json=showMore,proto3" json:"show_more,omitempty"`
}

func (x *LaunchedActivity) Reset() {
	*x = LaunchedActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchedActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchedActivity) ProtoMessage() {}

func (x *LaunchedActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchedActivity.ProtoReflect.Descriptor instead.
func (*LaunchedActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{34}
}

func (x *LaunchedActivity) GetModuleTitle() string {
	if x != nil {
		return x.ModuleTitle
	}
	return ""
}

func (x *LaunchedActivity) GetActivities() []*LaunchedActivityItem {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *LaunchedActivity) GetShowMore() *ShowMoreLaunchedActivity {
	if x != nil {
		return x.ShowMore
	}
	return nil
}

// UP已经创建的活动详情
type LaunchedActivityItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动id
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// 活动名称
	ActivityName string `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	// 活动是否已上线
	// 0未上线 1已上线
	ActivityState int32 `protobuf:"varint,3,opt,name=activity_state,json=activityState,proto3" json:"activity_state,omitempty"`
}

func (x *LaunchedActivityItem) Reset() {
	*x = LaunchedActivityItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchedActivityItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchedActivityItem) ProtoMessage() {}

func (x *LaunchedActivityItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchedActivityItem.ProtoReflect.Descriptor instead.
func (*LaunchedActivityItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{35}
}

func (x *LaunchedActivityItem) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *LaunchedActivityItem) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *LaunchedActivityItem) GetActivityState() int32 {
	if x != nil {
		return x.ActivityState
	}
	return 0
}

type LbsLoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 经度
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 纬度
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *LbsLoc) Reset() {
	*x = LbsLoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LbsLoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LbsLoc) ProtoMessage() {}

func (x *LbsLoc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LbsLoc.ProtoReflect.Descriptor instead.
func (*LbsLoc) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{36}
}

func (x *LbsLoc) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *LbsLoc) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type MetaDataCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端平台
	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	// 客户端build号
	Build string `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// 客户端移动设备类型
	MobiApp string `protobuf:"bytes,3,opt,name=mobi_app,json=mobiApp,proto3" json:"mobi_app,omitempty"`
	// 客户端buvid
	Buvid string `protobuf:"bytes,4,opt,name=buvid,proto3" json:"buvid,omitempty"`
	// 用户设备信息
	Device string `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`
	// 请求来源页面的spmid
	FromSpmid string `protobuf:"bytes,6,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 请求来源页面
	From string `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	// 请求的trace_id
	TraceId string `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// 青少年模式
	TeenagerMode int32 `protobuf:"varint,9,opt,name=teenager_mode,json=teenagerMode,proto3" json:"teenager_mode,omitempty"`
	// 0:正常 1:冷启动
	ColdStart int32 `protobuf:"varint,10,opt,name=cold_start,json=coldStart,proto3" json:"cold_start,omitempty"`
	// 客户端版本号
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// 网络状态
	// Unknown=0 WIFI=1 WWAN=2
	Network int32 `protobuf:"varint,12,opt,name=network,proto3" json:"network,omitempty"`
	// 用户ip地址
	Ip string `protobuf:"bytes,13,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *MetaDataCtrl) Reset() {
	*x = MetaDataCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaDataCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataCtrl) ProtoMessage() {}

func (x *MetaDataCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataCtrl.ProtoReflect.Descriptor instead.
func (*MetaDataCtrl) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{37}
}

func (x *MetaDataCtrl) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MetaDataCtrl) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *MetaDataCtrl) GetMobiApp() string {
	if x != nil {
		return x.MobiApp
	}
	return ""
}

func (x *MetaDataCtrl) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

func (x *MetaDataCtrl) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *MetaDataCtrl) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *MetaDataCtrl) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MetaDataCtrl) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *MetaDataCtrl) GetTeenagerMode() int32 {
	if x != nil {
		return x.TeenagerMode
	}
	return 0
}

func (x *MetaDataCtrl) GetColdStart() int32 {
	if x != nil {
		return x.ColdStart
	}
	return 0
}

func (x *MetaDataCtrl) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MetaDataCtrl) GetNetwork() int32 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *MetaDataCtrl) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type PlusRedDot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlusHasRedDot int64 `protobuf:"varint,1,opt,name=plus_has_red_dot,json=plusHasRedDot,proto3" json:"plus_has_red_dot,omitempty"`
}

func (x *PlusRedDot) Reset() {
	*x = PlusRedDot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusRedDot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusRedDot) ProtoMessage() {}

func (x *PlusRedDot) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusRedDot.ProtoReflect.Descriptor instead.
func (*PlusRedDot) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{38}
}

func (x *PlusRedDot) GetPlusHasRedDot() int64 {
	if x != nil {
		return x.PlusHasRedDot
	}
	return 0
}

// 小程序内容定义
type Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述文字
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 封面图
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	// 跳转链接
	TargetUrl string `protobuf:"bytes,4,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
	// 小程序icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// 小程序名称
	ProgramText string `protobuf:"bytes,6,opt,name=program_text,json=programText,proto3" json:"program_text,omitempty"`
	// 跳转链接文案，如：去看看
	JumpText string `protobuf:"bytes,7,opt,name=jump_text,json=jumpText,proto3" json:"jump_text,omitempty"`
}

func (x *Program) Reset() {
	*x = Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Program) ProtoMessage() {}

func (x *Program) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Program.ProtoReflect.Descriptor instead.
func (*Program) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{39}
}

func (x *Program) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Program) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Program) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Program) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *Program) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Program) GetProgramText() string {
	if x != nil {
		return x.ProgramText
	}
	return ""
}

func (x *Program) GetJumpText() string {
	if x != nil {
		return x.JumpText
	}
	return ""
}

// 发布相关的设置项
type PublishSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提示转为专栏的最小字数，使用utf-16编码计算字符数
	MinWordsToArticle int32 `protobuf:"varint,1,opt,name=min_words_to_article,json=minWordsToArticle,proto3" json:"min_words_to_article,omitempty"`
	// 提示转为专栏的最大字数，使用utf-16编码计算字符数
	MaxWordsToArticle int32 `protobuf:"varint,2,opt,name=max_words_to_article,json=maxWordsToArticle,proto3" json:"max_words_to_article,omitempty"`
	// gif上传的最大值，单位：MB
	UploadSize int32 `protobuf:"varint,3,opt,name=upload_size,json=uploadSize,proto3" json:"upload_size,omitempty"`
}

func (x *PublishSetting) Reset() {
	*x = PublishSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSetting) ProtoMessage() {}

func (x *PublishSetting) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSetting.ProtoReflect.Descriptor instead.
func (*PublishSetting) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{40}
}

func (x *PublishSetting) GetMinWordsToArticle() int32 {
	if x != nil {
		return x.MinWordsToArticle
	}
	return 0
}

func (x *PublishSetting) GetMaxWordsToArticle() int32 {
	if x != nil {
		return x.MaxWordsToArticle
	}
	return 0
}

func (x *PublishSetting) GetUploadSize() int32 {
	if x != nil {
		return x.UploadSize
	}
	return 0
}

// 发布页小黄条
type PublishYellowBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 展示图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *PublishYellowBar) Reset() {
	*x = PublishYellowBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishYellowBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishYellowBar) ProtoMessage() {}

func (x *PublishYellowBar) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishYellowBar.ProtoReflect.Descriptor instead.
func (*PublishYellowBar) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{41}
}

func (x *PublishYellowBar) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PublishYellowBar) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PublishYellowBar) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type RepostInitCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepostSrc *DynIdentity `protobuf:"bytes,1,opt,name=repost_src,json=repostSrc,proto3" json:"repost_src,omitempty"`
	ShareId string `protobuf:"bytes,2,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	ShareMode int32 `protobuf:"varint,3,opt,name=share_mode,json=shareMode,proto3" json:"share_mode,omitempty"`
}

func (x *RepostInitCheck) Reset() {
	*x = RepostInitCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepostInitCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepostInitCheck) ProtoMessage() {}

func (x *RepostInitCheck) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepostInitCheck.ProtoReflect.Descriptor instead.
func (*RepostInitCheck) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{42}
}

func (x *RepostInitCheck) GetRepostSrc() *DynIdentity {
	if x != nil {
		return x.RepostSrc
	}
	return nil
}

func (x *RepostInitCheck) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *RepostInitCheck) GetShareMode() int32 {
	if x != nil {
		return x.ShareMode
	}
	return 0
}

// 分享渠道信息
type ShareChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务类型，如动态是"dynamic"
	ShareOrigin string `protobuf:"bytes,1,opt,name=share_origin,json=shareOrigin,proto3" json:"share_origin,omitempty"`
	// 业务资源id
	Oid string `protobuf:"bytes,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 辅助id, 非必返回字段
	Sid string `protobuf:"bytes,3,opt,name=sid,proto3" json:"sid,omitempty"`
	// 渠道列表
	ShareChannels []*ShareChannelItem `protobuf:"bytes,4,rep,name=share_channels,json=shareChannels,proto3" json:"share_channels,omitempty"`
}

func (x *ShareChannel) Reset() {
	*x = ShareChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareChannel) ProtoMessage() {}

func (x *ShareChannel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareChannel.ProtoReflect.Descriptor instead.
func (*ShareChannel) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{43}
}

func (x *ShareChannel) GetShareOrigin() string {
	if x != nil {
		return x.ShareOrigin
	}
	return ""
}

func (x *ShareChannel) GetOid() string {
	if x != nil {
		return x.Oid
	}
	return ""
}

func (x *ShareChannel) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *ShareChannel) GetShareChannels() []*ShareChannelItem {
	if x != nil {
		return x.ShareChannels
	}
	return nil
}

// 渠道
type ShareChannelItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 展示文案
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 展示图标
	Picture string `protobuf:"bytes,2,opt,name=picture,proto3" json:"picture,omitempty"`
	// 渠道名称
	ShareChannel string `protobuf:"bytes,3,opt,name=share_channel,json=shareChannel,proto3" json:"share_channel,omitempty"`
	// 预约卡分享图信息，仅分享有预约信息的动态时存在
	Reserve *ShareReserve `protobuf:"bytes,4,opt,name=reserve,proto3" json:"reserve,omitempty"`
}

func (x *ShareChannelItem) Reset() {
	*x = ShareChannelItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareChannelItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareChannelItem) ProtoMessage() {}

func (x *ShareChannelItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareChannelItem.ProtoReflect.Descriptor instead.
func (*ShareChannelItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{44}
}

func (x *ShareChannelItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShareChannelItem) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *ShareChannelItem) GetShareChannel() string {
	if x != nil {
		return x.ShareChannel
	}
	return ""
}

func (x *ShareChannelItem) GetReserve() *ShareReserve {
	if x != nil {
		return x.Reserve
	}
	return nil
}

type ShareReserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述（时间+类型）
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	// 二维码附带icon
	QrCodeIcon string `protobuf:"bytes,3,opt,name=qr_code_icon,json=qrCodeIcon,proto3" json:"qr_code_icon,omitempty"`
	// 二维码附带文本
	QrCodeText string `protobuf:"bytes,4,opt,name=qr_code_text,json=qrCodeText,proto3" json:"qr_code_text,omitempty"`
	// 二维码链接
	QrCodeUrl string `protobuf:"bytes,5,opt,name=qr_code_url,json=qrCodeUrl,proto3" json:"qr_code_url,omitempty"`
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,7,opt,name=face,proto3" json:"face,omitempty"`
	Poster *ShareReservePoster `protobuf:"bytes,8,opt,name=poster,proto3" json:"poster,omitempty"`
	ReserveLottery *ShareReserveLottery `protobuf:"bytes,9,opt,name=reserve_lottery,json=reserveLottery,proto3" json:"reserve_lottery,omitempty"`
}

func (x *ShareReserve) Reset() {
	*x = ShareReserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReserve) ProtoMessage() {}

func (x *ShareReserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReserve.ProtoReflect.Descriptor instead.
func (*ShareReserve) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{45}
}

func (x *ShareReserve) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShareReserve) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ShareReserve) GetQrCodeIcon() string {
	if x != nil {
		return x.QrCodeIcon
	}
	return ""
}

func (x *ShareReserve) GetQrCodeText() string {
	if x != nil {
		return x.QrCodeText
	}
	return ""
}

func (x *ShareReserve) GetQrCodeUrl() string {
	if x != nil {
		return x.QrCodeUrl
	}
	return ""
}

func (x *ShareReserve) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShareReserve) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *ShareReserve) GetPoster() *ShareReservePoster {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *ShareReserve) GetReserveLottery() *ShareReserveLottery {
	if x != nil {
		return x.ReserveLottery
	}
	return nil
}

type ShareReserveLottery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ShareReserveLottery) Reset() {
	*x = ShareReserveLottery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReserveLottery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReserveLottery) ProtoMessage() {}

func (x *ShareReserveLottery) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReserveLottery.ProtoReflect.Descriptor instead.
func (*ShareReserveLottery) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{46}
}

func (x *ShareReserveLottery) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ShareReserveLottery) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ShareReservePoster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width float64 `protobuf:"fixed64,2,opt,name=width,proto3" json:"width,omitempty"`
	Height float64 `protobuf:"fixed64,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ShareReservePoster) Reset() {
	*x = ShareReservePoster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReservePoster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReservePoster) ProtoMessage() {}

func (x *ShareReservePoster) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReservePoster.ProtoReflect.Descriptor instead.
func (*ShareReservePoster) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{47}
}

func (x *ShareReservePoster) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShareReservePoster) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ShareReservePoster) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ShareResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareEnable int64 `protobuf:"varint,1,opt,name=share_enable,json=shareEnable,proto3" json:"share_enable,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *ShareResult) Reset() {
	*x = ShareResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareResult) ProtoMessage() {}

func (x *ShareResult) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareResult.ProtoReflect.Descriptor instead.
func (*ShareResult) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{48}
}

func (x *ShareResult) GetShareEnable() int64 {
	if x != nil {
		return x.ShareEnable
	}
	return 0
}

func (x *ShareResult) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

// UP已经创建的活动列表中的展示更多按钮详情
type ShowMoreLaunchedActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 按钮的文案
	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	// 按钮的跳转链接
	JumpUrl string `protobuf:"bytes,2,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *ShowMoreLaunchedActivity) Reset() {
	*x = ShowMoreLaunchedActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowMoreLaunchedActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowMoreLaunchedActivity) ProtoMessage() {}

func (x *ShowMoreLaunchedActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowMoreLaunchedActivity.ProtoReflect.Descriptor instead.
func (*ShowMoreLaunchedActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{49}
}

func (x *ShowMoreLaunchedActivity) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *ShowMoreLaunchedActivity) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

// 通用模板的网页元内容(sketch结构)定义
type Sketch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元内容标题，长度30限制
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 描述文字（文本内容第二行），长度233限制
	DescText string `protobuf:"bytes,2,opt,name=desc_text,json=descText,proto3" json:"desc_text,omitempty"`
	// 文本文字（文本内容第三行），仅限竖图通用卡片使用，长度233限制
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// 表示业务方的id表示，对于在业务方有唯一标示的必填
	BizId int64 `protobuf:"varint,4,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 业务类型，与展示时的右上角标有关，需要业务方向动态申请
	BizType int64 `protobuf:"varint,5,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	// 封面图片链接地址，域名需要符合白名单
	CoverUrl string `protobuf:"bytes,6,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	// 跳转链接地址，域名需要符合白名单
	TargetUrl string `protobuf:"bytes,7,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`
}

func (x *Sketch) Reset() {
	*x = Sketch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sketch) ProtoMessage() {}

func (x *Sketch) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sketch.ProtoReflect.Descriptor instead.
func (*Sketch) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{50}
}

func (x *Sketch) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Sketch) GetDescText() string {
	if x != nil {
		return x.DescText
	}
	return ""
}

func (x *Sketch) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Sketch) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *Sketch) GetBizType() int64 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *Sketch) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Sketch) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

// 发布相关的权限内容
type UpPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用权限列表
	Items []*UpPermissionItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// 已经创建的活动列表
	LaunchedActivity *LaunchedActivity `protobuf:"bytes,2,opt,name=launched_activity,json=launchedActivity,proto3" json:"launched_activity,omitempty"`
	ShareResult *ShareResult `protobuf:"bytes,3,opt,name=share_result,json=shareResult,proto3" json:"share_result,omitempty"`
}

func (x *UpPermission) Reset() {
	*x = UpPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpPermission) ProtoMessage() {}

func (x *UpPermission) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpPermission.ProtoReflect.Descriptor instead.
func (*UpPermission) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{51}
}

func (x *UpPermission) GetItems() []*UpPermissionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpPermission) GetLaunchedActivity() *LaunchedActivity {
	if x != nil {
		return x.LaunchedActivity
	}
	return nil
}

func (x *UpPermission) GetShareResult() *ShareResult {
	if x != nil {
		return x.ShareResult
	}
	return nil
}

// 通用发布权限内容的详细定义
type UpPermissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型，enum UpPermissionType
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// UP是否有权限
	// 1-有，2-限制（展示但不可点，仅预约使用）
	Permission int32 `protobuf:"varint,2,opt,name=permission,proto3" json:"permission,omitempty"`
	// 按钮文案
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 功能开关的副标题
	Subtitle string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 按钮图标的url地址
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// 跳转链接，permission=1时点击按钮跳到此链接
	JumpUrl string `protobuf:"bytes,6,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 错误提示，permission=2时点击按钮会弹出此提示，目前仅预约使用
	Toast string `protobuf:"bytes,7,opt,name=toast,proto3" json:"toast,omitempty"`
	HasRedDot int64 `protobuf:"varint,8,opt,name=has_red_dot,json=hasRedDot,proto3" json:"has_red_dot,omitempty"`
}

func (x *UpPermissionItem) Reset() {
	*x = UpPermissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpPermissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpPermissionItem) ProtoMessage() {}

func (x *UpPermissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpPermissionItem.ProtoReflect.Descriptor instead.
func (*UpPermissionItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{52}
}

func (x *UpPermissionItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpPermissionItem) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *UpPermissionItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpPermissionItem) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *UpPermissionItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpPermissionItem) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *UpPermissionItem) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *UpPermissionItem) GetHasRedDot() int64 {
	if x != nil {
		return x.HasRedDot
	}
	return 0
}

// 用户主动发布（app/web发布）时的meta信息
type UserCreateMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户发布客户端的meta信息
	AppMeta *MetaDataCtrl `protobuf:"bytes,1,opt,name=app_meta,json=appMeta,proto3" json:"app_meta,omitempty"`
	// 用户发布时的位置信息（经纬度）
	Loc *LbsLoc `protobuf:"bytes,2,opt,name=loc,proto3" json:"loc,omitempty"`
	// 1-发布页转发 2-立即转发
	RepostMode int32 `protobuf:"varint,3,opt,name=repost_mode,json=repostMode,proto3" json:"repost_mode,omitempty"`
}

func (x *UserCreateMeta) Reset() {
	*x = UserCreateMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateMeta) ProtoMessage() {}

func (x *UserCreateMeta) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateMeta.ProtoReflect.Descriptor instead.
func (*UserCreateMeta) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{53}
}

func (x *UserCreateMeta) GetAppMeta() *MetaDataCtrl {
	if x != nil {
		return x.AppMeta
	}
	return nil
}

func (x *UserCreateMeta) GetLoc() *LbsLoc {
	if x != nil {
		return x.Loc
	}
	return nil
}

func (x *UserCreateMeta) GetRepostMode() int32 {
	if x != nil {
		return x.RepostMode
	}
	return 0
}

type VideoShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Part int32 `protobuf:"varint,2,opt,name=part,proto3" json:"part,omitempty"`
}

func (x *VideoShareInfo) Reset() {
	*x = VideoShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoShareInfo) ProtoMessage() {}

func (x *VideoShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_common_dynamic_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoShareInfo.ProtoReflect.Descriptor instead.
func (*VideoShareInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP(), []int{54}
}

func (x *VideoShareInfo) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *VideoShareInfo) GetPart() int32 {
	if x != nil {
		return x.Part
	}
	return 0
}

var File_bilibili_dynamic_common_dynamic_proto protoreflect.FileDescriptor

var file_bilibili_dynamic_common_dynamic_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f,
	0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x96, 0x01, 0x0a, 0x07, 0x41, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x41, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61,
	0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x1d, 0x0a, 0x09, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x09, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x36,
	0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x49, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x22, 0xcf, 0x02, 0x0a, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x55, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0a, 0x79, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x61,
	0x72, 0x52, 0x09, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x61, 0x72, 0x12, 0x3e, 0x0a, 0x0c,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74,
	0x52, 0x0a, 0x70, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x22, 0xb5, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0xaa, 0x07, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65,
	0x6c, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x45,
	0x6c, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x52, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12,
	0x2b, 0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x74, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x70, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x75, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x70, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x61, 0x63, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x42, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x22, 0x2a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0xd5, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x11, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x70, 0x43,
	0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x6f,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x73, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a,
	0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x69, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x72, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x53, 0x72, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x67, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x69, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6d, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x69, 0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x69, 0x6d,
	0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x61, 0x67, 0x73,
	0x22, 0xd1, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x54, 0x61,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d,
	0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x6f, 0x69, 0x22, 0x83, 0x02, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x79,
	0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x79, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x72, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x52, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x09,
	0x66, 0x61, 0x6b, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x66, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x49, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x4c, 0x62, 0x73, 0x52,
	0x03, 0x6c, 0x62, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x64, 0x6b, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x09, 0x64, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x31, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65,
	0x76, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44,
	0x79, 0x6e, 0x52, 0x65, 0x76, 0x73, 0x49, 0x64, 0x52, 0x06, 0x72, 0x65, 0x76, 0x73, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x09, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x76, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0xac, 0x09, 0x0a, 0x0e, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x70, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x6f, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x67, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x67, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x75, 0x70,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x72, 0x67, 0x65, 0x72, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x72, 0x67, 0x65, 0x72, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x66, 0x78, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x66, 0x78, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x68, 0x79, 0x74, 0x68, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x73,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x75, 0x70, 0x65,
	0x72, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x75, 0x70, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x63, 0x75, 0x74, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x63, 0x75, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x69,
	0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67,
	0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x69,
	0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x69, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x44, 0x79,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x8e, 0x01, 0x0a, 0x0e,
	0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x22, 0x3b, 0x0a, 0x11,
	0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x44, 0x79,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x61,
	0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x74, 0x61,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48,
	0x6f, 0x74, 0x41, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x0c, 0x44,
	0x79, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76,
	0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x46,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x59, 0x0a, 0x11, 0x44, 0x79, 0x6e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xf4, 0x01, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x4c, 0x62, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x4c,
	0x62, 0x73, 0x4c, 0x6f, 0x63, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x2e, 0x55, 0x69, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x55, 0x69, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x61, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x6f,
	0x72, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x14, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x4c, 0x62, 0x73, 0x4c, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67,
	0x22, 0xdf, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x43, 0x74, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x62, 0x69, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x41, 0x70, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x75, 0x76, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x75, 0x76, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65,
	0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x22, 0x35, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74,
	0x12, 0x27, 0x0a, 0x10, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x64,
	0x5f, 0x64, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x75, 0x73,
	0x48, 0x61, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x75, 0x6d, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x75, 0x6d, 0x70, 0x54, 0x65, 0x78, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x6d,
	0x69, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x14,
	0x6d, 0x61, 0x78, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c,
	0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x42,
	0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x72, 0x63, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x49, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x10,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x22, 0xd2, 0x02,
	0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x71, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x22, 0x3d, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x54, 0x0a, 0x12, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x46, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x22,
	0x56, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x06, 0x53, 0x6b, 0x65, 0x74,
	0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x55, 0x70, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x10, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x64,
	0x5f, 0x64, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x61, 0x73, 0x52,
	0x65, 0x64, 0x44, 0x6f, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x4c, 0x62, 0x73, 0x4c, 0x6f, 0x63, 0x52, 0x03, 0x6c, 0x6f, 0x63, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x36, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x2a, 0x8e, 0x01, 0x0a, 0x0b, 0x41, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x54, 0x5f, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x54, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x4e, 0x53, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x53, 0x10, 0x04, 0x2a, 0x94, 0x03, 0x0a, 0x0e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x55,
	0x47, 0x43, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x04, 0x12, 0x21,
	0x0a, 0x1d, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x46,
	0x46, 0x49, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10,
	0x05, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x47, 0x56, 0x10, 0x07, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x54,
	0x4f, 0x5f, 0x4f, 0x47, 0x56, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x09, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4d, 0x41, 0x4e,
	0x47, 0x41, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x44, 0x45, 0x43, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0b,
	0x12, 0x15, 0x0a, 0x11, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x50, 0x55, 0x47, 0x56, 0x10, 0x0d, 0x12, 0x17, 0x0a,
	0x13, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x55, 0x50, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x0f,
	0x2a, 0xd3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x4f, 0x54,
	0x54, 0x45, 0x52, 0x59, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x04,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x47,
	0x4f, 0x4f, 0x44, 0x53, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x56, 0x10, 0x07, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x56, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x4f, 0x4a, 0x49, 0x10,
	0x09, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x43,
	0x56, 0x10, 0x0b, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x43, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x57,
	0x45, 0x42, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x41, 0x4f, 0x42, 0x41, 0x4f, 0x10, 0x0e,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x47,
	0x56, 0x5f, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x10, 0x10, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x47,
	0x56, 0x5f, 0x45, 0x50, 0x10, 0x11, 0x2a, 0xd1, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x23, 0x0a, 0x1f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x49,
	0x4e, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f,
	0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x03, 0x12,
	0x29, 0x0a, 0x25, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x04, 0x2a, 0xbd, 0x02, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x43, 0x45, 0x4e, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x44,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x02,
	0x12, 0x21, 0x0a, 0x1d, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x59, 0x4e, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43,
	0x45, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x53, 0x48, 0x41,
	0x52, 0x45, 0x5f, 0x42, 0x49, 0x5a, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x50,
	0x41, 0x47, 0x45, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x41, 0x4d, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x43, 0x45, 0x4e, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0x08, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x09, 0x2a, 0x46, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x45,
	0x57, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x2a, 0x88, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x5f, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x54, 0x54, 0x45,
	0x52, 0x59, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x50, 0x5f,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x55,
	0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x47, 0x43, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x5f,
	0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x25, 0x0a,
	0x21, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x4f, 0x4f, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20,
	0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x4e, 0x4d, 0x55,
	0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x52,
	0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x08, 0x12, 0x23, 0x0a, 0x1f, 0x55, 0x50, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x09, 0x42, 0x44, 0x5a,
	0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f,
	0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_dynamic_common_dynamic_proto_rawDescOnce sync.Once
	file_bilibili_dynamic_common_dynamic_proto_rawDescData = file_bilibili_dynamic_common_dynamic_proto_rawDesc
)

func file_bilibili_dynamic_common_dynamic_proto_rawDescGZIP() []byte {
	file_bilibili_dynamic_common_dynamic_proto_rawDescOnce.Do(func() {
		file_bilibili_dynamic_common_dynamic_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_dynamic_common_dynamic_proto_rawDescData)
	})
	return file_bilibili_dynamic_common_dynamic_proto_rawDescData
}

var file_bilibili_dynamic_common_dynamic_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_bilibili_dynamic_common_dynamic_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_bilibili_dynamic_common_dynamic_proto_goTypes = []interface{}{
	(AtGroupType)(0),                 // 0: bilibili.dynamic.AtGroupType
	(AttachCardType)(0),              // 1: bilibili.dynamic.AttachCardType
	(ContentType)(0),                 // 2: bilibili.dynamic.ContentType
	(CreateInitCheckScene)(0),        // 3: bilibili.dynamic.CreateInitCheckScene
	(CreateScene)(0),                 // 4: bilibili.dynamic.CreateScene
	(ReserveSource)(0),               // 5: bilibili.dynamic.ReserveSource
	(UpPermissionType)(0),            // 6: bilibili.dynamic.UpPermissionType
	(*AtGroup)(nil),                  // 7: bilibili.dynamic.AtGroup
	(*AtItem)(nil),                   // 8: bilibili.dynamic.AtItem
	(*AtListReq)(nil),                // 9: bilibili.dynamic.AtListReq
	(*AtListRsp)(nil),                // 10: bilibili.dynamic.AtListRsp
	(*AtSearchReq)(nil),              // 11: bilibili.dynamic.AtSearchReq
	(*BottomBusiness)(nil),           // 12: bilibili.dynamic.BottomBusiness
	(*CreateActivity)(nil),           // 13: bilibili.dynamic.CreateActivity
	(*CreateAttachCard)(nil),         // 14: bilibili.dynamic.CreateAttachCard
	(*CreateCheckResp)(nil),          // 15: bilibili.dynamic.CreateCheckResp
	(*CreateCommonAttachCard)(nil),   // 16: bilibili.dynamic.CreateCommonAttachCard
	(*CreateContent)(nil),            // 17: bilibili.dynamic.CreateContent
	(*CreateContentItem)(nil),        // 18: bilibili.dynamic.CreateContentItem
	(*CreateDynVideo)(nil),           // 19: bilibili.dynamic.CreateDynVideo
	(*CreateDynVideoResult)(nil),     // 20: bilibili.dynamic.CreateDynVideoResult
	(*CreateGoodsCard)(nil),          // 21: bilibili.dynamic.CreateGoodsCard
	(*CreateOption)(nil),             // 22: bilibili.dynamic.CreateOption
	(*CreatePic)(nil),                // 23: bilibili.dynamic.CreatePic
	(*CreatePicTag)(nil),             // 24: bilibili.dynamic.CreatePicTag
	(*CreateResp)(nil),               // 25: bilibili.dynamic.CreateResp
	(*CreateTag)(nil),                // 26: bilibili.dynamic.CreateTag
	(*CreateTopic)(nil),              // 27: bilibili.dynamic.CreateTopic
	(*DynIdentity)(nil),              // 28: bilibili.dynamic.DynIdentity
	(*DynRevsId)(nil),                // 29: bilibili.dynamic.DynRevsId
	(*DynVideoEditor)(nil),           // 30: bilibili.dynamic.DynVideoEditor
	(*DynVideoHotAct)(nil),           // 31: bilibili.dynamic.DynVideoHotAct
	(*DynVideoMultiP)(nil),           // 32: bilibili.dynamic.DynVideoMultiP
	(*DynVideoPushIntro)(nil),        // 33: bilibili.dynamic.DynVideoPushIntro
	(*DynVideoSubmitActBanner)(nil),  // 34: bilibili.dynamic.DynVideoSubmitActBanner
	(*DynVideoVote)(nil),             // 35: bilibili.dynamic.DynVideoVote
	(*DynVideoWatermark)(nil),        // 36: bilibili.dynamic.DynVideoWatermark
	(*ExtLbs)(nil),                   // 37: bilibili.dynamic.ExtLbs
	(*GetUidByNameReq)(nil),          // 38: bilibili.dynamic.GetUidByNameReq
	(*GetUidByNameRsp)(nil),          // 39: bilibili.dynamic.GetUidByNameRsp
	(*GoodsContent)(nil),             // 40: bilibili.dynamic.GoodsContent
	(*LaunchedActivity)(nil),         // 41: bilibili.dynamic.LaunchedActivity
	(*LaunchedActivityItem)(nil),     // 42: bilibili.dynamic.LaunchedActivityItem
	(*LbsLoc)(nil),                   // 43: bilibili.dynamic.LbsLoc
	(*MetaDataCtrl)(nil),             // 44: bilibili.dynamic.MetaDataCtrl
	(*PlusRedDot)(nil),               // 45: bilibili.dynamic.PlusRedDot
	(*Program)(nil),                  // 46: bilibili.dynamic.Program
	(*PublishSetting)(nil),           // 47: bilibili.dynamic.PublishSetting
	(*PublishYellowBar)(nil),         // 48: bilibili.dynamic.PublishYellowBar
	(*RepostInitCheck)(nil),          // 49: bilibili.dynamic.RepostInitCheck
	(*ShareChannel)(nil),             // 50: bilibili.dynamic.ShareChannel
	(*ShareChannelItem)(nil),         // 51: bilibili.dynamic.ShareChannelItem
	(*ShareReserve)(nil),             // 52: bilibili.dynamic.ShareReserve
	(*ShareReserveLottery)(nil),      // 53: bilibili.dynamic.ShareReserveLottery
	(*ShareReservePoster)(nil),       // 54: bilibili.dynamic.ShareReservePoster
	(*ShareResult)(nil),              // 55: bilibili.dynamic.ShareResult
	(*ShowMoreLaunchedActivity)(nil), // 56: bilibili.dynamic.ShowMoreLaunchedActivity
	(*Sketch)(nil),                   // 57: bilibili.dynamic.Sketch
	(*UpPermission)(nil),             // 58: bilibili.dynamic.UpPermission
	(*UpPermissionItem)(nil),         // 59: bilibili.dynamic.UpPermissionItem
	(*UserCreateMeta)(nil),           // 60: bilibili.dynamic.UserCreateMeta
	(*VideoShareInfo)(nil),           // 61: bilibili.dynamic.VideoShareInfo
	nil,                              // 62: bilibili.dynamic.GetUidByNameRsp.UidsEntry
	(*v2.DynamicItem)(nil),           // 63: bilibili.app.dynamic.v2.DynamicItem
}
var file_bilibili_dynamic_common_dynamic_proto_depIdxs = []int32{
	0,  // 0: bilibili.dynamic.AtGroup.group_type:type_name -> bilibili.dynamic.AtGroupType
	8,  // 1: bilibili.dynamic.AtGroup.items:type_name -> bilibili.dynamic.AtItem
	7,  // 2: bilibili.dynamic.AtListRsp.groups:type_name -> bilibili.dynamic.AtGroup
	21, // 3: bilibili.dynamic.CreateAttachCard.goods:type_name -> bilibili.dynamic.CreateGoodsCard
	16, // 4: bilibili.dynamic.CreateAttachCard.common_card:type_name -> bilibili.dynamic.CreateCommonAttachCard
	47, // 5: bilibili.dynamic.CreateCheckResp.setting:type_name -> bilibili.dynamic.PublishSetting
	58, // 6: bilibili.dynamic.CreateCheckResp.permission:type_name -> bilibili.dynamic.UpPermission
	50, // 7: bilibili.dynamic.CreateCheckResp.share_info:type_name -> bilibili.dynamic.ShareChannel
	48, // 8: bilibili.dynamic.CreateCheckResp.yellow_bar:type_name -> bilibili.dynamic.PublishYellowBar
	45, // 9: bilibili.dynamic.CreateCheckResp.plus_red_dot:type_name -> bilibili.dynamic.PlusRedDot
	1,  // 10: bilibili.dynamic.CreateCommonAttachCard.type:type_name -> bilibili.dynamic.AttachCardType
	18, // 11: bilibili.dynamic.CreateContent.contents:type_name -> bilibili.dynamic.CreateContentItem
	2,  // 12: bilibili.dynamic.CreateContentItem.type:type_name -> bilibili.dynamic.ContentType
	40, // 13: bilibili.dynamic.CreateContentItem.goods:type_name -> bilibili.dynamic.GoodsContent
	32, // 14: bilibili.dynamic.CreateDynVideo.videos:type_name -> bilibili.dynamic.DynVideoMultiP
	36, // 15: bilibili.dynamic.CreateDynVideo.watermark:type_name -> bilibili.dynamic.DynVideoWatermark
	35, // 16: bilibili.dynamic.CreateDynVideo.vote:type_name -> bilibili.dynamic.DynVideoVote
	34, // 17: bilibili.dynamic.CreateDynVideoResult.submitact_banner:type_name -> bilibili.dynamic.DynVideoSubmitActBanner
	33, // 18: bilibili.dynamic.CreateDynVideoResult.push_intro:type_name -> bilibili.dynamic.DynVideoPushIntro
	61, // 19: bilibili.dynamic.CreateOption.video_share_info:type_name -> bilibili.dynamic.VideoShareInfo
	13, // 20: bilibili.dynamic.CreateOption.activity:type_name -> bilibili.dynamic.CreateActivity
	24, // 21: bilibili.dynamic.CreatePic.img_tags:type_name -> bilibili.dynamic.CreatePicTag
	63, // 22: bilibili.dynamic.CreateResp.fake_card:type_name -> bilibili.app.dynamic.v2.DynamicItem
	20, // 23: bilibili.dynamic.CreateResp.video_result:type_name -> bilibili.dynamic.CreateDynVideoResult
	37, // 24: bilibili.dynamic.CreateTag.lbs:type_name -> bilibili.dynamic.ExtLbs
	12, // 25: bilibili.dynamic.CreateTag.sdk_game:type_name -> bilibili.dynamic.BottomBusiness
	12, // 26: bilibili.dynamic.CreateTag.diversion:type_name -> bilibili.dynamic.BottomBusiness
	29, // 27: bilibili.dynamic.DynIdentity.revs_id:type_name -> bilibili.dynamic.DynRevsId
	30, // 28: bilibili.dynamic.DynVideoMultiP.editor:type_name -> bilibili.dynamic.DynVideoEditor
	31, // 29: bilibili.dynamic.DynVideoSubmitActBanner.list:type_name -> bilibili.dynamic.DynVideoHotAct
	43, // 30: bilibili.dynamic.ExtLbs.location:type_name -> bilibili.dynamic.LbsLoc
	62, // 31: bilibili.dynamic.GetUidByNameRsp.uids:type_name -> bilibili.dynamic.GetUidByNameRsp.UidsEntry
	42, // 32: bilibili.dynamic.LaunchedActivity.activities:type_name -> bilibili.dynamic.LaunchedActivityItem
	56, // 33: bilibili.dynamic.LaunchedActivity.show_more:type_name -> bilibili.dynamic.ShowMoreLaunchedActivity
	28, // 34: bilibili.dynamic.RepostInitCheck.repost_src:type_name -> bilibili.dynamic.DynIdentity
	51, // 35: bilibili.dynamic.ShareChannel.share_channels:type_name -> bilibili.dynamic.ShareChannelItem
	52, // 36: bilibili.dynamic.ShareChannelItem.reserve:type_name -> bilibili.dynamic.ShareReserve
	54, // 37: bilibili.dynamic.ShareReserve.poster:type_name -> bilibili.dynamic.ShareReservePoster
	53, // 38: bilibili.dynamic.ShareReserve.reserve_lottery:type_name -> bilibili.dynamic.ShareReserveLottery
	59, // 39: bilibili.dynamic.UpPermission.items:type_name -> bilibili.dynamic.UpPermissionItem
	41, // 40: bilibili.dynamic.UpPermission.launched_activity:type_name -> bilibili.dynamic.LaunchedActivity
	55, // 41: bilibili.dynamic.UpPermission.share_result:type_name -> bilibili.dynamic.ShareResult
	44, // 42: bilibili.dynamic.UserCreateMeta.app_meta:type_name -> bilibili.dynamic.MetaDataCtrl
	43, // 43: bilibili.dynamic.UserCreateMeta.loc:type_name -> bilibili.dynamic.LbsLoc
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_bilibili_dynamic_common_dynamic_proto_init() }
func file_bilibili_dynamic_common_dynamic_proto_init() {
	if File_bilibili_dynamic_common_dynamic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BottomBusiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttachCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommonAttachCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDynVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDynVideoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePicTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynRevsId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoEditor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoHotAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoMultiP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoPushIntro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoSubmitActBanner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynVideoWatermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtLbs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUidByNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUidByNameRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchedActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchedActivityItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbsLoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaDataCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusRedDot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishYellowBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepostInitCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareChannelItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReserveLottery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReservePoster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowMoreLaunchedActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sketch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpPermissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_common_dynamic_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_dynamic_common_dynamic_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_dynamic_common_dynamic_proto_goTypes,
		DependencyIndexes: file_bilibili_dynamic_common_dynamic_proto_depIdxs,
		EnumInfos:         file_bilibili_dynamic_common_dynamic_proto_enumTypes,
		MessageInfos:      file_bilibili_dynamic_common_dynamic_proto_msgTypes,
	}.Build()
	File_bilibili_dynamic_common_dynamic_proto = out.File
	file_bilibili_dynamic_common_dynamic_proto_rawDesc = nil
	file_bilibili_dynamic_common_dynamic_proto_goTypes = nil
	file_bilibili_dynamic_common_dynamic_proto_depIdxs = nil
}
