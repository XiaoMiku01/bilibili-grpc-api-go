// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/pangu/gallery/v1/gallery.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GT14Status int32

const (
	GT14Status_LT14         GT14Status = 0 //
	GT14Status_GE14         GT14Status = 1 //
	GT14Status_UNKNOWN_GT14 GT14Status = 2 //
)

// Enum value maps for GT14Status.
var (
	GT14Status_name = map[int32]string{
		0: "LT14",
		1: "GE14",
		2: "UNKNOWN_GT14",
	}
	GT14Status_value = map[string]int32{
		"LT14":         0,
		"GE14":         1,
		"UNKNOWN_GT14": 2,
	}
)

func (x GT14Status) Enum() *GT14Status {
	p := new(GT14Status)
	*p = x
	return p
}

func (x GT14Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GT14Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[0].Descriptor()
}

func (GT14Status) Type() protoreflect.EnumType {
	return &file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[0]
}

func (x GT14Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GT14Status.Descriptor instead.
func (GT14Status) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{0}
}

type NFTStatus int32

const (
	NFTStatus_UNDEFINED NFTStatus = 0 //
	NFTStatus_NORMAL    NFTStatus = 1 //
	NFTStatus_DOING     NFTStatus = 2 //
)

// Enum value maps for NFTStatus.
var (
	NFTStatus_name = map[int32]string{
		0: "UNDEFINED",
		1: "NORMAL",
		2: "DOING",
	}
	NFTStatus_value = map[string]int32{
		"UNDEFINED": 0,
		"NORMAL":    1,
		"DOING":     2,
	}
)

func (x NFTStatus) Enum() *NFTStatus {
	p := new(NFTStatus)
	*p = x
	return p
}

func (x NFTStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NFTStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[1].Descriptor()
}

func (NFTStatus) Type() protoreflect.EnumType {
	return &file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[1]
}

func (x NFTStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NFTStatus.Descriptor instead.
func (NFTStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{1}
}

type PolicyAgreeStatus int32

const (
	PolicyAgreeStatus_UNSIGNED PolicyAgreeStatus = 0 //
	PolicyAgreeStatus_ACCEPTED PolicyAgreeStatus = 1 //
	PolicyAgreeStatus_EXPIRED  PolicyAgreeStatus = 2 //
)

// Enum value maps for PolicyAgreeStatus.
var (
	PolicyAgreeStatus_name = map[int32]string{
		0: "UNSIGNED",
		1: "ACCEPTED",
		2: "EXPIRED",
	}
	PolicyAgreeStatus_value = map[string]int32{
		"UNSIGNED": 0,
		"ACCEPTED": 1,
		"EXPIRED":  2,
	}
)

func (x PolicyAgreeStatus) Enum() *PolicyAgreeStatus {
	p := new(PolicyAgreeStatus)
	*p = x
	return p
}

func (x PolicyAgreeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyAgreeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[2].Descriptor()
}

func (PolicyAgreeStatus) Type() protoreflect.EnumType {
	return &file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[2]
}

func (x PolicyAgreeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyAgreeStatus.Descriptor instead.
func (PolicyAgreeStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{2}
}

type PolicyType int32

const (
	PolicyType_UNKNOWN_POLICY PolicyType = 0 //
	PolicyType_WALLET         PolicyType = 1 //
	PolicyType_SALE           PolicyType = 2 //
)

// Enum value maps for PolicyType.
var (
	PolicyType_name = map[int32]string{
		0: "UNKNOWN_POLICY",
		1: "WALLET",
		2: "SALE",
	}
	PolicyType_value = map[string]int32{
		"UNKNOWN_POLICY": 0,
		"WALLET":         1,
		"SALE":           2,
	}
)

func (x PolicyType) Enum() *PolicyType {
	p := new(PolicyType)
	*p = x
	return p
}

func (x PolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[3].Descriptor()
}

func (PolicyType) Type() protoreflect.EnumType {
	return &file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes[3]
}

func (x PolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyType.Descriptor instead.
func (PolicyType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{3}
}

type AgreePolicyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgreePolicyReply) Reset() {
	*x = AgreePolicyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreePolicyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreePolicyReply) ProtoMessage() {}

func (x *AgreePolicyReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreePolicyReply.ProtoReflect.Descriptor instead.
func (*AgreePolicyReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{0}
}

type AgreePolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyType PolicyType `protobuf:"varint,1,opt,name=policy_type,json=policyType,proto3,enum=bilibili.pangu.gallery.v1.PolicyType" json:"policy_type,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AgreePolicyReq) Reset() {
	*x = AgreePolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreePolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreePolicyReq) ProtoMessage() {}

func (x *AgreePolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreePolicyReq.ProtoReflect.Descriptor instead.
func (*AgreePolicyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{1}
}

func (x *AgreePolicyReq) GetPolicyType() PolicyType {
	if x != nil {
		return x.PolicyType
	}
	return PolicyType_UNKNOWN_POLICY
}

func (x *AgreePolicyReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type BasicInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerServiceUrl string `protobuf:"bytes,1,opt,name=customer_service_url,json=customerServiceUrl,proto3" json:"customer_service_url,omitempty"`
	AgreementUrl string `protobuf:"bytes,2,opt,name=agreement_url,json=agreementUrl,proto3" json:"agreement_url,omitempty"`
	PrivacyUrl string `protobuf:"bytes,3,opt,name=privacy_url,json=privacyUrl,proto3" json:"privacy_url,omitempty"`
	Links []*Link `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *BasicInfoReply) Reset() {
	*x = BasicInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicInfoReply) ProtoMessage() {}

func (x *BasicInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicInfoReply.ProtoReflect.Descriptor instead.
func (*BasicInfoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{2}
}

func (x *BasicInfoReply) GetCustomerServiceUrl() string {
	if x != nil {
		return x.CustomerServiceUrl
	}
	return ""
}

func (x *BasicInfoReply) GetAgreementUrl() string {
	if x != nil {
		return x.AgreementUrl
	}
	return ""
}

func (x *BasicInfoReply) GetPrivacyUrl() string {
	if x != nil {
		return x.PrivacyUrl
	}
	return ""
}

func (x *BasicInfoReply) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type BasicInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *BasicInfoReq) Reset() {
	*x = BasicInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicInfoReq) ProtoMessage() {}

func (x *BasicInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicInfoReq.ProtoReflect.Descriptor instead.
func (*BasicInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{3}
}

func (x *BasicInfoReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type Display struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgThemeLight string `protobuf:"bytes,1,opt,name=bg_theme_light,json=bgThemeLight,proto3" json:"bg_theme_light,omitempty"`
	BgThemeNight string `protobuf:"bytes,2,opt,name=bg_theme_night,json=bgThemeNight,proto3" json:"bg_theme_night,omitempty"`
	NftPoster string `protobuf:"bytes,3,opt,name=nft_poster,json=nftPoster,proto3" json:"nft_poster,omitempty"`
	NftRaw string `protobuf:"bytes,4,opt,name=nft_raw,json=nftRaw,proto3" json:"nft_raw,omitempty"`
}

func (x *Display) Reset() {
	*x = Display{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Display) ProtoMessage() {}

func (x *Display) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Display.ProtoReflect.Descriptor instead.
func (*Display) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{4}
}

func (x *Display) GetBgThemeLight() string {
	if x != nil {
		return x.BgThemeLight
	}
	return ""
}

func (x *Display) GetBgThemeNight() string {
	if x != nil {
		return x.BgThemeNight
	}
	return ""
}

func (x *Display) GetNftPoster() string {
	if x != nil {
		return x.NftPoster
	}
	return ""
}

func (x *Display) GetNftRaw() string {
	if x != nil {
		return x.NftRaw
	}
	return ""
}

type GetLastPolicyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortDesc string `protobuf:"bytes,1,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	DetailJump string `protobuf:"bytes,2,opt,name=detail_jump,json=detailJump,proto3" json:"detail_jump,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetLastPolicyReply) Reset() {
	*x = GetLastPolicyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastPolicyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastPolicyReply) ProtoMessage() {}

func (x *GetLastPolicyReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastPolicyReply.ProtoReflect.Descriptor instead.
func (*GetLastPolicyReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{5}
}

func (x *GetLastPolicyReply) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *GetLastPolicyReply) GetDetailJump() string {
	if x != nil {
		return x.DetailJump
	}
	return ""
}

func (x *GetLastPolicyReply) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetLastPolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyType PolicyType `protobuf:"varint,1,opt,name=policy_type,json=policyType,proto3,enum=bilibili.pangu.gallery.v1.PolicyType" json:"policy_type,omitempty"`
}

func (x *GetLastPolicyReq) Reset() {
	*x = GetLastPolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLastPolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLastPolicyReq) ProtoMessage() {}

func (x *GetLastPolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLastPolicyReq.ProtoReflect.Descriptor instead.
func (*GetLastPolicyReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{6}
}

func (x *GetLastPolicyReq) GetPolicyType() PolicyType {
	if x != nil {
		return x.PolicyType
	}
	return PolicyType_UNKNOWN_POLICY
}

type GetUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	HelpUrl string `protobuf:"bytes,5,opt,name=help_url,json=helpUrl,proto3" json:"help_url,omitempty"`
}

func (x *GetUserInfoReply) Reset() {
	*x = GetUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReply) ProtoMessage() {}

func (x *GetUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetUserInfoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserInfoReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetUserInfoReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserInfoReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetUserInfoReply) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserInfoReply) GetHelpUrl() string {
	if x != nil {
		return x.HelpUrl
	}
	return ""
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserInfoReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LinkUrl string `protobuf:"bytes,2,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	TrackEventId string `protobuf:"bytes,3,opt,name=track_event_id,json=trackEventId,proto3" json:"track_event_id,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{9}
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetLinkUrl() string {
	if x != nil {
		return x.LinkUrl
	}
	return ""
}

func (x *Link) GetTrackEventId() string {
	if x != nil {
		return x.TrackEventId
	}
	return ""
}

type ListNFTByMidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nfts []*NFT `protobuf:"bytes,1,rep,name=nfts,proto3" json:"nfts,omitempty"`
	AnchorId int64 `protobuf:"varint,2,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`
	End bool `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ListNFTByMidReply) Reset() {
	*x = ListNFTByMidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNFTByMidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNFTByMidReply) ProtoMessage() {}

func (x *ListNFTByMidReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNFTByMidReply.ProtoReflect.Descriptor instead.
func (*ListNFTByMidReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{10}
}

func (x *ListNFTByMidReply) GetNfts() []*NFT {
	if x != nil {
		return x.Nfts
	}
	return nil
}

func (x *ListNFTByMidReply) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *ListNFTByMidReply) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type ListNFTByMidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	BizType string `protobuf:"bytes,3,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`
	AnchorId int64 `protobuf:"varint,4,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`
	PageSize int64 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListNFTByMidReq) Reset() {
	*x = ListNFTByMidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNFTByMidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNFTByMidReq) ProtoMessage() {}

func (x *ListNFTByMidReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNFTByMidReq.ProtoReflect.Descriptor instead.
func (*ListNFTByMidReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{11}
}

func (x *ListNFTByMidReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ListNFTByMidReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListNFTByMidReq) GetBizType() string {
	if x != nil {
		return x.BizType
	}
	return ""
}

func (x *ListNFTByMidReq) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *ListNFTByMidReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListOrderByMidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	AnchorId int64 `protobuf:"varint,2,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`
	End bool `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ListOrderByMidReply) Reset() {
	*x = ListOrderByMidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderByMidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderByMidReply) ProtoMessage() {}

func (x *ListOrderByMidReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderByMidReply.ProtoReflect.Descriptor instead.
func (*ListOrderByMidReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{12}
}

func (x *ListOrderByMidReply) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *ListOrderByMidReply) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *ListOrderByMidReply) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type ListOrderByMidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	AnchorId int64 `protobuf:"varint,2,opt,name=anchor_id,json=anchorId,proto3" json:"anchor_id,omitempty"`
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListOrderByMidReq) Reset() {
	*x = ListOrderByMidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderByMidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderByMidReq) ProtoMessage() {}

func (x *ListOrderByMidReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderByMidReq.ProtoReflect.Descriptor instead.
func (*ListOrderByMidReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{13}
}

func (x *ListOrderByMidReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ListOrderByMidReq) GetAnchorId() int64 {
	if x != nil {
		return x.AnchorId
	}
	return 0
}

func (x *ListOrderByMidReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NFT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftId string `protobuf:"bytes,1,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	SerialNumber string `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Issuer string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Display *Display `protobuf:"bytes,5,opt,name=display,proto3" json:"display,omitempty"`
	DetailUrl string `protobuf:"bytes,6,opt,name=detail_url,json=detailUrl,proto3" json:"detail_url,omitempty"`
	NftStatus NFTStatus `protobuf:"varint,7,opt,name=nft_status,json=nftStatus,proto3,enum=bilibili.pangu.gallery.v1.NFTStatus" json:"nft_status,omitempty"`
	ItemId int64 `protobuf:"varint,8,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *NFT) Reset() {
	*x = NFT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NFT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFT) ProtoMessage() {}

func (x *NFT) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFT.ProtoReflect.Descriptor instead.
func (*NFT) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{14}
}

func (x *NFT) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *NFT) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *NFT) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *NFT) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *NFT) GetDisplay() *Display {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *NFT) GetDetailUrl() string {
	if x != nil {
		return x.DetailUrl
	}
	return ""
}

func (x *NFT) GetNftStatus() NFTStatus {
	if x != nil {
		return x.NftStatus
	}
	return NFTStatus_UNDEFINED
}

func (x *NFT) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName string `protobuf:"bytes,1,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	TxHash string `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxTime string `protobuf:"bytes,4,opt,name=tx_time,json=txTime,proto3" json:"tx_time,omitempty"`
	Issuer string `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IssueTime string `protobuf:"bytes,6,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
	TokenId string `protobuf:"bytes,7,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Display *Display `protobuf:"bytes,8,opt,name=display,proto3" json:"display,omitempty"`
	ContractAddress string `protobuf:"bytes,9,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	HashJump string `protobuf:"bytes,10,opt,name=hash_jump,json=hashJump,proto3" json:"hash_jump,omitempty"`
	ContractJump string `protobuf:"bytes,11,opt,name=contract_jump,json=contractJump,proto3" json:"contract_jump,omitempty"`
	DisableBrowserJump bool `protobuf:"varint,12,opt,name=disable_browser_jump,json=disableBrowserJump,proto3" json:"disable_browser_jump,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{15}
}

func (x *Order) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *Order) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Order) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Order) GetTxTime() string {
	if x != nil {
		return x.TxTime
	}
	return ""
}

func (x *Order) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Order) GetIssueTime() string {
	if x != nil {
		return x.IssueTime
	}
	return ""
}

func (x *Order) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *Order) GetDisplay() *Display {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *Order) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Order) GetHashJump() string {
	if x != nil {
		return x.HashJump
	}
	return ""
}

func (x *Order) GetContractJump() string {
	if x != nil {
		return x.ContractJump
	}
	return ""
}

func (x *Order) GetDisableBrowserJump() bool {
	if x != nil {
		return x.DisableBrowserJump
	}
	return false
}

type UserCheckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyStatus int32 `protobuf:"varint,1,opt,name=policy_status,json=policyStatus,proto3" json:"policy_status,omitempty"`
	Gt14 int32 `protobuf:"varint,2,opt,name=gt14,proto3" json:"gt14,omitempty"`
}

func (x *UserCheckReply) Reset() {
	*x = UserCheckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckReply) ProtoMessage() {}

func (x *UserCheckReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckReply.ProtoReflect.Descriptor instead.
func (*UserCheckReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{16}
}

func (x *UserCheckReply) GetPolicyStatus() int32 {
	if x != nil {
		return x.PolicyStatus
	}
	return 0
}

func (x *UserCheckReply) GetGt14() int32 {
	if x != nil {
		return x.Gt14
	}
	return 0
}

type UserCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	PolicyType int32 `protobuf:"varint,2,opt,name=policy_type,json=policyType,proto3" json:"policy_type,omitempty"`
}

func (x *UserCheckReq) Reset() {
	*x = UserCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckReq) ProtoMessage() {}

func (x *UserCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckReq.ProtoReflect.Descriptor instead.
func (*UserCheckReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP(), []int{17}
}

func (x *UserCheckReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UserCheckReq) GetPolicyType() int32 {
	if x != nil {
		return x.PolicyType
	}
	return 0
}

var File_bilibili_pangu_gallery_v1_gallery_proto protoreflect.FileDescriptor

var file_bilibili_pangu_gallery_v1_gallery_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61, 0x6e, 0x67, 0x75,
	0x2f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x67, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x72, 0x0a, 0x0e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x20, 0x0a, 0x0c, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x8d, 0x01,
	0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x67, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x66, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x66, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x66, 0x74, 0x5f, 0x72, 0x61, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x66, 0x74, 0x52, 0x61, 0x77, 0x22, 0x6e, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6a, 0x75, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4a,
	0x75, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x46, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x68, 0x65, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x22, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x46, 0x54, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32,
	0x0a, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x46, 0x54, 0x52, 0x04, 0x6e, 0x66,
	0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x46, 0x54, 0x42, 0x79, 0x4d,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x38, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75,
	0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x5f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x03, 0x4e, 0x46,
	0x54, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x43, 0x0a, 0x0a, 0x6e, 0x66, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x46, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6e, 0x66, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xaa, 0x03,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6a,
	0x75, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x4a,
	0x75, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x6a, 0x75, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4a, 0x75, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x6a, 0x75, 0x6d, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x4a, 0x75, 0x6d, 0x70, 0x22, 0x49, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x74, 0x31, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x67, 0x74, 0x31, 0x34, 0x22, 0x41, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x32, 0x0a, 0x0a, 0x47, 0x54, 0x31, 0x34,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x54, 0x31, 0x34, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x47, 0x45, 0x31, 0x34, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x47, 0x54, 0x31, 0x34, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x09,
	0x4e, 0x46, 0x54, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a,
	0x3c, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x67, 0x72, 0x65, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x36, 0x0a,
	0x0a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x41, 0x4c, 0x45, 0x10, 0x02, 0x32, 0x9e, 0x06, 0x0a, 0x10, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x62, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x68, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x46,
	0x54, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x46, 0x54, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61,
	0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x46, 0x54, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x6e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d,
	0x69, 0x64, 0x12, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61,
	0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67,
	0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5f, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5f, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x27,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x65, 0x0a, 0x0b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e,
	0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x61, 0x6e, 0x67, 0x75, 0x2e, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x61,
	0x6e, 0x67, 0x75, 0x2f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_pangu_gallery_v1_gallery_proto_rawDescOnce sync.Once
	file_bilibili_pangu_gallery_v1_gallery_proto_rawDescData = file_bilibili_pangu_gallery_v1_gallery_proto_rawDesc
)

func file_bilibili_pangu_gallery_v1_gallery_proto_rawDescGZIP() []byte {
	file_bilibili_pangu_gallery_v1_gallery_proto_rawDescOnce.Do(func() {
		file_bilibili_pangu_gallery_v1_gallery_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_pangu_gallery_v1_gallery_proto_rawDescData)
	})
	return file_bilibili_pangu_gallery_v1_gallery_proto_rawDescData
}

var file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_bilibili_pangu_gallery_v1_gallery_proto_goTypes = []interface{}{
	(GT14Status)(0),             // 0: bilibili.pangu.gallery.v1.GT14Status
	(NFTStatus)(0),              // 1: bilibili.pangu.gallery.v1.NFTStatus
	(PolicyAgreeStatus)(0),      // 2: bilibili.pangu.gallery.v1.PolicyAgreeStatus
	(PolicyType)(0),             // 3: bilibili.pangu.gallery.v1.PolicyType
	(*AgreePolicyReply)(nil),    // 4: bilibili.pangu.gallery.v1.AgreePolicyReply
	(*AgreePolicyReq)(nil),      // 5: bilibili.pangu.gallery.v1.AgreePolicyReq
	(*BasicInfoReply)(nil),      // 6: bilibili.pangu.gallery.v1.BasicInfoReply
	(*BasicInfoReq)(nil),        // 7: bilibili.pangu.gallery.v1.BasicInfoReq
	(*Display)(nil),             // 8: bilibili.pangu.gallery.v1.Display
	(*GetLastPolicyReply)(nil),  // 9: bilibili.pangu.gallery.v1.GetLastPolicyReply
	(*GetLastPolicyReq)(nil),    // 10: bilibili.pangu.gallery.v1.GetLastPolicyReq
	(*GetUserInfoReply)(nil),    // 11: bilibili.pangu.gallery.v1.GetUserInfoReply
	(*GetUserInfoReq)(nil),      // 12: bilibili.pangu.gallery.v1.GetUserInfoReq
	(*Link)(nil),                // 13: bilibili.pangu.gallery.v1.Link
	(*ListNFTByMidReply)(nil),   // 14: bilibili.pangu.gallery.v1.ListNFTByMidReply
	(*ListNFTByMidReq)(nil),     // 15: bilibili.pangu.gallery.v1.ListNFTByMidReq
	(*ListOrderByMidReply)(nil), // 16: bilibili.pangu.gallery.v1.ListOrderByMidReply
	(*ListOrderByMidReq)(nil),   // 17: bilibili.pangu.gallery.v1.ListOrderByMidReq
	(*NFT)(nil),                 // 18: bilibili.pangu.gallery.v1.NFT
	(*Order)(nil),               // 19: bilibili.pangu.gallery.v1.Order
	(*UserCheckReply)(nil),      // 20: bilibili.pangu.gallery.v1.UserCheckReply
	(*UserCheckReq)(nil),        // 21: bilibili.pangu.gallery.v1.UserCheckReq
	(*emptypb.Empty)(nil),       // 22: google.protobuf.Empty
}
var file_bilibili_pangu_gallery_v1_gallery_proto_depIdxs = []int32{
	3,  // 0: bilibili.pangu.gallery.v1.AgreePolicyReq.policy_type:type_name -> bilibili.pangu.gallery.v1.PolicyType
	13, // 1: bilibili.pangu.gallery.v1.BasicInfoReply.links:type_name -> bilibili.pangu.gallery.v1.Link
	3,  // 2: bilibili.pangu.gallery.v1.GetLastPolicyReq.policy_type:type_name -> bilibili.pangu.gallery.v1.PolicyType
	18, // 3: bilibili.pangu.gallery.v1.ListNFTByMidReply.nfts:type_name -> bilibili.pangu.gallery.v1.NFT
	19, // 4: bilibili.pangu.gallery.v1.ListOrderByMidReply.orders:type_name -> bilibili.pangu.gallery.v1.Order
	8,  // 5: bilibili.pangu.gallery.v1.NFT.display:type_name -> bilibili.pangu.gallery.v1.Display
	1,  // 6: bilibili.pangu.gallery.v1.NFT.nft_status:type_name -> bilibili.pangu.gallery.v1.NFTStatus
	8,  // 7: bilibili.pangu.gallery.v1.Order.display:type_name -> bilibili.pangu.gallery.v1.Display
	22, // 8: bilibili.pangu.gallery.v1.GalleryInterface.Ping:input_type -> google.protobuf.Empty
	12, // 9: bilibili.pangu.gallery.v1.GalleryInterface.UserInfo:input_type -> bilibili.pangu.gallery.v1.GetUserInfoReq
	15, // 10: bilibili.pangu.gallery.v1.GalleryInterface.ListNFTByMid:input_type -> bilibili.pangu.gallery.v1.ListNFTByMidReq
	17, // 11: bilibili.pangu.gallery.v1.GalleryInterface.ListOrderByMid:input_type -> bilibili.pangu.gallery.v1.ListOrderByMidReq
	7,  // 12: bilibili.pangu.gallery.v1.GalleryInterface.BasicInfo:input_type -> bilibili.pangu.gallery.v1.BasicInfoReq
	21, // 13: bilibili.pangu.gallery.v1.GalleryInterface.UserCheck:input_type -> bilibili.pangu.gallery.v1.UserCheckReq
	5,  // 14: bilibili.pangu.gallery.v1.GalleryInterface.AgreePolicy:input_type -> bilibili.pangu.gallery.v1.AgreePolicyReq
	10, // 15: bilibili.pangu.gallery.v1.GalleryInterface.GetLastPolicy:input_type -> bilibili.pangu.gallery.v1.GetLastPolicyReq
	22, // 16: bilibili.pangu.gallery.v1.GalleryInterface.Ping:output_type -> google.protobuf.Empty
	11, // 17: bilibili.pangu.gallery.v1.GalleryInterface.UserInfo:output_type -> bilibili.pangu.gallery.v1.GetUserInfoReply
	14, // 18: bilibili.pangu.gallery.v1.GalleryInterface.ListNFTByMid:output_type -> bilibili.pangu.gallery.v1.ListNFTByMidReply
	16, // 19: bilibili.pangu.gallery.v1.GalleryInterface.ListOrderByMid:output_type -> bilibili.pangu.gallery.v1.ListOrderByMidReply
	6,  // 20: bilibili.pangu.gallery.v1.GalleryInterface.BasicInfo:output_type -> bilibili.pangu.gallery.v1.BasicInfoReply
	20, // 21: bilibili.pangu.gallery.v1.GalleryInterface.UserCheck:output_type -> bilibili.pangu.gallery.v1.UserCheckReply
	4,  // 22: bilibili.pangu.gallery.v1.GalleryInterface.AgreePolicy:output_type -> bilibili.pangu.gallery.v1.AgreePolicyReply
	9,  // 23: bilibili.pangu.gallery.v1.GalleryInterface.GetLastPolicy:output_type -> bilibili.pangu.gallery.v1.GetLastPolicyReply
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_bilibili_pangu_gallery_v1_gallery_proto_init() }
func file_bilibili_pangu_gallery_v1_gallery_proto_init() {
	if File_bilibili_pangu_gallery_v1_gallery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreePolicyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreePolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Display); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastPolicyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLastPolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNFTByMidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNFTByMidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderByMidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderByMidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NFT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_pangu_gallery_v1_gallery_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_pangu_gallery_v1_gallery_proto_goTypes,
		DependencyIndexes: file_bilibili_pangu_gallery_v1_gallery_proto_depIdxs,
		EnumInfos:         file_bilibili_pangu_gallery_v1_gallery_proto_enumTypes,
		MessageInfos:      file_bilibili_pangu_gallery_v1_gallery_proto_msgTypes,
	}.Build()
	File_bilibili_pangu_gallery_v1_gallery_proto = out.File
	file_bilibili_pangu_gallery_v1_gallery_proto_rawDesc = nil
	file_bilibili_pangu_gallery_v1_gallery_proto_goTypes = nil
	file_bilibili_pangu_gallery_v1_gallery_proto_depIdxs = nil
}
