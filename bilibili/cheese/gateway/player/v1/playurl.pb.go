// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: bilibili/cheese/gateway/player/v1/playurl.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/playurl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 播放页信息-请求
type PlayViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 课程epid(与番剧不互通)
	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,11,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 视频编码
	PreferCodecType v1.CodeType `protobuf:"varint,12,opt,name=prefer_codec_type,json=preferCodecType,proto3,enum=bilibili.app.playurl.v1.CodeType" json:"prefer_codec_type,omitempty"`
	// 是否强制请求预览视频
	IsPreview bool `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
}

func (x *PlayViewReq) Reset() {
	*x = PlayViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReq) ProtoMessage() {}

func (x *PlayViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReq.ProtoReflect.Descriptor instead.
func (*PlayViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{0}
}

func (x *PlayViewReq) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *PlayViewReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *PlayViewReq) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayViewReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayViewReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayViewReq) GetDownload() uint32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *PlayViewReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayViewReq) GetFourk() bool {
	if x != nil {
		return x.Fourk
	}
	return false
}

func (x *PlayViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *PlayViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *PlayViewReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *PlayViewReq) GetPreferCodecType() v1.CodeType {
	if x != nil {
		return x.PreferCodecType
	}
	return v1.CodeType(0)
}

func (x *PlayViewReq) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

// 投屏地址-请求
type ProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 课程epid(与番剧不互通)
	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 投屏协议
	// 0:默认乐播 1:自建协议 2:云投屏
	Protocol int32 `protobuf:"varint,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// 投屏设备
	// 0:默认其他 1:OTT设备
	DeviceType int32 `protobuf:"varint,12,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	// 是否flv格式
	FlvProj bool `protobuf:"varint,13,opt,name=flv_proj,json=flvProj,proto3" json:"flv_proj,omitempty"`
}

func (x *ProjectReq) Reset() {
	*x = ProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReq) ProtoMessage() {}

func (x *ProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReq.ProtoReflect.Descriptor instead.
func (*ProjectReq) Descriptor() ([]byte, []int) {
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectReq) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *ProjectReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ProjectReq) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *ProjectReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *ProjectReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *ProjectReq) GetDownload() uint32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *ProjectReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *ProjectReq) GetFourk() bool {
	if x != nil {
		return x.Fourk
	}
	return false
}

func (x *ProjectReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ProjectReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *ProjectReq) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *ProjectReq) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProjectReq) GetFlvProj() bool {
	if x != nil {
		return x.FlvProj
	}
	return false
}

// 播放页信息-响应
type PlayViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频url信息
	VideoInfo *v1.VideoInfo `protobuf:"bytes,1,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	// 禁用功能配置
	PlayConf *PlayAbilityConf `protobuf:"bytes,2,opt,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
}

func (x *PlayViewReply) Reset() {
	*x = PlayViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReply) ProtoMessage() {}

func (x *PlayViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReply.ProtoReflect.Descriptor instead.
func (*PlayViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{2}
}

func (x *PlayViewReply) GetVideoInfo() *v1.VideoInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *PlayViewReply) GetPlayConf() *PlayAbilityConf {
	if x != nil {
		return x.PlayConf
	}
	return nil
}

// 禁用功能配置
type PlayAbilityConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundPlayDisable bool `protobuf:"varint,1,opt,name=background_play_disable,json=backgroundPlayDisable,proto3" json:"background_play_disable,omitempty"` // 后台播放
	FlipDisable           bool `protobuf:"varint,2,opt,name=flip_disable,json=flipDisable,proto3" json:"flip_disable,omitempty"`                                 // 镜像反转
	CastDisable           bool `protobuf:"varint,3,opt,name=cast_disable,json=castDisable,proto3" json:"cast_disable,omitempty"`                                 // 支持投屏
	FeedbackDisable       bool `protobuf:"varint,4,opt,name=feedback_disable,json=feedbackDisable,proto3" json:"feedback_disable,omitempty"`                     // 反馈
	SubtitleDisable       bool `protobuf:"varint,5,opt,name=subtitle_disable,json=subtitleDisable,proto3" json:"subtitle_disable,omitempty"`                     // 字幕
	PlaybackRateDisable   bool `protobuf:"varint,6,opt,name=playback_rate_disable,json=playbackRateDisable,proto3" json:"playback_rate_disable,omitempty"`       // 播放速度
	TimeUpDisable         bool `protobuf:"varint,7,opt,name=time_up_disable,json=timeUpDisable,proto3" json:"time_up_disable,omitempty"`                         // 定时停止播放
	PlaybackModeDisable   bool `protobuf:"varint,8,opt,name=playback_mode_disable,json=playbackModeDisable,proto3" json:"playback_mode_disable,omitempty"`       // 播放方式
	ScaleModeDisable      bool `protobuf:"varint,9,opt,name=scale_mode_disable,json=scaleModeDisable,proto3" json:"scale_mode_disable,omitempty"`                // 画面尺寸
	LikeDisable           bool `protobuf:"varint,10,opt,name=like_disable,json=likeDisable,proto3" json:"like_disable,omitempty"`                                // 顶
	DislikeDisable        bool `protobuf:"varint,11,opt,name=dislike_disable,json=dislikeDisable,proto3" json:"dislike_disable,omitempty"`                       // 踩
	CoinDisable           bool `protobuf:"varint,12,opt,name=coin_disable,json=coinDisable,proto3" json:"coin_disable,omitempty"`                                // 投币
	ElecDisable           bool `protobuf:"varint,13,opt,name=elec_disable,json=elecDisable,proto3" json:"elec_disable,omitempty"`                                // 充电
	ShareDisable          bool `protobuf:"varint,14,opt,name=share_disable,json=shareDisable,proto3" json:"share_disable,omitempty"`                             // 分享
	ScreenShotDisable     bool `protobuf:"varint,15,opt,name=screen_shot_disable,json=screenShotDisable,proto3" json:"screen_shot_disable,omitempty"`            // 截图
	LockScreenDisable     bool `protobuf:"varint,16,opt,name=lock_screen_disable,json=lockScreenDisable,proto3" json:"lock_screen_disable,omitempty"`            // 锁屏
	RecommendDisable      bool `protobuf:"varint,17,opt,name=recommend_disable,json=recommendDisable,proto3" json:"recommend_disable,omitempty"`                 // 相关推荐
	PlaybackSpeedDisable  bool `protobuf:"varint,18,opt,name=playback_speed_disable,json=playbackSpeedDisable,proto3" json:"playback_speed_disable,omitempty"`   // 倍速
	DefinitionDisable     bool `protobuf:"varint,19,opt,name=definition_disable,json=definitionDisable,proto3" json:"definition_disable,omitempty"`              // 清晰度
	SelectionsDisable     bool `protobuf:"varint,20,opt,name=selections_disable,json=selectionsDisable,proto3" json:"selections_disable,omitempty"`              // 选集
	NextDisable           bool `protobuf:"varint,21,opt,name=next_disable,json=nextDisable,proto3" json:"next_disable,omitempty"`                                // 下一集
	EditDmDisable         bool `protobuf:"varint,22,opt,name=edit_dm_disable,json=editDmDisable,proto3" json:"edit_dm_disable,omitempty"`                        // 编辑弹幕
	OuterDmDisable        bool `protobuf:"varint,25,opt,name=outer_dm_disable,json=outerDmDisable,proto3" json:"outer_dm_disable,omitempty"`                     // 外层面板弹幕设置
	InnerDmDisable        bool `protobuf:"varint,26,opt,name=inner_dm_disable,json=innerDmDisable,proto3" json:"inner_dm_disable,omitempty"`                     // 三点内弹幕设置
	SmallWindowDisable    bool `protobuf:"varint,27,opt,name=small_window_disable,json=smallWindowDisable,proto3" json:"small_window_disable,omitempty"`         // 画中画
}

func (x *PlayAbilityConf) Reset() {
	*x = PlayAbilityConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAbilityConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAbilityConf) ProtoMessage() {}

func (x *PlayAbilityConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAbilityConf.ProtoReflect.Descriptor instead.
func (*PlayAbilityConf) Descriptor() ([]byte, []int) {
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{3}
}

func (x *PlayAbilityConf) GetBackgroundPlayDisable() bool {
	if x != nil {
		return x.BackgroundPlayDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFlipDisable() bool {
	if x != nil {
		return x.FlipDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCastDisable() bool {
	if x != nil {
		return x.CastDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFeedbackDisable() bool {
	if x != nil {
		return x.FeedbackDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSubtitleDisable() bool {
	if x != nil {
		return x.SubtitleDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackRateDisable() bool {
	if x != nil {
		return x.PlaybackRateDisable
	}
	return false
}

func (x *PlayAbilityConf) GetTimeUpDisable() bool {
	if x != nil {
		return x.TimeUpDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackModeDisable() bool {
	if x != nil {
		return x.PlaybackModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScaleModeDisable() bool {
	if x != nil {
		return x.ScaleModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLikeDisable() bool {
	if x != nil {
		return x.LikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDislikeDisable() bool {
	if x != nil {
		return x.DislikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCoinDisable() bool {
	if x != nil {
		return x.CoinDisable
	}
	return false
}

func (x *PlayAbilityConf) GetElecDisable() bool {
	if x != nil {
		return x.ElecDisable
	}
	return false
}

func (x *PlayAbilityConf) GetShareDisable() bool {
	if x != nil {
		return x.ShareDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScreenShotDisable() bool {
	if x != nil {
		return x.ScreenShotDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLockScreenDisable() bool {
	if x != nil {
		return x.LockScreenDisable
	}
	return false
}

func (x *PlayAbilityConf) GetRecommendDisable() bool {
	if x != nil {
		return x.RecommendDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackSpeedDisable() bool {
	if x != nil {
		return x.PlaybackSpeedDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDefinitionDisable() bool {
	if x != nil {
		return x.DefinitionDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSelectionsDisable() bool {
	if x != nil {
		return x.SelectionsDisable
	}
	return false
}

func (x *PlayAbilityConf) GetNextDisable() bool {
	if x != nil {
		return x.NextDisable
	}
	return false
}

func (x *PlayAbilityConf) GetEditDmDisable() bool {
	if x != nil {
		return x.EditDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetOuterDmDisable() bool {
	if x != nil {
		return x.OuterDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetInnerDmDisable() bool {
	if x != nil {
		return x.InnerDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSmallWindowDisable() bool {
	if x != nil {
		return x.SmallWindowDisable
	}
	return false
}

// 投屏地址-响应
type ProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *v1.PlayURLReply `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ProjectReply) Reset() {
	*x = ProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReply) ProtoMessage() {}

func (x *ProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReply.ProtoReflect.Descriptor instead.
func (*ProjectReply) Descriptor() ([]byte, []int) {
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectReply) GetProject() *v1.PlayURLReply {
	if x != nil {
		return x.Project
	}
	return nil
}

var File_bilibili_cheese_gateway_player_v1_playurl_proto protoreflect.FileDescriptor

var file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x63, 0x68, 0x65, 0x65, 0x73,
	0x65, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x68, 0x65, 0x65,
	0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x03, 0x0a, 0x0b,
	0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x65,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70,
	0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53,
	0x70, 0x6d, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65,
	0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0xcd, 0x02, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x6c, 0x76, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x66, 0x6c, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x22, 0xa3, 0x01, 0x0a, 0x0d, 0x50, 0x6c,
	0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63, 0x68, 0x65,
	0x65, 0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x22,
	0xcc, 0x08, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x36, 0x0a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x6c, 0x69, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x66, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x69, 0x6b,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x63, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x53, 0x68, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x44,
	0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x44, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x6d, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x44, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x6d, 0x61, 0x6c,
	0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x4f,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52,
	0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x32,
	0xe2, 0x01, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x6c, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x69, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x63, 0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x63,
	0x68, 0x65, 0x65, 0x73, 0x65, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d,
	0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x63, 0x68, 0x65, 0x65,
	0x73, 0x65, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescOnce sync.Once
	file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescData = file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDesc
)

func file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescGZIP() []byte {
	file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescOnce.Do(func() {
		file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescData)
	})
	return file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDescData
}

var file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bilibili_cheese_gateway_player_v1_playurl_proto_goTypes = []interface{}{
	(*PlayViewReq)(nil),     // 0: bilibili.cheese.gateway.player.v1.PlayViewReq
	(*ProjectReq)(nil),      // 1: bilibili.cheese.gateway.player.v1.ProjectReq
	(*PlayViewReply)(nil),   // 2: bilibili.cheese.gateway.player.v1.PlayViewReply
	(*PlayAbilityConf)(nil), // 3: bilibili.cheese.gateway.player.v1.PlayAbilityConf
	(*ProjectReply)(nil),    // 4: bilibili.cheese.gateway.player.v1.ProjectReply
	(v1.CodeType)(0),        // 5: bilibili.app.playurl.v1.CodeType
	(*v1.VideoInfo)(nil),    // 6: bilibili.app.playurl.v1.VideoInfo
	(*v1.PlayURLReply)(nil), // 7: bilibili.app.playurl.v1.PlayURLReply
}
var file_bilibili_cheese_gateway_player_v1_playurl_proto_depIdxs = []int32{
	5, // 0: bilibili.cheese.gateway.player.v1.PlayViewReq.prefer_codec_type:type_name -> bilibili.app.playurl.v1.CodeType
	6, // 1: bilibili.cheese.gateway.player.v1.PlayViewReply.video_info:type_name -> bilibili.app.playurl.v1.VideoInfo
	3, // 2: bilibili.cheese.gateway.player.v1.PlayViewReply.play_conf:type_name -> bilibili.cheese.gateway.player.v1.PlayAbilityConf
	7, // 3: bilibili.cheese.gateway.player.v1.ProjectReply.project:type_name -> bilibili.app.playurl.v1.PlayURLReply
	0, // 4: bilibili.cheese.gateway.player.v1.PlayURL.PlayView:input_type -> bilibili.cheese.gateway.player.v1.PlayViewReq
	1, // 5: bilibili.cheese.gateway.player.v1.PlayURL.Project:input_type -> bilibili.cheese.gateway.player.v1.ProjectReq
	2, // 6: bilibili.cheese.gateway.player.v1.PlayURL.PlayView:output_type -> bilibili.cheese.gateway.player.v1.PlayViewReply
	4, // 7: bilibili.cheese.gateway.player.v1.PlayURL.Project:output_type -> bilibili.cheese.gateway.player.v1.ProjectReply
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bilibili_cheese_gateway_player_v1_playurl_proto_init() }
func file_bilibili_cheese_gateway_player_v1_playurl_proto_init() {
	if File_bilibili_cheese_gateway_player_v1_playurl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAbilityConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_cheese_gateway_player_v1_playurl_proto_goTypes,
		DependencyIndexes: file_bilibili_cheese_gateway_player_v1_playurl_proto_depIdxs,
		MessageInfos:      file_bilibili_cheese_gateway_player_v1_playurl_proto_msgTypes,
	}.Build()
	File_bilibili_cheese_gateway_player_v1_playurl_proto = out.File
	file_bilibili_cheese_gateway_player_v1_playurl_proto_rawDesc = nil
	file_bilibili_cheese_gateway_player_v1_playurl_proto_goTypes = nil
	file_bilibili_cheese_gateway_player_v1_playurl_proto_depIdxs = nil
}
