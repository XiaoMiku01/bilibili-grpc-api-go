// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/web/interfaces/v1/interfaces.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivitySeasonStatus int32

const (
	ActivitySeasonStatus_StatusNone ActivitySeasonStatus = 0 //
	ActivitySeasonStatus_StatusLive ActivitySeasonStatus = 1 //
	ActivitySeasonStatus_StatusView ActivitySeasonStatus = 2 //
)

// Enum value maps for ActivitySeasonStatus.
var (
	ActivitySeasonStatus_name = map[int32]string{
		0: "StatusNone",
		1: "StatusLive",
		2: "StatusView",
	}
	ActivitySeasonStatus_value = map[string]int32{
		"StatusNone": 0,
		"StatusLive": 1,
		"StatusView": 2,
	}
)

func (x ActivitySeasonStatus) Enum() *ActivitySeasonStatus {
	p := new(ActivitySeasonStatus)
	*p = x
	return p
}

func (x ActivitySeasonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivitySeasonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[0].Descriptor()
}

func (ActivitySeasonStatus) Type() protoreflect.EnumType {
	return &file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[0]
}

func (x ActivitySeasonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivitySeasonStatus.Descriptor instead.
func (ActivitySeasonStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{0}
}

type OrderType int32

const (
	OrderType_TypeNone          OrderType = 0 //
	OrderType_TypeOrderActivity OrderType = 1 //
	OrderType_TypeFavSeason     OrderType = 2 //
	OrderType_TypeClick         OrderType = 3 //
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "TypeNone",
		1: "TypeOrderActivity",
		2: "TypeFavSeason",
		3: "TypeClick",
	}
	OrderType_value = map[string]int32{
		"TypeNone":          0,
		"TypeOrderActivity": 1,
		"TypeFavSeason":     2,
		"TypeClick":         3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{1}
}

type ReplyEmoteMetaSize int32

const (
	ReplyEmoteMetaSize_EMOTE_META_SIZE_UNSPECIFIED ReplyEmoteMetaSize = 0 //
	ReplyEmoteMetaSize_EMOTE_META_SIZE_SMALL       ReplyEmoteMetaSize = 1 //
	ReplyEmoteMetaSize_EMOTE_META_SIZE_BIG         ReplyEmoteMetaSize = 2 //
)

// Enum value maps for ReplyEmoteMetaSize.
var (
	ReplyEmoteMetaSize_name = map[int32]string{
		0: "EMOTE_META_SIZE_UNSPECIFIED",
		1: "EMOTE_META_SIZE_SMALL",
		2: "EMOTE_META_SIZE_BIG",
	}
	ReplyEmoteMetaSize_value = map[string]int32{
		"EMOTE_META_SIZE_UNSPECIFIED": 0,
		"EMOTE_META_SIZE_SMALL":       1,
		"EMOTE_META_SIZE_BIG":         2,
	}
)

func (x ReplyEmoteMetaSize) Enum() *ReplyEmoteMetaSize {
	p := new(ReplyEmoteMetaSize)
	*p = x
	return p
}

func (x ReplyEmoteMetaSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyEmoteMetaSize) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[2].Descriptor()
}

func (ReplyEmoteMetaSize) Type() protoreflect.EnumType {
	return &file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes[2]
}

func (x ReplyEmoteMetaSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyEmoteMetaSize.Descriptor instead.
func (ReplyEmoteMetaSize) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{2}
}

type AccInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sex  string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AccInfo) Reset() {
	*x = AccInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccInfo) ProtoMessage() {}

func (x *AccInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccInfo.ProtoReflect.Descriptor instead.
func (*AccInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{0}
}

func (x *AccInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *AccInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccInfo) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *AccInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *AccInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type AccountCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid            string          `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name           string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sex            string          `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Rank           string          `protobuf:"bytes,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Face           string          `protobuf:"bytes,5,opt,name=face,proto3" json:"face,omitempty"`
	Spacesta       int32           `protobuf:"varint,6,opt,name=spacesta,proto3" json:"spacesta,omitempty"`
	Sign           string          `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	LevelInfo      *CardLevelInfo  `protobuf:"bytes,8,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	Pendant        *PendantInfo    `protobuf:"bytes,9,opt,name=pendant,proto3" json:"pendant,omitempty"`
	Nameplate      *NameplateInfo  `protobuf:"bytes,10,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	Official       *OfficialInfo   `protobuf:"bytes,11,opt,name=official,proto3" json:"official,omitempty"`
	OfficialVerify *OfficialVerify `protobuf:"bytes,12,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	Vip            *CardVip        `protobuf:"bytes,13,opt,name=vip,proto3" json:"vip,omitempty"`
	Fans           int64           `protobuf:"varint,14,opt,name=fans,proto3" json:"fans,omitempty"`
	Friend         int64           `protobuf:"varint,15,opt,name=friend,proto3" json:"friend,omitempty"`
	Attention      int64           `protobuf:"varint,16,opt,name=attention,proto3" json:"attention,omitempty"`
}

func (x *AccountCard) Reset() {
	*x = AccountCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCard) ProtoMessage() {}

func (x *AccountCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCard.ProtoReflect.Descriptor instead.
func (*AccountCard) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{1}
}

func (x *AccountCard) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *AccountCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountCard) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *AccountCard) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *AccountCard) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *AccountCard) GetSpacesta() int32 {
	if x != nil {
		return x.Spacesta
	}
	return 0
}

func (x *AccountCard) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *AccountCard) GetLevelInfo() *CardLevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *AccountCard) GetPendant() *PendantInfo {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *AccountCard) GetNameplate() *NameplateInfo {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

func (x *AccountCard) GetOfficial() *OfficialInfo {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *AccountCard) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *AccountCard) GetVip() *CardVip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *AccountCard) GetFans() int64 {
	if x != nil {
		return x.Fans
	}
	return 0
}

func (x *AccountCard) GetFriend() int64 {
	if x != nil {
		return x.Friend
	}
	return 0
}

func (x *AccountCard) GetAttention() int64 {
	if x != nil {
		return x.Attention
	}
	return 0
}

type ActivityArchiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc          *Arc             `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	Bvid         string           `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Pages        []*Page          `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`
	ReqUser      *ReqUser         `protobuf:"bytes,4,opt,name=req_user,json=reqUser,proto3" json:"req_user,omitempty"`
	Staff        []*Staff         `protobuf:"bytes,5,rep,name=staff,proto3" json:"staff,omitempty"`
	RightRelate  *OperationRelate `protobuf:"bytes,6,opt,name=right_relate,json=rightRelate,proto3" json:"right_relate,omitempty"`
	BottomRelate *OperationRelate `protobuf:"bytes,7,opt,name=bottom_relate,json=bottomRelate,proto3" json:"bottom_relate,omitempty"`
}

func (x *ActivityArchiveReply) Reset() {
	*x = ActivityArchiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityArchiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityArchiveReply) ProtoMessage() {}

func (x *ActivityArchiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityArchiveReply.ProtoReflect.Descriptor instead.
func (*ActivityArchiveReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityArchiveReply) GetArc() *Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *ActivityArchiveReply) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivityArchiveReply) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ActivityArchiveReply) GetReqUser() *ReqUser {
	if x != nil {
		return x.ReqUser
	}
	return nil
}

func (x *ActivityArchiveReply) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *ActivityArchiveReply) GetRightRelate() *OperationRelate {
	if x != nil {
		return x.RightRelate
	}
	return nil
}

func (x *ActivityArchiveReply) GetBottomRelate() *OperationRelate {
	if x != nil {
		return x.BottomRelate
	}
	return nil
}

type ActivityArchiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid         int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid        string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	ActivityKey string `protobuf:"bytes,3,opt,name=activity_key,json=activityKey,proto3" json:"activity_key,omitempty"`
}

func (x *ActivityArchiveReq) Reset() {
	*x = ActivityArchiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityArchiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityArchiveReq) ProtoMessage() {}

func (x *ActivityArchiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityArchiveReq.ProtoReflect.Descriptor instead.
func (*ActivityArchiveReq) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityArchiveReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ActivityArchiveReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivityArchiveReq) GetActivityKey() string {
	if x != nil {
		return x.ActivityKey
	}
	return ""
}

type ActivityEpisode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Aid    int64   `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid   string  `protobuf:"bytes,3,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Cid    int64   `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	Title  string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Cover  string  `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Author *Author `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
	Rights *Rights `protobuf:"bytes,8,opt,name=rights,proto3" json:"rights,omitempty"`
}

func (x *ActivityEpisode) Reset() {
	*x = ActivityEpisode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityEpisode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityEpisode) ProtoMessage() {}

func (x *ActivityEpisode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityEpisode.ProtoReflect.Descriptor instead.
func (*ActivityEpisode) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityEpisode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityEpisode) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ActivityEpisode) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivityEpisode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ActivityEpisode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivityEpisode) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ActivityEpisode) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ActivityEpisode) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

type ActivityGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iframes       []*ActivityGameIframe `protobuf:"bytes,1,rep,name=iframes,proto3" json:"iframes,omitempty"`
	Disclaimer    string                `protobuf:"bytes,2,opt,name=disclaimer,proto3" json:"disclaimer,omitempty"`
	DisclaimerUrl string                `protobuf:"bytes,3,opt,name=disclaimer_url,json=disclaimerUrl,proto3" json:"disclaimer_url,omitempty"`
}

func (x *ActivityGame) Reset() {
	*x = ActivityGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGame) ProtoMessage() {}

func (x *ActivityGame) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGame.ProtoReflect.Descriptor instead.
func (*ActivityGame) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityGame) GetIframes() []*ActivityGameIframe {
	if x != nil {
		return x.Iframes
	}
	return nil
}

func (x *ActivityGame) GetDisclaimer() string {
	if x != nil {
		return x.Disclaimer
	}
	return ""
}

func (x *ActivityGame) GetDisclaimerUrl() string {
	if x != nil {
		return x.DisclaimerUrl
	}
	return ""
}

type ActivityGameIframe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ActivityGameIframe) Reset() {
	*x = ActivityGameIframe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGameIframe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGameIframe) ProtoMessage() {}

func (x *ActivityGameIframe) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGameIframe.ProtoReflect.Descriptor instead.
func (*ActivityGameIframe) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{6}
}

func (x *ActivityGameIframe) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActivityGameIframe) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ActivityLive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId          int64            `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	NowTime         int64            `protobuf:"varint,2,opt,name=now_time,json=nowTime,proto3" json:"now_time,omitempty"`
	StartTime       int64            `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         int64            `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	HoverPic        string           `protobuf:"bytes,5,opt,name=hover_pic,json=hoverPic,proto3" json:"hover_pic,omitempty"`
	HoverJumpUrl    string           `protobuf:"bytes,6,opt,name=hover_jump_url,json=hoverJumpUrl,proto3" json:"hover_jump_url,omitempty"`
	BreakCycle      int64            `protobuf:"varint,7,opt,name=break_cycle,json=breakCycle,proto3" json:"break_cycle,omitempty"`
	Timeline        []*LiveTimeline  `protobuf:"bytes,8,rep,name=timeline,proto3" json:"timeline,omitempty"`
	OperationRelate *OperationRelate `protobuf:"bytes,9,opt,name=operation_relate,json=operationRelate,proto3" json:"operation_relate,omitempty"`
	ReplyType       int64            `protobuf:"varint,10,opt,name=reply_type,json=replyType,proto3" json:"reply_type,omitempty"`
	ReplyId         int64            `protobuf:"varint,11,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	HoverPicClose   string           `protobuf:"bytes,12,opt,name=hover_pic_close,json=hoverPicClose,proto3" json:"hover_pic_close,omitempty"`
	GiftDisclaimer  string           `protobuf:"bytes,13,opt,name=gift_disclaimer,json=giftDisclaimer,proto3" json:"gift_disclaimer,omitempty"`
}

func (x *ActivityLive) Reset() {
	*x = ActivityLive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityLive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLive) ProtoMessage() {}

func (x *ActivityLive) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLive.ProtoReflect.Descriptor instead.
func (*ActivityLive) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{7}
}

func (x *ActivityLive) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ActivityLive) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *ActivityLive) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ActivityLive) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityLive) GetHoverPic() string {
	if x != nil {
		return x.HoverPic
	}
	return ""
}

func (x *ActivityLive) GetHoverJumpUrl() string {
	if x != nil {
		return x.HoverJumpUrl
	}
	return ""
}

func (x *ActivityLive) GetBreakCycle() int64 {
	if x != nil {
		return x.BreakCycle
	}
	return 0
}

func (x *ActivityLive) GetTimeline() []*LiveTimeline {
	if x != nil {
		return x.Timeline
	}
	return nil
}

func (x *ActivityLive) GetOperationRelate() *OperationRelate {
	if x != nil {
		return x.OperationRelate
	}
	return nil
}

func (x *ActivityLive) GetReplyType() int64 {
	if x != nil {
		return x.ReplyType
	}
	return 0
}

func (x *ActivityLive) GetReplyId() int64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *ActivityLive) GetHoverPicClose() string {
	if x != nil {
		return x.HoverPicClose
	}
	return ""
}

func (x *ActivityLive) GetGiftDisclaimer() string {
	if x != nil {
		return x.GiftDisclaimer
	}
	return ""
}

type ActivityLiveTimeInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NowTime   int64           `protobuf:"varint,1,opt,name=now_time,json=nowTime,proto3" json:"now_time,omitempty"`
	StartTime int64           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64           `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Timeline  []*LiveTimeline `protobuf:"bytes,4,rep,name=timeline,proto3" json:"timeline,omitempty"`
}

func (x *ActivityLiveTimeInfoReply) Reset() {
	*x = ActivityLiveTimeInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityLiveTimeInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLiveTimeInfoReply) ProtoMessage() {}

func (x *ActivityLiveTimeInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLiveTimeInfoReply.ProtoReflect.Descriptor instead.
func (*ActivityLiveTimeInfoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{8}
}

func (x *ActivityLiveTimeInfoReply) GetNowTime() int64 {
	if x != nil {
		return x.NowTime
	}
	return 0
}

func (x *ActivityLiveTimeInfoReply) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ActivityLiveTimeInfoReply) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityLiveTimeInfoReply) GetTimeline() []*LiveTimeline {
	if x != nil {
		return x.Timeline
	}
	return nil
}

type ActivityLiveTimeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityKey string `protobuf:"bytes,1,opt,name=activity_key,json=activityKey,proto3" json:"activity_key,omitempty"`
}

func (x *ActivityLiveTimeInfoReq) Reset() {
	*x = ActivityLiveTimeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityLiveTimeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLiveTimeInfoReq) ProtoMessage() {}

func (x *ActivityLiveTimeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLiveTimeInfoReq.ProtoReflect.Descriptor instead.
func (*ActivityLiveTimeInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{9}
}

func (x *ActivityLiveTimeInfoReq) GetActivityKey() string {
	if x != nil {
		return x.ActivityKey
	}
	return ""
}

type ActivitySeasonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    ActivitySeasonStatus `protobuf:"varint,1,opt,name=status,proto3,enum=bilibili.web.interfaces.v1.ActivitySeasonStatus" json:"status,omitempty"`
	Title     string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Live      *ActivityLive        `protobuf:"bytes,3,opt,name=live,proto3" json:"live,omitempty"`
	Subscribe *ActivitySubscribe   `protobuf:"bytes,4,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Game      *ActivityGame        `protobuf:"bytes,5,opt,name=game,proto3" json:"game,omitempty"`
	View      *ActivityView        `protobuf:"bytes,6,opt,name=view,proto3" json:"view,omitempty"`
	Theme     *ActivityTheme       `protobuf:"bytes,7,opt,name=theme,proto3" json:"theme,omitempty"`
}

func (x *ActivitySeasonReply) Reset() {
	*x = ActivitySeasonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySeasonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySeasonReply) ProtoMessage() {}

func (x *ActivitySeasonReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySeasonReply.ProtoReflect.Descriptor instead.
func (*ActivitySeasonReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{10}
}

func (x *ActivitySeasonReply) GetStatus() ActivitySeasonStatus {
	if x != nil {
		return x.Status
	}
	return ActivitySeasonStatus_StatusNone
}

func (x *ActivitySeasonReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivitySeasonReply) GetLive() *ActivityLive {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *ActivitySeasonReply) GetSubscribe() *ActivitySubscribe {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *ActivitySeasonReply) GetGame() *ActivityGame {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *ActivitySeasonReply) GetView() *ActivityView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *ActivitySeasonReply) GetTheme() *ActivityTheme {
	if x != nil {
		return x.Theme
	}
	return nil
}

type ActivitySeasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid         int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid        string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	ActivityKey string `protobuf:"bytes,3,opt,name=activity_key,json=activityKey,proto3" json:"activity_key,omitempty"`
}

func (x *ActivitySeasonReq) Reset() {
	*x = ActivitySeasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySeasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySeasonReq) ProtoMessage() {}

func (x *ActivitySeasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySeasonReq.ProtoReflect.Descriptor instead.
func (*ActivitySeasonReq) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{11}
}

func (x *ActivitySeasonReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ActivitySeasonReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivitySeasonReq) GetActivityKey() string {
	if x != nil {
		return x.ActivityKey
	}
	return ""
}

type ActivitySeasonSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type     int64              `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Episodes []*ActivityEpisode `protobuf:"bytes,4,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *ActivitySeasonSection) Reset() {
	*x = ActivitySeasonSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySeasonSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySeasonSection) ProtoMessage() {}

func (x *ActivitySeasonSection) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySeasonSection.ProtoReflect.Descriptor instead.
func (*ActivitySeasonSection) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{12}
}

func (x *ActivitySeasonSection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivitySeasonSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivitySeasonSection) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActivitySeasonSection) GetEpisodes() []*ActivityEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

type ActivitySubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              bool      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Title               string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ButtonTitle         string    `protobuf:"bytes,3,opt,name=button_title,json=buttonTitle,proto3" json:"button_title,omitempty"`
	ButtonSelectedTitle string    `protobuf:"bytes,4,opt,name=button_selected_title,json=buttonSelectedTitle,proto3" json:"button_selected_title,omitempty"`
	SeasonStatView      int64     `protobuf:"varint,5,opt,name=season_stat_view,json=seasonStatView,proto3" json:"season_stat_view,omitempty"`
	SeasonStatDanmaku   int64     `protobuf:"varint,6,opt,name=season_stat_danmaku,json=seasonStatDanmaku,proto3" json:"season_stat_danmaku,omitempty"`
	OrderType           OrderType `protobuf:"varint,7,opt,name=order_type,json=orderType,proto3,enum=bilibili.web.interfaces.v1.OrderType" json:"order_type,omitempty"`
	// Types that are assignable to Param:
	//
	//	*ActivitySubscribe_ReserveActivityParam
	//	*ActivitySubscribe_FavSeasonParam
	//	*ActivitySubscribe_Jump_URLParam
	Param isActivitySubscribe_Param `protobuf_oneof:"param"`
}

func (x *ActivitySubscribe) Reset() {
	*x = ActivitySubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivitySubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySubscribe) ProtoMessage() {}

func (x *ActivitySubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySubscribe.ProtoReflect.Descriptor instead.
func (*ActivitySubscribe) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{13}
}

func (x *ActivitySubscribe) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ActivitySubscribe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivitySubscribe) GetButtonTitle() string {
	if x != nil {
		return x.ButtonTitle
	}
	return ""
}

func (x *ActivitySubscribe) GetButtonSelectedTitle() string {
	if x != nil {
		return x.ButtonSelectedTitle
	}
	return ""
}

func (x *ActivitySubscribe) GetSeasonStatView() int64 {
	if x != nil {
		return x.SeasonStatView
	}
	return 0
}

func (x *ActivitySubscribe) GetSeasonStatDanmaku() int64 {
	if x != nil {
		return x.SeasonStatDanmaku
	}
	return 0
}

func (x *ActivitySubscribe) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_TypeNone
}

func (m *ActivitySubscribe) GetParam() isActivitySubscribe_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *ActivitySubscribe) GetReserveActivityParam() *ReserveActivityParam {
	if x, ok := x.GetParam().(*ActivitySubscribe_ReserveActivityParam); ok {
		return x.ReserveActivityParam
	}
	return nil
}

func (x *ActivitySubscribe) GetFavSeasonParam() *FavSeasonParam {
	if x, ok := x.GetParam().(*ActivitySubscribe_FavSeasonParam); ok {
		return x.FavSeasonParam
	}
	return nil
}

func (x *ActivitySubscribe) GetJump_URLParam() *JumpURLParam {
	if x, ok := x.GetParam().(*ActivitySubscribe_Jump_URLParam); ok {
		return x.Jump_URLParam
	}
	return nil
}

type isActivitySubscribe_Param interface {
	isActivitySubscribe_Param()
}

type ActivitySubscribe_ReserveActivityParam struct {
	ReserveActivityParam *ReserveActivityParam `protobuf:"bytes,8,opt,name=reserve_activity_param,json=reserveActivityParam,proto3,oneof"`
}

type ActivitySubscribe_FavSeasonParam struct {
	FavSeasonParam *FavSeasonParam `protobuf:"bytes,9,opt,name=fav_season_param,json=favSeasonParam,proto3,oneof"`
}

type ActivitySubscribe_Jump_URLParam struct {
	Jump_URLParam *JumpURLParam `protobuf:"bytes,10,opt,name=jump_URL_param,json=jumpURLParam,proto3,oneof"`
}

func (*ActivitySubscribe_ReserveActivityParam) isActivitySubscribe_Param() {}

func (*ActivitySubscribe_FavSeasonParam) isActivitySubscribe_Param() {}

func (*ActivitySubscribe_Jump_URLParam) isActivitySubscribe_Param() {}

type ActivityTheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseColor                 string            `protobuf:"bytes,1,opt,name=base_color,json=baseColor,proto3" json:"base_color,omitempty"`
	LoadingBgColor            string            `protobuf:"bytes,2,opt,name=loading_bg_color,json=loadingBgColor,proto3" json:"loading_bg_color,omitempty"`
	OperatedBgColor           string            `protobuf:"bytes,3,opt,name=operated_bg_color,json=operatedBgColor,proto3" json:"operated_bg_color,omitempty"`
	DefaultElementColor       string            `protobuf:"bytes,4,opt,name=default_element_color,json=defaultElementColor,proto3" json:"default_element_color,omitempty"`
	HoverElementColor         string            `protobuf:"bytes,5,opt,name=hover_element_color,json=hoverElementColor,proto3" json:"hover_element_color,omitempty"`
	SelectedElementColor      string            `protobuf:"bytes,6,opt,name=selected_element_color,json=selectedElementColor,proto3" json:"selected_element_color,omitempty"`
	BaseFontColor             string            `protobuf:"bytes,7,opt,name=base_font_color,json=baseFontColor,proto3" json:"base_font_color,omitempty"`
	InfoFontColor             string            `protobuf:"bytes,8,opt,name=info_font_color,json=infoFontColor,proto3" json:"info_font_color,omitempty"`
	MaskBgColor               string            `protobuf:"bytes,9,opt,name=mask_bg_color,json=maskBgColor,proto3" json:"mask_bg_color,omitempty"`
	PageBgColor               string            `protobuf:"bytes,10,opt,name=page_bg_color,json=pageBgColor,proto3" json:"page_bg_color,omitempty"`
	CenterLogoImg             string            `protobuf:"bytes,11,opt,name=center_logo_img,json=centerLogoImg,proto3" json:"center_logo_img,omitempty"`
	PageBgImg                 string            `protobuf:"bytes,12,opt,name=page_bg_img,json=pageBgImg,proto3" json:"page_bg_img,omitempty"`
	Decorations2233Img        string            `protobuf:"bytes,13,opt,name=decorations2233_img,json=decorations2233Img,proto3" json:"decorations2233_img,omitempty"`
	MainBannerBgImg           string            `protobuf:"bytes,14,opt,name=main_banner_bg_img,json=mainBannerBgImg,proto3" json:"main_banner_bg_img,omitempty"`
	MainBannerTitleImg        string            `protobuf:"bytes,15,opt,name=main_banner_title_img,json=mainBannerTitleImg,proto3" json:"main_banner_title_img,omitempty"`
	LikeAnimationImg          string            `protobuf:"bytes,16,opt,name=like_animation_img,json=likeAnimationImg,proto3" json:"like_animation_img,omitempty"`
	ComboLikeImg              string            `protobuf:"bytes,17,opt,name=combo_like_img,json=comboLikeImg,proto3" json:"combo_like_img,omitempty"`
	ComboCoinImg              string            `protobuf:"bytes,18,opt,name=combo_coin_img,json=comboCoinImg,proto3" json:"combo_coin_img,omitempty"`
	ComboFavImg               string            `protobuf:"bytes,19,opt,name=combo_fav_img,json=comboFavImg,proto3" json:"combo_fav_img,omitempty"`
	ArrowBtnImg               string            `protobuf:"bytes,20,opt,name=arrow_btn_img,json=arrowBtnImg,proto3" json:"arrow_btn_img,omitempty"`
	ShareIconBgImg            string            `protobuf:"bytes,21,opt,name=share_icon_bg_img,json=shareIconBgImg,proto3" json:"share_icon_bg_img,omitempty"`
	LiveListLocationImg       string            `protobuf:"bytes,22,opt,name=live_list_location_img,json=liveListLocationImg,proto3" json:"live_list_location_img,omitempty"`
	LiveListLocationImgActive string            `protobuf:"bytes,23,opt,name=live_list_location_img_active,json=liveListLocationImgActive,proto3" json:"live_list_location_img_active,omitempty"`
	PlayerLoadingImg          string            `protobuf:"bytes,24,opt,name=player_loading_img,json=playerLoadingImg,proto3" json:"player_loading_img,omitempty"`
	ShareImg                  string            `protobuf:"bytes,25,opt,name=share_img,json=shareImg,proto3" json:"share_img,omitempty"`
	KvColor                   map[string]string `protobuf:"bytes,26,rep,name=kv_color,json=kvColor,proto3" json:"kv_color,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActivityTheme) Reset() {
	*x = ActivityTheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTheme) ProtoMessage() {}

func (x *ActivityTheme) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTheme.ProtoReflect.Descriptor instead.
func (*ActivityTheme) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{14}
}

func (x *ActivityTheme) GetBaseColor() string {
	if x != nil {
		return x.BaseColor
	}
	return ""
}

func (x *ActivityTheme) GetLoadingBgColor() string {
	if x != nil {
		return x.LoadingBgColor
	}
	return ""
}

func (x *ActivityTheme) GetOperatedBgColor() string {
	if x != nil {
		return x.OperatedBgColor
	}
	return ""
}

func (x *ActivityTheme) GetDefaultElementColor() string {
	if x != nil {
		return x.DefaultElementColor
	}
	return ""
}

func (x *ActivityTheme) GetHoverElementColor() string {
	if x != nil {
		return x.HoverElementColor
	}
	return ""
}

func (x *ActivityTheme) GetSelectedElementColor() string {
	if x != nil {
		return x.SelectedElementColor
	}
	return ""
}

func (x *ActivityTheme) GetBaseFontColor() string {
	if x != nil {
		return x.BaseFontColor
	}
	return ""
}

func (x *ActivityTheme) GetInfoFontColor() string {
	if x != nil {
		return x.InfoFontColor
	}
	return ""
}

func (x *ActivityTheme) GetMaskBgColor() string {
	if x != nil {
		return x.MaskBgColor
	}
	return ""
}

func (x *ActivityTheme) GetPageBgColor() string {
	if x != nil {
		return x.PageBgColor
	}
	return ""
}

func (x *ActivityTheme) GetCenterLogoImg() string {
	if x != nil {
		return x.CenterLogoImg
	}
	return ""
}

func (x *ActivityTheme) GetPageBgImg() string {
	if x != nil {
		return x.PageBgImg
	}
	return ""
}

func (x *ActivityTheme) GetDecorations2233Img() string {
	if x != nil {
		return x.Decorations2233Img
	}
	return ""
}

func (x *ActivityTheme) GetMainBannerBgImg() string {
	if x != nil {
		return x.MainBannerBgImg
	}
	return ""
}

func (x *ActivityTheme) GetMainBannerTitleImg() string {
	if x != nil {
		return x.MainBannerTitleImg
	}
	return ""
}

func (x *ActivityTheme) GetLikeAnimationImg() string {
	if x != nil {
		return x.LikeAnimationImg
	}
	return ""
}

func (x *ActivityTheme) GetComboLikeImg() string {
	if x != nil {
		return x.ComboLikeImg
	}
	return ""
}

func (x *ActivityTheme) GetComboCoinImg() string {
	if x != nil {
		return x.ComboCoinImg
	}
	return ""
}

func (x *ActivityTheme) GetComboFavImg() string {
	if x != nil {
		return x.ComboFavImg
	}
	return ""
}

func (x *ActivityTheme) GetArrowBtnImg() string {
	if x != nil {
		return x.ArrowBtnImg
	}
	return ""
}

func (x *ActivityTheme) GetShareIconBgImg() string {
	if x != nil {
		return x.ShareIconBgImg
	}
	return ""
}

func (x *ActivityTheme) GetLiveListLocationImg() string {
	if x != nil {
		return x.LiveListLocationImg
	}
	return ""
}

func (x *ActivityTheme) GetLiveListLocationImgActive() string {
	if x != nil {
		return x.LiveListLocationImgActive
	}
	return ""
}

func (x *ActivityTheme) GetPlayerLoadingImg() string {
	if x != nil {
		return x.PlayerLoadingImg
	}
	return ""
}

func (x *ActivityTheme) GetShareImg() string {
	if x != nil {
		return x.ShareImg
	}
	return ""
}

func (x *ActivityTheme) GetKvColor() map[string]string {
	if x != nil {
		return x.KvColor
	}
	return nil
}

type ActivityView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc          *Arc                     `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	Bvid         string                   `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	Pages        []*Page                  `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`
	Staff        []*Staff                 `protobuf:"bytes,4,rep,name=staff,proto3" json:"staff,omitempty"`
	ReqUser      *ReqUser                 `protobuf:"bytes,5,opt,name=req_user,json=reqUser,proto3" json:"req_user,omitempty"`
	RightRelate  *OperationRelate         `protobuf:"bytes,6,opt,name=right_relate,json=rightRelate,proto3" json:"right_relate,omitempty"`
	BottomRelate *OperationRelate         `protobuf:"bytes,7,opt,name=bottom_relate,json=bottomRelate,proto3" json:"bottom_relate,omitempty"`
	Sections     []*ActivitySeasonSection `protobuf:"bytes,8,rep,name=sections,proto3" json:"sections,omitempty"`
}

func (x *ActivityView) Reset() {
	*x = ActivityView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityView) ProtoMessage() {}

func (x *ActivityView) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityView.ProtoReflect.Descriptor instead.
func (*ActivityView) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{15}
}

func (x *ActivityView) GetArc() *Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *ActivityView) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ActivityView) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *ActivityView) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *ActivityView) GetReqUser() *ReqUser {
	if x != nil {
		return x.ReqUser
	}
	return nil
}

func (x *ActivityView) GetRightRelate() *OperationRelate {
	if x != nil {
		return x.RightRelate
	}
	return nil
}

func (x *ActivityView) GetBottomRelate() *OperationRelate {
	if x != nil {
		return x.BottomRelate
	}
	return nil
}

func (x *ActivityView) GetSections() []*ActivitySeasonSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

type Arc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid                int64        `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Videos             int64        `protobuf:"varint,2,opt,name=videos,proto3" json:"videos,omitempty"`
	TypeId             int32        `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	TypeName           string       `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Copyright          int32        `protobuf:"varint,5,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Pic                string       `protobuf:"bytes,6,opt,name=pic,proto3" json:"pic,omitempty"`
	Title              string       `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Pubdate            int64        `protobuf:"varint,8,opt,name=pubdate,proto3" json:"pubdate,omitempty"`
	Ctime              int64        `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Desc               string       `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	State              int32        `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	Access             int32        `protobuf:"varint,12,opt,name=access,proto3" json:"access,omitempty"`
	Attribute          int32        `protobuf:"varint,13,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Tag                string       `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`
	Tags               []string     `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	Duration           int64        `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	MissionId          int64        `protobuf:"varint,17,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	OrderId            int64        `protobuf:"varint,18,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RedirectUrl        string       `protobuf:"bytes,19,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	Forward            int64        `protobuf:"varint,20,opt,name=forward,proto3" json:"forward,omitempty"`
	Rights             *Rights      `protobuf:"bytes,21,opt,name=rights,proto3" json:"rights,omitempty"`
	Author             *Author      `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	Stat               *Stat        `protobuf:"bytes,23,opt,name=stat,proto3" json:"stat,omitempty"`
	ReportResult       string       `protobuf:"bytes,24,opt,name=report_result,json=reportResult,proto3" json:"report_result,omitempty"`
	Dynamic            string       `protobuf:"bytes,25,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	FirstCid           int64        `protobuf:"varint,26,opt,name=first_cid,json=firstCid,proto3" json:"first_cid,omitempty"`
	Dimension          *Dimension   `protobuf:"bytes,27,opt,name=dimension,proto3" json:"dimension,omitempty"`
	StaffInfo          []*StaffInfo `protobuf:"bytes,28,rep,name=staff_info,json=staffInfo,proto3" json:"staff_info,omitempty"`
	SeasonId           int64        `protobuf:"varint,29,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	DescV2             []*DescV2    `protobuf:"bytes,30,rep,name=desc_v2,json=descV2,proto3" json:"desc_v2,omitempty"`
	IsChargeableSeason bool         `protobuf:"varint,31,opt,name=is_chargeable_season,json=isChargeableSeason,proto3" json:"is_chargeable_season,omitempty"`
	IsBlooper          bool         `protobuf:"varint,32,opt,name=is_blooper,json=isBlooper,proto3" json:"is_blooper,omitempty"`
}

func (x *Arc) Reset() {
	*x = Arc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arc) ProtoMessage() {}

func (x *Arc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arc.ProtoReflect.Descriptor instead.
func (*Arc) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{16}
}

func (x *Arc) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Arc) GetVideos() int64 {
	if x != nil {
		return x.Videos
	}
	return 0
}

func (x *Arc) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Arc) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Arc) GetCopyright() int32 {
	if x != nil {
		return x.Copyright
	}
	return 0
}

func (x *Arc) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Arc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Arc) GetPubdate() int64 {
	if x != nil {
		return x.Pubdate
	}
	return 0
}

func (x *Arc) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Arc) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Arc) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Arc) GetAccess() int32 {
	if x != nil {
		return x.Access
	}
	return 0
}

func (x *Arc) GetAttribute() int32 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Arc) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Arc) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Arc) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Arc) GetMissionId() int64 {
	if x != nil {
		return x.MissionId
	}
	return 0
}

func (x *Arc) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Arc) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *Arc) GetForward() int64 {
	if x != nil {
		return x.Forward
	}
	return 0
}

func (x *Arc) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *Arc) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Arc) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *Arc) GetReportResult() string {
	if x != nil {
		return x.ReportResult
	}
	return ""
}

func (x *Arc) GetDynamic() string {
	if x != nil {
		return x.Dynamic
	}
	return ""
}

func (x *Arc) GetFirstCid() int64 {
	if x != nil {
		return x.FirstCid
	}
	return 0
}

func (x *Arc) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Arc) GetStaffInfo() []*StaffInfo {
	if x != nil {
		return x.StaffInfo
	}
	return nil
}

func (x *Arc) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *Arc) GetDescV2() []*DescV2 {
	if x != nil {
		return x.DescV2
	}
	return nil
}

func (x *Arc) GetIsChargeableSeason() bool {
	if x != nil {
		return x.IsChargeableSeason
	}
	return false
}

func (x *Arc) GetIsBlooper() bool {
	if x != nil {
		return x.IsBlooper
	}
	return false
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{17}
}

func (x *Author) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card         *AccountCard `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	Space        *Space       `protobuf:"bytes,2,opt,name=space,proto3" json:"space,omitempty"`
	Following    bool         `protobuf:"varint,3,opt,name=following,proto3" json:"following,omitempty"`
	ArchiveCount int64        `protobuf:"varint,4,opt,name=archive_count,json=archiveCount,proto3" json:"archive_count,omitempty"`
	ArticleCount int32        `protobuf:"varint,5,opt,name=article_count,json=articleCount,proto3" json:"article_count,omitempty"`
	Follower     int64        `protobuf:"varint,6,opt,name=follower,proto3" json:"follower,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{18}
}

func (x *Card) GetCard() *AccountCard {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *Card) GetSpace() *Space {
	if x != nil {
		return x.Space
	}
	return nil
}

func (x *Card) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *Card) GetArchiveCount() int64 {
	if x != nil {
		return x.ArchiveCount
	}
	return 0
}

func (x *Card) GetArticleCount() int32 {
	if x != nil {
		return x.ArticleCount
	}
	return 0
}

func (x *Card) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

type CardLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cur     int32 `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Min     int32 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	NowExp  int32 `protobuf:"varint,3,opt,name=now_exp,json=nowExp,proto3" json:"now_exp,omitempty"`
	NextExp int32 `protobuf:"varint,4,opt,name=next_exp,json=nextExp,proto3" json:"next_exp,omitempty"`
}

func (x *CardLevelInfo) Reset() {
	*x = CardLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardLevelInfo) ProtoMessage() {}

func (x *CardLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardLevelInfo.ProtoReflect.Descriptor instead.
func (*CardLevelInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{19}
}

func (x *CardLevelInfo) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *CardLevelInfo) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *CardLevelInfo) GetNowExp() int32 {
	if x != nil {
		return x.NowExp
	}
	return 0
}

func (x *CardLevelInfo) GetNextExp() int32 {
	if x != nil {
		return x.NextExp
	}
	return 0
}

type CardVip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	DueRemark     string `protobuf:"bytes,2,opt,name=due_remark,json=dueRemark,proto3" json:"due_remark,omitempty"`
	AccessStatus  int32  `protobuf:"varint,3,opt,name=access_status,json=accessStatus,proto3" json:"access_status,omitempty"`
	VipStatus     int32  `protobuf:"varint,4,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	VipStatusWarn string `protobuf:"bytes,5,opt,name=vip_status_warn,json=vipStatusWarn,proto3" json:"vip_status_warn,omitempty"`
	ThemeType     int32  `protobuf:"varint,6,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
}

func (x *CardVip) Reset() {
	*x = CardVip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardVip) ProtoMessage() {}

func (x *CardVip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardVip.ProtoReflect.Descriptor instead.
func (*CardVip) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{20}
}

func (x *CardVip) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CardVip) GetDueRemark() string {
	if x != nil {
		return x.DueRemark
	}
	return ""
}

func (x *CardVip) GetAccessStatus() int32 {
	if x != nil {
		return x.AccessStatus
	}
	return 0
}

func (x *CardVip) GetVipStatus() int32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *CardVip) GetVipStatusWarn() string {
	if x != nil {
		return x.VipStatusWarn
	}
	return ""
}

func (x *CardVip) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

type ClickActivitySeasonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderType OrderType `protobuf:"varint,1,opt,name=order_type,json=orderType,proto3,enum=bilibili.web.interfaces.v1.OrderType" json:"order_type,omitempty"`
	// Types that are assignable to Param:
	//
	//	*ClickActivitySeasonReq_ReserveActivityParam
	//	*ClickActivitySeasonReq_FavSeasonParam
	//	*ClickActivitySeasonReq_Jump_URLParam
	Param  isClickActivitySeasonReq_Param `protobuf_oneof:"param"`
	Spmid  string                         `protobuf:"bytes,5,opt,name=spmid,proto3" json:"spmid,omitempty"`
	Action int64                          `protobuf:"varint,6,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ClickActivitySeasonReq) Reset() {
	*x = ClickActivitySeasonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickActivitySeasonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickActivitySeasonReq) ProtoMessage() {}

func (x *ClickActivitySeasonReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickActivitySeasonReq.ProtoReflect.Descriptor instead.
func (*ClickActivitySeasonReq) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{21}
}

func (x *ClickActivitySeasonReq) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_TypeNone
}

func (m *ClickActivitySeasonReq) GetParam() isClickActivitySeasonReq_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetReserveActivityParam() *ReserveActivityParam {
	if x, ok := x.GetParam().(*ClickActivitySeasonReq_ReserveActivityParam); ok {
		return x.ReserveActivityParam
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetFavSeasonParam() *FavSeasonParam {
	if x, ok := x.GetParam().(*ClickActivitySeasonReq_FavSeasonParam); ok {
		return x.FavSeasonParam
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetJump_URLParam() *JumpURLParam {
	if x, ok := x.GetParam().(*ClickActivitySeasonReq_Jump_URLParam); ok {
		return x.Jump_URLParam
	}
	return nil
}

func (x *ClickActivitySeasonReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ClickActivitySeasonReq) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

type isClickActivitySeasonReq_Param interface {
	isClickActivitySeasonReq_Param()
}

type ClickActivitySeasonReq_ReserveActivityParam struct {
	ReserveActivityParam *ReserveActivityParam `protobuf:"bytes,2,opt,name=reserve_activity_param,json=reserveActivityParam,proto3,oneof"`
}

type ClickActivitySeasonReq_FavSeasonParam struct {
	FavSeasonParam *FavSeasonParam `protobuf:"bytes,3,opt,name=fav_season_param,json=favSeasonParam,proto3,oneof"`
}

type ClickActivitySeasonReq_Jump_URLParam struct {
	Jump_URLParam *JumpURLParam `protobuf:"bytes,4,opt,name=jump_URL_param,json=jumpURLParam,proto3,oneof"`
}

func (*ClickActivitySeasonReq_ReserveActivityParam) isClickActivitySeasonReq_Param() {}

func (*ClickActivitySeasonReq_FavSeasonParam) isClickActivitySeasonReq_Param() {}

func (*ClickActivitySeasonReq_Jump_URLParam) isClickActivitySeasonReq_Param() {}

type DescV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawText string `protobuf:"bytes,1,opt,name=raw_text,json=rawText,proto3" json:"raw_text,omitempty"`
	Type    int64  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	BizId   int64  `protobuf:"varint,3,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *DescV2) Reset() {
	*x = DescV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescV2) ProtoMessage() {}

func (x *DescV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescV2.ProtoReflect.Descriptor instead.
func (*DescV2) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{22}
}

func (x *DescV2) GetRawText() string {
	if x != nil {
		return x.RawText
	}
	return ""
}

func (x *DescV2) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DescV2) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{23}
}

func (x *Dimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetRotate() int64 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

type FavSeasonParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *FavSeasonParam) Reset() {
	*x = FavSeasonParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavSeasonParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavSeasonParam) ProtoMessage() {}

func (x *FavSeasonParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavSeasonParam.ProtoReflect.Descriptor instead.
func (*FavSeasonParam) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{24}
}

func (x *FavSeasonParam) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type HotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *ReplyPage `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Replies []*Reply   `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"`
}

func (x *HotReply) Reset() {
	*x = HotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotReply) ProtoMessage() {}

func (x *HotReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotReply.ProtoReflect.Descriptor instead.
func (*HotReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{25}
}

func (x *HotReply) GetPage() *ReplyPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *HotReply) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

type JumpURLParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JumpUrl string `protobuf:"bytes,1,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *JumpURLParam) Reset() {
	*x = JumpURLParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JumpURLParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumpURLParam) ProtoMessage() {}

func (x *JumpURLParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumpURLParam.ProtoReflect.Descriptor instead.
func (*JumpURLParam) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{26}
}

func (x *JumpURLParam) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type LiveTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartTime int64  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Cover     string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Subtitle  string `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	H5Cover   string `protobuf:"bytes,6,opt,name=h5_cover,json=h5Cover,proto3" json:"h5_cover,omitempty"`
}

func (x *LiveTimeline) Reset() {
	*x = LiveTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveTimeline) ProtoMessage() {}

func (x *LiveTimeline) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveTimeline.ProtoReflect.Descriptor instead.
func (*LiveTimeline) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{27}
}

func (x *LiveTimeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LiveTimeline) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *LiveTimeline) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *LiveTimeline) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *LiveTimeline) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *LiveTimeline) GetH5Cover() string {
	if x != nil {
		return x.H5Cover
	}
	return ""
}

type NameplateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nid        int32  `protobuf:"varint,1,opt,name=nid,proto3" json:"nid,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image      string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	ImageSmall string `protobuf:"bytes,4,opt,name=image_small,json=imageSmall,proto3" json:"image_small,omitempty"`
	Level      string `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	Condition  string `protobuf:"bytes,6,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *NameplateInfo) Reset() {
	*x = NameplateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameplateInfo) ProtoMessage() {}

func (x *NameplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameplateInfo.ProtoReflect.Descriptor instead.
func (*NameplateInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{28}
}

func (x *NameplateInfo) GetNid() int32 {
	if x != nil {
		return x.Nid
	}
	return 0
}

func (x *NameplateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameplateInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NameplateInfo) GetImageSmall() string {
	if x != nil {
		return x.ImageSmall
	}
	return ""
}

func (x *NameplateInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *NameplateInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type NoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoReply) Reset() {
	*x = NoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoReply) ProtoMessage() {}

func (x *NoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoReply.ProtoReflect.Descriptor instead.
func (*NoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{29}
}

type OfficialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  int32  `protobuf:"varint,1,opt,name=role,proto3" json:"role,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc  string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialInfo) Reset() {
	*x = OfficialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialInfo) ProtoMessage() {}

func (x *OfficialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialInfo.ProtoReflect.Descriptor instead.
func (*OfficialInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{30}
}

func (x *OfficialInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *OfficialInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfficialInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{31}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type OperationRelate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	RelateItem   []*RelateItem `protobuf:"bytes,2,rep,name=relate_item,json=relateItem,proto3" json:"relate_item,omitempty"`
	AiRelateItem []*Relate     `protobuf:"bytes,3,rep,name=ai_relate_item,json=aiRelateItem,proto3" json:"ai_relate_item,omitempty"`
}

func (x *OperationRelate) Reset() {
	*x = OperationRelate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationRelate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationRelate) ProtoMessage() {}

func (x *OperationRelate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationRelate.ProtoReflect.Descriptor instead.
func (*OperationRelate) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{32}
}

func (x *OperationRelate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperationRelate) GetRelateItem() []*RelateItem {
	if x != nil {
		return x.RelateItem
	}
	return nil
}

func (x *OperationRelate) GetAiRelateItem() []*Relate {
	if x != nil {
		return x.AiRelateItem
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid       int64      `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Page      int32      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	From      string     `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Part      string     `protobuf:"bytes,4,opt,name=part,proto3" json:"part,omitempty"`
	Duration  int64      `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Vid       string     `protobuf:"bytes,6,opt,name=vid,proto3" json:"vid,omitempty"`
	Desc      string     `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Weblink   string     `protobuf:"bytes,8,opt,name=weblink,proto3" json:"weblink,omitempty"`
	Dimension *Dimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{33}
}

func (x *Page) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Page) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Page) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Page) GetPart() string {
	if x != nil {
		return x.Part
	}
	return ""
}

func (x *Page) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Page) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *Page) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Page) GetWeblink() string {
	if x != nil {
		return x.Weblink
	}
	return ""
}

func (x *Page) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

type PendantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid    int32  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image  string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Expire int64  `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *PendantInfo) Reset() {
	*x = PendantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendantInfo) ProtoMessage() {}

func (x *PendantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendantInfo.ProtoReflect.Descriptor instead.
func (*PendantInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{34}
}

func (x *PendantInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PendantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PendantInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PendantInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type ReasonStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ReasonStyle) Reset() {
	*x = ReasonStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonStyle) ProtoMessage() {}

func (x *ReasonStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonStyle.ProtoReflect.Descriptor instead.
func (*ReasonStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{35}
}

func (x *ReasonStyle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Relate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc        *Arc   `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	Bvid       string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
	SeasonType int64  `protobuf:"varint,3,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
}

func (x *Relate) Reset() {
	*x = Relate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relate) ProtoMessage() {}

func (x *Relate) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relate.ProtoReflect.Descriptor instead.
func (*Relate) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{36}
}

func (x *Relate) GetArc() *Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *Relate) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *Relate) GetSeasonType() int64 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

type RelateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url   string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *RelateItem) Reset() {
	*x = RelateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateItem) ProtoMessage() {}

func (x *RelateItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateItem.ProtoReflect.Descriptor instead.
func (*RelateItem) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{37}
}

func (x *RelateItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RelateItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute int64 `protobuf:"varint,1,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Special   int64 `protobuf:"varint,3,opt,name=special,proto3" json:"special,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{38}
}

func (x *Relation) GetAttribute() int64 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Relation) GetSpecial() int64 {
	if x != nil {
		return x.Special
	}
	return 0
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rpid       int64          `protobuf:"varint,1,opt,name=rpid,proto3" json:"rpid,omitempty"`
	Oid        int64          `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Type       int32          `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Mid        int64          `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Root       int64          `protobuf:"varint,5,opt,name=root,proto3" json:"root,omitempty"`
	Parent     int64          `protobuf:"varint,6,opt,name=parent,proto3" json:"parent,omitempty"`
	Dialog     int64          `protobuf:"varint,7,opt,name=dialog,proto3" json:"dialog,omitempty"`
	Count      int32          `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	Rcount     int32          `protobuf:"varint,9,opt,name=rcount,proto3" json:"rcount,omitempty"`
	Floor      int32          `protobuf:"varint,10,opt,name=floor,proto3" json:"floor,omitempty"`
	State      int32          `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	FansGrade  int32          `protobuf:"varint,12,opt,name=fans_grade,json=fansGrade,proto3" json:"fans_grade,omitempty"`
	Attr       int32          `protobuf:"varint,13,opt,name=attr,proto3" json:"attr,omitempty"`
	Ctime      int64          `protobuf:"varint,14,opt,name=ctime,proto3" json:"ctime,omitempty"`
	RpidStr    string         `protobuf:"bytes,15,opt,name=rpid_str,json=rpidStr,proto3" json:"rpid_str,omitempty"`
	RootStr    string         `protobuf:"bytes,16,opt,name=root_str,json=rootStr,proto3" json:"root_str,omitempty"`
	ParentStr  string         `protobuf:"bytes,17,opt,name=parent_str,json=parentStr,proto3" json:"parent_str,omitempty"`
	DialogStr  string         `protobuf:"bytes,18,opt,name=dialog_str,json=dialogStr,proto3" json:"dialog_str,omitempty"`
	Like       int32          `protobuf:"varint,19,opt,name=like,proto3" json:"like,omitempty"`
	Hate       int32          `protobuf:"varint,20,opt,name=hate,proto3" json:"hate,omitempty"`
	Action     int32          `protobuf:"varint,21,opt,name=action,proto3" json:"action,omitempty"`
	Member     *ReplyMember   `protobuf:"bytes,22,opt,name=member,proto3" json:"member,omitempty"`
	Content    *ReplyContent  `protobuf:"bytes,23,opt,name=content,proto3" json:"content,omitempty"`
	Replies    []*Reply       `protobuf:"bytes,24,rep,name=replies,proto3" json:"replies,omitempty"`
	Assist     int32          `protobuf:"varint,25,opt,name=assist,proto3" json:"assist,omitempty"`
	Folder     *ReplyFolder   `protobuf:"bytes,26,opt,name=folder,proto3" json:"folder,omitempty"`
	UpAction   *ReplyUpAction `protobuf:"bytes,27,opt,name=up_action,json=upAction,proto3" json:"up_action,omitempty"`
	Label      *ReplyLabel    `protobuf:"bytes,28,opt,name=label,proto3" json:"label,omitempty"`
	RawInput   string         `protobuf:"bytes,29,opt,name=raw_input,json=rawInput,proto3" json:"raw_input,omitempty"`
	ShowFollow bool           `protobuf:"varint,30,opt,name=show_follow,json=showFollow,proto3" json:"show_follow,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{39}
}

func (x *Reply) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *Reply) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *Reply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Reply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Reply) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *Reply) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *Reply) GetDialog() int64 {
	if x != nil {
		return x.Dialog
	}
	return 0
}

func (x *Reply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Reply) GetRcount() int32 {
	if x != nil {
		return x.Rcount
	}
	return 0
}

func (x *Reply) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *Reply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Reply) GetFansGrade() int32 {
	if x != nil {
		return x.FansGrade
	}
	return 0
}

func (x *Reply) GetAttr() int32 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *Reply) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Reply) GetRpidStr() string {
	if x != nil {
		return x.RpidStr
	}
	return ""
}

func (x *Reply) GetRootStr() string {
	if x != nil {
		return x.RootStr
	}
	return ""
}

func (x *Reply) GetParentStr() string {
	if x != nil {
		return x.ParentStr
	}
	return ""
}

func (x *Reply) GetDialogStr() string {
	if x != nil {
		return x.DialogStr
	}
	return ""
}

func (x *Reply) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Reply) GetHate() int32 {
	if x != nil {
		return x.Hate
	}
	return 0
}

func (x *Reply) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *Reply) GetMember() *ReplyMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Reply) GetContent() *ReplyContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Reply) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *Reply) GetAssist() int32 {
	if x != nil {
		return x.Assist
	}
	return 0
}

func (x *Reply) GetFolder() *ReplyFolder {
	if x != nil {
		return x.Folder
	}
	return nil
}

func (x *Reply) GetUpAction() *ReplyUpAction {
	if x != nil {
		return x.UpAction
	}
	return nil
}

func (x *Reply) GetLabel() *ReplyLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Reply) GetRawInput() string {
	if x != nil {
		return x.RawInput
	}
	return ""
}

func (x *Reply) GetShowFollow() bool {
	if x != nil {
		return x.ShowFollow
	}
	return false
}

type ReplyContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpId    int64                  `protobuf:"varint,1,opt,name=rp_id,json=rpId,proto3" json:"rp_id,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Vote    *ReplyVote             `protobuf:"bytes,3,opt,name=vote,proto3" json:"vote,omitempty"`
	Topics  []string               `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	Ip      int32                  `protobuf:"varint,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Plat    int32                  `protobuf:"varint,7,opt,name=plat,proto3" json:"plat,omitempty"`
	Device  string                 `protobuf:"bytes,8,opt,name=device,proto3" json:"device,omitempty"`
	Version string                 `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Members []*ReplyMemberInfo     `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	Emote   map[string]*ReplyEmote `protobuf:"bytes,11,rep,name=emote,proto3" json:"emote,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReplyContent) Reset() {
	*x = ReplyContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyContent) ProtoMessage() {}

func (x *ReplyContent) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyContent.ProtoReflect.Descriptor instead.
func (*ReplyContent) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{40}
}

func (x *ReplyContent) GetRpId() int64 {
	if x != nil {
		return x.RpId
	}
	return 0
}

func (x *ReplyContent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReplyContent) GetVote() *ReplyVote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *ReplyContent) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *ReplyContent) GetIp() int32 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *ReplyContent) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *ReplyContent) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ReplyContent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ReplyContent) GetMembers() []*ReplyMemberInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ReplyContent) GetEmote() map[string]*ReplyEmote {
	if x != nil {
		return x.Emote
	}
	return nil
}

type ReplyEmote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PackageId int64           `protobuf:"varint,2,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	State     int64           `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	Type      int64           `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Attr      int64           `protobuf:"varint,5,opt,name=attr,proto3" json:"attr,omitempty"`
	Text      string          `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	Url       string          `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Meta      *ReplyEmoteMeta `protobuf:"bytes,8,opt,name=meta,proto3" json:"meta,omitempty"`
	Ctime     int64           `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime     int64           `protobuf:"varint,10,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *ReplyEmote) Reset() {
	*x = ReplyEmote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEmote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEmote) ProtoMessage() {}

func (x *ReplyEmote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEmote.ProtoReflect.Descriptor instead.
func (*ReplyEmote) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{41}
}

func (x *ReplyEmote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyEmote) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *ReplyEmote) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ReplyEmote) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReplyEmote) GetAttr() int64 {
	if x != nil {
		return x.Attr
	}
	return 0
}

func (x *ReplyEmote) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ReplyEmote) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ReplyEmote) GetMeta() *ReplyEmoteMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ReplyEmote) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ReplyEmote) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ReplyEmoteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size ReplyEmoteMetaSize `protobuf:"varint,1,opt,name=size,proto3,enum=bilibili.web.interfaces.v1.ReplyEmoteMetaSize" json:"size,omitempty"`
}

func (x *ReplyEmoteMeta) Reset() {
	*x = ReplyEmoteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEmoteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEmoteMeta) ProtoMessage() {}

func (x *ReplyEmoteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEmoteMeta.ProtoReflect.Descriptor instead.
func (*ReplyEmoteMeta) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{42}
}

func (x *ReplyEmoteMeta) GetSize() ReplyEmoteMetaSize {
	if x != nil {
		return x.Size
	}
	return ReplyEmoteMetaSize_EMOTE_META_SIZE_UNSPECIFIED
}

type ReplyFansDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MedalId   int32  `protobuf:"varint,2,opt,name=medal_id,json=medalId,proto3" json:"medal_id,omitempty"`
	MedalName string `protobuf:"bytes,3,opt,name=medal_name,json=medalName,proto3" json:"medal_name,omitempty"`
	Score     int32  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Level     int32  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Intimacy  int32  `protobuf:"varint,6,opt,name=intimacy,proto3" json:"intimacy,omitempty"`
	Status    int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Received  int32  `protobuf:"varint,8,opt,name=received,proto3" json:"received,omitempty"`
}

func (x *ReplyFansDetail) Reset() {
	*x = ReplyFansDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyFansDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyFansDetail) ProtoMessage() {}

func (x *ReplyFansDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyFansDetail.ProtoReflect.Descriptor instead.
func (*ReplyFansDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{43}
}

func (x *ReplyFansDetail) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReplyFansDetail) GetMedalId() int32 {
	if x != nil {
		return x.MedalId
	}
	return 0
}

func (x *ReplyFansDetail) GetMedalName() string {
	if x != nil {
		return x.MedalName
	}
	return ""
}

func (x *ReplyFansDetail) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ReplyFansDetail) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ReplyFansDetail) GetIntimacy() int32 {
	if x != nil {
		return x.Intimacy
	}
	return 0
}

func (x *ReplyFansDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReplyFansDetail) GetReceived() int32 {
	if x != nil {
		return x.Received
	}
	return 0
}

type ReplyFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasFolded bool   `protobuf:"varint,1,opt,name=has_folded,json=hasFolded,proto3" json:"has_folded,omitempty"`
	IsFolded  bool   `protobuf:"varint,2,opt,name=is_folded,json=isFolded,proto3" json:"is_folded,omitempty"`
	Rule      string `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ReplyFolder) Reset() {
	*x = ReplyFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyFolder) ProtoMessage() {}

func (x *ReplyFolder) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyFolder.ProtoReflect.Descriptor instead.
func (*ReplyFolder) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{44}
}

func (x *ReplyFolder) GetHasFolded() bool {
	if x != nil {
		return x.HasFolded
	}
	return false
}

func (x *ReplyFolder) GetIsFolded() bool {
	if x != nil {
		return x.IsFolded
	}
	return false
}

func (x *ReplyFolder) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

type ReplyLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rpid               int64  `protobuf:"varint,1,opt,name=rpid,proto3" json:"rpid,omitempty"`
	Content            string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	TextColor          string `protobuf:"bytes,3,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNightMode string `protobuf:"bytes,4,opt,name=text_color_night_mode,json=textColorNightMode,proto3" json:"text_color_night_mode,omitempty"`
	BgColor            string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNightMode   string `protobuf:"bytes,6,opt,name=bg_color_night_mode,json=bgColorNightMode,proto3" json:"bg_color_night_mode,omitempty"`
	Link               string `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	Position           string `protobuf:"bytes,8,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ReplyLabel) Reset() {
	*x = ReplyLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyLabel) ProtoMessage() {}

func (x *ReplyLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyLabel.ProtoReflect.Descriptor instead.
func (*ReplyLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{45}
}

func (x *ReplyLabel) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *ReplyLabel) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyLabel) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *ReplyLabel) GetTextColorNightMode() string {
	if x != nil {
		return x.TextColorNightMode
	}
	return ""
}

func (x *ReplyLabel) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ReplyLabel) GetBgColorNightMode() string {
	if x != nil {
		return x.BgColorNightMode
	}
	return ""
}

func (x *ReplyLabel) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ReplyLabel) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type ReplyLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cur     int32 `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Min     int32 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	NowExp  int32 `protobuf:"varint,3,opt,name=now_exp,json=nowExp,proto3" json:"now_exp,omitempty"`
	NextExp int32 `protobuf:"varint,4,opt,name=next_exp,json=nextExp,proto3" json:"next_exp,omitempty"`
}

func (x *ReplyLevelInfo) Reset() {
	*x = ReplyLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyLevelInfo) ProtoMessage() {}

func (x *ReplyLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyLevelInfo.ProtoReflect.Descriptor instead.
func (*ReplyLevelInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{46}
}

func (x *ReplyLevelInfo) GetCur() int32 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *ReplyLevelInfo) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *ReplyLevelInfo) GetNowExp() int32 {
	if x != nil {
		return x.NowExp
	}
	return 0
}

func (x *ReplyLevelInfo) GetNextExp() int32 {
	if x != nil {
		return x.NextExp
	}
	return 0
}

type ReplyMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info       *ReplyMemberInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	FansDetail *ReplyFansDetail `protobuf:"bytes,2,opt,name=fans_detail,json=fansDetail,proto3" json:"fans_detail,omitempty"`
	Following  int32            `protobuf:"varint,3,opt,name=following,proto3" json:"following,omitempty"`
}

func (x *ReplyMember) Reset() {
	*x = ReplyMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMember) ProtoMessage() {}

func (x *ReplyMember) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMember.ProtoReflect.Descriptor instead.
func (*ReplyMember) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{47}
}

func (x *ReplyMember) GetInfo() *ReplyMemberInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ReplyMember) GetFansDetail() *ReplyFansDetail {
	if x != nil {
		return x.FansDetail
	}
	return nil
}

func (x *ReplyMember) GetFollowing() int32 {
	if x != nil {
		return x.Following
	}
	return 0
}

type ReplyMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role           int32           `protobuf:"varint,1,opt,name=role,proto3" json:"role,omitempty"`
	Mid            string          `protobuf:"bytes,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Name           string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Sex            string          `protobuf:"bytes,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Sign           string          `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	Avatar         string          `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Rank           string          `protobuf:"bytes,7,opt,name=rank,proto3" json:"rank,omitempty"`
	DisplayRank    string          `protobuf:"bytes,8,opt,name=display_rank,json=displayRank,proto3" json:"display_rank,omitempty"`
	LevelInfo      *ReplyLevelInfo `protobuf:"bytes,9,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	Pendant        *PendantInfo    `protobuf:"bytes,10,opt,name=pendant,proto3" json:"pendant,omitempty"`
	Nameplate      *NameplateInfo  `protobuf:"bytes,11,opt,name=nameplate,proto3" json:"nameplate,omitempty"`
	OfficialVerify *OfficialVerify `protobuf:"bytes,12,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	Vip            *ReplyVip       `protobuf:"bytes,13,opt,name=vip,proto3" json:"vip,omitempty"`
}

func (x *ReplyMemberInfo) Reset() {
	*x = ReplyMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMemberInfo) ProtoMessage() {}

func (x *ReplyMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMemberInfo.ProtoReflect.Descriptor instead.
func (*ReplyMemberInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{48}
}

func (x *ReplyMemberInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *ReplyMemberInfo) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *ReplyMemberInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplyMemberInfo) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *ReplyMemberInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ReplyMemberInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ReplyMemberInfo) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *ReplyMemberInfo) GetDisplayRank() string {
	if x != nil {
		return x.DisplayRank
	}
	return ""
}

func (x *ReplyMemberInfo) GetLevelInfo() *ReplyLevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *ReplyMemberInfo) GetPendant() *PendantInfo {
	if x != nil {
		return x.Pendant
	}
	return nil
}

func (x *ReplyMemberInfo) GetNameplate() *NameplateInfo {
	if x != nil {
		return x.Nameplate
	}
	return nil
}

func (x *ReplyMemberInfo) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *ReplyMemberInfo) GetVip() *ReplyVip {
	if x != nil {
		return x.Vip
	}
	return nil
}

type ReplyPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acount int64 `protobuf:"varint,1,opt,name=acount,proto3" json:"acount,omitempty"`
	Count  int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Num    int64 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Size   int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReplyPage) Reset() {
	*x = ReplyPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyPage) ProtoMessage() {}

func (x *ReplyPage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyPage.ProtoReflect.Descriptor instead.
func (*ReplyPage) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{49}
}

func (x *ReplyPage) GetAcount() int64 {
	if x != nil {
		return x.Acount
	}
	return 0
}

func (x *ReplyPage) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReplyPage) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ReplyPage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReplyUpAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Like  bool `protobuf:"varint,1,opt,name=like,proto3" json:"like,omitempty"`
	Reply bool `protobuf:"varint,2,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *ReplyUpAction) Reset() {
	*x = ReplyUpAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyUpAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyUpAction) ProtoMessage() {}

func (x *ReplyUpAction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyUpAction.ProtoReflect.Descriptor instead.
func (*ReplyUpAction) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{50}
}

func (x *ReplyUpAction) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

func (x *ReplyUpAction) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

type ReplyVip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          int32     `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	DueDate       int64     `protobuf:"varint,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	DueRemark     string    `protobuf:"bytes,3,opt,name=due_remark,json=dueRemark,proto3" json:"due_remark,omitempty"`
	AccessStatus  int32     `protobuf:"varint,4,opt,name=access_status,json=accessStatus,proto3" json:"access_status,omitempty"`
	VipStatus     int32     `protobuf:"varint,5,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	VipStatusWarn string    `protobuf:"bytes,6,opt,name=vip_status_warn,json=vipStatusWarn,proto3" json:"vip_status_warn,omitempty"`
	ThemeType     int32     `protobuf:"varint,7,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	Label         *VipLabel `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ReplyVip) Reset() {
	*x = ReplyVip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyVip) ProtoMessage() {}

func (x *ReplyVip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyVip.ProtoReflect.Descriptor instead.
func (*ReplyVip) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{51}
}

func (x *ReplyVip) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReplyVip) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *ReplyVip) GetDueRemark() string {
	if x != nil {
		return x.DueRemark
	}
	return ""
}

func (x *ReplyVip) GetAccessStatus() int32 {
	if x != nil {
		return x.AccessStatus
	}
	return 0
}

func (x *ReplyVip) GetVipStatus() int32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *ReplyVip) GetVipStatusWarn() string {
	if x != nil {
		return x.VipStatusWarn
	}
	return ""
}

func (x *ReplyVip) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *ReplyVip) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

type ReplyVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cnt     int32  `protobuf:"varint,3,opt,name=cnt,proto3" json:"cnt,omitempty"`
	Desc    string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Deleted bool   `protobuf:"varint,5,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *ReplyVote) Reset() {
	*x = ReplyVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyVote) ProtoMessage() {}

func (x *ReplyVote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyVote.ProtoReflect.Descriptor instead.
func (*ReplyVote) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{52}
}

func (x *ReplyVote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyVote) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReplyVote) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *ReplyVote) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReplyVote) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type ReqUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favorite bool  `protobuf:"varint,1,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Like     bool  `protobuf:"varint,2,opt,name=like,proto3" json:"like,omitempty"`
	Dislike  bool  `protobuf:"varint,3,opt,name=dislike,proto3" json:"dislike,omitempty"`
	Multiply int64 `protobuf:"varint,4,opt,name=multiply,proto3" json:"multiply,omitempty"`
}

func (x *ReqUser) Reset() {
	*x = ReqUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUser) ProtoMessage() {}

func (x *ReqUser) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUser.ProtoReflect.Descriptor instead.
func (*ReqUser) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{53}
}

func (x *ReqUser) GetFavorite() bool {
	if x != nil {
		return x.Favorite
	}
	return false
}

func (x *ReqUser) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

func (x *ReqUser) GetDislike() bool {
	if x != nil {
		return x.Dislike
	}
	return false
}

func (x *ReqUser) GetMultiply() int64 {
	if x != nil {
		return x.Multiply
	}
	return 0
}

type ReserveActivityParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveId int64  `protobuf:"varint,1,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	From      string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Oid       int64  `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *ReserveActivityParam) Reset() {
	*x = ReserveActivityParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveActivityParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveActivityParam) ProtoMessage() {}

func (x *ReserveActivityParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveActivityParam.ProtoReflect.Descriptor instead.
func (*ReserveActivityParam) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{54}
}

func (x *ReserveActivityParam) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *ReserveActivityParam) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReserveActivityParam) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReserveActivityParam) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bp            int32 `protobuf:"varint,1,opt,name=bp,proto3" json:"bp,omitempty"`
	Elec          int32 `protobuf:"varint,2,opt,name=elec,proto3" json:"elec,omitempty"`
	Download      int32 `protobuf:"varint,3,opt,name=download,proto3" json:"download,omitempty"`
	Movie         int32 `protobuf:"varint,4,opt,name=movie,proto3" json:"movie,omitempty"`
	Pay           int32 `protobuf:"varint,5,opt,name=pay,proto3" json:"pay,omitempty"`
	Hd5           int32 `protobuf:"varint,6,opt,name=hd5,proto3" json:"hd5,omitempty"`
	NoReprint     int32 `protobuf:"varint,7,opt,name=no_reprint,json=noReprint,proto3" json:"no_reprint,omitempty"`
	Autoplay      int32 `protobuf:"varint,8,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	UgcPay        int32 `protobuf:"varint,9,opt,name=ugc_pay,json=ugcPay,proto3" json:"ugc_pay,omitempty"`
	IsCooperation int32 `protobuf:"varint,10,opt,name=is_cooperation,json=isCooperation,proto3" json:"is_cooperation,omitempty"`
	UgcPayPreview int32 `protobuf:"varint,11,opt,name=ugc_pay_preview,json=ugcPayPreview,proto3" json:"ugc_pay_preview,omitempty"`
	ArcPay        int32 `protobuf:"varint,12,opt,name=arc_pay,json=arcPay,proto3" json:"arc_pay,omitempty"`
	FreeWatch     int32 `protobuf:"varint,13,opt,name=free_watch,json=freeWatch,proto3" json:"free_watch,omitempty"`
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{55}
}

func (x *Rights) GetBp() int32 {
	if x != nil {
		return x.Bp
	}
	return 0
}

func (x *Rights) GetElec() int32 {
	if x != nil {
		return x.Elec
	}
	return 0
}

func (x *Rights) GetDownload() int32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *Rights) GetMovie() int32 {
	if x != nil {
		return x.Movie
	}
	return 0
}

func (x *Rights) GetPay() int32 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *Rights) GetHd5() int32 {
	if x != nil {
		return x.Hd5
	}
	return 0
}

func (x *Rights) GetNoReprint() int32 {
	if x != nil {
		return x.NoReprint
	}
	return 0
}

func (x *Rights) GetAutoplay() int32 {
	if x != nil {
		return x.Autoplay
	}
	return 0
}

func (x *Rights) GetUgcPay() int32 {
	if x != nil {
		return x.UgcPay
	}
	return 0
}

func (x *Rights) GetIsCooperation() int32 {
	if x != nil {
		return x.IsCooperation
	}
	return 0
}

func (x *Rights) GetUgcPayPreview() int32 {
	if x != nil {
		return x.UgcPayPreview
	}
	return 0
}

func (x *Rights) GetArcPay() int32 {
	if x != nil {
		return x.ArcPay
	}
	return 0
}

func (x *Rights) GetFreeWatch() int32 {
	if x != nil {
		return x.FreeWatch
	}
	return 0
}

type SeasonEpisode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId   int64        `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	SectionId  int64        `protobuf:"varint,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Id         int64        `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Aid        int64        `protobuf:"varint,4,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid        int64        `protobuf:"varint,5,opt,name=cid,proto3" json:"cid,omitempty"`
	Title      string       `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Attribute  int64        `protobuf:"varint,7,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Arc        *Arc         `protobuf:"bytes,8,opt,name=arc,proto3" json:"arc,omitempty"`
	Page       *Page        `protobuf:"bytes,9,opt,name=page,proto3" json:"page,omitempty"`
	Bvid       string       `protobuf:"bytes,10,opt,name=bvid,proto3" json:"bvid,omitempty"`
	BadgeStyle *ReasonStyle `protobuf:"bytes,11,opt,name=badge_style,json=badgeStyle,proto3" json:"badge_style,omitempty"`
}

func (x *SeasonEpisode) Reset() {
	*x = SeasonEpisode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonEpisode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonEpisode) ProtoMessage() {}

func (x *SeasonEpisode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonEpisode.ProtoReflect.Descriptor instead.
func (*SeasonEpisode) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{56}
}

func (x *SeasonEpisode) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonEpisode) GetSectionId() int64 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *SeasonEpisode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeasonEpisode) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *SeasonEpisode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SeasonEpisode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeasonEpisode) GetAttribute() int64 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *SeasonEpisode) GetArc() *Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *SeasonEpisode) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SeasonEpisode) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *SeasonEpisode) GetBadgeStyle() *ReasonStyle {
	if x != nil {
		return x.BadgeStyle
	}
	return nil
}

type SeasonSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64            `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Id       int64            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title    string           `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type     int64            `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Episodes []*SeasonEpisode `protobuf:"bytes,5,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *SeasonSection) Reset() {
	*x = SeasonSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonSection) ProtoMessage() {}

func (x *SeasonSection) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonSection.ProtoReflect.Descriptor instead.
func (*SeasonSection) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{57}
}

func (x *SeasonSection) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonSection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeasonSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeasonSection) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SeasonSection) GetEpisodes() []*SeasonEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

type SeasonStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	View     int32 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Danmaku  int32 `protobuf:"varint,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	Reply    int32 `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Fav      int32 `protobuf:"varint,5,opt,name=fav,proto3" json:"fav,omitempty"`
	Coin     int32 `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	Share    int32 `protobuf:"varint,7,opt,name=share,proto3" json:"share,omitempty"`
	NowRank  int32 `protobuf:"varint,8,opt,name=now_rank,json=nowRank,proto3" json:"now_rank,omitempty"`
	HisRank  int32 `protobuf:"varint,9,opt,name=his_rank,json=hisRank,proto3" json:"his_rank,omitempty"`
	Like     int32 `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *SeasonStat) Reset() {
	*x = SeasonStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonStat) ProtoMessage() {}

func (x *SeasonStat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonStat.ProtoReflect.Descriptor instead.
func (*SeasonStat) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{58}
}

func (x *SeasonStat) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonStat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *SeasonStat) GetDanmaku() int32 {
	if x != nil {
		return x.Danmaku
	}
	return 0
}

func (x *SeasonStat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *SeasonStat) GetFav() int32 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *SeasonStat) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *SeasonStat) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *SeasonStat) GetNowRank() int32 {
	if x != nil {
		return x.NowRank
	}
	return 0
}

func (x *SeasonStat) GetHisRank() int32 {
	if x != nil {
		return x.HisRank
	}
	return 0
}

func (x *SeasonStat) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SImg string `protobuf:"bytes,1,opt,name=s_img,json=sImg,proto3" json:"s_img,omitempty"`
	LImg string `protobuf:"bytes,2,opt,name=l_img,json=lImg,proto3" json:"l_img,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{59}
}

func (x *Space) GetSImg() string {
	if x != nil {
		return x.SImg
	}
	return ""
}

func (x *Space) GetLImg() string {
	if x != nil {
		return x.LImg
	}
	return ""
}

type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid        int64         `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Title      string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Name       string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Face       string        `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	Vip        *VipInfo      `protobuf:"bytes,5,opt,name=vip,proto3" json:"vip,omitempty"`
	Official   *OfficialInfo `protobuf:"bytes,6,opt,name=official,proto3" json:"official,omitempty"`
	Follower   int64         `protobuf:"varint,7,opt,name=follower,proto3" json:"follower,omitempty"`
	LabelStyle int32         `protobuf:"varint,8,opt,name=label_style,json=labelStyle,proto3" json:"label_style,omitempty"`
	Relation   *Relation     `protobuf:"bytes,9,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{60}
}

func (x *Staff) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Staff) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Staff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Staff) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Staff) GetVip() *VipInfo {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Staff) GetOfficial() *OfficialInfo {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *Staff) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

func (x *Staff) GetLabelStyle() int32 {
	if x != nil {
		return x.LabelStyle
	}
	return 0
}

func (x *Staff) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

type StaffInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *StaffInfo) Reset() {
	*x = StaffInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffInfo) ProtoMessage() {}

func (x *StaffInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffInfo.ProtoReflect.Descriptor instead.
func (*StaffInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{61}
}

func (x *StaffInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *StaffInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid        int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	View       int32  `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	Danmaku    int32  `protobuf:"varint,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	Reply      int32  `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Fav        int32  `protobuf:"varint,5,opt,name=fav,proto3" json:"fav,omitempty"`
	Coin       int32  `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	Share      int32  `protobuf:"varint,7,opt,name=share,proto3" json:"share,omitempty"`
	NowRank    int32  `protobuf:"varint,8,opt,name=now_rank,json=nowRank,proto3" json:"now_rank,omitempty"`
	HisRank    int32  `protobuf:"varint,9,opt,name=his_rank,json=hisRank,proto3" json:"his_rank,omitempty"`
	Like       int32  `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
	Dislike    int32  `protobuf:"varint,11,opt,name=dislike,proto3" json:"dislike,omitempty"`
	Evaluation string `protobuf:"bytes,12,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	ArgueMsg   string `protobuf:"bytes,13,opt,name=argue_msg,json=argueMsg,proto3" json:"argue_msg,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{62}
}

func (x *Stat) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *Stat) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *Stat) GetDanmaku() int32 {
	if x != nil {
		return x.Danmaku
	}
	return 0
}

func (x *Stat) GetReply() int32 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *Stat) GetFav() int32 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *Stat) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Stat) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *Stat) GetNowRank() int32 {
	if x != nil {
		return x.NowRank
	}
	return 0
}

func (x *Stat) GetHisRank() int32 {
	if x != nil {
		return x.HisRank
	}
	return 0
}

func (x *Stat) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Stat) GetDislike() int32 {
	if x != nil {
		return x.Dislike
	}
	return 0
}

func (x *Stat) GetEvaluation() string {
	if x != nil {
		return x.Evaluation
	}
	return ""
}

func (x *Stat) GetArgueMsg() string {
	if x != nil {
		return x.ArgueMsg
	}
	return ""
}

type Subtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowSubmit bool            `protobuf:"varint,1,opt,name=allow_submit,json=allowSubmit,proto3" json:"allow_submit,omitempty"`
	List        []*SubtitleItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{63}
}

func (x *Subtitle) GetAllowSubmit() bool {
	if x != nil {
		return x.AllowSubmit
	}
	return false
}

func (x *Subtitle) GetList() []*SubtitleItem {
	if x != nil {
		return x.List
	}
	return nil
}

type SubtitleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lan         string   `protobuf:"bytes,2,opt,name=lan,proto3" json:"lan,omitempty"`
	LanDoc      string   `protobuf:"bytes,3,opt,name=lan_doc,json=lanDoc,proto3" json:"lan_doc,omitempty"`
	IsLock      bool     `protobuf:"varint,4,opt,name=is_lock,json=isLock,proto3" json:"is_lock,omitempty"`
	AuthorMid   int64    `protobuf:"varint,5,opt,name=author_mid,json=authorMid,proto3" json:"author_mid,omitempty"`
	SubtitleUrl string   `protobuf:"bytes,6,opt,name=subtitle_url,json=subtitleUrl,proto3" json:"subtitle_url,omitempty"`
	Author      *AccInfo `protobuf:"bytes,7,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *SubtitleItem) Reset() {
	*x = SubtitleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubtitleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtitleItem) ProtoMessage() {}

func (x *SubtitleItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtitleItem.ProtoReflect.Descriptor instead.
func (*SubtitleItem) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{64}
}

func (x *SubtitleItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubtitleItem) GetLan() string {
	if x != nil {
		return x.Lan
	}
	return ""
}

func (x *SubtitleItem) GetLanDoc() string {
	if x != nil {
		return x.LanDoc
	}
	return ""
}

func (x *SubtitleItem) GetIsLock() bool {
	if x != nil {
		return x.IsLock
	}
	return false
}

func (x *SubtitleItem) GetAuthorMid() int64 {
	if x != nil {
		return x.AuthorMid
	}
	return 0
}

func (x *SubtitleItem) GetSubtitleUrl() string {
	if x != nil {
		return x.SubtitleUrl
	}
	return ""
}

func (x *SubtitleItem) GetAuthor() *AccInfo {
	if x != nil {
		return x.Author
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cover        string    `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	HeadCover    string    `protobuf:"bytes,4,opt,name=head_cover,json=headCover,proto3" json:"head_cover,omitempty"`
	Content      string    `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	ShortContent string    `protobuf:"bytes,6,opt,name=short_content,json=shortContent,proto3" json:"short_content,omitempty"`
	Type         int32     `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	State        int32     `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	Ctime        int64     `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	TagCount     *TagCount `protobuf:"bytes,10,opt,name=tag_count,json=tagCount,proto3" json:"tag_count,omitempty"`
	IsAtten      int32     `protobuf:"varint,11,opt,name=is_atten,json=isAtten,proto3" json:"is_atten,omitempty"`
	Likes        int64     `protobuf:"varint,12,opt,name=likes,proto3" json:"likes,omitempty"`
	Hates        int64     `protobuf:"varint,13,opt,name=hates,proto3" json:"hates,omitempty"`
	Attribute    int32     `protobuf:"varint,14,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Liked        int32     `protobuf:"varint,15,opt,name=liked,proto3" json:"liked,omitempty"`
	Hated        int32     `protobuf:"varint,16,opt,name=hated,proto3" json:"hated,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{65}
}

func (x *Tag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Tag) GetHeadCover() string {
	if x != nil {
		return x.HeadCover
	}
	return ""
}

func (x *Tag) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Tag) GetShortContent() string {
	if x != nil {
		return x.ShortContent
	}
	return ""
}

func (x *Tag) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Tag) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Tag) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Tag) GetTagCount() *TagCount {
	if x != nil {
		return x.TagCount
	}
	return nil
}

func (x *Tag) GetIsAtten() int32 {
	if x != nil {
		return x.IsAtten
	}
	return 0
}

func (x *Tag) GetLikes() int64 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *Tag) GetHates() int64 {
	if x != nil {
		return x.Hates
	}
	return 0
}

func (x *Tag) GetAttribute() int32 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *Tag) GetLiked() int32 {
	if x != nil {
		return x.Liked
	}
	return 0
}

func (x *Tag) GetHated() int32 {
	if x != nil {
		return x.Hated
	}
	return 0
}

type TagCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View  int64 `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Use   int64 `protobuf:"varint,2,opt,name=use,proto3" json:"use,omitempty"`
	Atten int64 `protobuf:"varint,3,opt,name=atten,proto3" json:"atten,omitempty"`
}

func (x *TagCount) Reset() {
	*x = TagCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCount) ProtoMessage() {}

func (x *TagCount) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCount.ProtoReflect.Descriptor instead.
func (*TagCount) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{66}
}

func (x *TagCount) GetView() int64 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *TagCount) GetUse() int64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *TagCount) GetAtten() int64 {
	if x != nil {
		return x.Atten
	}
	return 0
}

type UGCPayAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price         int64            `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	PlatformPrice map[string]int64 `protobuf:"bytes,2,rep,name=platform_price,json=platformPrice,proto3" json:"platform_price,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UGCPayAsset) Reset() {
	*x = UGCPayAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UGCPayAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UGCPayAsset) ProtoMessage() {}

func (x *UGCPayAsset) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UGCPayAsset.ProtoReflect.Descriptor instead.
func (*UGCPayAsset) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{67}
}

func (x *UGCPayAsset) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UGCPayAsset) GetPlatformPrice() map[string]int64 {
	if x != nil {
		return x.PlatformPrice
	}
	return nil
}

type UGCSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover       string           `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Mid         int64            `protobuf:"varint,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Intro       string           `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	SignState   int32            `protobuf:"varint,6,opt,name=sign_state,json=signState,proto3" json:"sign_state,omitempty"`
	Attribute   int64            `protobuf:"varint,7,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Sections    []*SeasonSection `protobuf:"bytes,8,rep,name=sections,proto3" json:"sections,omitempty"`
	Stat        *SeasonStat      `protobuf:"bytes,9,opt,name=stat,proto3" json:"stat,omitempty"`
	EpCount     int64            `protobuf:"varint,10,opt,name=ep_count,json=epCount,proto3" json:"ep_count,omitempty"`
	SeasonType  int64            `protobuf:"varint,11,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	IsPaySeason bool             `protobuf:"varint,12,opt,name=is_pay_season,json=isPaySeason,proto3" json:"is_pay_season,omitempty"`
}

func (x *UGCSeason) Reset() {
	*x = UGCSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UGCSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UGCSeason) ProtoMessage() {}

func (x *UGCSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UGCSeason.ProtoReflect.Descriptor instead.
func (*UGCSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{68}
}

func (x *UGCSeason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UGCSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UGCSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UGCSeason) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UGCSeason) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UGCSeason) GetSignState() int32 {
	if x != nil {
		return x.SignState
	}
	return 0
}

func (x *UGCSeason) GetAttribute() int64 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *UGCSeason) GetSections() []*SeasonSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *UGCSeason) GetStat() *SeasonStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *UGCSeason) GetEpCount() int64 {
	if x != nil {
		return x.EpCount
	}
	return 0
}

func (x *UGCSeason) GetSeasonType() int64 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *UGCSeason) GetIsPaySeason() bool {
	if x != nil {
		return x.IsPaySeason
	}
	return false
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arc           *Arc         `protobuf:"bytes,1,opt,name=arc,proto3" json:"arc,omitempty"`
	NoCache       bool         `protobuf:"varint,2,opt,name=no_cache,json=noCache,proto3" json:"no_cache,omitempty"`
	Pages         []*Page      `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`
	Subtitle      *Subtitle    `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Asset         *UGCPayAsset `protobuf:"bytes,5,opt,name=asset,proto3" json:"asset,omitempty"`
	Label         *ViewLabel   `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Staff         []*Staff     `protobuf:"bytes,7,rep,name=staff,proto3" json:"staff,omitempty"`
	UgcSeason     *UGCSeason   `protobuf:"bytes,8,opt,name=ugc_season,json=ugcSeason,proto3" json:"ugc_season,omitempty"`
	SteinGuideCid int64        `protobuf:"varint,9,opt,name=stein_guide_cid,json=steinGuideCid,proto3" json:"stein_guide_cid,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{69}
}

func (x *View) GetArc() *Arc {
	if x != nil {
		return x.Arc
	}
	return nil
}

func (x *View) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *View) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *View) GetSubtitle() *Subtitle {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *View) GetAsset() *UGCPayAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *View) GetLabel() *ViewLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *View) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *View) GetUgcSeason() *UGCSeason {
	if x != nil {
		return x.UgcSeason
	}
	return nil
}

func (x *View) GetSteinGuideCid() int64 {
	if x != nil {
		return x.SteinGuideCid
	}
	return 0
}

type ViewDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View    *View     `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	Card    *Card     `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	Tags    []*Tag    `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Reply   *HotReply `protobuf:"bytes,4,opt,name=reply,proto3" json:"reply,omitempty"`
	Related []*Arc    `protobuf:"bytes,5,rep,name=related,proto3" json:"related,omitempty"`
}

func (x *ViewDetailReply) Reset() {
	*x = ViewDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailReply) ProtoMessage() {}

func (x *ViewDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailReply.ProtoReflect.Descriptor instead.
func (*ViewDetailReply) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{70}
}

func (x *ViewDetailReply) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *ViewDetailReply) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *ViewDetailReply) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ViewDetailReply) GetReply() *HotReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *ViewDetailReply) GetRelated() []*Arc {
	if x != nil {
		return x.Related
	}
	return nil
}

type ViewDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid  int64  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Bvid string `protobuf:"bytes,2,opt,name=bvid,proto3" json:"bvid,omitempty"`
}

func (x *ViewDetailReq) Reset() {
	*x = ViewDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailReq) ProtoMessage() {}

func (x *ViewDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailReq.ProtoReflect.Descriptor instead.
func (*ViewDetailReq) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{71}
}

func (x *ViewDetailReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewDetailReq) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

type ViewLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ViewLabel) Reset() {
	*x = ViewLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewLabel) ProtoMessage() {}

func (x *ViewLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewLabel.ProtoReflect.Descriptor instead.
func (*ViewLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{72}
}

func (x *ViewLabel) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Status     int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	VipPayType int32 `protobuf:"varint,3,opt,name=vip_pay_type,json=vipPayType,proto3" json:"vip_pay_type,omitempty"`
	ThemeType  int32 `protobuf:"varint,4,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{73}
}

func (x *VipInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VipInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VipInfo) GetVipPayType() int32 {
	if x != nil {
		return x.VipPayType
	}
	return 0
}

func (x *VipInfo) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP(), []int{74}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_bilibili_web_interfaces_v1_interfaces_proto protoreflect.FileDescriptor

var file_bilibili_web_interfaces_v1_interfaces_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x69, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x22, 0x8f, 0x05, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41,
	0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x12, 0x53, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x35, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x56, 0x69, 0x70, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x03, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52, 0x03, 0x61,
	0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x4e, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x5d, 0x0a, 0x12, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x3a, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x06,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x69, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x69, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x12, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x89, 0x04, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x76, 0x65, 0x72, 0x50, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x6f, 0x76, 0x65, 0x72, 0x4a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x44, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x69, 0x63, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x68, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x69, 0x63, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x66, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x3c, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0xbd, 0x03,
	0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x76, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x3c, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x3f, 0x0a, 0x05,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x5c, 0x0a,
	0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x15,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x47, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd5, 0x04, 0x0a, 0x11, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a,
	0x13, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x6e,
	0x6d, 0x61, 0x6b, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x44, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12, 0x44, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x56, 0x0a,
	0x10, 0x66, 0x61, 0x76, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x50, 0x0a, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x55, 0x52,
	0x4c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x55,
	0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x55,
	0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0xcd, 0x09, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x67, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x68,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x6b, 0x42, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x49, 0x6d,
	0x67, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x42, 0x67, 0x49, 0x6d,
	0x67, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x32, 0x32, 0x33, 0x33, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x32, 0x33, 0x33, 0x49,
	0x6d, 0x67, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x12,
	0x31, 0x0a, 0x15, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x6d, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6c, 0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x67,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x69,
	0x6d, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x4c,
	0x69, 0x6b, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x22, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x66, 0x61, 0x76, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x46, 0x61, 0x76, 0x49, 0x6d, 0x67,
	0x12, 0x22, 0x0a, 0x0d, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x42, 0x74,
	0x6e, 0x49, 0x6d, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x12,
	0x33, 0x0a, 0x16, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6c, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6d, 0x67, 0x12, 0x40, 0x0a, 0x1d, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x6c, 0x69, 0x76,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x67,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6d,
	0x67, 0x12, 0x51, 0x0a, 0x08, 0x6b, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x1a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x2e, 0x4b,
	0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6b, 0x76, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x3a, 0x0a, 0x0c, 0x4b, 0x76, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x31, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52,
	0x03, 0x61, 0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0c, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb4, 0x08, 0x0a, 0x03, 0x41,
	0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x75, 0x62, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x3a, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x44, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x76, 0x32, 0x18, 0x1e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x56, 0x32, 0x52, 0x06, 0x64, 0x65, 0x73, 0x63, 0x56, 0x32,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x70, 0x65, 0x72,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x70, 0x65,
	0x72, 0x22, 0x42, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x61, 0x63, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3b,
	0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78,
	0x70, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x64, 0x56, 0x69, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x75, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76,
	0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x03, 0x0a, 0x16,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x16,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00,
	0x52, 0x14, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x56, 0x0a, 0x10, 0x66, 0x61, 0x76, 0x5f, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61,
	0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x0e,
	0x66, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x50,
	0x0a, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x48, 0x00, 0x52, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x4e, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x63, 0x56,
	0x32, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x0e, 0x46, 0x61,
	0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x48, 0x6f,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x29,
	0x0a, 0x0c, 0x4a, 0x75, 0x6d, 0x70, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x4c, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x35,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x35,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x4c, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x38, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xba, 0x01, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x48,
	0x0a, 0x0e, 0x61, 0x69, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x69, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xf5, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x43, 0x0a, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x61, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x70, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x31, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52, 0x03,
	0x61, 0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x42,
	0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x22, 0xcd, 0x07, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73,
	0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x70, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x70, 0x69, 0x64, 0x53, 0x74, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f,
	0x6f, 0x74, 0x53, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x74, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x09, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x75, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x22, 0xda, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x1a, 0x60, 0x0a,
	0x0a, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x8b, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a,
	0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x42, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x45, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x6e,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x64,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x69, 0x6d, 0x61, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x22,
	0x5d, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x86,
	0x02, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x75, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x6f, 0x77, 0x45, 0x78, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78,
	0x70, 0x22, 0xba, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x3f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0b, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x61, 0x6e, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x22, 0xa4,
	0x04, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x49, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x07,
	0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12,
	0x47, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x36, 0x0a,
	0x03, 0x76, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x69, 0x70,
	0x52, 0x03, 0x76, 0x69, 0x70, 0x22, 0x5f, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55,
	0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x9f, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x75, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x77,
	0x61, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x22, 0x71, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x6b,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x22, 0x6f, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0xdd, 0x02, 0x0a, 0x06, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x62, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6c, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x65, 0x6c, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x68,
	0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x68, 0x64, 0x35, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x6f, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x67, 0x63, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x67, 0x63, 0x50, 0x61,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x6f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x67, 0x63, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x75, 0x67, 0x63, 0x50, 0x61, 0x79, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x72, 0x63, 0x50, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x22, 0xfa, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x31,
	0x0a, 0x03, 0x61, 0x72, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52, 0x03, 0x61, 0x72,
	0x63, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x0b, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45,
	0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x76, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x66, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x31, 0x0a, 0x05, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x49, 0x6d, 0x67, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x5f, 0x69,
	0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x49, 0x6d, 0x67, 0x22, 0xd3,
	0x02, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12,
	0x44, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x04, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d,
	0x61, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61,
	0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x76, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x68, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75,
	0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x67,
	0x75, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x6b, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x61, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x6f, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x44, 0x6f, 0x63, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x4d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0xb1, 0x03, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x08, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x68, 0x61, 0x74, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x08, 0x54, 0x61,
	0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x74,
	0x65, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x55, 0x47, 0x43, 0x50, 0x61, 0x79, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x47,
	0x43, 0x50, 0x61, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x40, 0x0a, 0x12, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8f, 0x03,
	0x0a, 0x09, 0x55, 0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x08,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x61, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0xf1, 0x03, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x31, 0x0a, 0x03, 0x61, 0x72, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52, 0x03, 0x61, 0x72, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e,
	0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x40,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x47, 0x43,
	0x50, 0x61, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x3b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x44, 0x0a, 0x0a, 0x75, 0x67, 0x63, 0x5f, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x47, 0x43, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x09, 0x75, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x74, 0x65, 0x69, 0x6e, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x65, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x43, 0x69, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x34, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x63, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x35, 0x0a, 0x0d, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x09, 0x56, 0x69, 0x65, 0x77, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x07, 0x56, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0c, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x1e, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x2a,
	0x46, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4c, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x10, 0x02, 0x2a, 0x52, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x12, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f,
	0x53, 0x49, 0x5a, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41,
	0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x5f, 0x42, 0x49, 0x47, 0x10, 0x02, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x77, 0x65,
	0x62, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_web_interfaces_v1_interfaces_proto_rawDescOnce sync.Once
	file_bilibili_web_interfaces_v1_interfaces_proto_rawDescData = file_bilibili_web_interfaces_v1_interfaces_proto_rawDesc
)

func file_bilibili_web_interfaces_v1_interfaces_proto_rawDescGZIP() []byte {
	file_bilibili_web_interfaces_v1_interfaces_proto_rawDescOnce.Do(func() {
		file_bilibili_web_interfaces_v1_interfaces_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_web_interfaces_v1_interfaces_proto_rawDescData)
	})
	return file_bilibili_web_interfaces_v1_interfaces_proto_rawDescData
}

var file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_bilibili_web_interfaces_v1_interfaces_proto_goTypes = []interface{}{
	(ActivitySeasonStatus)(0),         // 0: bilibili.web.interfaces.v1.ActivitySeasonStatus
	(OrderType)(0),                    // 1: bilibili.web.interfaces.v1.OrderType
	(ReplyEmoteMetaSize)(0),           // 2: bilibili.web.interfaces.v1.ReplyEmoteMetaSize
	(*AccInfo)(nil),                   // 3: bilibili.web.interfaces.v1.AccInfo
	(*AccountCard)(nil),               // 4: bilibili.web.interfaces.v1.AccountCard
	(*ActivityArchiveReply)(nil),      // 5: bilibili.web.interfaces.v1.ActivityArchiveReply
	(*ActivityArchiveReq)(nil),        // 6: bilibili.web.interfaces.v1.ActivityArchiveReq
	(*ActivityEpisode)(nil),           // 7: bilibili.web.interfaces.v1.ActivityEpisode
	(*ActivityGame)(nil),              // 8: bilibili.web.interfaces.v1.ActivityGame
	(*ActivityGameIframe)(nil),        // 9: bilibili.web.interfaces.v1.ActivityGameIframe
	(*ActivityLive)(nil),              // 10: bilibili.web.interfaces.v1.ActivityLive
	(*ActivityLiveTimeInfoReply)(nil), // 11: bilibili.web.interfaces.v1.ActivityLiveTimeInfoReply
	(*ActivityLiveTimeInfoReq)(nil),   // 12: bilibili.web.interfaces.v1.ActivityLiveTimeInfoReq
	(*ActivitySeasonReply)(nil),       // 13: bilibili.web.interfaces.v1.ActivitySeasonReply
	(*ActivitySeasonReq)(nil),         // 14: bilibili.web.interfaces.v1.ActivitySeasonReq
	(*ActivitySeasonSection)(nil),     // 15: bilibili.web.interfaces.v1.ActivitySeasonSection
	(*ActivitySubscribe)(nil),         // 16: bilibili.web.interfaces.v1.ActivitySubscribe
	(*ActivityTheme)(nil),             // 17: bilibili.web.interfaces.v1.ActivityTheme
	(*ActivityView)(nil),              // 18: bilibili.web.interfaces.v1.ActivityView
	(*Arc)(nil),                       // 19: bilibili.web.interfaces.v1.Arc
	(*Author)(nil),                    // 20: bilibili.web.interfaces.v1.Author
	(*Card)(nil),                      // 21: bilibili.web.interfaces.v1.Card
	(*CardLevelInfo)(nil),             // 22: bilibili.web.interfaces.v1.CardLevelInfo
	(*CardVip)(nil),                   // 23: bilibili.web.interfaces.v1.CardVip
	(*ClickActivitySeasonReq)(nil),    // 24: bilibili.web.interfaces.v1.ClickActivitySeasonReq
	(*DescV2)(nil),                    // 25: bilibili.web.interfaces.v1.DescV2
	(*Dimension)(nil),                 // 26: bilibili.web.interfaces.v1.Dimension
	(*FavSeasonParam)(nil),            // 27: bilibili.web.interfaces.v1.FavSeasonParam
	(*HotReply)(nil),                  // 28: bilibili.web.interfaces.v1.HotReply
	(*JumpURLParam)(nil),              // 29: bilibili.web.interfaces.v1.JumpURLParam
	(*LiveTimeline)(nil),              // 30: bilibili.web.interfaces.v1.LiveTimeline
	(*NameplateInfo)(nil),             // 31: bilibili.web.interfaces.v1.NameplateInfo
	(*NoReply)(nil),                   // 32: bilibili.web.interfaces.v1.NoReply
	(*OfficialInfo)(nil),              // 33: bilibili.web.interfaces.v1.OfficialInfo
	(*OfficialVerify)(nil),            // 34: bilibili.web.interfaces.v1.OfficialVerify
	(*OperationRelate)(nil),           // 35: bilibili.web.interfaces.v1.OperationRelate
	(*Page)(nil),                      // 36: bilibili.web.interfaces.v1.Page
	(*PendantInfo)(nil),               // 37: bilibili.web.interfaces.v1.PendantInfo
	(*ReasonStyle)(nil),               // 38: bilibili.web.interfaces.v1.ReasonStyle
	(*Relate)(nil),                    // 39: bilibili.web.interfaces.v1.Relate
	(*RelateItem)(nil),                // 40: bilibili.web.interfaces.v1.RelateItem
	(*Relation)(nil),                  // 41: bilibili.web.interfaces.v1.Relation
	(*Reply)(nil),                     // 42: bilibili.web.interfaces.v1.Reply
	(*ReplyContent)(nil),              // 43: bilibili.web.interfaces.v1.ReplyContent
	(*ReplyEmote)(nil),                // 44: bilibili.web.interfaces.v1.ReplyEmote
	(*ReplyEmoteMeta)(nil),            // 45: bilibili.web.interfaces.v1.ReplyEmoteMeta
	(*ReplyFansDetail)(nil),           // 46: bilibili.web.interfaces.v1.ReplyFansDetail
	(*ReplyFolder)(nil),               // 47: bilibili.web.interfaces.v1.ReplyFolder
	(*ReplyLabel)(nil),                // 48: bilibili.web.interfaces.v1.ReplyLabel
	(*ReplyLevelInfo)(nil),            // 49: bilibili.web.interfaces.v1.ReplyLevelInfo
	(*ReplyMember)(nil),               // 50: bilibili.web.interfaces.v1.ReplyMember
	(*ReplyMemberInfo)(nil),           // 51: bilibili.web.interfaces.v1.ReplyMemberInfo
	(*ReplyPage)(nil),                 // 52: bilibili.web.interfaces.v1.ReplyPage
	(*ReplyUpAction)(nil),             // 53: bilibili.web.interfaces.v1.ReplyUpAction
	(*ReplyVip)(nil),                  // 54: bilibili.web.interfaces.v1.ReplyVip
	(*ReplyVote)(nil),                 // 55: bilibili.web.interfaces.v1.ReplyVote
	(*ReqUser)(nil),                   // 56: bilibili.web.interfaces.v1.ReqUser
	(*ReserveActivityParam)(nil),      // 57: bilibili.web.interfaces.v1.ReserveActivityParam
	(*Rights)(nil),                    // 58: bilibili.web.interfaces.v1.Rights
	(*SeasonEpisode)(nil),             // 59: bilibili.web.interfaces.v1.SeasonEpisode
	(*SeasonSection)(nil),             // 60: bilibili.web.interfaces.v1.SeasonSection
	(*SeasonStat)(nil),                // 61: bilibili.web.interfaces.v1.SeasonStat
	(*Space)(nil),                     // 62: bilibili.web.interfaces.v1.Space
	(*Staff)(nil),                     // 63: bilibili.web.interfaces.v1.Staff
	(*StaffInfo)(nil),                 // 64: bilibili.web.interfaces.v1.StaffInfo
	(*Stat)(nil),                      // 65: bilibili.web.interfaces.v1.Stat
	(*Subtitle)(nil),                  // 66: bilibili.web.interfaces.v1.Subtitle
	(*SubtitleItem)(nil),              // 67: bilibili.web.interfaces.v1.SubtitleItem
	(*Tag)(nil),                       // 68: bilibili.web.interfaces.v1.Tag
	(*TagCount)(nil),                  // 69: bilibili.web.interfaces.v1.TagCount
	(*UGCPayAsset)(nil),               // 70: bilibili.web.interfaces.v1.UGCPayAsset
	(*UGCSeason)(nil),                 // 71: bilibili.web.interfaces.v1.UGCSeason
	(*View)(nil),                      // 72: bilibili.web.interfaces.v1.View
	(*ViewDetailReply)(nil),           // 73: bilibili.web.interfaces.v1.ViewDetailReply
	(*ViewDetailReq)(nil),             // 74: bilibili.web.interfaces.v1.ViewDetailReq
	(*ViewLabel)(nil),                 // 75: bilibili.web.interfaces.v1.ViewLabel
	(*VipInfo)(nil),                   // 76: bilibili.web.interfaces.v1.VipInfo
	(*VipLabel)(nil),                  // 77: bilibili.web.interfaces.v1.VipLabel
	nil,                               // 78: bilibili.web.interfaces.v1.ActivityTheme.KvColorEntry
	nil,                               // 79: bilibili.web.interfaces.v1.ReplyContent.EmoteEntry
	nil,                               // 80: bilibili.web.interfaces.v1.UGCPayAsset.PlatformPriceEntry
}
var file_bilibili_web_interfaces_v1_interfaces_proto_depIdxs = []int32{
	22,  // 0: bilibili.web.interfaces.v1.AccountCard.level_info:type_name -> bilibili.web.interfaces.v1.CardLevelInfo
	37,  // 1: bilibili.web.interfaces.v1.AccountCard.pendant:type_name -> bilibili.web.interfaces.v1.PendantInfo
	31,  // 2: bilibili.web.interfaces.v1.AccountCard.nameplate:type_name -> bilibili.web.interfaces.v1.NameplateInfo
	33,  // 3: bilibili.web.interfaces.v1.AccountCard.official:type_name -> bilibili.web.interfaces.v1.OfficialInfo
	34,  // 4: bilibili.web.interfaces.v1.AccountCard.official_verify:type_name -> bilibili.web.interfaces.v1.OfficialVerify
	23,  // 5: bilibili.web.interfaces.v1.AccountCard.vip:type_name -> bilibili.web.interfaces.v1.CardVip
	19,  // 6: bilibili.web.interfaces.v1.ActivityArchiveReply.arc:type_name -> bilibili.web.interfaces.v1.Arc
	36,  // 7: bilibili.web.interfaces.v1.ActivityArchiveReply.pages:type_name -> bilibili.web.interfaces.v1.Page
	56,  // 8: bilibili.web.interfaces.v1.ActivityArchiveReply.req_user:type_name -> bilibili.web.interfaces.v1.ReqUser
	63,  // 9: bilibili.web.interfaces.v1.ActivityArchiveReply.staff:type_name -> bilibili.web.interfaces.v1.Staff
	35,  // 10: bilibili.web.interfaces.v1.ActivityArchiveReply.right_relate:type_name -> bilibili.web.interfaces.v1.OperationRelate
	35,  // 11: bilibili.web.interfaces.v1.ActivityArchiveReply.bottom_relate:type_name -> bilibili.web.interfaces.v1.OperationRelate
	20,  // 12: bilibili.web.interfaces.v1.ActivityEpisode.author:type_name -> bilibili.web.interfaces.v1.Author
	58,  // 13: bilibili.web.interfaces.v1.ActivityEpisode.rights:type_name -> bilibili.web.interfaces.v1.Rights
	9,   // 14: bilibili.web.interfaces.v1.ActivityGame.iframes:type_name -> bilibili.web.interfaces.v1.ActivityGameIframe
	30,  // 15: bilibili.web.interfaces.v1.ActivityLive.timeline:type_name -> bilibili.web.interfaces.v1.LiveTimeline
	35,  // 16: bilibili.web.interfaces.v1.ActivityLive.operation_relate:type_name -> bilibili.web.interfaces.v1.OperationRelate
	30,  // 17: bilibili.web.interfaces.v1.ActivityLiveTimeInfoReply.timeline:type_name -> bilibili.web.interfaces.v1.LiveTimeline
	0,   // 18: bilibili.web.interfaces.v1.ActivitySeasonReply.status:type_name -> bilibili.web.interfaces.v1.ActivitySeasonStatus
	10,  // 19: bilibili.web.interfaces.v1.ActivitySeasonReply.live:type_name -> bilibili.web.interfaces.v1.ActivityLive
	16,  // 20: bilibili.web.interfaces.v1.ActivitySeasonReply.subscribe:type_name -> bilibili.web.interfaces.v1.ActivitySubscribe
	8,   // 21: bilibili.web.interfaces.v1.ActivitySeasonReply.game:type_name -> bilibili.web.interfaces.v1.ActivityGame
	18,  // 22: bilibili.web.interfaces.v1.ActivitySeasonReply.view:type_name -> bilibili.web.interfaces.v1.ActivityView
	17,  // 23: bilibili.web.interfaces.v1.ActivitySeasonReply.theme:type_name -> bilibili.web.interfaces.v1.ActivityTheme
	7,   // 24: bilibili.web.interfaces.v1.ActivitySeasonSection.episodes:type_name -> bilibili.web.interfaces.v1.ActivityEpisode
	1,   // 25: bilibili.web.interfaces.v1.ActivitySubscribe.order_type:type_name -> bilibili.web.interfaces.v1.OrderType
	57,  // 26: bilibili.web.interfaces.v1.ActivitySubscribe.reserve_activity_param:type_name -> bilibili.web.interfaces.v1.ReserveActivityParam
	27,  // 27: bilibili.web.interfaces.v1.ActivitySubscribe.fav_season_param:type_name -> bilibili.web.interfaces.v1.FavSeasonParam
	29,  // 28: bilibili.web.interfaces.v1.ActivitySubscribe.jump_URL_param:type_name -> bilibili.web.interfaces.v1.JumpURLParam
	78,  // 29: bilibili.web.interfaces.v1.ActivityTheme.kv_color:type_name -> bilibili.web.interfaces.v1.ActivityTheme.KvColorEntry
	19,  // 30: bilibili.web.interfaces.v1.ActivityView.arc:type_name -> bilibili.web.interfaces.v1.Arc
	36,  // 31: bilibili.web.interfaces.v1.ActivityView.pages:type_name -> bilibili.web.interfaces.v1.Page
	63,  // 32: bilibili.web.interfaces.v1.ActivityView.staff:type_name -> bilibili.web.interfaces.v1.Staff
	56,  // 33: bilibili.web.interfaces.v1.ActivityView.req_user:type_name -> bilibili.web.interfaces.v1.ReqUser
	35,  // 34: bilibili.web.interfaces.v1.ActivityView.right_relate:type_name -> bilibili.web.interfaces.v1.OperationRelate
	35,  // 35: bilibili.web.interfaces.v1.ActivityView.bottom_relate:type_name -> bilibili.web.interfaces.v1.OperationRelate
	15,  // 36: bilibili.web.interfaces.v1.ActivityView.sections:type_name -> bilibili.web.interfaces.v1.ActivitySeasonSection
	58,  // 37: bilibili.web.interfaces.v1.Arc.rights:type_name -> bilibili.web.interfaces.v1.Rights
	20,  // 38: bilibili.web.interfaces.v1.Arc.author:type_name -> bilibili.web.interfaces.v1.Author
	65,  // 39: bilibili.web.interfaces.v1.Arc.stat:type_name -> bilibili.web.interfaces.v1.Stat
	26,  // 40: bilibili.web.interfaces.v1.Arc.dimension:type_name -> bilibili.web.interfaces.v1.Dimension
	64,  // 41: bilibili.web.interfaces.v1.Arc.staff_info:type_name -> bilibili.web.interfaces.v1.StaffInfo
	25,  // 42: bilibili.web.interfaces.v1.Arc.desc_v2:type_name -> bilibili.web.interfaces.v1.DescV2
	4,   // 43: bilibili.web.interfaces.v1.Card.card:type_name -> bilibili.web.interfaces.v1.AccountCard
	62,  // 44: bilibili.web.interfaces.v1.Card.space:type_name -> bilibili.web.interfaces.v1.Space
	1,   // 45: bilibili.web.interfaces.v1.ClickActivitySeasonReq.order_type:type_name -> bilibili.web.interfaces.v1.OrderType
	57,  // 46: bilibili.web.interfaces.v1.ClickActivitySeasonReq.reserve_activity_param:type_name -> bilibili.web.interfaces.v1.ReserveActivityParam
	27,  // 47: bilibili.web.interfaces.v1.ClickActivitySeasonReq.fav_season_param:type_name -> bilibili.web.interfaces.v1.FavSeasonParam
	29,  // 48: bilibili.web.interfaces.v1.ClickActivitySeasonReq.jump_URL_param:type_name -> bilibili.web.interfaces.v1.JumpURLParam
	52,  // 49: bilibili.web.interfaces.v1.HotReply.page:type_name -> bilibili.web.interfaces.v1.ReplyPage
	42,  // 50: bilibili.web.interfaces.v1.HotReply.replies:type_name -> bilibili.web.interfaces.v1.Reply
	40,  // 51: bilibili.web.interfaces.v1.OperationRelate.relate_item:type_name -> bilibili.web.interfaces.v1.RelateItem
	39,  // 52: bilibili.web.interfaces.v1.OperationRelate.ai_relate_item:type_name -> bilibili.web.interfaces.v1.Relate
	26,  // 53: bilibili.web.interfaces.v1.Page.dimension:type_name -> bilibili.web.interfaces.v1.Dimension
	19,  // 54: bilibili.web.interfaces.v1.Relate.arc:type_name -> bilibili.web.interfaces.v1.Arc
	50,  // 55: bilibili.web.interfaces.v1.Reply.member:type_name -> bilibili.web.interfaces.v1.ReplyMember
	43,  // 56: bilibili.web.interfaces.v1.Reply.content:type_name -> bilibili.web.interfaces.v1.ReplyContent
	42,  // 57: bilibili.web.interfaces.v1.Reply.replies:type_name -> bilibili.web.interfaces.v1.Reply
	47,  // 58: bilibili.web.interfaces.v1.Reply.folder:type_name -> bilibili.web.interfaces.v1.ReplyFolder
	53,  // 59: bilibili.web.interfaces.v1.Reply.up_action:type_name -> bilibili.web.interfaces.v1.ReplyUpAction
	48,  // 60: bilibili.web.interfaces.v1.Reply.label:type_name -> bilibili.web.interfaces.v1.ReplyLabel
	55,  // 61: bilibili.web.interfaces.v1.ReplyContent.vote:type_name -> bilibili.web.interfaces.v1.ReplyVote
	51,  // 62: bilibili.web.interfaces.v1.ReplyContent.members:type_name -> bilibili.web.interfaces.v1.ReplyMemberInfo
	79,  // 63: bilibili.web.interfaces.v1.ReplyContent.emote:type_name -> bilibili.web.interfaces.v1.ReplyContent.EmoteEntry
	45,  // 64: bilibili.web.interfaces.v1.ReplyEmote.meta:type_name -> bilibili.web.interfaces.v1.ReplyEmoteMeta
	2,   // 65: bilibili.web.interfaces.v1.ReplyEmoteMeta.size:type_name -> bilibili.web.interfaces.v1.ReplyEmoteMetaSize
	51,  // 66: bilibili.web.interfaces.v1.ReplyMember.info:type_name -> bilibili.web.interfaces.v1.ReplyMemberInfo
	46,  // 67: bilibili.web.interfaces.v1.ReplyMember.fans_detail:type_name -> bilibili.web.interfaces.v1.ReplyFansDetail
	49,  // 68: bilibili.web.interfaces.v1.ReplyMemberInfo.level_info:type_name -> bilibili.web.interfaces.v1.ReplyLevelInfo
	37,  // 69: bilibili.web.interfaces.v1.ReplyMemberInfo.pendant:type_name -> bilibili.web.interfaces.v1.PendantInfo
	31,  // 70: bilibili.web.interfaces.v1.ReplyMemberInfo.nameplate:type_name -> bilibili.web.interfaces.v1.NameplateInfo
	34,  // 71: bilibili.web.interfaces.v1.ReplyMemberInfo.official_verify:type_name -> bilibili.web.interfaces.v1.OfficialVerify
	54,  // 72: bilibili.web.interfaces.v1.ReplyMemberInfo.vip:type_name -> bilibili.web.interfaces.v1.ReplyVip
	77,  // 73: bilibili.web.interfaces.v1.ReplyVip.label:type_name -> bilibili.web.interfaces.v1.VipLabel
	19,  // 74: bilibili.web.interfaces.v1.SeasonEpisode.arc:type_name -> bilibili.web.interfaces.v1.Arc
	36,  // 75: bilibili.web.interfaces.v1.SeasonEpisode.page:type_name -> bilibili.web.interfaces.v1.Page
	38,  // 76: bilibili.web.interfaces.v1.SeasonEpisode.badge_style:type_name -> bilibili.web.interfaces.v1.ReasonStyle
	59,  // 77: bilibili.web.interfaces.v1.SeasonSection.episodes:type_name -> bilibili.web.interfaces.v1.SeasonEpisode
	76,  // 78: bilibili.web.interfaces.v1.Staff.vip:type_name -> bilibili.web.interfaces.v1.VipInfo
	33,  // 79: bilibili.web.interfaces.v1.Staff.official:type_name -> bilibili.web.interfaces.v1.OfficialInfo
	41,  // 80: bilibili.web.interfaces.v1.Staff.relation:type_name -> bilibili.web.interfaces.v1.Relation
	67,  // 81: bilibili.web.interfaces.v1.Subtitle.list:type_name -> bilibili.web.interfaces.v1.SubtitleItem
	3,   // 82: bilibili.web.interfaces.v1.SubtitleItem.author:type_name -> bilibili.web.interfaces.v1.AccInfo
	69,  // 83: bilibili.web.interfaces.v1.Tag.tag_count:type_name -> bilibili.web.interfaces.v1.TagCount
	80,  // 84: bilibili.web.interfaces.v1.UGCPayAsset.platform_price:type_name -> bilibili.web.interfaces.v1.UGCPayAsset.PlatformPriceEntry
	60,  // 85: bilibili.web.interfaces.v1.UGCSeason.sections:type_name -> bilibili.web.interfaces.v1.SeasonSection
	61,  // 86: bilibili.web.interfaces.v1.UGCSeason.stat:type_name -> bilibili.web.interfaces.v1.SeasonStat
	19,  // 87: bilibili.web.interfaces.v1.View.arc:type_name -> bilibili.web.interfaces.v1.Arc
	36,  // 88: bilibili.web.interfaces.v1.View.pages:type_name -> bilibili.web.interfaces.v1.Page
	66,  // 89: bilibili.web.interfaces.v1.View.subtitle:type_name -> bilibili.web.interfaces.v1.Subtitle
	70,  // 90: bilibili.web.interfaces.v1.View.asset:type_name -> bilibili.web.interfaces.v1.UGCPayAsset
	75,  // 91: bilibili.web.interfaces.v1.View.label:type_name -> bilibili.web.interfaces.v1.ViewLabel
	63,  // 92: bilibili.web.interfaces.v1.View.staff:type_name -> bilibili.web.interfaces.v1.Staff
	71,  // 93: bilibili.web.interfaces.v1.View.ugc_season:type_name -> bilibili.web.interfaces.v1.UGCSeason
	72,  // 94: bilibili.web.interfaces.v1.ViewDetailReply.view:type_name -> bilibili.web.interfaces.v1.View
	21,  // 95: bilibili.web.interfaces.v1.ViewDetailReply.card:type_name -> bilibili.web.interfaces.v1.Card
	68,  // 96: bilibili.web.interfaces.v1.ViewDetailReply.tags:type_name -> bilibili.web.interfaces.v1.Tag
	28,  // 97: bilibili.web.interfaces.v1.ViewDetailReply.reply:type_name -> bilibili.web.interfaces.v1.HotReply
	19,  // 98: bilibili.web.interfaces.v1.ViewDetailReply.related:type_name -> bilibili.web.interfaces.v1.Arc
	44,  // 99: bilibili.web.interfaces.v1.ReplyContent.EmoteEntry.value:type_name -> bilibili.web.interfaces.v1.ReplyEmote
	100, // [100:100] is the sub-list for method output_type
	100, // [100:100] is the sub-list for method input_type
	100, // [100:100] is the sub-list for extension type_name
	100, // [100:100] is the sub-list for extension extendee
	0,   // [0:100] is the sub-list for field type_name
}

func init() { file_bilibili_web_interfaces_v1_interfaces_proto_init() }
func file_bilibili_web_interfaces_v1_interfaces_proto_init() {
	if File_bilibili_web_interfaces_v1_interfaces_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityArchiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityArchiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityEpisode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityGameIframe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityLive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityLiveTimeInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityLiveTimeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySeasonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySeasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySeasonSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivitySubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityTheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardVip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickActivitySeasonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavSeasonParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JumpURLParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameplateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationRelate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEmote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEmoteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyFansDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyUpAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyVip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveActivityParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonEpisode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubtitleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UGCPayAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UGCSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ActivitySubscribe_ReserveActivityParam)(nil),
		(*ActivitySubscribe_FavSeasonParam)(nil),
		(*ActivitySubscribe_Jump_URLParam)(nil),
	}
	file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*ClickActivitySeasonReq_ReserveActivityParam)(nil),
		(*ClickActivitySeasonReq_FavSeasonParam)(nil),
		(*ClickActivitySeasonReq_Jump_URLParam)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_web_interfaces_v1_interfaces_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_web_interfaces_v1_interfaces_proto_goTypes,
		DependencyIndexes: file_bilibili_web_interfaces_v1_interfaces_proto_depIdxs,
		EnumInfos:         file_bilibili_web_interfaces_v1_interfaces_proto_enumTypes,
		MessageInfos:      file_bilibili_web_interfaces_v1_interfaces_proto_msgTypes,
	}.Build()
	File_bilibili_web_interfaces_v1_interfaces_proto = out.File
	file_bilibili_web_interfaces_v1_interfaces_proto_rawDesc = nil
	file_bilibili_web_interfaces_v1_interfaces_proto_goTypes = nil
	file_bilibili_web_interfaces_v1_interfaces_proto_depIdxs = nil
}
