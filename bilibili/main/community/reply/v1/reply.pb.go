// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: bilibili/main/community/reply/v1/reply.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 来源标识
type DetailListScene int32

const (
	DetailListScene_REPLY    DetailListScene = 0 // 评论区展开
	DetailListScene_MSG_FEED DetailListScene = 1 // 回复消息推送
	DetailListScene_NOTIFY   DetailListScene = 2 //
)

// Enum value maps for DetailListScene.
var (
	DetailListScene_name = map[int32]string{
		0: "REPLY",
		1: "MSG_FEED",
		2: "NOTIFY",
	}
	DetailListScene_value = map[string]int32{
		"REPLY":    0,
		"MSG_FEED": 1,
		"NOTIFY":   2,
	}
)

func (x DetailListScene) Enum() *DetailListScene {
	p := new(DetailListScene)
	*p = x
	return p
}

func (x DetailListScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetailListScene) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[0].Descriptor()
}

func (DetailListScene) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[0]
}

func (x DetailListScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetailListScene.Descriptor instead.
func (DetailListScene) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{0}
}

// 排序方式
type Mode int32

const (
	Mode_DEFAULT        Mode = 0 //
	Mode_UNSPECIFIED    Mode = 1 // 默认排序
	Mode_MAIN_LIST_TIME Mode = 2 // 按时间
	Mode_MAIN_LIST_HOT  Mode = 3 // 按热度
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "DEFAULT",
		1: "UNSPECIFIED",
		2: "MAIN_LIST_TIME",
		3: "MAIN_LIST_HOT",
	}
	Mode_value = map[string]int32{
		"DEFAULT":        0,
		"UNSPECIFIED":    1,
		"MAIN_LIST_TIME": 2,
		"MAIN_LIST_HOT":  3,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[1].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[1]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{1}
}

type SearchItemType int32

const (
	SearchItemType_DEFAULT_ITEM_TYPE SearchItemType = 0 //
	SearchItemType_GOODS             SearchItemType = 1 //
	SearchItemType_VIDEO             SearchItemType = 2 //
	SearchItemType_ARTICLE           SearchItemType = 3 //
)

// Enum value maps for SearchItemType.
var (
	SearchItemType_name = map[int32]string{
		0: "DEFAULT_ITEM_TYPE",
		1: "GOODS",
		2: "VIDEO",
		3: "ARTICLE",
	}
	SearchItemType_value = map[string]int32{
		"DEFAULT_ITEM_TYPE": 0,
		"GOODS":             1,
		"VIDEO":             2,
		"ARTICLE":           3,
	}
)

func (x SearchItemType) Enum() *SearchItemType {
	p := new(SearchItemType)
	*p = x
	return p
}

func (x SearchItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[2].Descriptor()
}

func (SearchItemType) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[2]
}

func (x SearchItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchItemType.Descriptor instead.
func (SearchItemType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{2}
}

type SearchItemVideoSubType int32

const (
	SearchItemVideoSubType_UGC SearchItemVideoSubType = 0 //
	SearchItemVideoSubType_PGC SearchItemVideoSubType = 1 //
)

// Enum value maps for SearchItemVideoSubType.
var (
	SearchItemVideoSubType_name = map[int32]string{
		0: "UGC",
		1: "PGC",
	}
	SearchItemVideoSubType_value = map[string]int32{
		"UGC": 0,
		"PGC": 1,
	}
)

func (x SearchItemVideoSubType) Enum() *SearchItemVideoSubType {
	p := new(SearchItemVideoSubType)
	*p = x
	return p
}

func (x SearchItemVideoSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchItemVideoSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[3].Descriptor()
}

func (SearchItemVideoSubType) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[3]
}

func (x SearchItemVideoSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchItemVideoSubType.Descriptor instead.
func (SearchItemVideoSubType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{3}
}

type UserCallbackAction int32

const (
	UserCallbackAction_Dismiss UserCallbackAction = 0 //
)

// Enum value maps for UserCallbackAction.
var (
	UserCallbackAction_name = map[int32]string{
		0: "Dismiss",
	}
	UserCallbackAction_value = map[string]int32{
		"Dismiss": 0,
	}
)

func (x UserCallbackAction) Enum() *UserCallbackAction {
	p := new(UserCallbackAction)
	*p = x
	return p
}

func (x UserCallbackAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserCallbackAction) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[4].Descriptor()
}

func (UserCallbackAction) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[4]
}

func (x UserCallbackAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserCallbackAction.Descriptor instead.
func (UserCallbackAction) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{4}
}

type UserCallbackScene int32

const (
	UserCallbackScene_Insert UserCallbackScene = 0 //
)

// Enum value maps for UserCallbackScene.
var (
	UserCallbackScene_name = map[int32]string{
		0: "Insert",
	}
	UserCallbackScene_value = map[string]int32{
		"Insert": 0,
	}
)

func (x UserCallbackScene) Enum() *UserCallbackScene {
	p := new(UserCallbackScene)
	*p = x
	return p
}

func (x UserCallbackScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserCallbackScene) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[5].Descriptor()
}

func (UserCallbackScene) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[5]
}

func (x UserCallbackScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserCallbackScene.Descriptor instead.
func (UserCallbackScene) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{5}
}

// 地区类型
type Member_RegionType int32

const (
	Member_DEFAULT  Member_RegionType = 0 // 默认
	Member_MAINLAND Member_RegionType = 1 // 大陆地区
	Member_GAT      Member_RegionType = 2 //
)

// Enum value maps for Member_RegionType.
var (
	Member_RegionType_name = map[int32]string{
		0: "DEFAULT",
		1: "MAINLAND",
		2: "GAT",
	}
	Member_RegionType_value = map[string]int32{
		"DEFAULT":  0,
		"MAINLAND": 1,
		"GAT":      2,
	}
)

func (x Member_RegionType) Enum() *Member_RegionType {
	p := new(Member_RegionType)
	*p = x
	return p
}

func (x Member_RegionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Member_RegionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[6].Descriptor()
}

func (Member_RegionType) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[6]
}

func (x Member_RegionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Member_RegionType.Descriptor instead.
func (Member_RegionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{22, 0}
}

type Member_ShowStatus int32

const (
	Member_SHOWDEFAULT    Member_ShowStatus = 0 // 默认
	Member_ZOOMINMAINLAND Member_ShowStatus = 1 //
	Member_RAW            Member_ShowStatus = 2 //
)

// Enum value maps for Member_ShowStatus.
var (
	Member_ShowStatus_name = map[int32]string{
		0: "SHOWDEFAULT",
		1: "ZOOMINMAINLAND",
		2: "RAW",
	}
	Member_ShowStatus_value = map[string]int32{
		"SHOWDEFAULT":    0,
		"ZOOMINMAINLAND": 1,
		"RAW":            2,
	}
)

func (x Member_ShowStatus) Enum() *Member_ShowStatus {
	p := new(Member_ShowStatus)
	*p = x
	return p
}

func (x Member_ShowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Member_ShowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[7].Descriptor()
}

func (Member_ShowStatus) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[7]
}

func (x Member_ShowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Member_ShowStatus.Descriptor instead.
func (Member_ShowStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{22, 1}
}

// 地区类型
type MemberV2_RegionType int32

const (
	MemberV2_DEFAULT  MemberV2_RegionType = 0 // 默认
	MemberV2_MAINLAND MemberV2_RegionType = 1 // 大陆地区
	MemberV2_GAT      MemberV2_RegionType = 2 //
)

// Enum value maps for MemberV2_RegionType.
var (
	MemberV2_RegionType_name = map[int32]string{
		0: "DEFAULT",
		1: "MAINLAND",
		2: "GAT",
	}
	MemberV2_RegionType_value = map[string]int32{
		"DEFAULT":  0,
		"MAINLAND": 1,
		"GAT":      2,
	}
)

func (x MemberV2_RegionType) Enum() *MemberV2_RegionType {
	p := new(MemberV2_RegionType)
	*p = x
	return p
}

func (x MemberV2_RegionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberV2_RegionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[8].Descriptor()
}

func (MemberV2_RegionType) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[8]
}

func (x MemberV2_RegionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberV2_RegionType.Descriptor instead.
func (MemberV2_RegionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 0}
}

type MemberV2_ShowStatus int32

const (
	MemberV2_SHOWDEFAULT    MemberV2_ShowStatus = 0 //
	MemberV2_ZOOMINMAINLAND MemberV2_ShowStatus = 1 //
	MemberV2_RAW            MemberV2_ShowStatus = 2 //
)

// Enum value maps for MemberV2_ShowStatus.
var (
	MemberV2_ShowStatus_name = map[int32]string{
		0: "SHOWDEFAULT",
		1: "ZOOMINMAINLAND",
		2: "RAW",
	}
	MemberV2_ShowStatus_value = map[string]int32{
		"SHOWDEFAULT":    0,
		"ZOOMINMAINLAND": 1,
		"RAW":            2,
	}
)

func (x MemberV2_ShowStatus) Enum() *MemberV2_ShowStatus {
	p := new(MemberV2_ShowStatus)
	*p = x
	return p
}

func (x MemberV2_ShowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberV2_ShowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_main_community_reply_v1_reply_proto_enumTypes[9].Descriptor()
}

func (MemberV2_ShowStatus) Type() protoreflect.EnumType {
	return &file_bilibili_main_community_reply_v1_reply_proto_enumTypes[9]
}

func (x MemberV2_ShowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberV2_ShowStatus.Descriptor instead.
func (MemberV2_ShowStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 1}
}

// 活动
type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动id
	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// 活动状态
	// -1:待审 1:上线
	ActivityState int64 `protobuf:"varint,2,opt,name=activity_state,json=activityState,proto3" json:"activity_state,omitempty"`
	// 参与活动的输入框文案
	ActivityPlaceholder string `protobuf:"bytes,3,opt,name=activity_placeholder,json=activityPlaceholder,proto3" json:"activity_placeholder,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Activity) GetActivityState() int64 {
	if x != nil {
		return x.ActivityState
	}
	return 0
}

func (x *Activity) GetActivityPlaceholder() string {
	if x != nil {
		return x.ActivityPlaceholder
	}
	return ""
}

// 文章项目
type ArticleSearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// UP主昵称
	UpNickname string `protobuf:"bytes,2,opt,name=up_nickname,json=upNickname,proto3" json:"up_nickname,omitempty"`
	// 封面
	Covers []string `protobuf:"bytes,3,rep,name=covers,proto3" json:"covers,omitempty"`
}

func (x *ArticleSearchItem) Reset() {
	*x = ArticleSearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleSearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleSearchItem) ProtoMessage() {}

func (x *ArticleSearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleSearchItem.ProtoReflect.Descriptor instead.
func (*ArticleSearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleSearchItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleSearchItem) GetUpNickname() string {
	if x != nil {
		return x.UpNickname
	}
	return ""
}

func (x *ArticleSearchItem) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

// 评论at用户搜索组
type AtGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 组类型
	GroupType int32 `protobuf:"varint,1,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	// 组标题
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// 评论at用户搜索列表
	Items []*AtItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AtGroup) Reset() {
	*x = AtGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtGroup) ProtoMessage() {}

func (x *AtGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtGroup.ProtoReflect.Descriptor instead.
func (*AtGroup) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{2}
}

func (x *AtGroup) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *AtGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AtGroup) GetItems() []*AtItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 评论at用户搜索条目
type AtItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户头像url
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	// 用户是否关注
	Fans int32 `protobuf:"varint,4,opt,name=fans,proto3" json:"fans,omitempty"`
	// 用户认证类型
	OfficialVerifyType int32 `protobuf:"varint,5,opt,name=official_verify_type,json=officialVerifyType,proto3" json:"official_verify_type,omitempty"`
}

func (x *AtItem) Reset() {
	*x = AtItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtItem) ProtoMessage() {}

func (x *AtItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtItem.ProtoReflect.Descriptor instead.
func (*AtItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{3}
}

func (x *AtItem) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *AtItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AtItem) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *AtItem) GetFans() int32 {
	if x != nil {
		return x.Fans
	}
	return 0
}

func (x *AtItem) GetOfficialVerifyType() int32 {
	if x != nil {
		return x.OfficialVerifyType
	}
	return 0
}

// 评论at用户搜索-响应
type AtSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论at用户搜索组
	Groups []*AtGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *AtSearchReply) Reset() {
	*x = AtSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtSearchReply) ProtoMessage() {}

func (x *AtSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtSearchReply.ProtoReflect.Descriptor instead.
func (*AtSearchReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{4}
}

func (x *AtSearchReply) GetGroups() []*AtGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

// 评论at用户搜索-请求
type AtSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 关键字
	Keyword string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *AtSearchReq) Reset() {
	*x = AtSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtSearchReq) ProtoMessage() {}

func (x *AtSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtSearchReq.ProtoReflect.Descriptor instead.
func (*AtSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{5}
}

func (x *AtSearchReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *AtSearchReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 广告
type CM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告数据(需要解包)
	SourceContent *anypb.Any `protobuf:"bytes,1,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
}

func (x *CM) Reset() {
	*x = CM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CM) ProtoMessage() {}

func (x *CM) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CM.ProtoReflect.Descriptor instead.
func (*CM) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{6}
}

func (x *CM) GetSourceContent() *anypb.Any {
	if x != nil {
		return x.SourceContent
	}
	return nil
}

// 评论主体信息
type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论文本
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// 需要渲染的用户转义
	Menber map[string]*Member `protobuf:"bytes,2,rep,name=menber,proto3" json:"menber,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 需要渲染的表情转义
	Emote map[string]*Emote `protobuf:"bytes,3,rep,name=emote,proto3" json:"emote,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 需要高亮的话题转义
	Topic map[string]*Topic `protobuf:"bytes,4,rep,name=topic,proto3" json:"topic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 需要高亮的超链转义
	Url map[string]*Url `protobuf:"bytes,5,rep,name=url,proto3" json:"url,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 投票信息
	Vote *Vote `protobuf:"bytes,6,opt,name=vote,proto3" json:"vote,omitempty"`
	// at到的用户mid列表
	AtNameToMid map[string]int64 `protobuf:"bytes,7,rep,name=at_name_to_mid,json=atNameToMid,proto3" json:"at_name_to_mid,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 富文本
	RichText *RichText  `protobuf:"bytes,8,opt,name=rich_text,json=richText,proto3" json:"rich_text,omitempty"`
	Pictures []*Picture `protobuf:"bytes,9,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{7}
}

func (x *Content) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Content) GetMenber() map[string]*Member {
	if x != nil {
		return x.Menber
	}
	return nil
}

func (x *Content) GetEmote() map[string]*Emote {
	if x != nil {
		return x.Emote
	}
	return nil
}

func (x *Content) GetTopic() map[string]*Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *Content) GetUrl() map[string]*Url {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *Content) GetVote() *Vote {
	if x != nil {
		return x.Vote
	}
	return nil
}

func (x *Content) GetAtNameToMid() map[string]int64 {
	if x != nil {
		return x.AtNameToMid
	}
	return nil
}

func (x *Content) GetRichText() *RichText {
	if x != nil {
		return x.RichText
	}
	return nil
}

func (x *Content) GetPictures() []*Picture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type Picture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上传图片URL
	ImgSrc string `protobuf:"bytes,1,opt,name=img_src,json=imgSrc,proto3" json:"img_src,omitempty"`
	// 图片宽度
	ImgWidth float64 `protobuf:"fixed64,2,opt,name=img_width,json=imgWidth,proto3" json:"img_width,omitempty"`
	// 图片高度
	ImgHeight float64 `protobuf:"fixed64,3,opt,name=img_height,json=imgHeight,proto3" json:"img_height,omitempty"`
	// 图片大小，单位KB
	ImgSize float64 `protobuf:"fixed64,4,opt,name=img_size,json=imgSize,proto3" json:"img_size,omitempty"`
}

func (x *Picture) Reset() {
	*x = Picture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Picture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Picture) ProtoMessage() {}

func (x *Picture) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Picture.ProtoReflect.Descriptor instead.
func (*Picture) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{8}
}

func (x *Picture) GetImgSrc() string {
	if x != nil {
		return x.ImgSrc
	}
	return ""
}

func (x *Picture) GetImgWidth() float64 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *Picture) GetImgHeight() float64 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

func (x *Picture) GetImgSize() float64 {
	if x != nil {
		return x.ImgSize
	}
	return 0
}

// 页面游标回复
type CursorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 下页数据
	Next int64 `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	// 上页数据
	Prev int64 `protobuf:"varint,2,opt,name=prev,proto3" json:"prev,omitempty"`
	// 是否到顶
	IsBegin bool `protobuf:"varint,3,opt,name=isBegin,proto3" json:"isBegin,omitempty"`
	// 是否到底
	IsEnd bool `protobuf:"varint,4,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	// 排序方式
	// 2:时间 3:热度
	Mode Mode `protobuf:"varint,5,opt,name=mode,proto3,enum=bilibili.main.community.reply.v1.Mode" json:"mode,omitempty"`
	// 当前排序mode在切换按钮上的展示文案
	ModeText string `protobuf:"bytes,6,opt,name=mode_text,json=modeText,proto3" json:"mode_text,omitempty"`
}

func (x *CursorReply) Reset() {
	*x = CursorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorReply) ProtoMessage() {}

func (x *CursorReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorReply.ProtoReflect.Descriptor instead.
func (*CursorReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{9}
}

func (x *CursorReply) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *CursorReply) GetPrev() int64 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *CursorReply) GetIsBegin() bool {
	if x != nil {
		return x.IsBegin
	}
	return false
}

func (x *CursorReply) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *CursorReply) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_DEFAULT
}

func (x *CursorReply) GetModeText() string {
	if x != nil {
		return x.ModeText
	}
	return ""
}

// 页面游标请求
type CursorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 下页数据
	Next int64 `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	// 上页数据
	Prev int64 `protobuf:"varint,2,opt,name=prev,proto3" json:"prev,omitempty"`
	// 排序方式
	Mode Mode `protobuf:"varint,4,opt,name=mode,proto3,enum=bilibili.main.community.reply.v1.Mode" json:"mode,omitempty"`
}

func (x *CursorReq) Reset() {
	*x = CursorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorReq) ProtoMessage() {}

func (x *CursorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorReq.ProtoReflect.Descriptor instead.
func (*CursorReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{10}
}

func (x *CursorReq) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *CursorReq) GetPrev() int64 {
	if x != nil {
		return x.Prev
	}
	return 0
}

func (x *CursorReq) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_DEFAULT
}

// 二级评论明细-响应
type DetailListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 页面游标
	Cursor *CursorReply `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 评论区显示控制字段
	SubjectControl *SubjectControl `protobuf:"bytes,2,opt,name=subject_control,json=subjectControl,proto3" json:"subject_control,omitempty"`
	// 根评论信息(带二级评论)
	Root *ReplyInfo `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	// 评论区的活动
	Activity *Activity `protobuf:"bytes,4,opt,name=activity,proto3" json:"activity,omitempty"`
	Likes *LikeInfo `protobuf:"bytes,5,opt,name=likes,proto3" json:"likes,omitempty"`
}

func (x *DetailListReply) Reset() {
	*x = DetailListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailListReply) ProtoMessage() {}

func (x *DetailListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailListReply.ProtoReflect.Descriptor instead.
func (*DetailListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{11}
}

func (x *DetailListReply) GetCursor() *CursorReply {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *DetailListReply) GetSubjectControl() *SubjectControl {
	if x != nil {
		return x.SubjectControl
	}
	return nil
}

func (x *DetailListReply) GetRoot() *ReplyInfo {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *DetailListReply) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *DetailListReply) GetLikes() *LikeInfo {
	if x != nil {
		return x.Likes
	}
	return nil
}

// 二级评论明细-请求
type DetailListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 根评论rpid
	Root int64 `protobuf:"varint,3,opt,name=root,proto3" json:"root,omitempty"`
	// 目标评论rpid
	Rpid int64 `protobuf:"varint,4,opt,name=rpid,proto3" json:"rpid,omitempty"`
	// 页面游标
	Cursor *CursorReq `protobuf:"bytes,5,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 来源标识
	Scene DetailListScene `protobuf:"varint,6,opt,name=scene,proto3,enum=bilibili.main.community.reply.v1.DetailListScene" json:"scene,omitempty"`
}

func (x *DetailListReq) Reset() {
	*x = DetailListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailListReq) ProtoMessage() {}

func (x *DetailListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailListReq.ProtoReflect.Descriptor instead.
func (*DetailListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{12}
}

func (x *DetailListReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *DetailListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DetailListReq) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *DetailListReq) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *DetailListReq) GetCursor() *CursorReq {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *DetailListReq) GetScene() DetailListScene {
	if x != nil {
		return x.Scene
	}
	return DetailListScene_REPLY
}

// 对话评论树-响应
type DialogListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 页面游标
	Cursor *CursorReply `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 评论区显示控制字段
	SubjectControl *SubjectControl `protobuf:"bytes,2,opt,name=subject_control,json=subjectControl,proto3" json:"subject_control,omitempty"`
	// 子评论列表
	Replies []*ReplyInfo `protobuf:"bytes,3,rep,name=replies,proto3" json:"replies,omitempty"`
	// 评论区的活动
	Activity *Activity `protobuf:"bytes,4,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *DialogListReply) Reset() {
	*x = DialogListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogListReply) ProtoMessage() {}

func (x *DialogListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogListReply.ProtoReflect.Descriptor instead.
func (*DialogListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{13}
}

func (x *DialogListReply) GetCursor() *CursorReply {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *DialogListReply) GetSubjectControl() *SubjectControl {
	if x != nil {
		return x.SubjectControl
	}
	return nil
}

func (x *DialogListReply) GetReplies() []*ReplyInfo {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *DialogListReply) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

// 对话评论树-请求
type DialogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 根评论rpid
	Root int64 `protobuf:"varint,3,opt,name=root,proto3" json:"root,omitempty"`
	// 对话评论rpid
	Rpid int64 `protobuf:"varint,4,opt,name=rpid,proto3" json:"rpid,omitempty"`
	// 页面游标
	Cursor *CursorReq `protobuf:"bytes,5,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *DialogListReq) Reset() {
	*x = DialogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogListReq) ProtoMessage() {}

func (x *DialogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogListReq.ProtoReflect.Descriptor instead.
func (*DialogListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{14}
}

func (x *DialogListReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *DialogListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DialogListReq) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *DialogListReq) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *DialogListReq) GetCursor() *CursorReq {
	if x != nil {
		return x.Cursor
	}
	return nil
}

// 特效
type Effects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preloading string `protobuf:"bytes,1,opt,name=preloading,proto3" json:"preloading,omitempty"`
}

func (x *Effects) Reset() {
	*x = Effects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Effects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Effects) ProtoMessage() {}

func (x *Effects) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Effects.ProtoReflect.Descriptor instead.
func (*Effects) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{15}
}

func (x *Effects) GetPreloading() string {
	if x != nil {
		return x.Preloading
	}
	return ""
}

// 表情项
type Emote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 表情大小
	// 1:小 2:大
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// 表情url
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	JumpTitle string `protobuf:"bytes,4,opt,name=jump_title,json=jumpTitle,proto3" json:"jump_title,omitempty"`
	Id int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	PackageId int64 `protobuf:"varint,6,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	GifUrl string `protobuf:"bytes,7,opt,name=gif_url,json=gifUrl,proto3" json:"gif_url,omitempty"`
	Text string `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Emote) Reset() {
	*x = Emote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emote) ProtoMessage() {}

func (x *Emote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emote.ProtoReflect.Descriptor instead.
func (*Emote) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{16}
}

func (x *Emote) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Emote) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Emote) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Emote) GetJumpTitle() string {
	if x != nil {
		return x.JumpTitle
	}
	return ""
}

func (x *Emote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Emote) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *Emote) GetGifUrl() string {
	if x != nil {
		return x.GifUrl
	}
	return ""
}

func (x *Emote) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 商品项目
type GoodsSearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 商品名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 价钱
	Price string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	// 收入
	Income string `protobuf:"bytes,4,opt,name=income,proto3" json:"income,omitempty"`
	// 图片
	Img string `protobuf:"bytes,5,opt,name=img,proto3" json:"img,omitempty"`
	// 标签
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *GoodsSearchItem) Reset() {
	*x = GoodsSearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSearchItem) ProtoMessage() {}

func (x *GoodsSearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSearchItem.ProtoReflect.Descriptor instead.
func (*GoodsSearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{17}
}

func (x *GoodsSearchItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsSearchItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsSearchItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *GoodsSearchItem) GetIncome() string {
	if x != nil {
		return x.Income
	}
	return ""
}

func (x *GoodsSearchItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *GoodsSearchItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type LikeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LikeInfo_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *LikeInfo) Reset() {
	*x = LikeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeInfo) ProtoMessage() {}

func (x *LikeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeInfo.ProtoReflect.Descriptor instead.
func (*LikeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{18}
}

func (x *LikeInfo) GetItems() []*LikeInfo_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LikeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 抽奖
type Lottery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 抽奖id
	LotteryId int64 `protobuf:"varint,1,opt,name=lottery_id,json=lotteryId,proto3" json:"lottery_id,omitempty"`
	// 抽奖状态
	// 0:未开奖 1:开奖中 2:已开奖
	LotteryStatus int64 `protobuf:"varint,2,opt,name=lottery_status,json=lotteryStatus,proto3" json:"lottery_status,omitempty"`
	// 抽奖人mid
	LotteryMid int64 `protobuf:"varint,3,opt,name=lottery_mid,json=lotteryMid,proto3" json:"lottery_mid,omitempty"`
	// 开奖时间
	LotteryTime int64 `protobuf:"varint,4,opt,name=lottery_time,json=lotteryTime,proto3" json:"lottery_time,omitempty"`
	Oid int64 `protobuf:"varint,5,opt,name=oid,proto3" json:"oid,omitempty"`
	Type int64 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	// 发送时间
	Ctime int64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 抽奖评论正文
	Content *Content `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	// 用户信息
	Member *Member `protobuf:"bytes,9,opt,name=member,proto3" json:"member,omitempty"`
	// 评论条目控制字段
	ReplyControl *ReplyControl `protobuf:"bytes,10,opt,name=reply_control,json=replyControl,proto3" json:"reply_control,omitempty"`
}

func (x *Lottery) Reset() {
	*x = Lottery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lottery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lottery) ProtoMessage() {}

func (x *Lottery) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lottery.ProtoReflect.Descriptor instead.
func (*Lottery) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{19}
}

func (x *Lottery) GetLotteryId() int64 {
	if x != nil {
		return x.LotteryId
	}
	return 0
}

func (x *Lottery) GetLotteryStatus() int64 {
	if x != nil {
		return x.LotteryStatus
	}
	return 0
}

func (x *Lottery) GetLotteryMid() int64 {
	if x != nil {
		return x.LotteryMid
	}
	return 0
}

func (x *Lottery) GetLotteryTime() int64 {
	if x != nil {
		return x.LotteryTime
	}
	return 0
}

func (x *Lottery) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *Lottery) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Lottery) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Lottery) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Lottery) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Lottery) GetReplyControl() *ReplyControl {
	if x != nil {
		return x.ReplyControl
	}
	return nil
}

// 主评论列表-响应
type MainListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 页面游标
	Cursor *CursorReply `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 评论列表
	Replies []*ReplyInfo `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"`
	// 评论区显示控制字段
	SubjectControl *SubjectControl `protobuf:"bytes,3,opt,name=subject_control,json=subjectControl,proto3" json:"subject_control,omitempty"`
	// UP置顶评论
	UpTop *ReplyInfo `protobuf:"bytes,4,opt,name=up_top,json=upTop,proto3" json:"up_top,omitempty"`
	// 管理员置顶评论
	AdminTop *ReplyInfo `protobuf:"bytes,5,opt,name=admin_top,json=adminTop,proto3" json:"admin_top,omitempty"`
	// 投票置顶评论
	VoteTop *ReplyInfo `protobuf:"bytes,6,opt,name=vote_top,json=voteTop,proto3" json:"vote_top,omitempty"`
	// 评论区提示
	Notice *Notice `protobuf:"bytes,7,opt,name=notice,proto3" json:"notice,omitempty"`
	// 抽奖评论
	Lottery *Lottery `protobuf:"bytes,8,opt,name=lottery,proto3" json:"lottery,omitempty"`
	// 活动
	Activity *Activity `protobuf:"bytes,9,opt,name=activity,proto3" json:"activity,omitempty"`
	// 精选评论区筛选后台信息
	UpSelection *UpSelection `protobuf:"bytes,10,opt,name=up_selection,json=upSelection,proto3" json:"up_selection,omitempty"`
	// 广告
	Cm *CM `protobuf:"bytes,11,opt,name=cm,proto3" json:"cm,omitempty"`
	// 特效
	Effects *Effects `protobuf:"bytes,12,opt,name=effects,proto3" json:"effects,omitempty"`
	Operation *Operation `protobuf:"bytes,13,opt,name=operation,proto3" json:"operation,omitempty"`
	TopReplies []*ReplyInfo `protobuf:"bytes,14,rep,name=top_replies,json=topReplies,proto3" json:"top_replies,omitempty"`
	Qoe *QoeInfo `protobuf:"bytes,15,opt,name=qoe,proto3" json:"qoe,omitempty"`
	Callbacks map[string]int32 `protobuf:"bytes,16,rep,name=callbacks,proto3" json:"callbacks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MainListReply) Reset() {
	*x = MainListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainListReply) ProtoMessage() {}

func (x *MainListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainListReply.ProtoReflect.Descriptor instead.
func (*MainListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{20}
}

func (x *MainListReply) GetCursor() *CursorReply {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *MainListReply) GetReplies() []*ReplyInfo {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *MainListReply) GetSubjectControl() *SubjectControl {
	if x != nil {
		return x.SubjectControl
	}
	return nil
}

func (x *MainListReply) GetUpTop() *ReplyInfo {
	if x != nil {
		return x.UpTop
	}
	return nil
}

func (x *MainListReply) GetAdminTop() *ReplyInfo {
	if x != nil {
		return x.AdminTop
	}
	return nil
}

func (x *MainListReply) GetVoteTop() *ReplyInfo {
	if x != nil {
		return x.VoteTop
	}
	return nil
}

func (x *MainListReply) GetNotice() *Notice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *MainListReply) GetLottery() *Lottery {
	if x != nil {
		return x.Lottery
	}
	return nil
}

func (x *MainListReply) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *MainListReply) GetUpSelection() *UpSelection {
	if x != nil {
		return x.UpSelection
	}
	return nil
}

func (x *MainListReply) GetCm() *CM {
	if x != nil {
		return x.Cm
	}
	return nil
}

func (x *MainListReply) GetEffects() *Effects {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *MainListReply) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *MainListReply) GetTopReplies() []*ReplyInfo {
	if x != nil {
		return x.TopReplies
	}
	return nil
}

func (x *MainListReply) GetQoe() *QoeInfo {
	if x != nil {
		return x.Qoe
	}
	return nil
}

func (x *MainListReply) GetCallbacks() map[string]int32 {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

// 主评论列表-请求
type MainListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 页面游标
	Cursor *CursorReq `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 扩展数据json
	Extra string `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	// 广告扩展
	AdExtra string `protobuf:"bytes,5,opt,name=ad_extra,json=adExtra,proto3" json:"ad_extra,omitempty"`
	// 目标评论rpid
	Rpid int64 `protobuf:"varint,6,opt,name=rpid,proto3" json:"rpid,omitempty"`
	SeekRpid int64 `protobuf:"varint,7,opt,name=seek_rpid,json=seekRpid,proto3" json:"seek_rpid,omitempty"`
	// 评论区筛选类型 取值可为: ["全部" "粉丝评论" "笔记长评"]
	FilterTagName string `protobuf:"bytes,8,opt,name=filter_tag_name,json=filterTagName,proto3" json:"filter_tag_name,omitempty"`
}

func (x *MainListReq) Reset() {
	*x = MainListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainListReq) ProtoMessage() {}

func (x *MainListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainListReq.ProtoReflect.Descriptor instead.
func (*MainListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{21}
}

func (x *MainListReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *MainListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MainListReq) GetCursor() *CursorReq {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *MainListReq) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *MainListReq) GetAdExtra() string {
	if x != nil {
		return x.AdExtra
	}
	return ""
}

func (x *MainListReq) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *MainListReq) GetSeekRpid() int64 {
	if x != nil {
		return x.SeekRpid
	}
	return 0
}

func (x *MainListReq) GetFilterTagName() string {
	if x != nil {
		return x.FilterTagName
	}
	return ""
}

// 用户信息
type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 性别
	Sex string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// 头像url
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	// 等级
	Level int64 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	// 认证类型
	OfficialVerifyType int64 `protobuf:"varint,6,opt,name=official_verify_type,json=officialVerifyType,proto3" json:"official_verify_type,omitempty"` //*********VIP相关*********
	// 会员类型
	// 0:不是大会员 1:月度会员 2:年度大会员
	VipType int64 `protobuf:"varint,7,opt,name=vip_type,json=vipType,proto3" json:"vip_type,omitempty"`
	// 会员状态
	VipStatus int64 `protobuf:"varint,8,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	// 会员样式
	VipThemeType int64 `protobuf:"varint,9,opt,name=vip_theme_type,json=vipThemeType,proto3" json:"vip_theme_type,omitempty"`
	// 会员铭牌样式url
	VipLabelPath string `protobuf:"bytes,10,opt,name=vip_label_path,json=vipLabelPath,proto3" json:"vip_label_path,omitempty"` //*********装扮相关*********
	// 头像框url
	GarbPendantImage string `protobuf:"bytes,11,opt,name=garb_pendant_image,json=garbPendantImage,proto3" json:"garb_pendant_image,omitempty"`
	// 装扮卡url
	GarbCardImage string `protobuf:"bytes,12,opt,name=garb_card_image,json=garbCardImage,proto3" json:"garb_card_image,omitempty"`
	// 有关注按钮时的装扮卡url
	GarbCardImageWithFocus string `protobuf:"bytes,13,opt,name=garb_card_image_with_focus,json=garbCardImageWithFocus,proto3" json:"garb_card_image_with_focus,omitempty"`
	// 专属装扮页面url
	GarbCardJumpUrl string `protobuf:"bytes,14,opt,name=garb_card_jump_url,json=garbCardJumpUrl,proto3" json:"garb_card_jump_url,omitempty"`
	// 专属装扮id
	GarbCardNumber string `protobuf:"bytes,15,opt,name=garb_card_number,json=garbCardNumber,proto3" json:"garb_card_number,omitempty"`
	// 专属装扮id显示颜色
	GarbCardFanColor string `protobuf:"bytes,16,opt,name=garb_card_fan_color,json=garbCardFanColor,proto3" json:"garb_card_fan_color,omitempty"`
	// 是否为专属装扮卡
	GarbCardIsFan bool `protobuf:"varint,17,opt,name=garb_card_is_fan,json=garbCardIsFan,proto3" json:"garb_card_is_fan,omitempty"` //*********粉丝勋章相关*********
	// 粉丝勋章名
	FansMedalName string `protobuf:"bytes,18,opt,name=fans_medal_name,json=fansMedalName,proto3" json:"fans_medal_name,omitempty"`
	// 粉丝勋章等级
	FansMedalLevel int64 `protobuf:"varint,19,opt,name=fans_medal_level,json=fansMedalLevel,proto3" json:"fans_medal_level,omitempty"`
	// 粉丝勋章显示颜色
	FansMedalColor int64 `protobuf:"varint,20,opt,name=fans_medal_color,json=fansMedalColor,proto3" json:"fans_medal_color,omitempty"`
	// 会员昵称颜色
	VipNicknameColor string `protobuf:"bytes,21,opt,name=vip_nickname_color,json=vipNicknameColor,proto3" json:"vip_nickname_color,omitempty"`
	// 会员角标
	// 0:无角标 1:粉色大会员角标 2:绿色小会员角标
	VipAvatarSubscript int32 `protobuf:"varint,22,opt,name=vip_avatar_subscript,json=vipAvatarSubscript,proto3" json:"vip_avatar_subscript,omitempty"`
	// 会员标签文
	VipLabelText string `protobuf:"bytes,23,opt,name=vip_label_text,json=vipLabelText,proto3" json:"vip_label_text,omitempty"`
	// 会员标颜色
	VipLabelTheme string `protobuf:"bytes,24,opt,name=vip_label_theme,json=vipLabelTheme,proto3" json:"vip_label_theme,omitempty"`
	// 粉丝勋章底色
	FansMedalColorEnd int64 `protobuf:"varint,25,opt,name=fans_medal_color_end,json=fansMedalColorEnd,proto3" json:"fans_medal_color_end,omitempty"`
	// 粉丝勋章边框颜色
	FansMedalColorBorder int64 `protobuf:"varint,26,opt,name=fans_medal_color_border,json=fansMedalColorBorder,proto3" json:"fans_medal_color_border,omitempty"`
	// 粉丝勋章名颜色
	FansMedalColorName int64 `protobuf:"varint,27,opt,name=fans_medal_color_name,json=fansMedalColorName,proto3" json:"fans_medal_color_name,omitempty"`
	// 粉丝勋章等级颜色
	FansMedalColorLevel int64 `protobuf:"varint,28,opt,name=fans_medal_color_level,json=fansMedalColorLevel,proto3" json:"fans_medal_color_level,omitempty"`
	FansGuardLevel int64 `protobuf:"varint,29,opt,name=fans_guard_level,json=fansGuardLevel,proto3" json:"fans_guard_level,omitempty"`
	FaceNft int32 `protobuf:"varint,30,opt,name=face_nft,json=faceNft,proto3" json:"face_nft,omitempty"`
	// 是否NFT头像
	FaceNftNew int32 `protobuf:"varint,31,opt,name=face_nft_new,json=faceNftNew,proto3" json:"face_nft_new,omitempty"`
	// 是否为硬核会员
	IsSeniorMember int32 `protobuf:"varint,32,opt,name=is_senior_member,json=isSeniorMember,proto3" json:"is_senior_member,omitempty"`
	// NFT信息
	NftInteraction *Member_NftInteraction `protobuf:"bytes,33,opt,name=nft_interaction,json=nftInteraction,proto3" json:"nft_interaction,omitempty"`
	FansGuardIcon string `protobuf:"bytes,34,opt,name=fans_guard_icon,json=fansGuardIcon,proto3" json:"fans_guard_icon,omitempty"`
	FansHonorIcon string `protobuf:"bytes,35,opt,name=fans_honor_icon,json=fansHonorIcon,proto3" json:"fans_honor_icon,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{22}
}

func (x *Member) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Member) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Member) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *Member) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Member) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Member) GetOfficialVerifyType() int64 {
	if x != nil {
		return x.OfficialVerifyType
	}
	return 0
}

func (x *Member) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *Member) GetVipStatus() int64 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *Member) GetVipThemeType() int64 {
	if x != nil {
		return x.VipThemeType
	}
	return 0
}

func (x *Member) GetVipLabelPath() string {
	if x != nil {
		return x.VipLabelPath
	}
	return ""
}

func (x *Member) GetGarbPendantImage() string {
	if x != nil {
		return x.GarbPendantImage
	}
	return ""
}

func (x *Member) GetGarbCardImage() string {
	if x != nil {
		return x.GarbCardImage
	}
	return ""
}

func (x *Member) GetGarbCardImageWithFocus() string {
	if x != nil {
		return x.GarbCardImageWithFocus
	}
	return ""
}

func (x *Member) GetGarbCardJumpUrl() string {
	if x != nil {
		return x.GarbCardJumpUrl
	}
	return ""
}

func (x *Member) GetGarbCardNumber() string {
	if x != nil {
		return x.GarbCardNumber
	}
	return ""
}

func (x *Member) GetGarbCardFanColor() string {
	if x != nil {
		return x.GarbCardFanColor
	}
	return ""
}

func (x *Member) GetGarbCardIsFan() bool {
	if x != nil {
		return x.GarbCardIsFan
	}
	return false
}

func (x *Member) GetFansMedalName() string {
	if x != nil {
		return x.FansMedalName
	}
	return ""
}

func (x *Member) GetFansMedalLevel() int64 {
	if x != nil {
		return x.FansMedalLevel
	}
	return 0
}

func (x *Member) GetFansMedalColor() int64 {
	if x != nil {
		return x.FansMedalColor
	}
	return 0
}

func (x *Member) GetVipNicknameColor() string {
	if x != nil {
		return x.VipNicknameColor
	}
	return ""
}

func (x *Member) GetVipAvatarSubscript() int32 {
	if x != nil {
		return x.VipAvatarSubscript
	}
	return 0
}

func (x *Member) GetVipLabelText() string {
	if x != nil {
		return x.VipLabelText
	}
	return ""
}

func (x *Member) GetVipLabelTheme() string {
	if x != nil {
		return x.VipLabelTheme
	}
	return ""
}

func (x *Member) GetFansMedalColorEnd() int64 {
	if x != nil {
		return x.FansMedalColorEnd
	}
	return 0
}

func (x *Member) GetFansMedalColorBorder() int64 {
	if x != nil {
		return x.FansMedalColorBorder
	}
	return 0
}

func (x *Member) GetFansMedalColorName() int64 {
	if x != nil {
		return x.FansMedalColorName
	}
	return 0
}

func (x *Member) GetFansMedalColorLevel() int64 {
	if x != nil {
		return x.FansMedalColorLevel
	}
	return 0
}

func (x *Member) GetFansGuardLevel() int64 {
	if x != nil {
		return x.FansGuardLevel
	}
	return 0
}

func (x *Member) GetFaceNft() int32 {
	if x != nil {
		return x.FaceNft
	}
	return 0
}

func (x *Member) GetFaceNftNew() int32 {
	if x != nil {
		return x.FaceNftNew
	}
	return 0
}

func (x *Member) GetIsSeniorMember() int32 {
	if x != nil {
		return x.IsSeniorMember
	}
	return 0
}

func (x *Member) GetNftInteraction() *Member_NftInteraction {
	if x != nil {
		return x.NftInteraction
	}
	return nil
}

func (x *Member) GetFansGuardIcon() string {
	if x != nil {
		return x.FansGuardIcon
	}
	return ""
}

func (x *Member) GetFansHonorIcon() string {
	if x != nil {
		return x.FansHonorIcon
	}
	return ""
}

// 用户信息V2
type MemberV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本信息
	Basic *MemberV2_Basic `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	// 认证信息
	Official *MemberV2_Official `protobuf:"bytes,2,opt,name=official,proto3" json:"official,omitempty"`
	// 大会员信息
	Vip *MemberV2_Vip `protobuf:"bytes,3,opt,name=vip,proto3" json:"vip,omitempty"`
	// 装扮信息
	Garb *MemberV2_Garb `protobuf:"bytes,4,opt,name=garb,proto3" json:"garb,omitempty"`
	// 粉丝勋章信息
	Medal *MemberV2_Medal `protobuf:"bytes,5,opt,name=medal,proto3" json:"medal,omitempty"`
	// NFT信息
	Nft *MemberV2_Nft `protobuf:"bytes,6,opt,name=nft,proto3" json:"nft,omitempty"`
	// 硬核会员信息
	Senior *MemberV2_Senior `protobuf:"bytes,7,opt,name=senior,proto3" json:"senior,omitempty"`
	// 契约信息
	Contractor *MemberV2_Contractor `protobuf:"bytes,8,opt,name=contractor,proto3" json:"contractor,omitempty"`
}

func (x *MemberV2) Reset() {
	*x = MemberV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2) ProtoMessage() {}

func (x *MemberV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2.ProtoReflect.Descriptor instead.
func (*MemberV2) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23}
}

func (x *MemberV2) GetBasic() *MemberV2_Basic {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *MemberV2) GetOfficial() *MemberV2_Official {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *MemberV2) GetVip() *MemberV2_Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *MemberV2) GetGarb() *MemberV2_Garb {
	if x != nil {
		return x.Garb
	}
	return nil
}

func (x *MemberV2) GetMedal() *MemberV2_Medal {
	if x != nil {
		return x.Medal
	}
	return nil
}

func (x *MemberV2) GetNft() *MemberV2_Nft {
	if x != nil {
		return x.Nft
	}
	return nil
}

func (x *MemberV2) GetSenior() *MemberV2_Senior {
	if x != nil {
		return x.Senior
	}
	return nil
}

func (x *MemberV2) GetContractor() *MemberV2_Contractor {
	if x != nil {
		return x.Contractor
	}
	return nil
}

type Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Notice) Reset() {
	*x = Notice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{24}
}

func (x *Notice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notice) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title *OperationTitle `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle *OperationTitle `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Link string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	ReportExtra string `protobuf:"bytes,6,opt,name=report_extra,json=reportExtra,proto3" json:"report_extra,omitempty"`
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{25}
}

func (x *Operation) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Operation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Operation) GetTitle() *OperationTitle {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Operation) GetSubtitle() *OperationTitle {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *Operation) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Operation) GetReportExtra() string {
	if x != nil {
		return x.ReportExtra
	}
	return ""
}

func (x *Operation) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type OperationTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsHighlight bool `protobuf:"varint,2,opt,name=is_highlight,json=isHighlight,proto3" json:"is_highlight,omitempty"`
}

func (x *OperationTitle) Reset() {
	*x = OperationTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationTitle) ProtoMessage() {}

func (x *OperationTitle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationTitle.ProtoReflect.Descriptor instead.
func (*OperationTitle) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{26}
}

func (x *OperationTitle) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OperationTitle) GetIsHighlight() bool {
	if x != nil {
		return x.IsHighlight
	}
	return false
}

// PGC视频项目
type PGCVideoSearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 类别
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *PGCVideoSearchItem) Reset() {
	*x = PGCVideoSearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGCVideoSearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGCVideoSearchItem) ProtoMessage() {}

func (x *PGCVideoSearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGCVideoSearchItem.ProtoReflect.Descriptor instead.
func (*PGCVideoSearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{27}
}

func (x *PGCVideoSearchItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PGCVideoSearchItem) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *PGCVideoSearchItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 评论区预览-回复
type PreviewListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 页面游标
	Cursor *CursorReply `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 评论列表
	Replies []*ReplyInfo `protobuf:"bytes,2,rep,name=replies,proto3" json:"replies,omitempty"`
	// 评论区显示控制字段
	SubjectControl *SubjectControl `protobuf:"bytes,3,opt,name=subject_control,json=subjectControl,proto3" json:"subject_control,omitempty"`
	// UP置顶评论
	UpTop *ReplyInfo `protobuf:"bytes,4,opt,name=upTop,proto3" json:"upTop,omitempty"`
	// 管理员置顶评论
	AdminTop *ReplyInfo `protobuf:"bytes,5,opt,name=admin_top,json=adminTop,proto3" json:"admin_top,omitempty"`
	// 投票置顶评论
	VoteTop *ReplyInfo `protobuf:"bytes,6,opt,name=vote_top,json=voteTop,proto3" json:"vote_top,omitempty"`
}

func (x *PreviewListReply) Reset() {
	*x = PreviewListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewListReply) ProtoMessage() {}

func (x *PreviewListReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewListReply.ProtoReflect.Descriptor instead.
func (*PreviewListReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{28}
}

func (x *PreviewListReply) GetCursor() *CursorReply {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *PreviewListReply) GetReplies() []*ReplyInfo {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PreviewListReply) GetSubjectControl() *SubjectControl {
	if x != nil {
		return x.SubjectControl
	}
	return nil
}

func (x *PreviewListReply) GetUpTop() *ReplyInfo {
	if x != nil {
		return x.UpTop
	}
	return nil
}

func (x *PreviewListReply) GetAdminTop() *ReplyInfo {
	if x != nil {
		return x.AdminTop
	}
	return nil
}

func (x *PreviewListReply) GetVoteTop() *ReplyInfo {
	if x != nil {
		return x.VoteTop
	}
	return nil
}

// 评论区预览-请求
type PreviewListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 页面游标
	Cursor *CursorReq `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *PreviewListReq) Reset() {
	*x = PreviewListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewListReq) ProtoMessage() {}

func (x *PreviewListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewListReq.ProtoReflect.Descriptor instead.
func (*PreviewListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{29}
}

func (x *PreviewListReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PreviewListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PreviewListReq) GetCursor() *CursorReq {
	if x != nil {
		return x.Cursor
	}
	return nil
}

type QoeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Style int32 `protobuf:"varint,3,opt,name=style,proto3" json:"style,omitempty"`
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	FeedbackTitle string `protobuf:"bytes,5,opt,name=feedback_title,json=feedbackTitle,proto3" json:"feedback_title,omitempty"`
	ScoreItems []*QoeScoreItem `protobuf:"bytes,6,rep,name=score_items,json=scoreItems,proto3" json:"score_items,omitempty"`
	DisplayRank int64 `protobuf:"varint,7,opt,name=display_rank,json=displayRank,proto3" json:"display_rank,omitempty"`
}

func (x *QoeInfo) Reset() {
	*x = QoeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoeInfo) ProtoMessage() {}

func (x *QoeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoeInfo.ProtoReflect.Descriptor instead.
func (*QoeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{30}
}

func (x *QoeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QoeInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QoeInfo) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *QoeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QoeInfo) GetFeedbackTitle() string {
	if x != nil {
		return x.FeedbackTitle
	}
	return ""
}

func (x *QoeInfo) GetScoreItems() []*QoeScoreItem {
	if x != nil {
		return x.ScoreItems
	}
	return nil
}

func (x *QoeInfo) GetDisplayRank() int64 {
	if x != nil {
		return x.DisplayRank
	}
	return 0
}

type QoeScoreItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Score float32 `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *QoeScoreItem) Reset() {
	*x = QoeScoreItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QoeScoreItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QoeScoreItem) ProtoMessage() {}

func (x *QoeScoreItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QoeScoreItem.ProtoReflect.Descriptor instead.
func (*QoeScoreItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{31}
}

func (x *QoeScoreItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QoeScoreItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *QoeScoreItem) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 评论条目标签信息
type ReplyCardLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标签文本
	TextContent string `protobuf:"bytes,1,opt,name=text_content,json=textContent,proto3" json:"text_content,omitempty"`
	// 文本颜色
	TextColorDay string `protobuf:"bytes,2,opt,name=text_color_day,json=textColorDay,proto3" json:"text_color_day,omitempty"`
	// 文本颜色夜间
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 标签颜色
	LabelColorDay string `protobuf:"bytes,4,opt,name=label_color_day,json=labelColorDay,proto3" json:"label_color_day,omitempty"`
	// 标签颜色夜间
	LabelColorNight string `protobuf:"bytes,5,opt,name=label_color_night,json=labelColorNight,proto3" json:"label_color_night,omitempty"`
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	// 标签类型 0:UP主觉得很赞 1:妙评
	Type int32 `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	// 背景url
	Background string `protobuf:"bytes,8,opt,name=background,proto3" json:"background,omitempty"`
	// 背景宽
	BackgroundWidth float64 `protobuf:"fixed64,9,opt,name=background_width,json=backgroundWidth,proto3" json:"background_width,omitempty"`
	// 背景高
	BackgroundHeight float64 `protobuf:"fixed64,10,opt,name=background_height,json=backgroundHeight,proto3" json:"background_height,omitempty"`
	// 点击跳转url
	JumpUrl string `protobuf:"bytes,11,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Effect int64 `protobuf:"varint,12,opt,name=effect,proto3" json:"effect,omitempty"`
	EffectStartTime int64 `protobuf:"varint,13,opt,name=effect_start_time,json=effectStartTime,proto3" json:"effect_start_time,omitempty"`
}

func (x *ReplyCardLabel) Reset() {
	*x = ReplyCardLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyCardLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCardLabel) ProtoMessage() {}

func (x *ReplyCardLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCardLabel.ProtoReflect.Descriptor instead.
func (*ReplyCardLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{32}
}

func (x *ReplyCardLabel) GetTextContent() string {
	if x != nil {
		return x.TextContent
	}
	return ""
}

func (x *ReplyCardLabel) GetTextColorDay() string {
	if x != nil {
		return x.TextColorDay
	}
	return ""
}

func (x *ReplyCardLabel) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *ReplyCardLabel) GetLabelColorDay() string {
	if x != nil {
		return x.LabelColorDay
	}
	return ""
}

func (x *ReplyCardLabel) GetLabelColorNight() string {
	if x != nil {
		return x.LabelColorNight
	}
	return ""
}

func (x *ReplyCardLabel) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ReplyCardLabel) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReplyCardLabel) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *ReplyCardLabel) GetBackgroundWidth() float64 {
	if x != nil {
		return x.BackgroundWidth
	}
	return 0
}

func (x *ReplyCardLabel) GetBackgroundHeight() float64 {
	if x != nil {
		return x.BackgroundHeight
	}
	return 0
}

func (x *ReplyCardLabel) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ReplyCardLabel) GetEffect() int64 {
	if x != nil {
		return x.Effect
	}
	return 0
}

func (x *ReplyCardLabel) GetEffectStartTime() int64 {
	if x != nil {
		return x.EffectStartTime
	}
	return 0
}

// 评论条目控制字段
type ReplyControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作行为标志
	// 0:无 1:已点赞 2:已点踩
	Action int64 `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	// 是否UP觉得很赞
	UpLike bool `protobuf:"varint,2,opt,name=up_like,json=upLike,proto3" json:"up_like,omitempty"`
	// 是否存在UP回复
	UpReply bool `protobuf:"varint,3,opt,name=up_reply,json=upReply,proto3" json:"up_reply,omitempty"`
	// 是否显示关注按钮
	ShowFollowBtn bool `protobuf:"varint,4,opt,name=show_follow_btn,json=showFollowBtn,proto3" json:"show_follow_btn,omitempty"`
	// 是否协管
	IsAssist bool `protobuf:"varint,5,opt,name=is_assist,json=isAssist,proto3" json:"is_assist,omitempty"`
	// 是否展示标签
	LabelText string `protobuf:"bytes,6,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	// 是否关注
	Following bool `protobuf:"varint,7,opt,name=following,proto3" json:"following,omitempty"`
	// 是否粉丝
	Followed bool `protobuf:"varint,8,opt,name=followed,proto3" json:"followed,omitempty"`
	// 是否被自己拉黑
	Blocked bool `protobuf:"varint,9,opt,name=blocked,proto3" json:"blocked,omitempty"`
	// 是否存在折叠的二级评论
	HasFoldedReply bool `protobuf:"varint,10,opt,name=has_folded_reply,json=hasFoldedReply,proto3" json:"has_folded_reply,omitempty"`
	// 是否折叠
	IsFoldedReply bool `protobuf:"varint,11,opt,name=is_folded_reply,json=isFoldedReply,proto3" json:"is_folded_reply,omitempty"`
	// 是否UP置顶
	IsUpTop bool `protobuf:"varint,12,opt,name=is_up_top,json=isUpTop,proto3" json:"is_up_top,omitempty"`
	// 是否管理置顶
	IsAdminTop bool `protobuf:"varint,13,opt,name=is_admin_top,json=isAdminTop,proto3" json:"is_admin_top,omitempty"`
	// 是否置顶投票评论
	IsVoteTop bool `protobuf:"varint,14,opt,name=is_vote_top,json=isVoteTop,proto3" json:"is_vote_top,omitempty"`
	// 最大收起显示行数
	MaxLine int64 `protobuf:"varint,15,opt,name=max_line,json=maxLine,proto3" json:"max_line,omitempty"`
	// 该条评论可不可见
	Invisible bool `protobuf:"varint,16,opt,name=invisible,proto3" json:"invisible,omitempty"`
	// 是否和up签订契约
	IsContractor bool `protobuf:"varint,17,opt,name=is_contractor,json=isContractor,proto3" json:"is_contractor,omitempty"`
	// 是否是笔记评论
	IsNote bool `protobuf:"varint,18,opt,name=is_note,json=isNote,proto3" json:"is_note,omitempty"`
	// 评论条目标签列表
	CardLabels []*ReplyCardLabel `protobuf:"bytes,19,rep,name=card_labels,json=cardLabels,proto3" json:"card_labels,omitempty"`
	// 子评论数文案 "共x条回复"
	SubReplyEntryText string `protobuf:"bytes,20,opt,name=sub_reply_entry_text,json=subReplyEntryText,proto3" json:"sub_reply_entry_text,omitempty"`
	// 子评论数文案 "相关回复共x条"
	SubReplyTitleText string `protobuf:"bytes,21,opt,name=sub_reply_title_text,json=subReplyTitleText,proto3" json:"sub_reply_title_text,omitempty"`
	// 契约显示文案
	ContractDesc string `protobuf:"bytes,22,opt,name=contract_desc,json=contractDesc,proto3" json:"contract_desc,omitempty"`
	// 发布时间文案 "x天前发布"
	TimeDesc string `protobuf:"bytes,23,opt,name=time_desc,json=timeDesc,proto3" json:"time_desc,omitempty"`
	BizScene string `protobuf:"bytes,24,opt,name=biz_scene,json=bizScene,proto3" json:"biz_scene,omitempty"`
	// IP属地信息 "IP属地：xxx"
	Location string `protobuf:"bytes,25,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *ReplyControl) Reset() {
	*x = ReplyControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyControl) ProtoMessage() {}

func (x *ReplyControl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyControl.ProtoReflect.Descriptor instead.
func (*ReplyControl) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{33}
}

func (x *ReplyControl) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *ReplyControl) GetUpLike() bool {
	if x != nil {
		return x.UpLike
	}
	return false
}

func (x *ReplyControl) GetUpReply() bool {
	if x != nil {
		return x.UpReply
	}
	return false
}

func (x *ReplyControl) GetShowFollowBtn() bool {
	if x != nil {
		return x.ShowFollowBtn
	}
	return false
}

func (x *ReplyControl) GetIsAssist() bool {
	if x != nil {
		return x.IsAssist
	}
	return false
}

func (x *ReplyControl) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *ReplyControl) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *ReplyControl) GetFollowed() bool {
	if x != nil {
		return x.Followed
	}
	return false
}

func (x *ReplyControl) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *ReplyControl) GetHasFoldedReply() bool {
	if x != nil {
		return x.HasFoldedReply
	}
	return false
}

func (x *ReplyControl) GetIsFoldedReply() bool {
	if x != nil {
		return x.IsFoldedReply
	}
	return false
}

func (x *ReplyControl) GetIsUpTop() bool {
	if x != nil {
		return x.IsUpTop
	}
	return false
}

func (x *ReplyControl) GetIsAdminTop() bool {
	if x != nil {
		return x.IsAdminTop
	}
	return false
}

func (x *ReplyControl) GetIsVoteTop() bool {
	if x != nil {
		return x.IsVoteTop
	}
	return false
}

func (x *ReplyControl) GetMaxLine() int64 {
	if x != nil {
		return x.MaxLine
	}
	return 0
}

func (x *ReplyControl) GetInvisible() bool {
	if x != nil {
		return x.Invisible
	}
	return false
}

func (x *ReplyControl) GetIsContractor() bool {
	if x != nil {
		return x.IsContractor
	}
	return false
}

func (x *ReplyControl) GetIsNote() bool {
	if x != nil {
		return x.IsNote
	}
	return false
}

func (x *ReplyControl) GetCardLabels() []*ReplyCardLabel {
	if x != nil {
		return x.CardLabels
	}
	return nil
}

func (x *ReplyControl) GetSubReplyEntryText() string {
	if x != nil {
		return x.SubReplyEntryText
	}
	return ""
}

func (x *ReplyControl) GetSubReplyTitleText() string {
	if x != nil {
		return x.SubReplyTitleText
	}
	return ""
}

func (x *ReplyControl) GetContractDesc() string {
	if x != nil {
		return x.ContractDesc
	}
	return ""
}

func (x *ReplyControl) GetTimeDesc() string {
	if x != nil {
		return x.TimeDesc
	}
	return ""
}

func (x *ReplyControl) GetBizScene() string {
	if x != nil {
		return x.BizScene
	}
	return ""
}

func (x *ReplyControl) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ReplyExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	SeasonType int64 `protobuf:"varint,2,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	EpId int64 `protobuf:"varint,3,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	IsStory bool `protobuf:"varint,4,opt,name=is_story,json=isStory,proto3" json:"is_story,omitempty"`
}

func (x *ReplyExtra) Reset() {
	*x = ReplyExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyExtra) ProtoMessage() {}

func (x *ReplyExtra) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyExtra.ProtoReflect.Descriptor instead.
func (*ReplyExtra) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{34}
}

func (x *ReplyExtra) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *ReplyExtra) GetSeasonType() int64 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *ReplyExtra) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *ReplyExtra) GetIsStory() bool {
	if x != nil {
		return x.IsStory
	}
	return false
}

// 评论条目信息
type ReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 二级评论列表
	Replies []*ReplyInfo `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	// 评论rpid
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// 评论区对象id
	Oid int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	// 评论区类型
	Type int64 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// 发布者UID
	Mid int64 `protobuf:"varint,5,opt,name=mid,proto3" json:"mid,omitempty"`
	// 根评论rpid
	Root int64 `protobuf:"varint,6,opt,name=root,proto3" json:"root,omitempty"`
	// 父评论rpid
	Parent int64 `protobuf:"varint,7,opt,name=parent,proto3" json:"parent,omitempty"`
	// 对话评论rpid
	Dialog int64 `protobuf:"varint,8,opt,name=dialog,proto3" json:"dialog,omitempty"`
	// 点赞数
	Like int64 `protobuf:"varint,9,opt,name=like,proto3" json:"like,omitempty"`
	// 发布时间
	Ctime int64 `protobuf:"varint,10,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 回复数
	Count int64 `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	// 评论主体信息
	Content *Content `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	// 发布者信息
	Member *Member `protobuf:"bytes,13,opt,name=member,proto3" json:"member,omitempty"`
	// 评论控制字段
	ReplyControl *ReplyControl `protobuf:"bytes,14,opt,name=reply_control,json=replyControl,proto3" json:"reply_control,omitempty"`
	// 发布者信息V2
	MemberV2 *MemberV2 `protobuf:"bytes,15,opt,name=member_v2,json=memberV2,proto3" json:"member_v2,omitempty"`
}

func (x *ReplyInfo) Reset() {
	*x = ReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfo) ProtoMessage() {}

func (x *ReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfo.ProtoReflect.Descriptor instead.
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{35}
}

func (x *ReplyInfo) GetReplies() []*ReplyInfo {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *ReplyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyInfo) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ReplyInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReplyInfo) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ReplyInfo) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *ReplyInfo) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *ReplyInfo) GetDialog() int64 {
	if x != nil {
		return x.Dialog
	}
	return 0
}

func (x *ReplyInfo) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *ReplyInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ReplyInfo) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReplyInfo) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReplyInfo) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *ReplyInfo) GetReplyControl() *ReplyControl {
	if x != nil {
		return x.ReplyControl
	}
	return nil
}

func (x *ReplyInfo) GetMemberV2() *MemberV2 {
	if x != nil {
		return x.MemberV2
	}
	return nil
}

// 查询单条评论-响应
type ReplyInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论条目信息
	Reply *ReplyInfo `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *ReplyInfoReply) Reset() {
	*x = ReplyInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfoReply) ProtoMessage() {}

func (x *ReplyInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfoReply.ProtoReflect.Descriptor instead.
func (*ReplyInfoReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{36}
}

func (x *ReplyInfoReply) GetReply() *ReplyInfo {
	if x != nil {
		return x.Reply
	}
	return nil
}

// 查询单条评论-请求
type ReplyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论rpid
	Rpid int64 `protobuf:"varint,1,opt,name=rpid,proto3" json:"rpid,omitempty"`
	Scene int32 `protobuf:"varint,2,opt,name=scene,proto3" json:"scene,omitempty"`
}

func (x *ReplyInfoReq) Reset() {
	*x = ReplyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfoReq) ProtoMessage() {}

func (x *ReplyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfoReq.ProtoReflect.Descriptor instead.
func (*ReplyInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{37}
}

func (x *ReplyInfoReq) GetRpid() int64 {
	if x != nil {
		return x.Rpid
	}
	return 0
}

func (x *ReplyInfoReq) GetScene() int32 {
	if x != nil {
		return x.Scene
	}
	return 0
}

// 富文本
type RichText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 富文本类型
	//
	// Types that are assignable to Item:
	//
	//	*RichText_Note
	Item isRichText_Item `protobuf_oneof:"item"`
}

func (x *RichText) Reset() {
	*x = RichText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichText) ProtoMessage() {}

func (x *RichText) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichText.ProtoReflect.Descriptor instead.
func (*RichText) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{38}
}

func (m *RichText) GetItem() isRichText_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *RichText) GetNote() *RichTextNote {
	if x, ok := x.GetItem().(*RichText_Note); ok {
		return x.Note
	}
	return nil
}

type isRichText_Item interface {
	isRichText_Item()
}

type RichText_Note struct {
	// 笔记
	Note *RichTextNote `protobuf:"bytes,1,opt,name=note,proto3,oneof"`
}

func (*RichText_Note) isRichText_Item() {}

// 笔记
type RichTextNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 预览文本
	Summary string `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// 笔记预览图片url列表
	Images []string `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	// 笔记页面url
	ClickUrl string `protobuf:"bytes,3,opt,name=click_url,json=clickUrl,proto3" json:"click_url,omitempty"`
	// 发布日期 YYYY-mm-dd
	LastMtimeText string `protobuf:"bytes,4,opt,name=last_mtime_text,json=lastMtimeText,proto3" json:"last_mtime_text,omitempty"`
}

func (x *RichTextNote) Reset() {
	*x = RichTextNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RichTextNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RichTextNote) ProtoMessage() {}

func (x *RichTextNote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RichTextNote.ProtoReflect.Descriptor instead.
func (*RichTextNote) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{39}
}

func (x *RichTextNote) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *RichTextNote) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *RichTextNote) GetClickUrl() string {
	if x != nil {
		return x.ClickUrl
	}
	return ""
}

func (x *RichTextNote) GetLastMtimeText() string {
	if x != nil {
		return x.LastMtimeText
	}
	return ""
}

// 评论搜索插入项目
type SearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 项目
	//
	// Types that are assignable to Item:
	//
	//	*SearchItem_Goods
	//	*SearchItem_Video
	//	*SearchItem_Article
	Item isSearchItem_Item `protobuf_oneof:"item"`
}

func (x *SearchItem) Reset() {
	*x = SearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItem) ProtoMessage() {}

func (x *SearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItem.ProtoReflect.Descriptor instead.
func (*SearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{40}
}

func (x *SearchItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (m *SearchItem) GetItem() isSearchItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *SearchItem) GetGoods() *GoodsSearchItem {
	if x, ok := x.GetItem().(*SearchItem_Goods); ok {
		return x.Goods
	}
	return nil
}

func (x *SearchItem) GetVideo() *VideoSearchItem {
	if x, ok := x.GetItem().(*SearchItem_Video); ok {
		return x.Video
	}
	return nil
}

func (x *SearchItem) GetArticle() *ArticleSearchItem {
	if x, ok := x.GetItem().(*SearchItem_Article); ok {
		return x.Article
	}
	return nil
}

type isSearchItem_Item interface {
	isSearchItem_Item()
}

type SearchItem_Goods struct {
	// 商品
	Goods *GoodsSearchItem `protobuf:"bytes,2,opt,name=goods,proto3,oneof"`
}

type SearchItem_Video struct {
	// 视频
	Video *VideoSearchItem `protobuf:"bytes,3,opt,name=video,proto3,oneof"`
}

type SearchItem_Article struct {
	// 专栏
	Article *ArticleSearchItem `protobuf:"bytes,4,opt,name=article,proto3,oneof"`
}

func (*SearchItem_Goods) isSearchItem_Item() {}

func (*SearchItem_Video) isSearchItem_Item() {}

func (*SearchItem_Article) isSearchItem_Item() {}

// 评论搜索插入项目响应游标
type SearchItemCursorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有下一页
	HasNext bool `protobuf:"varint,1,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	// 下页
	Next int64 `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *SearchItemCursorReply) Reset() {
	*x = SearchItemCursorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemCursorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemCursorReply) ProtoMessage() {}

func (x *SearchItemCursorReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemCursorReply.ProtoReflect.Descriptor instead.
func (*SearchItemCursorReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{41}
}

func (x *SearchItemCursorReply) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *SearchItemCursorReply) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

// 评论搜索插入项目请求游标
type SearchItemCursorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 下一页
	Next int64 `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	// tab类型
	ItemType SearchItemType `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3,enum=bilibili.main.community.reply.v1.SearchItemType" json:"item_type,omitempty"`
}

func (x *SearchItemCursorReq) Reset() {
	*x = SearchItemCursorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemCursorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemCursorReq) ProtoMessage() {}

func (x *SearchItemCursorReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemCursorReq.ProtoReflect.Descriptor instead.
func (*SearchItemCursorReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{42}
}

func (x *SearchItemCursorReq) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *SearchItemCursorReq) GetItemType() SearchItemType {
	if x != nil {
		return x.ItemType
	}
	return SearchItemType_DEFAULT_ITEM_TYPE
}

// 评论搜索item前置发布-响应
type SearchItemPreHookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 输入框的文案
	PlaceholderText string `protobuf:"bytes,1,opt,name=placeholder_text,json=placeholderText,proto3" json:"placeholder_text,omitempty"`
	// 背景空白的时候的文案
	BackgroundText string `protobuf:"bytes,2,opt,name=background_text,json=backgroundText,proto3" json:"background_text,omitempty"`
	// 有权限的tab栏的顺序
	OrderedType []SearchItemType `protobuf:"varint,3,rep,packed,name=ordered_type,json=orderedType,proto3,enum=bilibili.main.community.reply.v1.SearchItemType" json:"ordered_type,omitempty"`
}

func (x *SearchItemPreHookReply) Reset() {
	*x = SearchItemPreHookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemPreHookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemPreHookReply) ProtoMessage() {}

func (x *SearchItemPreHookReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemPreHookReply.ProtoReflect.Descriptor instead.
func (*SearchItemPreHookReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{43}
}

func (x *SearchItemPreHookReply) GetPlaceholderText() string {
	if x != nil {
		return x.PlaceholderText
	}
	return ""
}

func (x *SearchItemPreHookReply) GetBackgroundText() string {
	if x != nil {
		return x.BackgroundText
	}
	return ""
}

func (x *SearchItemPreHookReply) GetOrderedType() []SearchItemType {
	if x != nil {
		return x.OrderedType
	}
	return nil
}

// 评论搜索item前置发布-请求
type SearchItemPreHookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SearchItemPreHookReq) Reset() {
	*x = SearchItemPreHookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemPreHookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemPreHookReq) ProtoMessage() {}

func (x *SearchItemPreHookReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemPreHookReq.ProtoReflect.Descriptor instead.
func (*SearchItemPreHookReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{44}
}

func (x *SearchItemPreHookReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SearchItemPreHookReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 评论搜索插入项目-回复
type SearchItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor *SearchItemCursorReply `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 搜索的结果
	Items []*SearchItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// 附加信息
	Extra *SearchItemReplyExtraInfo `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *SearchItemReply) Reset() {
	*x = SearchItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemReply) ProtoMessage() {}

func (x *SearchItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemReply.ProtoReflect.Descriptor instead.
func (*SearchItemReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{45}
}

func (x *SearchItemReply) GetCursor() *SearchItemCursorReply {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *SearchItemReply) GetItems() []*SearchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchItemReply) GetExtra() *SearchItemReplyExtraInfo {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SearchItemReplyExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *SearchItemReplyExtraInfo) Reset() {
	*x = SearchItemReplyExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemReplyExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemReplyExtraInfo) ProtoMessage() {}

func (x *SearchItemReplyExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemReplyExtraInfo.ProtoReflect.Descriptor instead.
func (*SearchItemReplyExtraInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{46}
}

func (x *SearchItemReplyExtraInfo) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// 评论搜索插入项目-请求
type SearchItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 页面游标
	Cursor *SearchItemCursorReq `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// 目标评论区id
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 搜索关键词
	Keyword string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchItemReq) Reset() {
	*x = SearchItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemReq) ProtoMessage() {}

func (x *SearchItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemReq.ProtoReflect.Descriptor instead.
func (*SearchItemReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{47}
}

func (x *SearchItemReq) GetCursor() *SearchItemCursorReq {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *SearchItemReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SearchItemReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SearchItemReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 评论分享材料-请求
type ShareRepliesInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论rpid列表
	Rpids []int64 `protobuf:"varint,1,rep,packed,name=rpids,proto3" json:"rpids,omitempty"`
	// 目标评论区id
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ShareRepliesInfoReq) Reset() {
	*x = ShareRepliesInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRepliesInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRepliesInfoReq) ProtoMessage() {}

func (x *ShareRepliesInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRepliesInfoReq.ProtoReflect.Descriptor instead.
func (*ShareRepliesInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{48}
}

func (x *ShareRepliesInfoReq) GetRpids() []int64 {
	if x != nil {
		return x.Rpids
	}
	return nil
}

func (x *ShareRepliesInfoReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ShareRepliesInfoReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 评论分享材料-响应
type ShareRepliesInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论分享条目列表
	Infos []*ShareReplyInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	// 源内容标题
	FromTitle string `protobuf:"bytes,2,opt,name=from_title,json=fromTitle,proto3" json:"from_title,omitempty"`
	// 源内容UP主
	FromUp string `protobuf:"bytes,3,opt,name=from_up,json=fromUp,proto3" json:"from_up,omitempty"`
	// 源内容封面url
	FromPic string `protobuf:"bytes,4,opt,name=from_pic,json=fromPic,proto3" json:"from_pic,omitempty"`
	// 源内容页面url
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// logo url
	SloganPic string `protobuf:"bytes,6,opt,name=slogan_pic,json=sloganPic,proto3" json:"slogan_pic,omitempty"`
	// 标语
	SloganText string `protobuf:"bytes,7,opt,name=slogan_text,json=sloganText,proto3" json:"slogan_text,omitempty"`
	Topic *ShareReplyTopic `protobuf:"bytes,8,opt,name=topic,proto3" json:"topic,omitempty"`
	Extra *ShareRepliesInfoResp_ShareExtra `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *ShareRepliesInfoResp) Reset() {
	*x = ShareRepliesInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRepliesInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRepliesInfoResp) ProtoMessage() {}

func (x *ShareRepliesInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRepliesInfoResp.ProtoReflect.Descriptor instead.
func (*ShareRepliesInfoResp) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{49}
}

func (x *ShareRepliesInfoResp) GetInfos() []*ShareReplyInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *ShareRepliesInfoResp) GetFromTitle() string {
	if x != nil {
		return x.FromTitle
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetFromUp() string {
	if x != nil {
		return x.FromUp
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetFromPic() string {
	if x != nil {
		return x.FromPic
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetSloganPic() string {
	if x != nil {
		return x.SloganPic
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetSloganText() string {
	if x != nil {
		return x.SloganText
	}
	return ""
}

func (x *ShareRepliesInfoResp) GetTopic() *ShareReplyTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ShareRepliesInfoResp) GetExtra() *ShareRepliesInfoResp_ShareExtra {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 评论分享条目信息
type ShareReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户信息
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	// 评论主体信息
	Content *Content `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 分享标题(评论发布者昵称)
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 分享副标题 "发表了评论"
	SubTitle string `protobuf:"bytes,4,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 荣誉信息文案 "获得了up主点赞"
	AchievementText string `protobuf:"bytes,5,opt,name=achievement_text,json=achievementText,proto3" json:"achievement_text,omitempty"`
	LabelUrl string `protobuf:"bytes,6,opt,name=label_url,json=labelUrl,proto3" json:"label_url,omitempty"`
}

func (x *ShareReplyInfo) Reset() {
	*x = ShareReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReplyInfo) ProtoMessage() {}

func (x *ShareReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReplyInfo.ProtoReflect.Descriptor instead.
func (*ShareReplyInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{50}
}

func (x *ShareReplyInfo) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *ShareReplyInfo) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ShareReplyInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShareReplyInfo) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ShareReplyInfo) GetAchievementText() string {
	if x != nil {
		return x.AchievementText
	}
	return ""
}

func (x *ShareReplyInfo) GetLabelUrl() string {
	if x != nil {
		return x.LabelUrl
	}
	return ""
}

type ShareReplyTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	OriginText string `protobuf:"bytes,2,opt,name=origin_text,json=originText,proto3" json:"origin_text,omitempty"`
}

func (x *ShareReplyTopic) Reset() {
	*x = ShareReplyTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareReplyTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareReplyTopic) ProtoMessage() {}

func (x *ShareReplyTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareReplyTopic.ProtoReflect.Descriptor instead.
func (*ShareReplyTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{51}
}

func (x *ShareReplyTopic) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ShareReplyTopic) GetOriginText() string {
	if x != nil {
		return x.OriginText
	}
	return ""
}

// 评论区控制字段
type SubjectControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UP主mid
	UpMid int64 `protobuf:"varint,1,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 自己是否为协管
	IsAssist bool `protobuf:"varint,2,opt,name=is_assist,json=isAssist,proto3" json:"is_assist,omitempty"`
	// 是否只读
	ReadOnly bool `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// 是否有发起投票权限
	HasVoteAccess bool `protobuf:"varint,4,opt,name=has_vote_access,json=hasVoteAccess,proto3" json:"has_vote_access,omitempty"`
	// 是否有发起抽奖权限
	HasLotteryAccess bool `protobuf:"varint,5,opt,name=has_lottery_access,json=hasLotteryAccess,proto3" json:"has_lottery_access,omitempty"`
	// 是否有被折叠评论
	HasFoldedReply bool `protobuf:"varint,6,opt,name=has_folded_reply,json=hasFoldedReply,proto3" json:"has_folded_reply,omitempty"`
	// 空评论区背景文案
	BgText string `protobuf:"bytes,7,opt,name=bg_text,json=bgText,proto3" json:"bg_text,omitempty"`
	// 是否被UP拉黑
	UpBlocked bool `protobuf:"varint,8,opt,name=up_blocked,json=upBlocked,proto3" json:"up_blocked,omitempty"`
	// 是否有发起活动权限
	HasActivityAccess bool `protobuf:"varint,9,opt,name=has_activity_access,json=hasActivityAccess,proto3" json:"has_activity_access,omitempty"`
	// 标题展示控制
	ShowTitle bool `protobuf:"varint,10,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	// 是否显示UP主操作标志
	ShowUpAction bool `protobuf:"varint,11,opt,name=show_up_action,json=showUpAction,proto3" json:"show_up_action,omitempty"`
	// 是否显示评论区排序切换按钮
	SwitcherType int64 `protobuf:"varint,12,opt,name=switcher_type,json=switcherType,proto3" json:"switcher_type,omitempty"`
	// 是否禁止输入框
	InputDisable bool `protobuf:"varint,13,opt,name=input_disable,json=inputDisable,proto3" json:"input_disable,omitempty"`
	// 根评论输入框背景文案
	RootText string `protobuf:"bytes,14,opt,name=root_text,json=rootText,proto3" json:"root_text,omitempty"`
	// 子评论输入框背景文案
	ChildText string `protobuf:"bytes,15,opt,name=child_text,json=childText,proto3" json:"child_text,omitempty"`
	// 评论总数
	Count int64 `protobuf:"varint,16,opt,name=count,proto3" json:"count,omitempty"`
	// 评论区标题
	Title string `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`
	// 离开态输入框的文案
	GiveupText string `protobuf:"bytes,18,opt,name=giveup_text,json=giveupText,proto3" json:"giveup_text,omitempty"`
	// 是否允许笔记
	HasNoteAccess bool `protobuf:"varint,19,opt,name=has_note_access,json=hasNoteAccess,proto3" json:"has_note_access,omitempty"`
	DisableJumpEmote bool `protobuf:"varint,20,opt,name=disable_jump_emote,json=disableJumpEmote,proto3" json:"disable_jump_emote,omitempty"`
	EmptyBackgroundTextPlain string `protobuf:"bytes,21,opt,name=empty_background_text_plain,json=emptyBackgroundTextPlain,proto3" json:"empty_background_text_plain,omitempty"`
	EmptyBackgroundTextHighlight string `protobuf:"bytes,22,opt,name=empty_background_text_highlight,json=emptyBackgroundTextHighlight,proto3" json:"empty_background_text_highlight,omitempty"`
	EmptyBackgroundUri string `protobuf:"bytes,23,opt,name=empty_background_uri,json=emptyBackgroundUri,proto3" json:"empty_background_uri,omitempty"`
	// 评论区筛选类型列表
	SupportFilterTags []*SubjectControl_FilterTag `protobuf:"bytes,24,rep,name=support_filter_tags,json=supportFilterTags,proto3" json:"support_filter_tags,omitempty"`
}

func (x *SubjectControl) Reset() {
	*x = SubjectControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectControl) ProtoMessage() {}

func (x *SubjectControl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectControl.ProtoReflect.Descriptor instead.
func (*SubjectControl) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{52}
}

func (x *SubjectControl) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *SubjectControl) GetIsAssist() bool {
	if x != nil {
		return x.IsAssist
	}
	return false
}

func (x *SubjectControl) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *SubjectControl) GetHasVoteAccess() bool {
	if x != nil {
		return x.HasVoteAccess
	}
	return false
}

func (x *SubjectControl) GetHasLotteryAccess() bool {
	if x != nil {
		return x.HasLotteryAccess
	}
	return false
}

func (x *SubjectControl) GetHasFoldedReply() bool {
	if x != nil {
		return x.HasFoldedReply
	}
	return false
}

func (x *SubjectControl) GetBgText() string {
	if x != nil {
		return x.BgText
	}
	return ""
}

func (x *SubjectControl) GetUpBlocked() bool {
	if x != nil {
		return x.UpBlocked
	}
	return false
}

func (x *SubjectControl) GetHasActivityAccess() bool {
	if x != nil {
		return x.HasActivityAccess
	}
	return false
}

func (x *SubjectControl) GetShowTitle() bool {
	if x != nil {
		return x.ShowTitle
	}
	return false
}

func (x *SubjectControl) GetShowUpAction() bool {
	if x != nil {
		return x.ShowUpAction
	}
	return false
}

func (x *SubjectControl) GetSwitcherType() int64 {
	if x != nil {
		return x.SwitcherType
	}
	return 0
}

func (x *SubjectControl) GetInputDisable() bool {
	if x != nil {
		return x.InputDisable
	}
	return false
}

func (x *SubjectControl) GetRootText() string {
	if x != nil {
		return x.RootText
	}
	return ""
}

func (x *SubjectControl) GetChildText() string {
	if x != nil {
		return x.ChildText
	}
	return ""
}

func (x *SubjectControl) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SubjectControl) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubjectControl) GetGiveupText() string {
	if x != nil {
		return x.GiveupText
	}
	return ""
}

func (x *SubjectControl) GetHasNoteAccess() bool {
	if x != nil {
		return x.HasNoteAccess
	}
	return false
}

func (x *SubjectControl) GetDisableJumpEmote() bool {
	if x != nil {
		return x.DisableJumpEmote
	}
	return false
}

func (x *SubjectControl) GetEmptyBackgroundTextPlain() string {
	if x != nil {
		return x.EmptyBackgroundTextPlain
	}
	return ""
}

func (x *SubjectControl) GetEmptyBackgroundTextHighlight() string {
	if x != nil {
		return x.EmptyBackgroundTextHighlight
	}
	return ""
}

func (x *SubjectControl) GetEmptyBackgroundUri() string {
	if x != nil {
		return x.EmptyBackgroundUri
	}
	return ""
}

func (x *SubjectControl) GetSupportFilterTags() []*SubjectControl_FilterTag {
	if x != nil {
		return x.SupportFilterTags
	}
	return nil
}

// 评论表情推荐列表-请求
type SuggestEmotesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标评论区id
	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SuggestEmotesReq) Reset() {
	*x = SuggestEmotesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestEmotesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestEmotesReq) ProtoMessage() {}

func (x *SuggestEmotesReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestEmotesReq.ProtoReflect.Descriptor instead.
func (*SuggestEmotesReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{53}
}

func (x *SuggestEmotesReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *SuggestEmotesReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 评论表情推荐列表-响应
type SuggestEmotesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 表情推荐列表
	Emotes []*Emote `protobuf:"bytes,1,rep,name=emotes,proto3" json:"emotes,omitempty"`
}

func (x *SuggestEmotesResp) Reset() {
	*x = SuggestEmotesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestEmotesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestEmotesResp) ProtoMessage() {}

func (x *SuggestEmotesResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestEmotesResp.ProtoReflect.Descriptor instead.
func (*SuggestEmotesResp) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{54}
}

func (x *SuggestEmotesResp) GetEmotes() []*Emote {
	if x != nil {
		return x.Emotes
	}
	return nil
}

// 话题项
type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 跳转url
	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	// 话题id
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{55}
}

func (x *Topic) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Topic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// UGC视频项目
type UGCVideoSearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// UP主昵称
	UpNickname string `protobuf:"bytes,2,opt,name=up_nickname,json=upNickname,proto3" json:"up_nickname,omitempty"`
	// 时长(单位为秒)
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *UGCVideoSearchItem) Reset() {
	*x = UGCVideoSearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UGCVideoSearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UGCVideoSearchItem) ProtoMessage() {}

func (x *UGCVideoSearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UGCVideoSearchItem.ProtoReflect.Descriptor instead.
func (*UGCVideoSearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{56}
}

func (x *UGCVideoSearchItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UGCVideoSearchItem) GetUpNickname() string {
	if x != nil {
		return x.UpNickname
	}
	return ""
}

func (x *UGCVideoSearchItem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UGCVideoSearchItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 精选评论
type UpSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 待审评论数
	PendingCount int64 `protobuf:"varint,1,opt,name=pending_count,json=pendingCount,proto3" json:"pending_count,omitempty"`
	// 忽略评论数
	IgnoreCount int64 `protobuf:"varint,2,opt,name=ignore_count,json=ignoreCount,proto3" json:"ignore_count,omitempty"`
}

func (x *UpSelection) Reset() {
	*x = UpSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpSelection) ProtoMessage() {}

func (x *UpSelection) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpSelection.ProtoReflect.Descriptor instead.
func (*UpSelection) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{57}
}

func (x *UpSelection) GetPendingCount() int64 {
	if x != nil {
		return x.PendingCount
	}
	return 0
}

func (x *UpSelection) GetIgnoreCount() int64 {
	if x != nil {
		return x.IgnoreCount
	}
	return 0
}

// 超链项
type Url struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	State int64 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	// 图标url
	PrefixIcon string `protobuf:"bytes,3,opt,name=prefix_icon,json=prefixIcon,proto3" json:"prefix_icon,omitempty"`
	// 客户端内跳转uri
	AppUrlSchema string `protobuf:"bytes,4,opt,name=app_url_schema,json=appUrlSchema,proto3" json:"app_url_schema,omitempty"`
	AppName string `protobuf:"bytes,5,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppPackageName string `protobuf:"bytes,6,opt,name=app_package_name,json=appPackageName,proto3" json:"app_package_name,omitempty"`
	// 点击上报数据
	ClickReport string `protobuf:"bytes,7,opt,name=click_report,json=clickReport,proto3" json:"click_report,omitempty"`
	// 是否半屏打开
	IsHalfScreen bool `protobuf:"varint,8,opt,name=is_half_screen,json=isHalfScreen,proto3" json:"is_half_screen,omitempty"`
	// 展现上报数据
	ExposureReport string `protobuf:"bytes,9,opt,name=exposure_report,json=exposureReport,proto3" json:"exposure_report,omitempty"`
	// 扩展字段
	Extra *Url_Extra `protobuf:"bytes,10,opt,name=extra,proto3" json:"extra,omitempty"`
	// 是否下划线
	Underline bool `protobuf:"varint,11,opt,name=underline,proto3" json:"underline,omitempty"`
	MatchOnce bool `protobuf:"varint,12,opt,name=match_once,json=matchOnce,proto3" json:"match_once,omitempty"`
	// 网页url
	PcUrl string `protobuf:"bytes,13,opt,name=pc_url,json=pcUrl,proto3" json:"pc_url,omitempty"`
	IconPosition int32 `protobuf:"varint,14,opt,name=icon_position,json=iconPosition,proto3" json:"icon_position,omitempty"`
}

func (x *Url) Reset() {
	*x = Url{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{58}
}

func (x *Url) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Url) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Url) GetPrefixIcon() string {
	if x != nil {
		return x.PrefixIcon
	}
	return ""
}

func (x *Url) GetAppUrlSchema() string {
	if x != nil {
		return x.AppUrlSchema
	}
	return ""
}

func (x *Url) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Url) GetAppPackageName() string {
	if x != nil {
		return x.AppPackageName
	}
	return ""
}

func (x *Url) GetClickReport() string {
	if x != nil {
		return x.ClickReport
	}
	return ""
}

func (x *Url) GetIsHalfScreen() bool {
	if x != nil {
		return x.IsHalfScreen
	}
	return false
}

func (x *Url) GetExposureReport() string {
	if x != nil {
		return x.ExposureReport
	}
	return ""
}

func (x *Url) GetExtra() *Url_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Url) GetUnderline() bool {
	if x != nil {
		return x.Underline
	}
	return false
}

func (x *Url) GetMatchOnce() bool {
	if x != nil {
		return x.MatchOnce
	}
	return false
}

func (x *Url) GetPcUrl() string {
	if x != nil {
		return x.PcUrl
	}
	return ""
}

func (x *Url) GetIconPosition() int32 {
	if x != nil {
		return x.IconPosition
	}
	return 0
}

// 用户回调上报-响应
type UserCallbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserCallbackReply) Reset() {
	*x = UserCallbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCallbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCallbackReply) ProtoMessage() {}

func (x *UserCallbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCallbackReply.ProtoReflect.Descriptor instead.
func (*UserCallbackReply) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{59}
}

// 用户回调上报-请求
type UserCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Scene UserCallbackScene `protobuf:"varint,2,opt,name=scene,proto3,enum=bilibili.main.community.reply.v1.UserCallbackScene" json:"scene,omitempty"`
	Action UserCallbackAction `protobuf:"varint,3,opt,name=action,proto3,enum=bilibili.main.community.reply.v1.UserCallbackAction" json:"action,omitempty"`
	// 目标评论区id
	Oid int64 `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
	// 目标评论区业务type
	Type int64 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UserCallbackReq) Reset() {
	*x = UserCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCallbackReq) ProtoMessage() {}

func (x *UserCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCallbackReq.ProtoReflect.Descriptor instead.
func (*UserCallbackReq) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{60}
}

func (x *UserCallbackReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *UserCallbackReq) GetScene() UserCallbackScene {
	if x != nil {
		return x.Scene
	}
	return UserCallbackScene_Insert
}

func (x *UserCallbackReq) GetAction() UserCallbackAction {
	if x != nil {
		return x.Action
	}
	return UserCallbackAction_Dismiss
}

func (x *UserCallbackReq) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *UserCallbackReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 视频项目
type VideoSearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type SearchItemVideoSubType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.main.community.reply.v1.SearchItemVideoSubType" json:"type,omitempty"`
	// Types that are assignable to VideoItem:
	//
	//	*VideoSearchItem_Ugc
	//	*VideoSearchItem_Pgc
	VideoItem isVideoSearchItem_VideoItem `protobuf_oneof:"video_item"`
}

func (x *VideoSearchItem) Reset() {
	*x = VideoSearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSearchItem) ProtoMessage() {}

func (x *VideoSearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSearchItem.ProtoReflect.Descriptor instead.
func (*VideoSearchItem) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{61}
}

func (x *VideoSearchItem) GetType() SearchItemVideoSubType {
	if x != nil {
		return x.Type
	}
	return SearchItemVideoSubType_UGC
}

func (m *VideoSearchItem) GetVideoItem() isVideoSearchItem_VideoItem {
	if m != nil {
		return m.VideoItem
	}
	return nil
}

func (x *VideoSearchItem) GetUgc() *UGCVideoSearchItem {
	if x, ok := x.GetVideoItem().(*VideoSearchItem_Ugc); ok {
		return x.Ugc
	}
	return nil
}

func (x *VideoSearchItem) GetPgc() *PGCVideoSearchItem {
	if x, ok := x.GetVideoItem().(*VideoSearchItem_Pgc); ok {
		return x.Pgc
	}
	return nil
}

type isVideoSearchItem_VideoItem interface {
	isVideoSearchItem_VideoItem()
}

type VideoSearchItem_Ugc struct {
	// UGC视频
	Ugc *UGCVideoSearchItem `protobuf:"bytes,2,opt,name=ugc,proto3,oneof"`
}

type VideoSearchItem_Pgc struct {
	// PGC视频
	Pgc *PGCVideoSearchItem `protobuf:"bytes,3,opt,name=pgc,proto3,oneof"`
}

func (*VideoSearchItem_Ugc) isVideoSearchItem_VideoItem() {}

func (*VideoSearchItem_Pgc) isVideoSearchItem_VideoItem() {}

// 投票信息
type Vote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投票id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 投票标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 参与人数
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Vote) Reset() {
	*x = Vote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{62}
}

func (x *Vote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Vote) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Vote) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LikeInfo_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *LikeInfo_Item) Reset() {
	*x = LikeInfo_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeInfo_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeInfo_Item) ProtoMessage() {}

func (x *LikeInfo_Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeInfo_Item.ProtoReflect.Descriptor instead.
func (*LikeInfo_Item) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{18, 0}
}

func (x *LikeInfo_Item) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

// NFT地区
type Member_Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 地区类型
	Type Member_RegionType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.main.community.reply.v1.Member_RegionType" json:"type,omitempty"`
	// 角标url
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	ShowStatus Member_ShowStatus `protobuf:"varint,3,opt,name=show_status,json=showStatus,proto3,enum=bilibili.main.community.reply.v1.Member_ShowStatus" json:"show_status,omitempty"`
}

func (x *Member_Region) Reset() {
	*x = Member_Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member_Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member_Region) ProtoMessage() {}

func (x *Member_Region) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member_Region.ProtoReflect.Descriptor instead.
func (*Member_Region) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{22, 0}
}

func (x *Member_Region) GetType() Member_RegionType {
	if x != nil {
		return x.Type
	}
	return Member_DEFAULT
}

func (x *Member_Region) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Member_Region) GetShowStatus() Member_ShowStatus {
	if x != nil {
		return x.ShowStatus
	}
	return Member_SHOWDEFAULT
}

// NFT信息
type Member_NftInteraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itype string `protobuf:"bytes,1,opt,name=itype,proto3" json:"itype,omitempty"`
	MetadataUrl string `protobuf:"bytes,2,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
	NftId string `protobuf:"bytes,3,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	// NFT地区
	Region *Member_Region `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Member_NftInteraction) Reset() {
	*x = Member_NftInteraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member_NftInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member_NftInteraction) ProtoMessage() {}

func (x *Member_NftInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member_NftInteraction.ProtoReflect.Descriptor instead.
func (*Member_NftInteraction) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{22, 1}
}

func (x *Member_NftInteraction) GetItype() string {
	if x != nil {
		return x.Itype
	}
	return ""
}

func (x *Member_NftInteraction) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *Member_NftInteraction) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *Member_NftInteraction) GetRegion() *Member_Region {
	if x != nil {
		return x.Region
	}
	return nil
}

// 基本信息
type MemberV2_Basic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 性别
	Sex string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// 头像url
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	// 等级
	Level int64 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *MemberV2_Basic) Reset() {
	*x = MemberV2_Basic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Basic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Basic) ProtoMessage() {}

func (x *MemberV2_Basic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Basic.ProtoReflect.Descriptor instead.
func (*MemberV2_Basic) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 0}
}

func (x *MemberV2_Basic) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MemberV2_Basic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberV2_Basic) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *MemberV2_Basic) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *MemberV2_Basic) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 认证
type MemberV2_Official struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 认证类型
	VerifyType int64 `protobuf:"varint,1,opt,name=verify_type,json=verifyType,proto3" json:"verify_type,omitempty"`
}

func (x *MemberV2_Official) Reset() {
	*x = MemberV2_Official{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Official) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Official) ProtoMessage() {}

func (x *MemberV2_Official) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Official.ProtoReflect.Descriptor instead.
func (*MemberV2_Official) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 1}
}

func (x *MemberV2_Official) GetVerifyType() int64 {
	if x != nil {
		return x.VerifyType
	}
	return 0
}

// 大会员
type MemberV2_Vip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员类型
	// 0:不是大会员 1:月度会员 2:年度大会员
	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 会员状态
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// 会员样式
	ThemeType int64 `protobuf:"varint,3,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	// 会员铭牌样式url
	LabelPath string `protobuf:"bytes,4,opt,name=label_path,json=labelPath,proto3" json:"label_path,omitempty"`
	NicknameColor string `protobuf:"bytes,5,opt,name=nickname_color,json=nicknameColor,proto3" json:"nickname_color,omitempty"`
	AvatarSubscript int32 `protobuf:"varint,6,opt,name=avatar_subscript,json=avatarSubscript,proto3" json:"avatar_subscript,omitempty"`
	LabelText string `protobuf:"bytes,7,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	VipLabelTheme string `protobuf:"bytes,8,opt,name=vip_label_theme,json=vipLabelTheme,proto3" json:"vip_label_theme,omitempty"`
}

func (x *MemberV2_Vip) Reset() {
	*x = MemberV2_Vip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Vip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Vip) ProtoMessage() {}

func (x *MemberV2_Vip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Vip.ProtoReflect.Descriptor instead.
func (*MemberV2_Vip) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 2}
}

func (x *MemberV2_Vip) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MemberV2_Vip) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MemberV2_Vip) GetThemeType() int64 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *MemberV2_Vip) GetLabelPath() string {
	if x != nil {
		return x.LabelPath
	}
	return ""
}

func (x *MemberV2_Vip) GetNicknameColor() string {
	if x != nil {
		return x.NicknameColor
	}
	return ""
}

func (x *MemberV2_Vip) GetAvatarSubscript() int32 {
	if x != nil {
		return x.AvatarSubscript
	}
	return 0
}

func (x *MemberV2_Vip) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *MemberV2_Vip) GetVipLabelTheme() string {
	if x != nil {
		return x.VipLabelTheme
	}
	return ""
}

// 装扮
type MemberV2_Garb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 头像框url
	PendantImage string `protobuf:"bytes,1,opt,name=pendant_image,json=pendantImage,proto3" json:"pendant_image,omitempty"`
	// 装扮卡url
	CardImage string `protobuf:"bytes,2,opt,name=card_image,json=cardImage,proto3" json:"card_image,omitempty"`
	// 有关注按钮时的装扮卡url
	CardImageWithFocus string `protobuf:"bytes,3,opt,name=card_image_with_focus,json=cardImageWithFocus,proto3" json:"card_image_with_focus,omitempty"`
	// 专属装扮页面url
	CardJumpUrl string `protobuf:"bytes,4,opt,name=card_jump_url,json=cardJumpUrl,proto3" json:"card_jump_url,omitempty"`
	// 专属装扮id
	CardNumber string `protobuf:"bytes,5,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	// 专属装扮id显示颜色
	CardFanColor string `protobuf:"bytes,6,opt,name=card_fan_color,json=cardFanColor,proto3" json:"card_fan_color,omitempty"`
	// 是否为专属装扮卡
	CardIsFan bool `protobuf:"varint,7,opt,name=card_is_fan,json=cardIsFan,proto3" json:"card_is_fan,omitempty"`
}

func (x *MemberV2_Garb) Reset() {
	*x = MemberV2_Garb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Garb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Garb) ProtoMessage() {}

func (x *MemberV2_Garb) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Garb.ProtoReflect.Descriptor instead.
func (*MemberV2_Garb) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 3}
}

func (x *MemberV2_Garb) GetPendantImage() string {
	if x != nil {
		return x.PendantImage
	}
	return ""
}

func (x *MemberV2_Garb) GetCardImage() string {
	if x != nil {
		return x.CardImage
	}
	return ""
}

func (x *MemberV2_Garb) GetCardImageWithFocus() string {
	if x != nil {
		return x.CardImageWithFocus
	}
	return ""
}

func (x *MemberV2_Garb) GetCardJumpUrl() string {
	if x != nil {
		return x.CardJumpUrl
	}
	return ""
}

func (x *MemberV2_Garb) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *MemberV2_Garb) GetCardFanColor() string {
	if x != nil {
		return x.CardFanColor
	}
	return ""
}

func (x *MemberV2_Garb) GetCardIsFan() bool {
	if x != nil {
		return x.CardIsFan
	}
	return false
}

// 粉丝勋章
type MemberV2_Medal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 粉丝勋章名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 粉丝勋章等级
	Level int64 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	// 粉丝勋章显示颜色
	ColorStart int64 `protobuf:"varint,3,opt,name=color_start,json=colorStart,proto3" json:"color_start,omitempty"`
	// 粉丝勋章底色
	ColorEnd int64 `protobuf:"varint,4,opt,name=color_end,json=colorEnd,proto3" json:"color_end,omitempty"`
	// 粉丝勋章边框颜色
	ColorBorder int64 `protobuf:"varint,5,opt,name=color_border,json=colorBorder,proto3" json:"color_border,omitempty"`
	// 粉丝勋章名颜色
	ColorName int64 `protobuf:"varint,6,opt,name=color_name,json=colorName,proto3" json:"color_name,omitempty"`
	// 粉丝勋章等级颜色
	ColorLevel int64 `protobuf:"varint,7,opt,name=color_level,json=colorLevel,proto3" json:"color_level,omitempty"`
	GuardLevel int64 `protobuf:"varint,8,opt,name=guard_level,json=guardLevel,proto3" json:"guard_level,omitempty"`
	FirstIcon string `protobuf:"bytes,9,opt,name=first_icon,json=firstIcon,proto3" json:"first_icon,omitempty"`
	LevelBgColor int64 `protobuf:"varint,11,opt,name=level_bg_color,json=levelBgColor,proto3" json:"level_bg_color,omitempty"`
}

func (x *MemberV2_Medal) Reset() {
	*x = MemberV2_Medal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Medal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Medal) ProtoMessage() {}

func (x *MemberV2_Medal) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Medal.ProtoReflect.Descriptor instead.
func (*MemberV2_Medal) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 4}
}

func (x *MemberV2_Medal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberV2_Medal) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MemberV2_Medal) GetColorStart() int64 {
	if x != nil {
		return x.ColorStart
	}
	return 0
}

func (x *MemberV2_Medal) GetColorEnd() int64 {
	if x != nil {
		return x.ColorEnd
	}
	return 0
}

func (x *MemberV2_Medal) GetColorBorder() int64 {
	if x != nil {
		return x.ColorBorder
	}
	return 0
}

func (x *MemberV2_Medal) GetColorName() int64 {
	if x != nil {
		return x.ColorName
	}
	return 0
}

func (x *MemberV2_Medal) GetColorLevel() int64 {
	if x != nil {
		return x.ColorLevel
	}
	return 0
}

func (x *MemberV2_Medal) GetGuardLevel() int64 {
	if x != nil {
		return x.GuardLevel
	}
	return 0
}

func (x *MemberV2_Medal) GetFirstIcon() string {
	if x != nil {
		return x.FirstIcon
	}
	return ""
}

func (x *MemberV2_Medal) GetLevelBgColor() int64 {
	if x != nil {
		return x.LevelBgColor
	}
	return 0
}

// NFT地区
type MemberV2_Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 地区类型
	Type MemberV2_RegionType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.main.community.reply.v1.MemberV2_RegionType" json:"type,omitempty"`
	// 角标url
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	ShowStatus MemberV2_ShowStatus `protobuf:"varint,3,opt,name=show_status,json=showStatus,proto3,enum=bilibili.main.community.reply.v1.MemberV2_ShowStatus" json:"show_status,omitempty"`
}

func (x *MemberV2_Region) Reset() {
	*x = MemberV2_Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Region) ProtoMessage() {}

func (x *MemberV2_Region) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Region.ProtoReflect.Descriptor instead.
func (*MemberV2_Region) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 5}
}

func (x *MemberV2_Region) GetType() MemberV2_RegionType {
	if x != nil {
		return x.Type
	}
	return MemberV2_DEFAULT
}

func (x *MemberV2_Region) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MemberV2_Region) GetShowStatus() MemberV2_ShowStatus {
	if x != nil {
		return x.ShowStatus
	}
	return MemberV2_SHOWDEFAULT
}

// NFT信息
type MemberV2_Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itype string `protobuf:"bytes,1,opt,name=itype,proto3" json:"itype,omitempty"`
	MetadataUrl string `protobuf:"bytes,2,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
	NftId string `protobuf:"bytes,3,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	// NFT地区
	Region *MemberV2_Region `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *MemberV2_Interaction) Reset() {
	*x = MemberV2_Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Interaction) ProtoMessage() {}

func (x *MemberV2_Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Interaction.ProtoReflect.Descriptor instead.
func (*MemberV2_Interaction) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 6}
}

func (x *MemberV2_Interaction) GetItype() string {
	if x != nil {
		return x.Itype
	}
	return ""
}

func (x *MemberV2_Interaction) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *MemberV2_Interaction) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *MemberV2_Interaction) GetRegion() *MemberV2_Region {
	if x != nil {
		return x.Region
	}
	return nil
}

// NFT
type MemberV2_Nft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Face int32 `protobuf:"varint,1,opt,name=face,proto3" json:"face,omitempty"`
	Interaction *MemberV2_Interaction `protobuf:"bytes,2,opt,name=interaction,proto3" json:"interaction,omitempty"`
}

func (x *MemberV2_Nft) Reset() {
	*x = MemberV2_Nft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Nft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Nft) ProtoMessage() {}

func (x *MemberV2_Nft) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Nft.ProtoReflect.Descriptor instead.
func (*MemberV2_Nft) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 7}
}

func (x *MemberV2_Nft) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *MemberV2_Nft) GetInteraction() *MemberV2_Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

// 硬核会员
type MemberV2_Senior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否为硬核会员
	IsSeniorMember int32 `protobuf:"varint,1,opt,name=is_senior_member,json=isSeniorMember,proto3" json:"is_senior_member,omitempty"`
}

func (x *MemberV2_Senior) Reset() {
	*x = MemberV2_Senior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Senior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Senior) ProtoMessage() {}

func (x *MemberV2_Senior) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Senior.ProtoReflect.Descriptor instead.
func (*MemberV2_Senior) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 8}
}

func (x *MemberV2_Senior) GetIsSeniorMember() int32 {
	if x != nil {
		return x.IsSeniorMember
	}
	return 0
}

// 契约
type MemberV2_Contractor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否和up签订契约
	IsContractor bool `protobuf:"varint,1,opt,name=is_contractor,json=isContractor,proto3" json:"is_contractor,omitempty"`
	// 契约显示文案
	ContractDesc string `protobuf:"bytes,2,opt,name=contract_desc,json=contractDesc,proto3" json:"contract_desc,omitempty"`
}

func (x *MemberV2_Contractor) Reset() {
	*x = MemberV2_Contractor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberV2_Contractor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberV2_Contractor) ProtoMessage() {}

func (x *MemberV2_Contractor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberV2_Contractor.ProtoReflect.Descriptor instead.
func (*MemberV2_Contractor) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{23, 9}
}

func (x *MemberV2_Contractor) GetIsContractor() bool {
	if x != nil {
		return x.IsContractor
	}
	return false
}

func (x *MemberV2_Contractor) GetContractDesc() string {
	if x != nil {
		return x.ContractDesc
	}
	return ""
}

type ShareRepliesInfoResp_ShareExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPgc bool `protobuf:"varint,1,opt,name=is_pgc,json=isPgc,proto3" json:"is_pgc,omitempty"`
}

func (x *ShareRepliesInfoResp_ShareExtra) Reset() {
	*x = ShareRepliesInfoResp_ShareExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareRepliesInfoResp_ShareExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareRepliesInfoResp_ShareExtra) ProtoMessage() {}

func (x *ShareRepliesInfoResp_ShareExtra) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareRepliesInfoResp_ShareExtra.ProtoReflect.Descriptor instead.
func (*ShareRepliesInfoResp_ShareExtra) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{49, 0}
}

func (x *ShareRepliesInfoResp_ShareExtra) GetIsPgc() bool {
	if x != nil {
		return x.IsPgc
	}
	return false
}

// 评论区筛选类型
type SubjectControl_FilterTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *SubjectControl_FilterTag) Reset() {
	*x = SubjectControl_FilterTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectControl_FilterTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectControl_FilterTag) ProtoMessage() {}

func (x *SubjectControl_FilterTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectControl_FilterTag.ProtoReflect.Descriptor instead.
func (*SubjectControl_FilterTag) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{52, 0}
}

func (x *SubjectControl_FilterTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubjectControl_FilterTag) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// 扩展字段
type Url_Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsItemId int64 `protobuf:"varint,1,opt,name=goods_item_id,json=goodsItemId,proto3" json:"goods_item_id,omitempty"`
	GoodsPrefetchedCache string `protobuf:"bytes,2,opt,name=goods_prefetched_cache,json=goodsPrefetchedCache,proto3" json:"goods_prefetched_cache,omitempty"`
	GoodsShowType int32 `protobuf:"varint,3,opt,name=goods_show_type,json=goodsShowType,proto3" json:"goods_show_type,omitempty"`
	// 热词搜索
	IsWordSearch bool `protobuf:"varint,4,opt,name=is_word_search,json=isWordSearch,proto3" json:"is_word_search,omitempty"`
	GoodsCmControl int64 `protobuf:"varint,5,opt,name=goods_cm_control,json=goodsCmControl,proto3" json:"goods_cm_control,omitempty"`
}

func (x *Url_Extra) Reset() {
	*x = Url_Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url_Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url_Extra) ProtoMessage() {}

func (x *Url_Extra) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_main_community_reply_v1_reply_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url_Extra.ProtoReflect.Descriptor instead.
func (*Url_Extra) Descriptor() ([]byte, []int) {
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP(), []int{58, 0}
}

func (x *Url_Extra) GetGoodsItemId() int64 {
	if x != nil {
		return x.GoodsItemId
	}
	return 0
}

func (x *Url_Extra) GetGoodsPrefetchedCache() string {
	if x != nil {
		return x.GoodsPrefetchedCache
	}
	return ""
}

func (x *Url_Extra) GetGoodsShowType() int32 {
	if x != nil {
		return x.GoodsShowType
	}
	return 0
}

func (x *Url_Extra) GetIsWordSearch() bool {
	if x != nil {
		return x.IsWordSearch
	}
	return false
}

func (x *Url_Extra) GetGoodsCmControl() int64 {
	if x != nil {
		return x.GoodsCmControl
	}
	return 0
}

var File_bilibili_main_community_reply_v1_reply_proto protoreflect.FileDescriptor

var file_bilibili_main_community_reply_v1_reply_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x08,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x41, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x41, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x0d,
	0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0x39, 0x0a, 0x0b, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x02, 0x43,
	0x4d, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc7,
	0x08, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6e,
	0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12,
	0x4a, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x44, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x3a, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x5f, 0x0a,
	0x0e, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x64, 0x12, 0x47,
	0x0a, 0x09, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x52, 0x08, 0x72,
	0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x63,
	0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x0a, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x0a, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x08, 0x55, 0x72, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x53, 0x72, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x67, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x69, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x67,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x69,
	0x6d, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x6f, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x59, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x46, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x70, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x59, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x29,
	0x0a, 0x07, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xc3, 0x01, 0x0a, 0x05, 0x45, 0x6d,
	0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d,
	0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x66, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x8b, 0x01, 0x0a, 0x0f, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xb1, 0x01,
	0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x48, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x40, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xab, 0x03, 0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6d,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x4d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0d, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22,
	0xdc, 0x09, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12,
	0x59, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x42, 0x0a, 0x06, 0x75, 0x70,
	0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x70, 0x54, 0x6f, 0x70, 0x12, 0x48,
	0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f, 0x70, 0x12, 0x46, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x12, 0x40, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x07,
	0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x50, 0x0a, 0x0c, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x02, 0x63, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x4d, 0x52, 0x02, 0x63, 0x6d, 0x12, 0x43, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x03, 0x71, 0x6f, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x6f, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x71,
	0x6f, 0x65, 0x12, 0x5c, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82,
	0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x70,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x72, 0x70, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x65, 0x6b, 0x52, 0x70, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xf8, 0x0e, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x14, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x76, 0x69, 0x70, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x70, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x70, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x72, 0x62,
	0x5f, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x72, 0x62, 0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x72, 0x62, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x67, 0x61, 0x72, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3a,
	0x0a, 0x1a, 0x67, 0x61, 0x72, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x67, 0x61, 0x72, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x61,
	0x72, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x61, 0x72, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x4a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x72, 0x62, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x67, 0x61, 0x72, 0x62, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x13, 0x67, 0x61, 0x72, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66,
	0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x67, 0x61, 0x72, 0x62, 0x43, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x27, 0x0a, 0x10, 0x67, 0x61, 0x72, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x61, 0x72, 0x62,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x73, 0x46, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x6e,
	0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x6e,
	0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x70, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x76, 0x69, 0x70, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x76, 0x69, 0x70, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x76, 0x69, 0x70, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76,
	0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x76,
	0x69, 0x70, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x66, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x45, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x66, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x66,
	0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x66, 0x61, 0x6e, 0x73,
	0x4d, 0x65, 0x64, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33,
	0x0a, 0x16, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x66, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66,
	0x61, 0x6e, 0x73, 0x47, 0x75, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x66, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x66, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x65, 0x4e, 0x66, 0x74, 0x4e, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x6e, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6e, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x66, 0x61, 0x6e, 0x73, 0x47, 0x75, 0x61, 0x72, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x6e, 0x73, 0x48, 0x6f, 0x6e,
	0x6f, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x1a, 0xbb, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x54,
	0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0xa9, 0x01, 0x0a, 0x0e, 0x4e, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x22, 0x30, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x41, 0x49, 0x4e, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x54,
	0x10, 0x02, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x48, 0x4f, 0x57, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x5a, 0x4f, 0x4f, 0x4d, 0x49, 0x4e, 0x4d, 0x41, 0x49, 0x4e, 0x4c,
	0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x02, 0x22, 0x9b,
	0x12, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x12, 0x46, 0x0a, 0x05, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x05, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x12, 0x4f, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x32, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x56, 0x69,
	0x70, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x43, 0x0a, 0x04, 0x67, 0x61, 0x72, 0x62, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32,
	0x2e, 0x47, 0x61, 0x72, 0x62, 0x52, 0x04, 0x67, 0x61, 0x72, 0x62, 0x12, 0x46, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x52, 0x05, 0x6d, 0x65,
	0x64, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x03, 0x6e, 0x66, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x4e, 0x66, 0x74,
	0x52, 0x03, 0x6e, 0x66, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x32, 0x2e, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72,
	0x12, 0x55, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x1a, 0x69, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x2b, 0x0a, 0x08, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x88, 0x02, 0x0a, 0x03, 0x56, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x70,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x1a, 0x88, 0x02, 0x0a, 0x04, 0x47,
	0x61, 0x72, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x4a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x46, 0x61, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x73,
	0x5f, 0x66, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x73, 0x46, 0x61, 0x6e, 0x1a, 0xb8, 0x02, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x67, 0x75, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x1a, 0xbf, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0b, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x53, 0x68, 0x6f, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x66, 0x74,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x73, 0x0a,
	0x03, 0x4e, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x32, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x69, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x69, 0x6f, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x56, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x22, 0x30,
	0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x49,
	0x4e, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x54, 0x10, 0x02,
	0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x48, 0x4f, 0x57, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x5a, 0x4f, 0x4f, 0x4d, 0x49, 0x4e, 0x4d, 0x41, 0x49, 0x4e, 0x4c, 0x41, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x06,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x90, 0x02, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4c,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x48, 0x69, 0x67,
	0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x5c, 0x0a, 0x12, 0x50, 0x47, 0x43, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x22, 0xd0, 0x03, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x45, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x41, 0x0a, 0x05, 0x75, 0x70, 0x54, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x75, 0x70, 0x54, 0x6f, 0x70, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x74,
	0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f, 0x70, 0x12,
	0x46, 0x0a, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x76, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x22, 0x7b, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x43, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x52, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x22, 0xf4, 0x01, 0x0a, 0x07, 0x51, 0x6f, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x6f, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x4c, 0x0a, 0x0c, 0x51,
	0x6f, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd8, 0x03, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x44, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xe9, 0x06, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x75, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x62, 0x74, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x77,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x74, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x55, 0x70, 0x54, 0x6f, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x51, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x7a, 0x5f, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x7a, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x7a, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xc3, 0x04, 0x0a,
	0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6b,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x76, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x32, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x56, 0x32, 0x22, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x38, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x22, 0x58, 0x0a, 0x08, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x44, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x0c,
	0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x8d, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x49, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x49, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x4f, 0x0a, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x46, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x78, 0x0a, 0x13, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x4d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x53, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x50, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x35, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x72, 0x70, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xca, 0x03,
	0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x69,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x5f, 0x70, 0x69,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x50,
	0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x67, 0x61, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x57, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x23, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x67, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x67, 0x63, 0x22, 0x92, 0x02, 0x0a, 0x0e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x43, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x22,
	0x71, 0x0a, 0x0f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x3d, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x22, 0x97, 0x08, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70, 0x4d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x68, 0x61, 0x73, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x68, 0x61, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x67, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x76, 0x65, 0x75, 0x70, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x65,
	0x75, 0x70, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x68, 0x61, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4a, 0x75, 0x6d, 0x70, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x1b,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x45, 0x0a, 0x1f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x55, 0x72, 0x69, 0x12, 0x6a, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x11, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73,
	0x1a, 0x3a, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x10,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x11, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x06, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x05,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x12, 0x55, 0x47, 0x43,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x0b, 0x55, 0x70, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xc7, 0x05, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x55, 0x72, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x48, 0x61,
	0x6c, 0x66, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f,
	0x73, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x63,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd9, 0x01,
	0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x50, 0x72, 0x65, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x28, 0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe2,
	0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x4c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x74, 0x65, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x03, 0x75, 0x67, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x47, 0x43, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x75, 0x67, 0x63, 0x12,
	0x48, 0x0a, 0x03, 0x70, 0x67, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x47, 0x43, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x70, 0x67, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x42, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x36, 0x0a, 0x0f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x53, 0x47,
	0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x59, 0x10, 0x02, 0x2a, 0x4b, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x49,
	0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x48, 0x4f, 0x54, 0x10, 0x03,
	0x2a, 0x4a, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x4f, 0x4f,
	0x44, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x10, 0x03, 0x2a, 0x2a, 0x0a, 0x16,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x47, 0x43, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x50, 0x47, 0x43, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x10, 0x00, 0x2a, 0x1f, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10, 0x00, 0x32, 0x97, 0x0a, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x70, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x0a, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x73, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x85, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x48, 0x6f, 0x6f,
	0x6b, 0x12, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x72, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x08, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6d, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x30,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x76, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x78, 0x0a, 0x0d,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x32, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x6f, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_main_community_reply_v1_reply_proto_rawDescOnce sync.Once
	file_bilibili_main_community_reply_v1_reply_proto_rawDescData = file_bilibili_main_community_reply_v1_reply_proto_rawDesc
)

func file_bilibili_main_community_reply_v1_reply_proto_rawDescGZIP() []byte {
	file_bilibili_main_community_reply_v1_reply_proto_rawDescOnce.Do(func() {
		file_bilibili_main_community_reply_v1_reply_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_main_community_reply_v1_reply_proto_rawDescData)
	})
	return file_bilibili_main_community_reply_v1_reply_proto_rawDescData
}

var file_bilibili_main_community_reply_v1_reply_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_bilibili_main_community_reply_v1_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_bilibili_main_community_reply_v1_reply_proto_goTypes = []interface{}{
	(DetailListScene)(0),                    // 0: bilibili.main.community.reply.v1.DetailListScene
	(Mode)(0),                               // 1: bilibili.main.community.reply.v1.Mode
	(SearchItemType)(0),                     // 2: bilibili.main.community.reply.v1.SearchItemType
	(SearchItemVideoSubType)(0),             // 3: bilibili.main.community.reply.v1.SearchItemVideoSubType
	(UserCallbackAction)(0),                 // 4: bilibili.main.community.reply.v1.UserCallbackAction
	(UserCallbackScene)(0),                  // 5: bilibili.main.community.reply.v1.UserCallbackScene
	(Member_RegionType)(0),                  // 6: bilibili.main.community.reply.v1.Member.RegionType
	(Member_ShowStatus)(0),                  // 7: bilibili.main.community.reply.v1.Member.ShowStatus
	(MemberV2_RegionType)(0),                // 8: bilibili.main.community.reply.v1.MemberV2.RegionType
	(MemberV2_ShowStatus)(0),                // 9: bilibili.main.community.reply.v1.MemberV2.ShowStatus
	(*Activity)(nil),                        // 10: bilibili.main.community.reply.v1.Activity
	(*ArticleSearchItem)(nil),               // 11: bilibili.main.community.reply.v1.ArticleSearchItem
	(*AtGroup)(nil),                         // 12: bilibili.main.community.reply.v1.AtGroup
	(*AtItem)(nil),                          // 13: bilibili.main.community.reply.v1.AtItem
	(*AtSearchReply)(nil),                   // 14: bilibili.main.community.reply.v1.AtSearchReply
	(*AtSearchReq)(nil),                     // 15: bilibili.main.community.reply.v1.AtSearchReq
	(*CM)(nil),                              // 16: bilibili.main.community.reply.v1.CM
	(*Content)(nil),                         // 17: bilibili.main.community.reply.v1.Content
	(*Picture)(nil),                         // 18: bilibili.main.community.reply.v1.Picture
	(*CursorReply)(nil),                     // 19: bilibili.main.community.reply.v1.CursorReply
	(*CursorReq)(nil),                       // 20: bilibili.main.community.reply.v1.CursorReq
	(*DetailListReply)(nil),                 // 21: bilibili.main.community.reply.v1.DetailListReply
	(*DetailListReq)(nil),                   // 22: bilibili.main.community.reply.v1.DetailListReq
	(*DialogListReply)(nil),                 // 23: bilibili.main.community.reply.v1.DialogListReply
	(*DialogListReq)(nil),                   // 24: bilibili.main.community.reply.v1.DialogListReq
	(*Effects)(nil),                         // 25: bilibili.main.community.reply.v1.Effects
	(*Emote)(nil),                           // 26: bilibili.main.community.reply.v1.Emote
	(*GoodsSearchItem)(nil),                 // 27: bilibili.main.community.reply.v1.GoodsSearchItem
	(*LikeInfo)(nil),                        // 28: bilibili.main.community.reply.v1.LikeInfo
	(*Lottery)(nil),                         // 29: bilibili.main.community.reply.v1.Lottery
	(*MainListReply)(nil),                   // 30: bilibili.main.community.reply.v1.MainListReply
	(*MainListReq)(nil),                     // 31: bilibili.main.community.reply.v1.MainListReq
	(*Member)(nil),                          // 32: bilibili.main.community.reply.v1.Member
	(*MemberV2)(nil),                        // 33: bilibili.main.community.reply.v1.MemberV2
	(*Notice)(nil),                          // 34: bilibili.main.community.reply.v1.Notice
	(*Operation)(nil),                       // 35: bilibili.main.community.reply.v1.Operation
	(*OperationTitle)(nil),                  // 36: bilibili.main.community.reply.v1.OperationTitle
	(*PGCVideoSearchItem)(nil),              // 37: bilibili.main.community.reply.v1.PGCVideoSearchItem
	(*PreviewListReply)(nil),                // 38: bilibili.main.community.reply.v1.PreviewListReply
	(*PreviewListReq)(nil),                  // 39: bilibili.main.community.reply.v1.PreviewListReq
	(*QoeInfo)(nil),                         // 40: bilibili.main.community.reply.v1.QoeInfo
	(*QoeScoreItem)(nil),                    // 41: bilibili.main.community.reply.v1.QoeScoreItem
	(*ReplyCardLabel)(nil),                  // 42: bilibili.main.community.reply.v1.ReplyCardLabel
	(*ReplyControl)(nil),                    // 43: bilibili.main.community.reply.v1.ReplyControl
	(*ReplyExtra)(nil),                      // 44: bilibili.main.community.reply.v1.ReplyExtra
	(*ReplyInfo)(nil),                       // 45: bilibili.main.community.reply.v1.ReplyInfo
	(*ReplyInfoReply)(nil),                  // 46: bilibili.main.community.reply.v1.ReplyInfoReply
	(*ReplyInfoReq)(nil),                    // 47: bilibili.main.community.reply.v1.ReplyInfoReq
	(*RichText)(nil),                        // 48: bilibili.main.community.reply.v1.RichText
	(*RichTextNote)(nil),                    // 49: bilibili.main.community.reply.v1.RichTextNote
	(*SearchItem)(nil),                      // 50: bilibili.main.community.reply.v1.SearchItem
	(*SearchItemCursorReply)(nil),           // 51: bilibili.main.community.reply.v1.SearchItemCursorReply
	(*SearchItemCursorReq)(nil),             // 52: bilibili.main.community.reply.v1.SearchItemCursorReq
	(*SearchItemPreHookReply)(nil),          // 53: bilibili.main.community.reply.v1.SearchItemPreHookReply
	(*SearchItemPreHookReq)(nil),            // 54: bilibili.main.community.reply.v1.SearchItemPreHookReq
	(*SearchItemReply)(nil),                 // 55: bilibili.main.community.reply.v1.SearchItemReply
	(*SearchItemReplyExtraInfo)(nil),        // 56: bilibili.main.community.reply.v1.SearchItemReplyExtraInfo
	(*SearchItemReq)(nil),                   // 57: bilibili.main.community.reply.v1.SearchItemReq
	(*ShareRepliesInfoReq)(nil),             // 58: bilibili.main.community.reply.v1.ShareRepliesInfoReq
	(*ShareRepliesInfoResp)(nil),            // 59: bilibili.main.community.reply.v1.ShareRepliesInfoResp
	(*ShareReplyInfo)(nil),                  // 60: bilibili.main.community.reply.v1.ShareReplyInfo
	(*ShareReplyTopic)(nil),                 // 61: bilibili.main.community.reply.v1.ShareReplyTopic
	(*SubjectControl)(nil),                  // 62: bilibili.main.community.reply.v1.SubjectControl
	(*SuggestEmotesReq)(nil),                // 63: bilibili.main.community.reply.v1.SuggestEmotesReq
	(*SuggestEmotesResp)(nil),               // 64: bilibili.main.community.reply.v1.SuggestEmotesResp
	(*Topic)(nil),                           // 65: bilibili.main.community.reply.v1.Topic
	(*UGCVideoSearchItem)(nil),              // 66: bilibili.main.community.reply.v1.UGCVideoSearchItem
	(*UpSelection)(nil),                     // 67: bilibili.main.community.reply.v1.UpSelection
	(*Url)(nil),                             // 68: bilibili.main.community.reply.v1.Url
	(*UserCallbackReply)(nil),               // 69: bilibili.main.community.reply.v1.UserCallbackReply
	(*UserCallbackReq)(nil),                 // 70: bilibili.main.community.reply.v1.UserCallbackReq
	(*VideoSearchItem)(nil),                 // 71: bilibili.main.community.reply.v1.VideoSearchItem
	(*Vote)(nil),                            // 72: bilibili.main.community.reply.v1.Vote
	nil,                                     // 73: bilibili.main.community.reply.v1.Content.MenberEntry
	nil,                                     // 74: bilibili.main.community.reply.v1.Content.EmoteEntry
	nil,                                     // 75: bilibili.main.community.reply.v1.Content.TopicEntry
	nil,                                     // 76: bilibili.main.community.reply.v1.Content.UrlEntry
	nil,                                     // 77: bilibili.main.community.reply.v1.Content.AtNameToMidEntry
	(*LikeInfo_Item)(nil),                   // 78: bilibili.main.community.reply.v1.LikeInfo.Item
	nil,                                     // 79: bilibili.main.community.reply.v1.MainListReply.CallbacksEntry
	(*Member_Region)(nil),                   // 80: bilibili.main.community.reply.v1.Member.Region
	(*Member_NftInteraction)(nil),           // 81: bilibili.main.community.reply.v1.Member.NftInteraction
	(*MemberV2_Basic)(nil),                  // 82: bilibili.main.community.reply.v1.MemberV2.Basic
	(*MemberV2_Official)(nil),               // 83: bilibili.main.community.reply.v1.MemberV2.Official
	(*MemberV2_Vip)(nil),                    // 84: bilibili.main.community.reply.v1.MemberV2.Vip
	(*MemberV2_Garb)(nil),                   // 85: bilibili.main.community.reply.v1.MemberV2.Garb
	(*MemberV2_Medal)(nil),                  // 86: bilibili.main.community.reply.v1.MemberV2.Medal
	(*MemberV2_Region)(nil),                 // 87: bilibili.main.community.reply.v1.MemberV2.Region
	(*MemberV2_Interaction)(nil),            // 88: bilibili.main.community.reply.v1.MemberV2.Interaction
	(*MemberV2_Nft)(nil),                    // 89: bilibili.main.community.reply.v1.MemberV2.Nft
	(*MemberV2_Senior)(nil),                 // 90: bilibili.main.community.reply.v1.MemberV2.Senior
	(*MemberV2_Contractor)(nil),             // 91: bilibili.main.community.reply.v1.MemberV2.Contractor
	(*ShareRepliesInfoResp_ShareExtra)(nil), // 92: bilibili.main.community.reply.v1.ShareRepliesInfoResp.ShareExtra
	(*SubjectControl_FilterTag)(nil),        // 93: bilibili.main.community.reply.v1.SubjectControl.FilterTag
	(*Url_Extra)(nil),                       // 94: bilibili.main.community.reply.v1.Url.Extra
	(*anypb.Any)(nil),                       // 95: google.protobuf.Any
}
var file_bilibili_main_community_reply_v1_reply_proto_depIdxs = []int32{
	13,  // 0: bilibili.main.community.reply.v1.AtGroup.items:type_name -> bilibili.main.community.reply.v1.AtItem
	12,  // 1: bilibili.main.community.reply.v1.AtSearchReply.groups:type_name -> bilibili.main.community.reply.v1.AtGroup
	95,  // 2: bilibili.main.community.reply.v1.CM.source_content:type_name -> google.protobuf.Any
	73,  // 3: bilibili.main.community.reply.v1.Content.menber:type_name -> bilibili.main.community.reply.v1.Content.MenberEntry
	74,  // 4: bilibili.main.community.reply.v1.Content.emote:type_name -> bilibili.main.community.reply.v1.Content.EmoteEntry
	75,  // 5: bilibili.main.community.reply.v1.Content.topic:type_name -> bilibili.main.community.reply.v1.Content.TopicEntry
	76,  // 6: bilibili.main.community.reply.v1.Content.url:type_name -> bilibili.main.community.reply.v1.Content.UrlEntry
	72,  // 7: bilibili.main.community.reply.v1.Content.vote:type_name -> bilibili.main.community.reply.v1.Vote
	77,  // 8: bilibili.main.community.reply.v1.Content.at_name_to_mid:type_name -> bilibili.main.community.reply.v1.Content.AtNameToMidEntry
	48,  // 9: bilibili.main.community.reply.v1.Content.rich_text:type_name -> bilibili.main.community.reply.v1.RichText
	18,  // 10: bilibili.main.community.reply.v1.Content.pictures:type_name -> bilibili.main.community.reply.v1.Picture
	1,   // 11: bilibili.main.community.reply.v1.CursorReply.mode:type_name -> bilibili.main.community.reply.v1.Mode
	1,   // 12: bilibili.main.community.reply.v1.CursorReq.mode:type_name -> bilibili.main.community.reply.v1.Mode
	19,  // 13: bilibili.main.community.reply.v1.DetailListReply.cursor:type_name -> bilibili.main.community.reply.v1.CursorReply
	62,  // 14: bilibili.main.community.reply.v1.DetailListReply.subject_control:type_name -> bilibili.main.community.reply.v1.SubjectControl
	45,  // 15: bilibili.main.community.reply.v1.DetailListReply.root:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	10,  // 16: bilibili.main.community.reply.v1.DetailListReply.activity:type_name -> bilibili.main.community.reply.v1.Activity
	28,  // 17: bilibili.main.community.reply.v1.DetailListReply.likes:type_name -> bilibili.main.community.reply.v1.LikeInfo
	20,  // 18: bilibili.main.community.reply.v1.DetailListReq.cursor:type_name -> bilibili.main.community.reply.v1.CursorReq
	0,   // 19: bilibili.main.community.reply.v1.DetailListReq.scene:type_name -> bilibili.main.community.reply.v1.DetailListScene
	19,  // 20: bilibili.main.community.reply.v1.DialogListReply.cursor:type_name -> bilibili.main.community.reply.v1.CursorReply
	62,  // 21: bilibili.main.community.reply.v1.DialogListReply.subject_control:type_name -> bilibili.main.community.reply.v1.SubjectControl
	45,  // 22: bilibili.main.community.reply.v1.DialogListReply.replies:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	10,  // 23: bilibili.main.community.reply.v1.DialogListReply.activity:type_name -> bilibili.main.community.reply.v1.Activity
	20,  // 24: bilibili.main.community.reply.v1.DialogListReq.cursor:type_name -> bilibili.main.community.reply.v1.CursorReq
	78,  // 25: bilibili.main.community.reply.v1.LikeInfo.items:type_name -> bilibili.main.community.reply.v1.LikeInfo.Item
	17,  // 26: bilibili.main.community.reply.v1.Lottery.content:type_name -> bilibili.main.community.reply.v1.Content
	32,  // 27: bilibili.main.community.reply.v1.Lottery.member:type_name -> bilibili.main.community.reply.v1.Member
	43,  // 28: bilibili.main.community.reply.v1.Lottery.reply_control:type_name -> bilibili.main.community.reply.v1.ReplyControl
	19,  // 29: bilibili.main.community.reply.v1.MainListReply.cursor:type_name -> bilibili.main.community.reply.v1.CursorReply
	45,  // 30: bilibili.main.community.reply.v1.MainListReply.replies:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	62,  // 31: bilibili.main.community.reply.v1.MainListReply.subject_control:type_name -> bilibili.main.community.reply.v1.SubjectControl
	45,  // 32: bilibili.main.community.reply.v1.MainListReply.up_top:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	45,  // 33: bilibili.main.community.reply.v1.MainListReply.admin_top:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	45,  // 34: bilibili.main.community.reply.v1.MainListReply.vote_top:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	34,  // 35: bilibili.main.community.reply.v1.MainListReply.notice:type_name -> bilibili.main.community.reply.v1.Notice
	29,  // 36: bilibili.main.community.reply.v1.MainListReply.lottery:type_name -> bilibili.main.community.reply.v1.Lottery
	10,  // 37: bilibili.main.community.reply.v1.MainListReply.activity:type_name -> bilibili.main.community.reply.v1.Activity
	67,  // 38: bilibili.main.community.reply.v1.MainListReply.up_selection:type_name -> bilibili.main.community.reply.v1.UpSelection
	16,  // 39: bilibili.main.community.reply.v1.MainListReply.cm:type_name -> bilibili.main.community.reply.v1.CM
	25,  // 40: bilibili.main.community.reply.v1.MainListReply.effects:type_name -> bilibili.main.community.reply.v1.Effects
	35,  // 41: bilibili.main.community.reply.v1.MainListReply.operation:type_name -> bilibili.main.community.reply.v1.Operation
	45,  // 42: bilibili.main.community.reply.v1.MainListReply.top_replies:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	40,  // 43: bilibili.main.community.reply.v1.MainListReply.qoe:type_name -> bilibili.main.community.reply.v1.QoeInfo
	79,  // 44: bilibili.main.community.reply.v1.MainListReply.callbacks:type_name -> bilibili.main.community.reply.v1.MainListReply.CallbacksEntry
	20,  // 45: bilibili.main.community.reply.v1.MainListReq.cursor:type_name -> bilibili.main.community.reply.v1.CursorReq
	81,  // 46: bilibili.main.community.reply.v1.Member.nft_interaction:type_name -> bilibili.main.community.reply.v1.Member.NftInteraction
	82,  // 47: bilibili.main.community.reply.v1.MemberV2.basic:type_name -> bilibili.main.community.reply.v1.MemberV2.Basic
	83,  // 48: bilibili.main.community.reply.v1.MemberV2.official:type_name -> bilibili.main.community.reply.v1.MemberV2.Official
	84,  // 49: bilibili.main.community.reply.v1.MemberV2.vip:type_name -> bilibili.main.community.reply.v1.MemberV2.Vip
	85,  // 50: bilibili.main.community.reply.v1.MemberV2.garb:type_name -> bilibili.main.community.reply.v1.MemberV2.Garb
	86,  // 51: bilibili.main.community.reply.v1.MemberV2.medal:type_name -> bilibili.main.community.reply.v1.MemberV2.Medal
	89,  // 52: bilibili.main.community.reply.v1.MemberV2.nft:type_name -> bilibili.main.community.reply.v1.MemberV2.Nft
	90,  // 53: bilibili.main.community.reply.v1.MemberV2.senior:type_name -> bilibili.main.community.reply.v1.MemberV2.Senior
	91,  // 54: bilibili.main.community.reply.v1.MemberV2.contractor:type_name -> bilibili.main.community.reply.v1.MemberV2.Contractor
	36,  // 55: bilibili.main.community.reply.v1.Operation.title:type_name -> bilibili.main.community.reply.v1.OperationTitle
	36,  // 56: bilibili.main.community.reply.v1.Operation.subtitle:type_name -> bilibili.main.community.reply.v1.OperationTitle
	19,  // 57: bilibili.main.community.reply.v1.PreviewListReply.cursor:type_name -> bilibili.main.community.reply.v1.CursorReply
	45,  // 58: bilibili.main.community.reply.v1.PreviewListReply.replies:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	62,  // 59: bilibili.main.community.reply.v1.PreviewListReply.subject_control:type_name -> bilibili.main.community.reply.v1.SubjectControl
	45,  // 60: bilibili.main.community.reply.v1.PreviewListReply.upTop:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	45,  // 61: bilibili.main.community.reply.v1.PreviewListReply.admin_top:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	45,  // 62: bilibili.main.community.reply.v1.PreviewListReply.vote_top:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	20,  // 63: bilibili.main.community.reply.v1.PreviewListReq.cursor:type_name -> bilibili.main.community.reply.v1.CursorReq
	41,  // 64: bilibili.main.community.reply.v1.QoeInfo.score_items:type_name -> bilibili.main.community.reply.v1.QoeScoreItem
	42,  // 65: bilibili.main.community.reply.v1.ReplyControl.card_labels:type_name -> bilibili.main.community.reply.v1.ReplyCardLabel
	45,  // 66: bilibili.main.community.reply.v1.ReplyInfo.replies:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	17,  // 67: bilibili.main.community.reply.v1.ReplyInfo.content:type_name -> bilibili.main.community.reply.v1.Content
	32,  // 68: bilibili.main.community.reply.v1.ReplyInfo.member:type_name -> bilibili.main.community.reply.v1.Member
	43,  // 69: bilibili.main.community.reply.v1.ReplyInfo.reply_control:type_name -> bilibili.main.community.reply.v1.ReplyControl
	33,  // 70: bilibili.main.community.reply.v1.ReplyInfo.member_v2:type_name -> bilibili.main.community.reply.v1.MemberV2
	45,  // 71: bilibili.main.community.reply.v1.ReplyInfoReply.reply:type_name -> bilibili.main.community.reply.v1.ReplyInfo
	49,  // 72: bilibili.main.community.reply.v1.RichText.note:type_name -> bilibili.main.community.reply.v1.RichTextNote
	27,  // 73: bilibili.main.community.reply.v1.SearchItem.goods:type_name -> bilibili.main.community.reply.v1.GoodsSearchItem
	71,  // 74: bilibili.main.community.reply.v1.SearchItem.video:type_name -> bilibili.main.community.reply.v1.VideoSearchItem
	11,  // 75: bilibili.main.community.reply.v1.SearchItem.article:type_name -> bilibili.main.community.reply.v1.ArticleSearchItem
	2,   // 76: bilibili.main.community.reply.v1.SearchItemCursorReq.item_type:type_name -> bilibili.main.community.reply.v1.SearchItemType
	2,   // 77: bilibili.main.community.reply.v1.SearchItemPreHookReply.ordered_type:type_name -> bilibili.main.community.reply.v1.SearchItemType
	51,  // 78: bilibili.main.community.reply.v1.SearchItemReply.cursor:type_name -> bilibili.main.community.reply.v1.SearchItemCursorReply
	50,  // 79: bilibili.main.community.reply.v1.SearchItemReply.items:type_name -> bilibili.main.community.reply.v1.SearchItem
	56,  // 80: bilibili.main.community.reply.v1.SearchItemReply.extra:type_name -> bilibili.main.community.reply.v1.SearchItemReplyExtraInfo
	52,  // 81: bilibili.main.community.reply.v1.SearchItemReq.cursor:type_name -> bilibili.main.community.reply.v1.SearchItemCursorReq
	60,  // 82: bilibili.main.community.reply.v1.ShareRepliesInfoResp.infos:type_name -> bilibili.main.community.reply.v1.ShareReplyInfo
	61,  // 83: bilibili.main.community.reply.v1.ShareRepliesInfoResp.topic:type_name -> bilibili.main.community.reply.v1.ShareReplyTopic
	92,  // 84: bilibili.main.community.reply.v1.ShareRepliesInfoResp.extra:type_name -> bilibili.main.community.reply.v1.ShareRepliesInfoResp.ShareExtra
	32,  // 85: bilibili.main.community.reply.v1.ShareReplyInfo.member:type_name -> bilibili.main.community.reply.v1.Member
	17,  // 86: bilibili.main.community.reply.v1.ShareReplyInfo.content:type_name -> bilibili.main.community.reply.v1.Content
	65,  // 87: bilibili.main.community.reply.v1.ShareReplyTopic.topic:type_name -> bilibili.main.community.reply.v1.Topic
	93,  // 88: bilibili.main.community.reply.v1.SubjectControl.support_filter_tags:type_name -> bilibili.main.community.reply.v1.SubjectControl.FilterTag
	26,  // 89: bilibili.main.community.reply.v1.SuggestEmotesResp.emotes:type_name -> bilibili.main.community.reply.v1.Emote
	94,  // 90: bilibili.main.community.reply.v1.Url.extra:type_name -> bilibili.main.community.reply.v1.Url.Extra
	5,   // 91: bilibili.main.community.reply.v1.UserCallbackReq.scene:type_name -> bilibili.main.community.reply.v1.UserCallbackScene
	4,   // 92: bilibili.main.community.reply.v1.UserCallbackReq.action:type_name -> bilibili.main.community.reply.v1.UserCallbackAction
	3,   // 93: bilibili.main.community.reply.v1.VideoSearchItem.type:type_name -> bilibili.main.community.reply.v1.SearchItemVideoSubType
	66,  // 94: bilibili.main.community.reply.v1.VideoSearchItem.ugc:type_name -> bilibili.main.community.reply.v1.UGCVideoSearchItem
	37,  // 95: bilibili.main.community.reply.v1.VideoSearchItem.pgc:type_name -> bilibili.main.community.reply.v1.PGCVideoSearchItem
	32,  // 96: bilibili.main.community.reply.v1.Content.MenberEntry.value:type_name -> bilibili.main.community.reply.v1.Member
	26,  // 97: bilibili.main.community.reply.v1.Content.EmoteEntry.value:type_name -> bilibili.main.community.reply.v1.Emote
	65,  // 98: bilibili.main.community.reply.v1.Content.TopicEntry.value:type_name -> bilibili.main.community.reply.v1.Topic
	68,  // 99: bilibili.main.community.reply.v1.Content.UrlEntry.value:type_name -> bilibili.main.community.reply.v1.Url
	32,  // 100: bilibili.main.community.reply.v1.LikeInfo.Item.member:type_name -> bilibili.main.community.reply.v1.Member
	6,   // 101: bilibili.main.community.reply.v1.Member.Region.type:type_name -> bilibili.main.community.reply.v1.Member.RegionType
	7,   // 102: bilibili.main.community.reply.v1.Member.Region.show_status:type_name -> bilibili.main.community.reply.v1.Member.ShowStatus
	80,  // 103: bilibili.main.community.reply.v1.Member.NftInteraction.region:type_name -> bilibili.main.community.reply.v1.Member.Region
	8,   // 104: bilibili.main.community.reply.v1.MemberV2.Region.type:type_name -> bilibili.main.community.reply.v1.MemberV2.RegionType
	9,   // 105: bilibili.main.community.reply.v1.MemberV2.Region.show_status:type_name -> bilibili.main.community.reply.v1.MemberV2.ShowStatus
	87,  // 106: bilibili.main.community.reply.v1.MemberV2.Interaction.region:type_name -> bilibili.main.community.reply.v1.MemberV2.Region
	88,  // 107: bilibili.main.community.reply.v1.MemberV2.Nft.interaction:type_name -> bilibili.main.community.reply.v1.MemberV2.Interaction
	31,  // 108: bilibili.main.community.reply.v1.Reply.MainList:input_type -> bilibili.main.community.reply.v1.MainListReq
	22,  // 109: bilibili.main.community.reply.v1.Reply.DetailList:input_type -> bilibili.main.community.reply.v1.DetailListReq
	24,  // 110: bilibili.main.community.reply.v1.Reply.DialogList:input_type -> bilibili.main.community.reply.v1.DialogListReq
	39,  // 111: bilibili.main.community.reply.v1.Reply.PreviewList:input_type -> bilibili.main.community.reply.v1.PreviewListReq
	54,  // 112: bilibili.main.community.reply.v1.Reply.SearchItemPreHook:input_type -> bilibili.main.community.reply.v1.SearchItemPreHookReq
	57,  // 113: bilibili.main.community.reply.v1.Reply.SearchItem:input_type -> bilibili.main.community.reply.v1.SearchItemReq
	15,  // 114: bilibili.main.community.reply.v1.Reply.AtSearch:input_type -> bilibili.main.community.reply.v1.AtSearchReq
	47,  // 115: bilibili.main.community.reply.v1.Reply.ReplyInfo:input_type -> bilibili.main.community.reply.v1.ReplyInfoReq
	70,  // 116: bilibili.main.community.reply.v1.Reply.UserCallback:input_type -> bilibili.main.community.reply.v1.UserCallbackReq
	58,  // 117: bilibili.main.community.reply.v1.Reply.ShareRepliesInfo:input_type -> bilibili.main.community.reply.v1.ShareRepliesInfoReq
	63,  // 118: bilibili.main.community.reply.v1.Reply.SuggestEmotes:input_type -> bilibili.main.community.reply.v1.SuggestEmotesReq
	30,  // 119: bilibili.main.community.reply.v1.Reply.MainList:output_type -> bilibili.main.community.reply.v1.MainListReply
	21,  // 120: bilibili.main.community.reply.v1.Reply.DetailList:output_type -> bilibili.main.community.reply.v1.DetailListReply
	23,  // 121: bilibili.main.community.reply.v1.Reply.DialogList:output_type -> bilibili.main.community.reply.v1.DialogListReply
	38,  // 122: bilibili.main.community.reply.v1.Reply.PreviewList:output_type -> bilibili.main.community.reply.v1.PreviewListReply
	53,  // 123: bilibili.main.community.reply.v1.Reply.SearchItemPreHook:output_type -> bilibili.main.community.reply.v1.SearchItemPreHookReply
	55,  // 124: bilibili.main.community.reply.v1.Reply.SearchItem:output_type -> bilibili.main.community.reply.v1.SearchItemReply
	14,  // 125: bilibili.main.community.reply.v1.Reply.AtSearch:output_type -> bilibili.main.community.reply.v1.AtSearchReply
	46,  // 126: bilibili.main.community.reply.v1.Reply.ReplyInfo:output_type -> bilibili.main.community.reply.v1.ReplyInfoReply
	69,  // 127: bilibili.main.community.reply.v1.Reply.UserCallback:output_type -> bilibili.main.community.reply.v1.UserCallbackReply
	59,  // 128: bilibili.main.community.reply.v1.Reply.ShareRepliesInfo:output_type -> bilibili.main.community.reply.v1.ShareRepliesInfoResp
	64,  // 129: bilibili.main.community.reply.v1.Reply.SuggestEmotes:output_type -> bilibili.main.community.reply.v1.SuggestEmotesResp
	119, // [119:130] is the sub-list for method output_type
	108, // [108:119] is the sub-list for method input_type
	108, // [108:108] is the sub-list for extension type_name
	108, // [108:108] is the sub-list for extension extendee
	0,   // [0:108] is the sub-list for field type_name
}

func init() { file_bilibili_main_community_reply_v1_reply_proto_init() }
func file_bilibili_main_community_reply_v1_reply_proto_init() {
	if File_bilibili_main_community_reply_v1_reply_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleSearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Picture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Effects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lottery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGCVideoSearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QoeScoreItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyCardLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RichTextNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemCursorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemCursorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemPreHookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemPreHookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemReplyExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRepliesInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRepliesInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareReplyTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestEmotesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestEmotesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UGCVideoSearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Url); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCallbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoSearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeInfo_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member_Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member_NftInteraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Basic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Official); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Vip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Garb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Medal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Nft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Senior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberV2_Contractor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareRepliesInfoResp_ShareExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectControl_FilterTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_main_community_reply_v1_reply_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Url_Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_main_community_reply_v1_reply_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*RichText_Note)(nil),
	}
	file_bilibili_main_community_reply_v1_reply_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*SearchItem_Goods)(nil),
		(*SearchItem_Video)(nil),
		(*SearchItem_Article)(nil),
	}
	file_bilibili_main_community_reply_v1_reply_proto_msgTypes[61].OneofWrappers = []interface{}{
		(*VideoSearchItem_Ugc)(nil),
		(*VideoSearchItem_Pgc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_main_community_reply_v1_reply_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_main_community_reply_v1_reply_proto_goTypes,
		DependencyIndexes: file_bilibili_main_community_reply_v1_reply_proto_depIdxs,
		EnumInfos:         file_bilibili_main_community_reply_v1_reply_proto_enumTypes,
		MessageInfos:      file_bilibili_main_community_reply_v1_reply_proto_msgTypes,
	}.Build()
	File_bilibili_main_community_reply_v1_reply_proto = out.File
	file_bilibili_main_community_reply_v1_reply_proto_rawDesc = nil
	file_bilibili_main_community_reply_v1_reply_proto_goTypes = nil
	file_bilibili_main_community_reply_v1_reply_proto_depIdxs = nil
}
