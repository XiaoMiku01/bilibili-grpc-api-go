// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: bilibili/pgc/gateway/player/v1/playurl.proto

package v1

import (
	v1 "github.com/XiaoMiku01/bilibili-grpc-api-go/bilibili/app/playurl/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 其他业务信息
type BusinessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前视频是否是预览
	IsPreview bool `protobuf:"varint,1,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 用户是否承包过
	Bp bool `protobuf:"varint,2,opt,name=bp,proto3" json:"bp,omitempty"`
	// drm使用
	MarlinToken string `protobuf:"bytes,3,opt,name=marlin_token,json=marlinToken,proto3" json:"marlin_token,omitempty"`
}

func (x *BusinessInfo) Reset() {
	*x = BusinessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusinessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessInfo) ProtoMessage() {}

func (x *BusinessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessInfo.ProtoReflect.Descriptor instead.
func (*BusinessInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessInfo) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *BusinessInfo) GetBp() bool {
	if x != nil {
		return x.Bp
	}
	return false
}

func (x *BusinessInfo) GetMarlinToken() string {
	if x != nil {
		return x.MarlinToken
	}
	return ""
}

// 事件
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 震动
	Shake *Shake `protobuf:"bytes,1,opt,name=shake,proto3" json:"shake,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetShake() *Shake {
	if x != nil {
		return x.Shake
	}
	return nil
}

// 播放信息
type LivePlayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentQn int32 `protobuf:"varint,1,opt,name=current_qn,json=currentQn,proto3" json:"current_qn,omitempty"`
	QualityDescription []*QualityDescription `protobuf:"bytes,2,rep,name=quality_description,json=qualityDescription,proto3" json:"quality_description,omitempty"`
	Durl []*ResponseDataUrl `protobuf:"bytes,3,rep,name=durl,proto3" json:"durl,omitempty"`
}

func (x *LivePlayInfo) Reset() {
	*x = LivePlayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivePlayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivePlayInfo) ProtoMessage() {}

func (x *LivePlayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivePlayInfo.ProtoReflect.Descriptor instead.
func (*LivePlayInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{2}
}

func (x *LivePlayInfo) GetCurrentQn() int32 {
	if x != nil {
		return x.CurrentQn
	}
	return 0
}

func (x *LivePlayInfo) GetQualityDescription() []*QualityDescription {
	if x != nil {
		return x.QualityDescription
	}
	return nil
}

func (x *LivePlayInfo) GetDurl() []*ResponseDataUrl {
	if x != nil {
		return x.Durl
	}
	return nil
}

// 直播播放页信息-响应
type LivePlayViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间信息
	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	// 播放信息
	PlayInfo *LivePlayInfo `protobuf:"bytes,2,opt,name=play_info,json=playInfo,proto3" json:"play_info,omitempty"`
}

func (x *LivePlayViewReply) Reset() {
	*x = LivePlayViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivePlayViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivePlayViewReply) ProtoMessage() {}

func (x *LivePlayViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivePlayViewReply.ProtoReflect.Descriptor instead.
func (*LivePlayViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{3}
}

func (x *LivePlayViewReply) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *LivePlayViewReply) GetPlayInfo() *LivePlayInfo {
	if x != nil {
		return x.PlayInfo
	}
	return nil
}

// 直播播放页信息-请求
type LivePlayViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 剧集epid
	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	// 清晰度
	// 0,10000:原画 400:蓝光 250:超清 150:高清 80:流畅
	Quality uint32 `protobuf:"varint,2,opt,name=quality,proto3" json:"quality,omitempty"`
	// 类型
	// 0:音频 2:hevc 4:dash 8:p2p, 16:蒙版
	Ptype uint32 `protobuf:"varint,3,opt,name=ptype,proto3" json:"ptype,omitempty"`
	// 是否请求https
	Https bool `protobuf:"varint,4,opt,name=https,proto3" json:"https,omitempty"`
	// 0:默认直播间播放 1:投屏播放
	PlayType uint32 `protobuf:"varint,5,opt,name=play_type,json=playType,proto3" json:"play_type,omitempty"`
	// 投屏设备
	// 0:默认其他 1:OTT设备
	DeviceType int32 `protobuf:"varint,6,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
}

func (x *LivePlayViewReq) Reset() {
	*x = LivePlayViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LivePlayViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LivePlayViewReq) ProtoMessage() {}

func (x *LivePlayViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LivePlayViewReq.ProtoReflect.Descriptor instead.
func (*LivePlayViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{4}
}

func (x *LivePlayViewReq) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *LivePlayViewReq) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *LivePlayViewReq) GetPtype() uint32 {
	if x != nil {
		return x.Ptype
	}
	return 0
}

func (x *LivePlayViewReq) GetHttps() bool {
	if x != nil {
		return x.Https
	}
	return false
}

func (x *LivePlayViewReq) GetPlayType() uint32 {
	if x != nil {
		return x.PlayType
	}
	return 0
}

func (x *LivePlayViewReq) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

// 禁用功能配置
type PlayAbilityConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundPlayDisable bool `protobuf:"varint,1,opt,name=background_play_disable,json=backgroundPlayDisable,proto3" json:"background_play_disable,omitempty"`    // 后台播放
	FlipDisable           bool `protobuf:"varint,2,opt,name=flip_disable,json=flipDisable,proto3" json:"flip_disable,omitempty"`                                    // 镜像反转
	CastDisable           bool `protobuf:"varint,3,opt,name=cast_disable,json=castDisable,proto3" json:"cast_disable,omitempty"`                                    // 投屏
	FeedbackDisable       bool `protobuf:"varint,4,opt,name=feedback_disable,json=feedbackDisable,proto3" json:"feedback_disable,omitempty"`                        // 反馈
	SubtitleDisable       bool `protobuf:"varint,5,opt,name=subtitle_disable,json=subtitleDisable,proto3" json:"subtitle_disable,omitempty"`                        // 字幕
	PlaybackRateDisable   bool `protobuf:"varint,6,opt,name=playback_rate_disable,json=playbackRateDisable,proto3" json:"playback_rate_disable,omitempty"`          // 播放速度
	TimeUpDisable         bool `protobuf:"varint,7,opt,name=time_up_disable,json=timeUpDisable,proto3" json:"time_up_disable,omitempty"`                            // 定时停止
	PlaybackModeDisable   bool `protobuf:"varint,8,opt,name=playback_mode_disable,json=playbackModeDisable,proto3" json:"playback_mode_disable,omitempty"`          // 播放方式
	ScaleModeDisable      bool `protobuf:"varint,9,opt,name=scale_mode_disable,json=scaleModeDisable,proto3" json:"scale_mode_disable,omitempty"`                   // 画面尺寸
	LikeDisable           bool `protobuf:"varint,10,opt,name=like_disable,json=likeDisable,proto3" json:"like_disable,omitempty"`                                   // 赞
	DislikeDisable        bool `protobuf:"varint,11,opt,name=dislike_disable,json=dislikeDisable,proto3" json:"dislike_disable,omitempty"`                          // 踩
	CoinDisable           bool `protobuf:"varint,12,opt,name=coin_disable,json=coinDisable,proto3" json:"coin_disable,omitempty"`                                   // 投币
	ElecDisable           bool `protobuf:"varint,13,opt,name=elec_disable,json=elecDisable,proto3" json:"elec_disable,omitempty"`                                   // 充电
	ShareDisable          bool `protobuf:"varint,14,opt,name=share_disable,json=shareDisable,proto3" json:"share_disable,omitempty"`                                // 分享
	ScreenShotDisable     bool `protobuf:"varint,15,opt,name=screen_shot_disable,json=screenShotDisable,proto3" json:"screen_shot_disable,omitempty"`               // 截图
	LockScreenDisable     bool `protobuf:"varint,16,opt,name=lock_screen_disable,json=lockScreenDisable,proto3" json:"lock_screen_disable,omitempty"`               // 锁定
	RecommendDisable      bool `protobuf:"varint,17,opt,name=recommend_disable,json=recommendDisable,proto3" json:"recommend_disable,omitempty"`                    // 相关推荐
	PlaybackSpeedDisable  bool `protobuf:"varint,18,opt,name=playback_speed_disable,json=playbackSpeedDisable,proto3" json:"playback_speed_disable,omitempty"`      // 播放速度
	DefinitionDisable     bool `protobuf:"varint,19,opt,name=definition_disable,json=definitionDisable,proto3" json:"definition_disable,omitempty"`                 // 清晰度
	SelectionsDisable     bool `protobuf:"varint,20,opt,name=selections_disable,json=selectionsDisable,proto3" json:"selections_disable,omitempty"`                 // 选集
	NextDisable           bool `protobuf:"varint,21,opt,name=next_disable,json=nextDisable,proto3" json:"next_disable,omitempty"`                                   // 下一集
	EditDmDisable         bool `protobuf:"varint,22,opt,name=edit_dm_disable,json=editDmDisable,proto3" json:"edit_dm_disable,omitempty"`                           // 编辑弹幕
	SmallWindowDisable    bool `protobuf:"varint,23,opt,name=small_window_disable,json=smallWindowDisable,proto3" json:"small_window_disable,omitempty"`            // 小窗
	ShakeDisable          bool `protobuf:"varint,24,opt,name=shake_disable,json=shakeDisable,proto3" json:"shake_disable,omitempty"`                                // 震动
	OuterDmDisable        bool `protobuf:"varint,25,opt,name=outer_dm_disable,json=outerDmDisable,proto3" json:"outer_dm_disable,omitempty"`                        // 外层面板弹幕设置
	InnerDmDisable        bool `protobuf:"varint,26,opt,name=inner_dm_disable,json=innerDmDisable,proto3" json:"inner_dm_disable,omitempty"`                        // 三点内弹幕设置
	FreyaEnterDisable     bool `protobuf:"varint,27,opt,name=freya_enter_disable,json=freyaEnterDisable,proto3" json:"freya_enter_disable,omitempty"`               // 一起看入口
	DolbyDisable          bool `protobuf:"varint,28,opt,name=dolby_disable,json=dolbyDisable,proto3" json:"dolby_disable,omitempty"`                                // 杜比音效
	FreyaFullDisable      bool `protobuf:"varint,29,opt,name=freya_full_disable,json=freyaFullDisable,proto3" json:"freya_full_disable,omitempty"`                  // 全屏一起看入口
	SkipOpedSwitchDisable bool `protobuf:"varint,30,opt,name=skip_oped_switch_disable,json=skipOpedSwitchDisable,proto3" json:"skip_oped_switch_disable,omitempty"` //
}

func (x *PlayAbilityConf) Reset() {
	*x = PlayAbilityConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAbilityConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAbilityConf) ProtoMessage() {}

func (x *PlayAbilityConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAbilityConf.ProtoReflect.Descriptor instead.
func (*PlayAbilityConf) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{5}
}

func (x *PlayAbilityConf) GetBackgroundPlayDisable() bool {
	if x != nil {
		return x.BackgroundPlayDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFlipDisable() bool {
	if x != nil {
		return x.FlipDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCastDisable() bool {
	if x != nil {
		return x.CastDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFeedbackDisable() bool {
	if x != nil {
		return x.FeedbackDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSubtitleDisable() bool {
	if x != nil {
		return x.SubtitleDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackRateDisable() bool {
	if x != nil {
		return x.PlaybackRateDisable
	}
	return false
}

func (x *PlayAbilityConf) GetTimeUpDisable() bool {
	if x != nil {
		return x.TimeUpDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackModeDisable() bool {
	if x != nil {
		return x.PlaybackModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScaleModeDisable() bool {
	if x != nil {
		return x.ScaleModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLikeDisable() bool {
	if x != nil {
		return x.LikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDislikeDisable() bool {
	if x != nil {
		return x.DislikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCoinDisable() bool {
	if x != nil {
		return x.CoinDisable
	}
	return false
}

func (x *PlayAbilityConf) GetElecDisable() bool {
	if x != nil {
		return x.ElecDisable
	}
	return false
}

func (x *PlayAbilityConf) GetShareDisable() bool {
	if x != nil {
		return x.ShareDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScreenShotDisable() bool {
	if x != nil {
		return x.ScreenShotDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLockScreenDisable() bool {
	if x != nil {
		return x.LockScreenDisable
	}
	return false
}

func (x *PlayAbilityConf) GetRecommendDisable() bool {
	if x != nil {
		return x.RecommendDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackSpeedDisable() bool {
	if x != nil {
		return x.PlaybackSpeedDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDefinitionDisable() bool {
	if x != nil {
		return x.DefinitionDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSelectionsDisable() bool {
	if x != nil {
		return x.SelectionsDisable
	}
	return false
}

func (x *PlayAbilityConf) GetNextDisable() bool {
	if x != nil {
		return x.NextDisable
	}
	return false
}

func (x *PlayAbilityConf) GetEditDmDisable() bool {
	if x != nil {
		return x.EditDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSmallWindowDisable() bool {
	if x != nil {
		return x.SmallWindowDisable
	}
	return false
}

func (x *PlayAbilityConf) GetShakeDisable() bool {
	if x != nil {
		return x.ShakeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetOuterDmDisable() bool {
	if x != nil {
		return x.OuterDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetInnerDmDisable() bool {
	if x != nil {
		return x.InnerDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFreyaEnterDisable() bool {
	if x != nil {
		return x.FreyaEnterDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDolbyDisable() bool {
	if x != nil {
		return x.DolbyDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFreyaFullDisable() bool {
	if x != nil {
		return x.FreyaFullDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSkipOpedSwitchDisable() bool {
	if x != nil {
		return x.SkipOpedSwitchDisable
	}
	return false
}

// 播放页信息-响应
type PlayViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频流信息
	VideoInfo *v1.VideoInfo `protobuf:"bytes,1,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	// 播放控件用户自定义配置
	PlayConf *PlayAbilityConf `protobuf:"bytes,2,opt,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
	// 业务需要的其他信息
	Business *BusinessInfo `protobuf:"bytes,3,opt,name=business,proto3" json:"business,omitempty"`
	// 事件
	Event *Event `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *PlayViewReply) Reset() {
	*x = PlayViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReply) ProtoMessage() {}

func (x *PlayViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReply.ProtoReflect.Descriptor instead.
func (*PlayViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{6}
}

func (x *PlayViewReply) GetVideoInfo() *v1.VideoInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *PlayViewReply) GetPlayConf() *PlayAbilityConf {
	if x != nil {
		return x.PlayConf
	}
	return nil
}

func (x *PlayViewReply) GetBusiness() *BusinessInfo {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *PlayViewReply) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// 播放页信息-请求
type PlayViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 剧集epid
	Epid int64 `protobuf:"varint,1,opt,name=epid,proto3" json:"epid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,11,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 视频编码
	PreferCodecType v1.CodeType `protobuf:"varint,12,opt,name=prefer_codec_type,json=preferCodecType,proto3,enum=bilibili.app.playurl.v1.CodeType" json:"prefer_codec_type,omitempty"`
	// 是否强制请求预览视频
	IsPreview bool `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 一起看房间id
	RoomId int64 `protobuf:"varint,14,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *PlayViewReq) Reset() {
	*x = PlayViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReq) ProtoMessage() {}

func (x *PlayViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReq.ProtoReflect.Descriptor instead.
func (*PlayViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{7}
}

func (x *PlayViewReq) GetEpid() int64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *PlayViewReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *PlayViewReq) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayViewReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayViewReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayViewReq) GetDownload() uint32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *PlayViewReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayViewReq) GetFourk() bool {
	if x != nil {
		return x.Fourk
	}
	return false
}

func (x *PlayViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *PlayViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *PlayViewReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *PlayViewReq) GetPreferCodecType() v1.CodeType {
	if x != nil {
		return x.PreferCodecType
	}
	return v1.CodeType(0)
}

func (x *PlayViewReq) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *PlayViewReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// 投屏地址-响应
type ProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *v1.PlayURLReply `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ProjectReply) Reset() {
	*x = ProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReply) ProtoMessage() {}

func (x *ProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReply.ProtoReflect.Descriptor instead.
func (*ProjectReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectReply) GetProject() *v1.PlayURLReply {
	if x != nil {
		return x.Project
	}
	return nil
}

// 投屏地址-请求
type ProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 剧集epid
	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=forceHost,proto3" json:"forceHost,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=fromSpmid,proto3" json:"fromSpmid,omitempty"`
	// 使用协议
	// 0:默认乐播 1:自建协议 2:云投屏 3:airplay
	Protocol int32 `protobuf:"varint,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// 投屏设备
	// 0:默认其他 1:OTT设备
	DeviceType int32 `protobuf:"varint,12,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	UseNewProjectCode bool `protobuf:"varint,13,opt,name=use_new_project_code,json=useNewProjectCode,proto3" json:"use_new_project_code,omitempty"`
}

func (x *ProjectReq) Reset() {
	*x = ProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReq) ProtoMessage() {}

func (x *ProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReq.ProtoReflect.Descriptor instead.
func (*ProjectReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectReq) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *ProjectReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ProjectReq) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *ProjectReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *ProjectReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *ProjectReq) GetDownload() uint32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *ProjectReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *ProjectReq) GetFourk() bool {
	if x != nil {
		return x.Fourk
	}
	return false
}

func (x *ProjectReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ProjectReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *ProjectReq) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *ProjectReq) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *ProjectReq) GetUseNewProjectCode() bool {
	if x != nil {
		return x.UseNewProjectCode
	}
	return false
}

type QualityDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qn int32 `protobuf:"varint,1,opt,name=qn,proto3" json:"qn,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *QualityDescription) Reset() {
	*x = QualityDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualityDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityDescription) ProtoMessage() {}

func (x *QualityDescription) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityDescription.ProtoReflect.Descriptor instead.
func (*QualityDescription) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{10}
}

func (x *QualityDescription) GetQn() int32 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *QualityDescription) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ResponseDataUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 表示stream类型,按位表示
	// Value|  1   |  1  |  1   |  1   |     1
	// --------------------------------------------
	// desc | mask | p2p | dash | hevc | only-audio
	StreamType uint32 `protobuf:"varint,2,opt,name=stream_type,json=streamType,proto3" json:"stream_type,omitempty"`
	// 表示支持p2p的cdn厂商,按位表示
	// 值   | 1  |  1  |  1  | 1  |  1  | 1  | 1  | 1
	// -----------------------------------------------
	// CDN	| hw | bdy | bsy | ws | txy | qn | js | bvc
	Ptag uint32 `protobuf:"varint,3,opt,name=ptag,proto3" json:"ptag,omitempty"`
}

func (x *ResponseDataUrl) Reset() {
	*x = ResponseDataUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseDataUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseDataUrl) ProtoMessage() {}

func (x *ResponseDataUrl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseDataUrl.ProtoReflect.Descriptor instead.
func (*ResponseDataUrl) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseDataUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseDataUrl) GetStreamType() uint32 {
	if x != nil {
		return x.StreamType
	}
	return 0
}

func (x *ResponseDataUrl) GetPtag() uint32 {
	if x != nil {
		return x.Ptag
	}
	return 0
}

// 房间信息
type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 房间长号
	RoomId int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 主播mid
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 状态相关
	Status *RoomStatusInfo `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// 展示相关
	Show *RoomShowInfo `protobuf:"bytes,4,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{12}
}

func (x *RoomInfo) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *RoomInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoomInfo) GetStatus() *RoomStatusInfo {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RoomInfo) GetShow() *RoomShowInfo {
	if x != nil {
		return x.Show
	}
	return nil
}

// 房间信息-展示相关
type RoomShowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 短号
	ShortId int64 `protobuf:"varint,1,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`
	// 人气值
	PopularityCount int64 `protobuf:"varint,8,opt,name=popularity_count,json=popularityCount,proto3" json:"popularity_count,omitempty"`
	// 最近一次开播时间戳
	LiveStartTime int64 `protobuf:"varint,10,opt,name=live_start_time,json=liveStartTime,proto3" json:"live_start_time,omitempty"`
}

func (x *RoomShowInfo) Reset() {
	*x = RoomShowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomShowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomShowInfo) ProtoMessage() {}

func (x *RoomShowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomShowInfo.ProtoReflect.Descriptor instead.
func (*RoomShowInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{13}
}

func (x *RoomShowInfo) GetShortId() int64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *RoomShowInfo) GetPopularityCount() int64 {
	if x != nil {
		return x.PopularityCount
	}
	return 0
}

func (x *RoomShowInfo) GetLiveStartTime() int64 {
	if x != nil {
		return x.LiveStartTime
	}
	return 0
}

// 房间信息-状态相关
type RoomStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 直播间状态
	// 0:未开播 1:直播中 2:轮播中
	LiveStatus int64 `protobuf:"varint,1,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	// 横竖屏方向
	// 0:横屏 1:竖屏
	LiveScreenType int64 `protobuf:"varint,2,opt,name=live_screen_type,json=liveScreenType,proto3" json:"live_screen_type,omitempty"`
	// 是否开播过标识
	LiveMark int64 `protobuf:"varint,3,opt,name=live_mark,json=liveMark,proto3" json:"live_mark,omitempty"`
	// 封禁状态
	// 0:未封禁 1:审核封禁 2:全网封禁
	LockStatus int64 `protobuf:"varint,4,opt,name=lock_status,json=lockStatus,proto3" json:"lock_status,omitempty"`
	// 封禁时间戳
	LockTime int64 `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	// 隐藏状态
	// 0:不隐藏 1:隐藏
	HiddenStatus int64 `protobuf:"varint,6,opt,name=hidden_status,json=hiddenStatus,proto3" json:"hidden_status,omitempty"`
	// 隐藏时间戳
	HiddenTime int64 `protobuf:"varint,7,opt,name=hidden_time,json=hiddenTime,proto3" json:"hidden_time,omitempty"`
	// 直播类型
	// 0:默认 1:摄像头直播 2;录屏直播 3:语音直播
	LiveType int64 `protobuf:"varint,8,opt,name=live_type,json=liveType,proto3" json:"live_type,omitempty"`
	RoomShield int64 `protobuf:"varint,9,opt,name=room_shield,json=roomShield,proto3" json:"room_shield,omitempty"`
}

func (x *RoomStatusInfo) Reset() {
	*x = RoomStatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStatusInfo) ProtoMessage() {}

func (x *RoomStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStatusInfo.ProtoReflect.Descriptor instead.
func (*RoomStatusInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{14}
}

func (x *RoomStatusInfo) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

func (x *RoomStatusInfo) GetLiveScreenType() int64 {
	if x != nil {
		return x.LiveScreenType
	}
	return 0
}

func (x *RoomStatusInfo) GetLiveMark() int64 {
	if x != nil {
		return x.LiveMark
	}
	return 0
}

func (x *RoomStatusInfo) GetLockStatus() int64 {
	if x != nil {
		return x.LockStatus
	}
	return 0
}

func (x *RoomStatusInfo) GetLockTime() int64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *RoomStatusInfo) GetHiddenStatus() int64 {
	if x != nil {
		return x.HiddenStatus
	}
	return 0
}

func (x *RoomStatusInfo) GetHiddenTime() int64 {
	if x != nil {
		return x.HiddenTime
	}
	return 0
}

func (x *RoomStatusInfo) GetLiveType() int64 {
	if x != nil {
		return x.LiveType
	}
	return 0
}

func (x *RoomStatusInfo) GetRoomShield() int64 {
	if x != nil {
		return x.RoomShield
	}
	return 0
}

// 震动
type Shake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件地址
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *Shake) Reset() {
	*x = Shake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shake) ProtoMessage() {}

func (x *Shake) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shake.ProtoReflect.Descriptor instead.
func (*Shake) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP(), []int{15}
}

func (x *Shake) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

var File_bilibili_pgc_gateway_player_v1_playurl_proto protoreflect.FileDescriptor

var file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x67, 0x63, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x25,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x62, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6c, 0x69, 0x6e, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6c,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x3b, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0xd7, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x6e, 0x12, 0x63, 0x0a,
	0x13, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x72,
	0x6c, 0x52, 0x04, 0x64, 0x75, 0x72, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a,
	0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xaa, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xad, 0x0a, 0x0a,
	0x0f, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x12, 0x36, 0x0a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x69, 0x70,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x66, 0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68,
	0x6f, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x44, 0x6d, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x44, 0x6d, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x79, 0x61, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66,
	0x72, 0x65, 0x79, 0x61, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6c, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x6f, 0x6c, 0x62, 0x79, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x79, 0x61, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x66, 0x72, 0x65, 0x79, 0x61, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x64,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x4f, 0x70, 0x65, 0x64, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xa7, 0x02, 0x0a,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x48, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x75, 0x72, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xe1, 0x02,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x05,
	0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70,
	0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x38, 0x0a, 0x12, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x58, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x74, 0x61, 0x67, 0x22, 0xbf, 0x01, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x46, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x7c, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x1b, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x32,
	0xca, 0x02, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x66, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x72, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x4b, 0x5a, 0x49,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61, 0x6f, 0x4d,
	0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2f, 0x70, 0x67, 0x63, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescOnce sync.Once
	file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescData = file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDesc
)

func file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescGZIP() []byte {
	file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescOnce.Do(func() {
		file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescData)
	})
	return file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDescData
}

var file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_bilibili_pgc_gateway_player_v1_playurl_proto_goTypes = []interface{}{
	(*BusinessInfo)(nil),       // 0: bilibili.pgc.gateway.player.v1.BusinessInfo
	(*Event)(nil),              // 1: bilibili.pgc.gateway.player.v1.Event
	(*LivePlayInfo)(nil),       // 2: bilibili.pgc.gateway.player.v1.LivePlayInfo
	(*LivePlayViewReply)(nil),  // 3: bilibili.pgc.gateway.player.v1.LivePlayViewReply
	(*LivePlayViewReq)(nil),    // 4: bilibili.pgc.gateway.player.v1.LivePlayViewReq
	(*PlayAbilityConf)(nil),    // 5: bilibili.pgc.gateway.player.v1.PlayAbilityConf
	(*PlayViewReply)(nil),      // 6: bilibili.pgc.gateway.player.v1.PlayViewReply
	(*PlayViewReq)(nil),        // 7: bilibili.pgc.gateway.player.v1.PlayViewReq
	(*ProjectReply)(nil),       // 8: bilibili.pgc.gateway.player.v1.ProjectReply
	(*ProjectReq)(nil),         // 9: bilibili.pgc.gateway.player.v1.ProjectReq
	(*QualityDescription)(nil), // 10: bilibili.pgc.gateway.player.v1.QualityDescription
	(*ResponseDataUrl)(nil),    // 11: bilibili.pgc.gateway.player.v1.ResponseDataUrl
	(*RoomInfo)(nil),           // 12: bilibili.pgc.gateway.player.v1.RoomInfo
	(*RoomShowInfo)(nil),       // 13: bilibili.pgc.gateway.player.v1.RoomShowInfo
	(*RoomStatusInfo)(nil),     // 14: bilibili.pgc.gateway.player.v1.RoomStatusInfo
	(*Shake)(nil),              // 15: bilibili.pgc.gateway.player.v1.Shake
	(*v1.VideoInfo)(nil),       // 16: bilibili.app.playurl.v1.VideoInfo
	(v1.CodeType)(0),           // 17: bilibili.app.playurl.v1.CodeType
	(*v1.PlayURLReply)(nil),    // 18: bilibili.app.playurl.v1.PlayURLReply
}
var file_bilibili_pgc_gateway_player_v1_playurl_proto_depIdxs = []int32{
	15, // 0: bilibili.pgc.gateway.player.v1.Event.shake:type_name -> bilibili.pgc.gateway.player.v1.Shake
	10, // 1: bilibili.pgc.gateway.player.v1.LivePlayInfo.quality_description:type_name -> bilibili.pgc.gateway.player.v1.QualityDescription
	11, // 2: bilibili.pgc.gateway.player.v1.LivePlayInfo.durl:type_name -> bilibili.pgc.gateway.player.v1.ResponseDataUrl
	12, // 3: bilibili.pgc.gateway.player.v1.LivePlayViewReply.room_info:type_name -> bilibili.pgc.gateway.player.v1.RoomInfo
	2,  // 4: bilibili.pgc.gateway.player.v1.LivePlayViewReply.play_info:type_name -> bilibili.pgc.gateway.player.v1.LivePlayInfo
	16, // 5: bilibili.pgc.gateway.player.v1.PlayViewReply.video_info:type_name -> bilibili.app.playurl.v1.VideoInfo
	5,  // 6: bilibili.pgc.gateway.player.v1.PlayViewReply.play_conf:type_name -> bilibili.pgc.gateway.player.v1.PlayAbilityConf
	0,  // 7: bilibili.pgc.gateway.player.v1.PlayViewReply.business:type_name -> bilibili.pgc.gateway.player.v1.BusinessInfo
	1,  // 8: bilibili.pgc.gateway.player.v1.PlayViewReply.event:type_name -> bilibili.pgc.gateway.player.v1.Event
	17, // 9: bilibili.pgc.gateway.player.v1.PlayViewReq.prefer_codec_type:type_name -> bilibili.app.playurl.v1.CodeType
	18, // 10: bilibili.pgc.gateway.player.v1.ProjectReply.project:type_name -> bilibili.app.playurl.v1.PlayURLReply
	14, // 11: bilibili.pgc.gateway.player.v1.RoomInfo.status:type_name -> bilibili.pgc.gateway.player.v1.RoomStatusInfo
	13, // 12: bilibili.pgc.gateway.player.v1.RoomInfo.show:type_name -> bilibili.pgc.gateway.player.v1.RoomShowInfo
	7,  // 13: bilibili.pgc.gateway.player.v1.PlayURL.PlayView:input_type -> bilibili.pgc.gateway.player.v1.PlayViewReq
	9,  // 14: bilibili.pgc.gateway.player.v1.PlayURL.Project:input_type -> bilibili.pgc.gateway.player.v1.ProjectReq
	4,  // 15: bilibili.pgc.gateway.player.v1.PlayURL.LivePlayView:input_type -> bilibili.pgc.gateway.player.v1.LivePlayViewReq
	6,  // 16: bilibili.pgc.gateway.player.v1.PlayURL.PlayView:output_type -> bilibili.pgc.gateway.player.v1.PlayViewReply
	8,  // 17: bilibili.pgc.gateway.player.v1.PlayURL.Project:output_type -> bilibili.pgc.gateway.player.v1.ProjectReply
	3,  // 18: bilibili.pgc.gateway.player.v1.PlayURL.LivePlayView:output_type -> bilibili.pgc.gateway.player.v1.LivePlayViewReply
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_bilibili_pgc_gateway_player_v1_playurl_proto_init() }
func file_bilibili_pgc_gateway_player_v1_playurl_proto_init() {
	if File_bilibili_pgc_gateway_player_v1_playurl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusinessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivePlayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivePlayViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LivePlayViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAbilityConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualityDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseDataUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomShowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomStatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_pgc_gateway_player_v1_playurl_proto_goTypes,
		DependencyIndexes: file_bilibili_pgc_gateway_player_v1_playurl_proto_depIdxs,
		MessageInfos:      file_bilibili_pgc_gateway_player_v1_playurl_proto_msgTypes,
	}.Build()
	File_bilibili_pgc_gateway_player_v1_playurl_proto = out.File
	file_bilibili_pgc_gateway_player_v1_playurl_proto_rawDesc = nil
	file_bilibili_pgc_gateway_player_v1_playurl_proto_goTypes = nil
	file_bilibili_pgc_gateway_player_v1_playurl_proto_depIdxs = nil
}
