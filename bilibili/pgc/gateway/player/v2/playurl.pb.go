// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: bilibili/pgc/gateway/player/v2/playurl.proto

package v2

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 跳过片头/片尾配置: Clip类型
type ClipType int32

const (
	ClipType_NT_UNKNOWN           ClipType = 0 //
	ClipType_CLIP_TYPE_OP         ClipType = 1 // 跳过OP
	ClipType_CLIP_TYPE_ED         ClipType = 2 // 跳过ED
	ClipType_CLIP_TYPE_HE         ClipType = 3 //
	ClipType_CLIP_TYPE_MULTI_VIEW ClipType = 4 //
	ClipType_CLIP_TYPE_AD         ClipType = 5 //
)

// Enum value maps for ClipType.
var (
	ClipType_name = map[int32]string{
		0: "NT_UNKNOWN",
		1: "CLIP_TYPE_OP",
		2: "CLIP_TYPE_ED",
		3: "CLIP_TYPE_HE",
		4: "CLIP_TYPE_MULTI_VIEW",
		5: "CLIP_TYPE_AD",
	}
	ClipType_value = map[string]int32{
		"NT_UNKNOWN":           0,
		"CLIP_TYPE_OP":         1,
		"CLIP_TYPE_ED":         2,
		"CLIP_TYPE_HE":         3,
		"CLIP_TYPE_MULTI_VIEW": 4,
		"CLIP_TYPE_AD":         5,
	}
)

func (x ClipType) Enum() *ClipType {
	p := new(ClipType)
	*p = x
	return p
}

func (x ClipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClipType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[0].Descriptor()
}

func (ClipType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[0]
}

func (x ClipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClipType.Descriptor instead.
func (ClipType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{0}
}

// 编码类型
type CodeType int32

const (
	CodeType_NOCODE  CodeType = 0 // 默认
	CodeType_CODE264 CodeType = 1 // H.264
	CodeType_CODE265 CodeType = 2 // H.265
)

// Enum value maps for CodeType.
var (
	CodeType_name = map[int32]string{
		0: "NOCODE",
		1: "CODE264",
		2: "CODE265",
	}
	CodeType_value = map[string]int32{
		"NOCODE":  0,
		"CODE264": 1,
		"CODE265": 2,
	}
)

func (x CodeType) Enum() *CodeType {
	p := new(CodeType)
	*p = x
	return p
}

func (x CodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[1].Descriptor()
}

func (CodeType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[1]
}

func (x CodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodeType.Descriptor instead.
func (CodeType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{1}
}

// DRM技术类型
type DrmTechType int32

const (
	DrmTechType_NON       DrmTechType = 0 //
	DrmTechType_FAIR_PLAY DrmTechType = 1 //
	DrmTechType_WIDE_VINE DrmTechType = 2 //
	DrmTechType_BILI_DRM  DrmTechType = 3 //
)

// Enum value maps for DrmTechType.
var (
	DrmTechType_name = map[int32]string{
		0: "NON",
		1: "FAIR_PLAY",
		2: "WIDE_VINE",
		3: "BILI_DRM",
	}
	DrmTechType_value = map[string]int32{
		"NON":       0,
		"FAIR_PLAY": 1,
		"WIDE_VINE": 2,
		"BILI_DRM":  3,
	}
)

func (x DrmTechType) Enum() *DrmTechType {
	p := new(DrmTechType)
	*p = x
	return p
}

func (x DrmTechType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrmTechType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[2].Descriptor()
}

func (DrmTechType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[2]
}

func (x DrmTechType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DrmTechType.Descriptor instead.
func (DrmTechType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{2}
}

type EpPublicityVideoType int32

const (
	EpPublicityVideoType_PRE EpPublicityVideoType = 0
	EpPublicityVideoType_INLINE EpPublicityVideoType = 1
)

// Enum value maps for EpPublicityVideoType.
var (
	EpPublicityVideoType_name = map[int32]string{
		0: "PRE",
		1: "INLINE",
	}
	EpPublicityVideoType_value = map[string]int32{
		"PRE":    0,
		"INLINE": 1,
	}
)

func (x EpPublicityVideoType) Enum() *EpPublicityVideoType {
	p := new(EpPublicityVideoType)
	*p = x
	return p
}

func (x EpPublicityVideoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EpPublicityVideoType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[3].Descriptor()
}

func (EpPublicityVideoType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[3]
}

func (x EpPublicityVideoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EpPublicityVideoType.Descriptor instead.
func (EpPublicityVideoType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{3}
}

type InlineScene int32

const (
	InlineScene_UNKNOWN    InlineScene = 0 //
	InlineScene_RELATED_EP InlineScene = 1 //
	InlineScene_HE         InlineScene = 2 //
	InlineScene_SKIP       InlineScene = 3 //
)

// Enum value maps for InlineScene.
var (
	InlineScene_name = map[int32]string{
		0: "UNKNOWN",
		1: "RELATED_EP",
		2: "HE",
		3: "SKIP",
	}
	InlineScene_value = map[string]int32{
		"UNKNOWN":    0,
		"RELATED_EP": 1,
		"HE":         2,
		"SKIP":       3,
	}
)

func (x InlineScene) Enum() *InlineScene {
	p := new(InlineScene)
	*p = x
	return p
}

func (x InlineScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InlineScene) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[4].Descriptor()
}

func (InlineScene) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[4]
}

func (x InlineScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InlineScene.Descriptor instead.
func (InlineScene) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{4}
}

type InlineType int32

const (
	InlineType_TYPE_UNKNOWN InlineType = 0 //
	InlineType_TYPE_WHOLE   InlineType = 1 //
	InlineType_TYPE_HE_CLIP InlineType = 2 //
	InlineType_TYPE_PREVIEW InlineType = 3 //
)

// Enum value maps for InlineType.
var (
	InlineType_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_WHOLE",
		2: "TYPE_HE_CLIP",
		3: "TYPE_PREVIEW",
	}
	InlineType_value = map[string]int32{
		"TYPE_UNKNOWN": 0,
		"TYPE_WHOLE":   1,
		"TYPE_HE_CLIP": 2,
		"TYPE_PREVIEW": 3,
	}
)

func (x InlineType) Enum() *InlineType {
	p := new(InlineType)
	*p = x
	return p
}

func (x InlineType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InlineType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[5].Descriptor()
}

func (InlineType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[5]
}

func (x InlineType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InlineType.Descriptor instead.
func (InlineType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{5}
}

// 限制操作类型
type LimitActionType int32

const (
	LimitActionType_LAT_UNKNOWN LimitActionType = 0
	LimitActionType_SHOW_LIMIT_DIALOG LimitActionType = 1
	LimitActionType_SKIP_CURRENT_EP LimitActionType = 2
)

// Enum value maps for LimitActionType.
var (
	LimitActionType_name = map[int32]string{
		0: "LAT_UNKNOWN",
		1: "SHOW_LIMIT_DIALOG",
		2: "SKIP_CURRENT_EP",
	}
	LimitActionType_value = map[string]int32{
		"LAT_UNKNOWN":       0,
		"SHOW_LIMIT_DIALOG": 1,
		"SKIP_CURRENT_EP":   2,
	}
)

func (x LimitActionType) Enum() *LimitActionType {
	p := new(LimitActionType)
	*p = x
	return p
}

func (x LimitActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LimitActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[6].Descriptor()
}

func (LimitActionType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[6]
}

func (x LimitActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LimitActionType.Descriptor instead.
func (LimitActionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{6}
}

// 错误码
type PlayErr int32

const (
	PlayErr_NoErr                   PlayErr = 0 //
	PlayErr_WithMultiDeviceLoginErr PlayErr = 1 // 管控类型的错误码
)

// Enum value maps for PlayErr.
var (
	PlayErr_name = map[int32]string{
		0: "NoErr",
		1: "WithMultiDeviceLoginErr",
	}
	PlayErr_value = map[string]int32{
		"NoErr":                   0,
		"WithMultiDeviceLoginErr": 1,
	}
)

func (x PlayErr) Enum() *PlayErr {
	p := new(PlayErr)
	*p = x
	return p
}

func (x PlayErr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayErr) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[7].Descriptor()
}

func (PlayErr) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[7]
}

func (x PlayErr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayErr.Descriptor instead.
func (PlayErr) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{7}
}

// DRM 安全等级
type SecurityLevel int32

const (
	SecurityLevel_LEVEL_UNKNOWN SecurityLevel = 0 //
	SecurityLevel_LEVEL_L1      SecurityLevel = 1 //
	SecurityLevel_LEVEL_L2      SecurityLevel = 2 //
	SecurityLevel_LEVEL_L3      SecurityLevel = 3 //
)

// Enum value maps for SecurityLevel.
var (
	SecurityLevel_name = map[int32]string{
		0: "LEVEL_UNKNOWN",
		1: "LEVEL_L1",
		2: "LEVEL_L2",
		3: "LEVEL_L3",
	}
	SecurityLevel_value = map[string]int32{
		"LEVEL_UNKNOWN": 0,
		"LEVEL_L1":      1,
		"LEVEL_L2":      2,
		"LEVEL_L3":      3,
	}
)

func (x SecurityLevel) Enum() *SecurityLevel {
	p := new(SecurityLevel)
	*p = x
	return p
}

func (x SecurityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[8].Descriptor()
}

func (SecurityLevel) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[8]
}

func (x SecurityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityLevel.Descriptor instead.
func (SecurityLevel) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{8}
}

// 杜比类型
type DolbyItem_Type int32

const (
	DolbyItem_NONE   DolbyItem_Type = 0 // NONE
	DolbyItem_COMMON DolbyItem_Type = 1 // 普通杜比音效
	DolbyItem_ATMOS  DolbyItem_Type = 2 // 全景杜比音效
)

// Enum value maps for DolbyItem_Type.
var (
	DolbyItem_Type_name = map[int32]string{
		0: "NONE",
		1: "COMMON",
		2: "ATMOS",
	}
	DolbyItem_Type_value = map[string]int32{
		"NONE":   0,
		"COMMON": 1,
		"ATMOS":  2,
	}
)

func (x DolbyItem_Type) Enum() *DolbyItem_Type {
	p := new(DolbyItem_Type)
	*p = x
	return p
}

func (x DolbyItem_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DolbyItem_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[9].Descriptor()
}

func (DolbyItem_Type) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[9]
}

func (x DolbyItem_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DolbyItem_Type.Descriptor instead.
func (DolbyItem_Type) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{18, 0}
}

type EpPublicityVideo_Type int32

const (
	EpPublicityVideo_DATA_NOT_SET EpPublicityVideo_Type = 0
	EpPublicityVideo_EP_PRE_VIDEO EpPublicityVideo_Type = 2
	EpPublicityVideo_EP_INLINE    EpPublicityVideo_Type = 3
)

// Enum value maps for EpPublicityVideo_Type.
var (
	EpPublicityVideo_Type_name = map[int32]string{
		0: "DATA_NOT_SET",
		2: "EP_PRE_VIDEO",
		3: "EP_INLINE",
	}
	EpPublicityVideo_Type_value = map[string]int32{
		"DATA_NOT_SET": 0,
		"EP_PRE_VIDEO": 2,
		"EP_INLINE":    3,
	}
)

func (x EpPublicityVideo_Type) Enum() *EpPublicityVideo_Type {
	p := new(EpPublicityVideo_Type)
	*p = x
	return p
}

func (x EpPublicityVideo_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EpPublicityVideo_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[10].Descriptor()
}

func (EpPublicityVideo_Type) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[10]
}

func (x EpPublicityVideo_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EpPublicityVideo_Type.Descriptor instead.
func (EpPublicityVideo_Type) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{24, 0}
}

type Scheme_ActionType int32

const (
	Scheme_UNKNOWN    Scheme_ActionType = 0
	Scheme_SHOW_TOAST Scheme_ActionType = 1
)

// Enum value maps for Scheme_ActionType.
var (
	Scheme_ActionType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SHOW_TOAST",
	}
	Scheme_ActionType_value = map[string]int32{
		"UNKNOWN":    0,
		"SHOW_TOAST": 1,
	}
)

func (x Scheme_ActionType) Enum() *Scheme_ActionType {
	p := new(Scheme_ActionType)
	*p = x
	return p
}

func (x Scheme_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scheme_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[11].Descriptor()
}

func (Scheme_ActionType) Type() protoreflect.EnumType {
	return &file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes[11]
}

func (x Scheme_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scheme_ActionType.Descriptor instead.
func (Scheme_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{51, 0}
}

type Animation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QnSvgaAnimationMap map[string]string `protobuf:"bytes,1,rep,name=qn_svga_animation_map,json=qnSvgaAnimationMap,proto3" json:"qn_svga_animation_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Animation) Reset() {
	*x = Animation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Animation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Animation) ProtoMessage() {}

func (x *Animation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Animation.ProtoReflect.Descriptor instead.
func (*Animation) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{0}
}

func (x *Animation) GetQnSvgaAnimationMap() map[string]string {
	if x != nil {
		return x.QnSvgaAnimationMap
	}
	return nil
}

type AudioMaterialProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioId string `protobuf:"bytes,1,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Edition string `protobuf:"bytes,3,opt,name=edition,proto3" json:"edition,omitempty"`
	PersonId uint64 `protobuf:"varint,4,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	PersonName string `protobuf:"bytes,5,opt,name=person_name,json=personName,proto3" json:"person_name,omitempty"`
	PersonAvatar string `protobuf:"bytes,6,opt,name=person_avatar,json=personAvatar,proto3" json:"person_avatar,omitempty"`
	Audio []*DashItem `protobuf:"bytes,7,rep,name=audio,proto3" json:"audio,omitempty"`
}

func (x *AudioMaterialProto) Reset() {
	*x = AudioMaterialProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioMaterialProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioMaterialProto) ProtoMessage() {}

func (x *AudioMaterialProto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioMaterialProto.ProtoReflect.Descriptor instead.
func (*AudioMaterialProto) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{1}
}

func (x *AudioMaterialProto) GetAudioId() string {
	if x != nil {
		return x.AudioId
	}
	return ""
}

func (x *AudioMaterialProto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AudioMaterialProto) GetEdition() string {
	if x != nil {
		return x.Edition
	}
	return ""
}

func (x *AudioMaterialProto) GetPersonId() uint64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *AudioMaterialProto) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *AudioMaterialProto) GetPersonAvatar() string {
	if x != nil {
		return x.PersonAvatar
	}
	return ""
}

func (x *AudioMaterialProto) GetAudio() []*DashItem {
	if x != nil {
		return x.Audio
	}
	return nil
}

// 角标信息
type BadgeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角标文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 角标色值
	BgColor string `protobuf:"bytes,2,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 角标色值-夜间模式
	BgColorNight string `protobuf:"bytes,3,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 文案色值
	TextColor string `protobuf:"bytes,4,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// ? 新版本客户端已弃用此项
	BgGradientColor *GradientColor `protobuf:"bytes,5,opt,name=bg_gradient_color,json=bgGradientColor,proto3" json:"bg_gradient_color,omitempty"`
	Img string `protobuf:"bytes,6,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *BadgeInfo) Reset() {
	*x = BadgeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeInfo) ProtoMessage() {}

func (x *BadgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeInfo.ProtoReflect.Descriptor instead.
func (*BadgeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{2}
}

func (x *BadgeInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BadgeInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *BadgeInfo) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *BadgeInfo) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *BadgeInfo) GetBgGradientColor() *GradientColor {
	if x != nil {
		return x.BgGradientColor
	}
	return nil
}

func (x *BadgeInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

// Dialog组件: 底部显示
type BottomDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Title *TextInfo `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 图标
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *BottomDisplay) Reset() {
	*x = BottomDisplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BottomDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BottomDisplay) ProtoMessage() {}

func (x *BottomDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BottomDisplay.ProtoReflect.Descriptor instead.
func (*BottomDisplay) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{3}
}

func (x *BottomDisplay) GetTitle() *TextInfo {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *BottomDisplay) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

// 按钮信息
type ButtonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 按钮文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 按钮字体色值
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 按钮字体色值-夜间模式
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 按钮背景色
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 按钮背景色-夜间模式
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 按钮链接
	Link string `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	// 按钮动作类型
	ActionType string `protobuf:"bytes,7,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	// 角标信息
	BadgeInfo *BadgeInfo `protobuf:"bytes,8,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	// 埋点上报信息
	Report *Report `protobuf:"bytes,9,opt,name=report,proto3" json:"report,omitempty"`
	// 左侧删除线样式文案
	LeftStrikethroughText string `protobuf:"bytes,10,opt,name=left_strikethrough_text,json=leftStrikethroughText,proto3" json:"left_strikethrough_text,omitempty"`
	// 缩略按钮文案信息
	SimpleTextInfo *TextInfo `protobuf:"bytes,11,opt,name=simple_text_info,json=simpleTextInfo,proto3" json:"simple_text_info,omitempty"`
	// 缩略按钮背景色值
	SimpleBgColor string `protobuf:"bytes,12,opt,name=simple_bg_color,json=simpleBgColor,proto3" json:"simple_bg_color,omitempty"`
	// 缩略按钮字体色值-夜间模式
	SimpleBgColorNight string `protobuf:"bytes,13,opt,name=simple_bg_color_night,json=simpleBgColorNight,proto3" json:"simple_bg_color_night,omitempty"`
	BgGradientColor *GradientColor `protobuf:"bytes,14,opt,name=bg_gradient_color,json=bgGradientColor,proto3" json:"bg_gradient_color,omitempty"`
	OrderReportParams map[string]string `protobuf:"bytes,15,rep,name=order_report_params,json=orderReportParams,proto3" json:"order_report_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TaskParam *TaskParam `protobuf:"bytes,16,opt,name=task_param,json=taskParam,proto3" json:"task_param,omitempty"`
	PcLink string `protobuf:"bytes,17,opt,name=pc_link,json=pcLink,proto3" json:"pc_link,omitempty"`
}

func (x *ButtonInfo) Reset() {
	*x = ButtonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonInfo) ProtoMessage() {}

func (x *ButtonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonInfo.ProtoReflect.Descriptor instead.
func (*ButtonInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{4}
}

func (x *ButtonInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ButtonInfo) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *ButtonInfo) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *ButtonInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ButtonInfo) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *ButtonInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ButtonInfo) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *ButtonInfo) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *ButtonInfo) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *ButtonInfo) GetLeftStrikethroughText() string {
	if x != nil {
		return x.LeftStrikethroughText
	}
	return ""
}

func (x *ButtonInfo) GetSimpleTextInfo() *TextInfo {
	if x != nil {
		return x.SimpleTextInfo
	}
	return nil
}

func (x *ButtonInfo) GetSimpleBgColor() string {
	if x != nil {
		return x.SimpleBgColor
	}
	return ""
}

func (x *ButtonInfo) GetSimpleBgColorNight() string {
	if x != nil {
		return x.SimpleBgColorNight
	}
	return ""
}

func (x *ButtonInfo) GetBgGradientColor() *GradientColor {
	if x != nil {
		return x.BgGradientColor
	}
	return nil
}

func (x *ButtonInfo) GetOrderReportParams() map[string]string {
	if x != nil {
		return x.OrderReportParams
	}
	return nil
}

func (x *ButtonInfo) GetTaskParam() *TaskParam {
	if x != nil {
		return x.TaskParam
	}
	return nil
}

func (x *ButtonInfo) GetPcLink() string {
	if x != nil {
		return x.PcLink
	}
	return ""
}

// 投屏限制. code = 0 时为无限制, 否则表示不不允许投屏并提示message
type CastTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CastTips) Reset() {
	*x = CastTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastTips) ProtoMessage() {}

func (x *CastTips) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastTips.ProtoReflect.Descriptor instead.
func (*CastTips) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{5}
}

func (x *CastTips) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CastTips) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 跳过片头/片尾配置
type ClipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialNo int64 `protobuf:"varint,1,opt,name=material_no,json=materialNo,proto3" json:"material_no,omitempty"`
	// DASH分段始
	Start int32 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	// DASH分段终
	End int32 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	// Clip类型
	ClipType ClipType `protobuf:"varint,4,opt,name=clip_type,json=clipType,proto3,enum=bilibili.pgc.gateway.player.v2.ClipType" json:"clip_type,omitempty"`
	// 跳过片头/片尾时的提示语
	ToastText string `protobuf:"bytes,5,opt,name=toast_text,json=toastText,proto3" json:"toast_text,omitempty"`
	MultiView *MultiView `protobuf:"bytes,6,opt,name=multi_view,json=multiView,proto3" json:"multi_view,omitempty"`
}

func (x *ClipInfo) Reset() {
	*x = ClipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipInfo) ProtoMessage() {}

func (x *ClipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipInfo.ProtoReflect.Descriptor instead.
func (*ClipInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{6}
}

func (x *ClipInfo) GetMaterialNo() int64 {
	if x != nil {
		return x.MaterialNo
	}
	return 0
}

func (x *ClipInfo) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ClipInfo) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ClipInfo) GetClipType() ClipType {
	if x != nil {
		return x.ClipType
	}
	return ClipType_NT_UNKNOWN
}

func (x *ClipInfo) GetToastText() string {
	if x != nil {
		return x.ToastText
	}
	return ""
}

func (x *ClipInfo) GetMultiView() *MultiView {
	if x != nil {
		return x.MultiView
	}
	return nil
}

type ContinuePlayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContinuePlayEpId int64 `protobuf:"varint,1,opt,name=continue_play_ep_id,json=continuePlayEpId,proto3" json:"continue_play_ep_id,omitempty"`
}

func (x *ContinuePlayInfo) Reset() {
	*x = ContinuePlayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuePlayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuePlayInfo) ProtoMessage() {}

func (x *ContinuePlayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuePlayInfo.ProtoReflect.Descriptor instead.
func (*ContinuePlayInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{7}
}

func (x *ContinuePlayInfo) GetContinuePlayEpId() int64 {
	if x != nil {
		return x.ContinuePlayEpId
	}
	return 0
}

// 优惠券
type Coupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 优惠券token
	CouponToken string `protobuf:"bytes,1,opt,name=coupon_token,json=couponToken,proto3" json:"coupon_token,omitempty"`
	// 优惠券类型
	// 1:折扣券 2:满减券 3:兑换券
	Type int64 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 优惠券面值
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// 优惠券使用描述
	UseDesc string `protobuf:"bytes,4,opt,name=use_desc,json=useDesc,proto3" json:"use_desc,omitempty"`
	// 优惠券标题
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// 优惠券描述
	Desc string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	// 优惠券支付按钮文案
	PayButtonText string `protobuf:"bytes,7,opt,name=pay_button_text,json=payButtonText,proto3" json:"pay_button_text,omitempty"`
	// 优惠券支付按钮删除线文案
	PayButtonTextLineThrough string `protobuf:"bytes,8,opt,name=pay_button_text_line_through,json=payButtonTextLineThrough,proto3" json:"pay_button_text_line_through,omitempty"`
	// 实付金额
	RealAmount string `protobuf:"bytes,9,opt,name=real_amount,json=realAmount,proto3" json:"real_amount,omitempty"`
	// 使用过期时间
	ExpireTime *timestamp.Timestamp `protobuf:"bytes,10,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Otype int64 `protobuf:"varint,11,opt,name=otype,proto3" json:"otype,omitempty"`
	Amount string `protobuf:"bytes,12,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Coupon) Reset() {
	*x = Coupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coupon) ProtoMessage() {}

func (x *Coupon) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coupon.ProtoReflect.Descriptor instead.
func (*Coupon) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{8}
}

func (x *Coupon) GetCouponToken() string {
	if x != nil {
		return x.CouponToken
	}
	return ""
}

func (x *Coupon) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Coupon) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Coupon) GetUseDesc() string {
	if x != nil {
		return x.UseDesc
	}
	return ""
}

func (x *Coupon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Coupon) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Coupon) GetPayButtonText() string {
	if x != nil {
		return x.PayButtonText
	}
	return ""
}

func (x *Coupon) GetPayButtonTextLineThrough() string {
	if x != nil {
		return x.PayButtonTextLineThrough
	}
	return ""
}

func (x *Coupon) GetRealAmount() string {
	if x != nil {
		return x.RealAmount
	}
	return ""
}

func (x *Coupon) GetExpireTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *Coupon) GetOtype() int64 {
	if x != nil {
		return x.Otype
	}
	return 0
}

func (x *Coupon) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// 优惠券信息
type CouponInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提示框信息
	Toast *CouponToast `protobuf:"bytes,1,opt,name=toast,proto3" json:"toast,omitempty"`
	// 弹窗信息
	PopWin *PopWin `protobuf:"bytes,2,opt,name=pop_win,json=popWin,proto3" json:"pop_win,omitempty"`
}

func (x *CouponInfo) Reset() {
	*x = CouponInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponInfo) ProtoMessage() {}

func (x *CouponInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponInfo.ProtoReflect.Descriptor instead.
func (*CouponInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{9}
}

func (x *CouponInfo) GetToast() *CouponToast {
	if x != nil {
		return x.Toast
	}
	return nil
}

func (x *CouponInfo) GetPopWin() *PopWin {
	if x != nil {
		return x.PopWin
	}
	return nil
}

// 优惠券提示框文案信息
type CouponTextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提示框文案-播正片6分钟预览
	PositivePreview string `protobuf:"bytes,1,opt,name=positive_preview,json=positivePreview,proto3" json:"positive_preview,omitempty"`
	// 提示框文案-播非正片分节ep
	Section string `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"`
}

func (x *CouponTextInfo) Reset() {
	*x = CouponTextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponTextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponTextInfo) ProtoMessage() {}

func (x *CouponTextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponTextInfo.ProtoReflect.Descriptor instead.
func (*CouponTextInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{10}
}

func (x *CouponTextInfo) GetPositivePreview() string {
	if x != nil {
		return x.PositivePreview
	}
	return ""
}

func (x *CouponTextInfo) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

// 优惠券提示框信息
type CouponToast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提示框文案信息
	TextInfo *CouponTextInfo `protobuf:"bytes,1,opt,name=text_info,json=textInfo,proto3" json:"text_info,omitempty"`
	// 提示框按钮
	Button *ButtonInfo `protobuf:"bytes,2,opt,name=button,proto3" json:"button,omitempty"`
}

func (x *CouponToast) Reset() {
	*x = CouponToast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponToast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponToast) ProtoMessage() {}

func (x *CouponToast) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponToast.ProtoReflect.Descriptor instead.
func (*CouponToast) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{11}
}

func (x *CouponToast) GetTextInfo() *CouponTextInfo {
	if x != nil {
		return x.TextInfo
	}
	return nil
}

func (x *CouponToast) GetButton() *ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

// dash条目
type DashItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 清晰度
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 主线流
	BaseUrl string `protobuf:"bytes,2,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,3,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// 带宽
	Bandwidth uint32 `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// 编码id
	Codecid uint32 `protobuf:"varint,5,opt,name=codecid,proto3" json:"codecid,omitempty"`
	// md5
	Md5 string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	// 视频大小
	Size uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// 帧率
	FrameRate string `protobuf:"bytes,8,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	// DRM widevine 密钥
	WidevinePssh string `protobuf:"bytes,9,opt,name=widevine_pssh,json=widevinePssh,proto3" json:"widevine_pssh,omitempty"`
}

func (x *DashItem) Reset() {
	*x = DashItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashItem) ProtoMessage() {}

func (x *DashItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashItem.ProtoReflect.Descriptor instead.
func (*DashItem) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{12}
}

func (x *DashItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DashItem) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *DashItem) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *DashItem) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *DashItem) GetCodecid() uint32 {
	if x != nil {
		return x.Codecid
	}
	return 0
}

func (x *DashItem) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *DashItem) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DashItem) GetFrameRate() string {
	if x != nil {
		return x.FrameRate
	}
	return ""
}

func (x *DashItem) GetWidevinePssh() string {
	if x != nil {
		return x.WidevinePssh
	}
	return ""
}

// dash视频流
type DashVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主线流
	BaseUrl string `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,2,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// 带宽
	Bandwidth uint32 `protobuf:"varint,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// 编码id
	Codecid uint32 `protobuf:"varint,4,opt,name=codecid,proto3" json:"codecid,omitempty"`
	// md5
	Md5 string `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	// 大小
	Size uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// 伴音质量id
	AudioId uint32 `protobuf:"varint,7,opt,name=audio_id,json=audioId,proto3" json:"audio_id,omitempty"`
	// 是否非全二压
	NoRexcode bool `protobuf:"varint,8,opt,name=no_rexcode,json=noRexcode,proto3" json:"no_rexcode,omitempty"`
	// 帧率
	FrameRate string `protobuf:"bytes,9,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	// 宽
	Width int32 `protobuf:"varint,10,opt,name=width,proto3" json:"width,omitempty"`
	// 高
	Height int32 `protobuf:"varint,11,opt,name=height,proto3" json:"height,omitempty"`
	// DRM 密钥
	WidevinePssh string `protobuf:"bytes,12,opt,name=widevine_pssh,json=widevinePssh,proto3" json:"widevine_pssh,omitempty"`
}

func (x *DashVideo) Reset() {
	*x = DashVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashVideo) ProtoMessage() {}

func (x *DashVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashVideo.ProtoReflect.Descriptor instead.
func (*DashVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{13}
}

func (x *DashVideo) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *DashVideo) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *DashVideo) GetBandwidth() uint32 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *DashVideo) GetCodecid() uint32 {
	if x != nil {
		return x.Codecid
	}
	return 0
}

func (x *DashVideo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *DashVideo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DashVideo) GetAudioId() uint32 {
	if x != nil {
		return x.AudioId
	}
	return 0
}

func (x *DashVideo) GetNoRexcode() bool {
	if x != nil {
		return x.NoRexcode
	}
	return false
}

func (x *DashVideo) GetFrameRate() string {
	if x != nil {
		return x.FrameRate
	}
	return ""
}

func (x *DashVideo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DashVideo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DashVideo) GetWidevinePssh() string {
	if x != nil {
		return x.WidevinePssh
	}
	return ""
}

type DataControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedWatchProgress bool `protobuf:"varint,1,opt,name=need_watch_progress,json=needWatchProgress,proto3" json:"need_watch_progress,omitempty"`
}

func (x *DataControl) Reset() {
	*x = DataControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataControl) ProtoMessage() {}

func (x *DataControl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataControl.ProtoReflect.Descriptor instead.
func (*DataControl) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{14}
}

func (x *DataControl) GetNeedWatchProgress() bool {
	if x != nil {
		return x.NeedWatchProgress
	}
	return false
}

// 鉴权浮层
type Dialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 鉴权限制码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 鉴权限制信息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 浮层类型
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 浮层样式类型
	StyleType string `protobuf:"bytes,4,opt,name=style_type,json=styleType,proto3" json:"style_type,omitempty"`
	// 浮层配置
	Config *DialogConfig `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	// 标题
	Title *TextInfo `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题
	Subtitle *TextInfo `protobuf:"bytes,7,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 图片信息
	Image *ImageInfo `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	// 按钮列表
	Button []*ButtonInfo `protobuf:"bytes,9,rep,name=button,proto3" json:"button,omitempty"`
	// 底部描述
	BottomDesc *ButtonInfo `protobuf:"bytes,10,opt,name=bottom_desc,json=bottomDesc,proto3" json:"bottom_desc,omitempty"`
	// 埋点上报信息
	Report *Report `protobuf:"bytes,11,opt,name=report,proto3" json:"report,omitempty"`
	// 倒计时 秒
	CountDownSec int32 `protobuf:"varint,12,opt,name=count_down_sec,json=countDownSec,proto3" json:"count_down_sec,omitempty"`
	// 右下描述
	RightBottomDesc *TextInfo `protobuf:"bytes,13,opt,name=right_bottom_desc,json=rightBottomDesc,proto3" json:"right_bottom_desc,omitempty"`
	BottomDisplay []*BottomDisplay `protobuf:"bytes,14,rep,name=bottom_display,json=bottomDisplay,proto3" json:"bottom_display,omitempty"`
	PlayList []*PlayList `protobuf:"bytes,15,rep,name=play_list,json=playList,proto3" json:"play_list,omitempty"`
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{15}
}

func (x *Dialog) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Dialog) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Dialog) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Dialog) GetStyleType() string {
	if x != nil {
		return x.StyleType
	}
	return ""
}

func (x *Dialog) GetConfig() *DialogConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Dialog) GetTitle() *TextInfo {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Dialog) GetSubtitle() *TextInfo {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *Dialog) GetImage() *ImageInfo {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Dialog) GetButton() []*ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *Dialog) GetBottomDesc() *ButtonInfo {
	if x != nil {
		return x.BottomDesc
	}
	return nil
}

func (x *Dialog) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *Dialog) GetCountDownSec() int32 {
	if x != nil {
		return x.CountDownSec
	}
	return 0
}

func (x *Dialog) GetRightBottomDesc() *TextInfo {
	if x != nil {
		return x.RightBottomDesc
	}
	return nil
}

func (x *Dialog) GetBottomDisplay() []*BottomDisplay {
	if x != nil {
		return x.BottomDisplay
	}
	return nil
}

func (x *Dialog) GetPlayList() []*PlayList {
	if x != nil {
		return x.PlayList
	}
	return nil
}

// 鉴权浮层配置
type DialogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否显示高斯模糊背景图
	IsShowCover bool `protobuf:"varint,1,opt,name=is_show_cover,json=isShowCover,proto3" json:"is_show_cover,omitempty"`
	// 是否响应转屏
	IsOrientationEnable bool `protobuf:"varint,2,opt,name=is_orientation_enable,json=isOrientationEnable,proto3" json:"is_orientation_enable,omitempty"`
	// 是否响应上滑吸顶
	IsNestedScrollEnable bool `protobuf:"varint,3,opt,name=is_nested_scroll_enable,json=isNestedScrollEnable,proto3" json:"is_nested_scroll_enable,omitempty"`
	// 是否强制竖屏
	IsForceHalfscreenEnable bool `protobuf:"varint,4,opt,name=is_force_halfscreen_enable,json=isForceHalfscreenEnable,proto3" json:"is_force_halfscreen_enable,omitempty"`
	// 是否启用背景半透明
	IsBackgroundTranslucentEnable bool `protobuf:"varint,5,opt,name=is_background_translucent_enable,json=isBackgroundTranslucentEnable,proto3" json:"is_background_translucent_enable,omitempty"`
}

func (x *DialogConfig) Reset() {
	*x = DialogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogConfig) ProtoMessage() {}

func (x *DialogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogConfig.ProtoReflect.Descriptor instead.
func (*DialogConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{16}
}

func (x *DialogConfig) GetIsShowCover() bool {
	if x != nil {
		return x.IsShowCover
	}
	return false
}

func (x *DialogConfig) GetIsOrientationEnable() bool {
	if x != nil {
		return x.IsOrientationEnable
	}
	return false
}

func (x *DialogConfig) GetIsNestedScrollEnable() bool {
	if x != nil {
		return x.IsNestedScrollEnable
	}
	return false
}

func (x *DialogConfig) GetIsForceHalfscreenEnable() bool {
	if x != nil {
		return x.IsForceHalfscreenEnable
	}
	return false
}

func (x *DialogConfig) GetIsBackgroundTranslucentEnable() bool {
	if x != nil {
		return x.IsBackgroundTranslucentEnable
	}
	return false
}

// 当前分辨率信息
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 宽
	Width int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 长
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 旋转角度
	Rotate int32 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{17}
}

func (x *Dimension) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetRotate() int32 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

// 杜比音频信息
type DolbyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 杜比类型
	Type DolbyItem_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.pgc.gateway.player.v2.DolbyItem_Type" json:"type,omitempty"`
	// 音频流
	Audio *DashItem `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *DolbyItem) Reset() {
	*x = DolbyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DolbyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DolbyItem) ProtoMessage() {}

func (x *DolbyItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DolbyItem.ProtoReflect.Descriptor instead.
func (*DolbyItem) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{18}
}

func (x *DolbyItem) GetType() DolbyItem_Type {
	if x != nil {
		return x.Type
	}
	return DolbyItem_NONE
}

func (x *DolbyItem) GetAudio() *DashItem {
	if x != nil {
		return x.Audio
	}
	return nil
}

// 播放结束后的尾页Dialog
type EndPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialog *Dialog `protobuf:"bytes,1,opt,name=dialog,proto3" json:"dialog,omitempty"`
	Hide bool `protobuf:"varint,2,opt,name=hide,proto3" json:"hide,omitempty"`
}

func (x *EndPage) Reset() {
	*x = EndPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPage) ProtoMessage() {}

func (x *EndPage) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPage.ProtoReflect.Descriptor instead.
func (*EndPage) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{19}
}

func (x *EndPage) GetDialog() *Dialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

func (x *EndPage) GetHide() bool {
	if x != nil {
		return x.Hide
	}
	return false
}

type EpInlineVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialNo int64 `protobuf:"varint,1,opt,name=material_no,json=materialNo,proto3" json:"material_no,omitempty"`
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *EpInlineVideo) Reset() {
	*x = EpInlineVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInlineVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInlineVideo) ProtoMessage() {}

func (x *EpInlineVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInlineVideo.ProtoReflect.Descriptor instead.
func (*EpInlineVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{20}
}

func (x *EpInlineVideo) GetMaterialNo() int64 {
	if x != nil {
		return x.MaterialNo
	}
	return 0
}

func (x *EpInlineVideo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *EpInlineVideo) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 剧集广告信息
type EpisodeAdvertisementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	FollowVideoBntFlag int32 `protobuf:"varint,4,opt,name=follow_video_bnt_flag,json=followVideoBntFlag,proto3" json:"follow_video_bnt_flag,omitempty"`
	NextVideoTitle string `protobuf:"bytes,5,opt,name=next_video_title,json=nextVideoTitle,proto3" json:"next_video_title,omitempty"`
	NextVideoLink string `protobuf:"bytes,6,opt,name=next_video_link,json=nextVideoLink,proto3" json:"next_video_link,omitempty"`
	Cid int64 `protobuf:"varint,7,opt,name=cid,proto3" json:"cid,omitempty"`
	SeasonId int32 `protobuf:"varint,8,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Follow int32 `protobuf:"varint,9,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *EpisodeAdvertisementInfo) Reset() {
	*x = EpisodeAdvertisementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpisodeAdvertisementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpisodeAdvertisementInfo) ProtoMessage() {}

func (x *EpisodeAdvertisementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpisodeAdvertisementInfo.ProtoReflect.Descriptor instead.
func (*EpisodeAdvertisementInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{21}
}

func (x *EpisodeAdvertisementInfo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *EpisodeAdvertisementInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EpisodeAdvertisementInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *EpisodeAdvertisementInfo) GetFollowVideoBntFlag() int32 {
	if x != nil {
		return x.FollowVideoBntFlag
	}
	return 0
}

func (x *EpisodeAdvertisementInfo) GetNextVideoTitle() string {
	if x != nil {
		return x.NextVideoTitle
	}
	return ""
}

func (x *EpisodeAdvertisementInfo) GetNextVideoLink() string {
	if x != nil {
		return x.NextVideoLink
	}
	return ""
}

func (x *EpisodeAdvertisementInfo) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EpisodeAdvertisementInfo) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *EpisodeAdvertisementInfo) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

// EP信息
type EpisodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpId int32 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Aid int64 `protobuf:"varint,3,opt,name=aid,proto3" json:"aid,omitempty"`
	EpStatus int64 `protobuf:"varint,4,opt,name=ep_status,json=epStatus,proto3" json:"ep_status,omitempty"`
	SeasonInfo *SeasonInfo `protobuf:"bytes,5,opt,name=season_info,json=seasonInfo,proto3" json:"season_info,omitempty"`
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Interaction *Interaction `protobuf:"bytes,8,opt,name=interaction,proto3" json:"interaction,omitempty"`
	LongTitle string `protobuf:"bytes,9,opt,name=long_title,json=longTitle,proto3" json:"long_title,omitempty"`
}

func (x *EpisodeInfo) Reset() {
	*x = EpisodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpisodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpisodeInfo) ProtoMessage() {}

func (x *EpisodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpisodeInfo.ProtoReflect.Descriptor instead.
func (*EpisodeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{22}
}

func (x *EpisodeInfo) GetEpId() int32 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *EpisodeInfo) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *EpisodeInfo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *EpisodeInfo) GetEpStatus() int64 {
	if x != nil {
		return x.EpStatus
	}
	return 0
}

func (x *EpisodeInfo) GetSeasonInfo() *SeasonInfo {
	if x != nil {
		return x.SeasonInfo
	}
	return nil
}

func (x *EpisodeInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *EpisodeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EpisodeInfo) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *EpisodeInfo) GetLongTitle() string {
	if x != nil {
		return x.LongTitle
	}
	return ""
}

type EpPreVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *EpPreVideo) Reset() {
	*x = EpPreVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpPreVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpPreVideo) ProtoMessage() {}

func (x *EpPreVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpPreVideo.ProtoReflect.Descriptor instead.
func (*EpPreVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{23}
}

func (x *EpPreVideo) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *EpPreVideo) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type EpPublicityVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EpPublicityVideo_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.pgc.gateway.player.v2.EpPublicityVideo_Type" json:"type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*EpPublicityVideo_EpPreVideo
	//	*EpPublicityVideo_EpInlineVideo
	Data isEpPublicityVideo_Data `protobuf_oneof:"data"`
}

func (x *EpPublicityVideo) Reset() {
	*x = EpPublicityVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpPublicityVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpPublicityVideo) ProtoMessage() {}

func (x *EpPublicityVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpPublicityVideo.ProtoReflect.Descriptor instead.
func (*EpPublicityVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{24}
}

func (x *EpPublicityVideo) GetType() EpPublicityVideo_Type {
	if x != nil {
		return x.Type
	}
	return EpPublicityVideo_DATA_NOT_SET
}

func (m *EpPublicityVideo) GetData() isEpPublicityVideo_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *EpPublicityVideo) GetEpPreVideo() *EpPreVideo {
	if x, ok := x.GetData().(*EpPublicityVideo_EpPreVideo); ok {
		return x.EpPreVideo
	}
	return nil
}

func (x *EpPublicityVideo) GetEpInlineVideo() *EpInlineVideo {
	if x, ok := x.GetData().(*EpPublicityVideo_EpInlineVideo); ok {
		return x.EpInlineVideo
	}
	return nil
}

type isEpPublicityVideo_Data interface {
	isEpPublicityVideo_Data()
}

type EpPublicityVideo_EpPreVideo struct {
	EpPreVideo *EpPreVideo `protobuf:"bytes,2,opt,name=ep_pre_video,json=epPreVideo,proto3,oneof"`
}

type EpPublicityVideo_EpInlineVideo struct {
	EpInlineVideo *EpInlineVideo `protobuf:"bytes,3,opt,name=ep_inline_video,json=epInlineVideo,proto3,oneof"`
}

func (*EpPublicityVideo_EpPreVideo) isEpPublicityVideo_Data() {}

func (*EpPublicityVideo_EpInlineVideo) isEpPublicityVideo_Data() {}

// 事件
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 震动
	Shake *Shake `protobuf:"bytes,1,opt,name=shake,proto3" json:"shake,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{25}
}

func (x *Event) GetShake() *Shake {
	if x != nil {
		return x.Shake
	}
	return nil
}

// 放映室提示语
type FreyaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	IssuedCnt int32 `protobuf:"varint,3,opt,name=issued_cnt,json=issuedCnt,proto3" json:"issued_cnt,omitempty"`
	IsAlwaysShow bool `protobuf:"varint,4,opt,name=is_always_show,json=isAlwaysShow,proto3" json:"is_always_show,omitempty"`
	ScreenNumber int32 `protobuf:"varint,5,opt,name=screen_number,json=screenNumber,proto3" json:"screen_number,omitempty"`
	FullScreenNumber int32 `protobuf:"varint,6,opt,name=full_screen_number,json=fullScreenNumber,proto3" json:"full_screen_number,omitempty"`
}

func (x *FreyaConfig) Reset() {
	*x = FreyaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreyaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreyaConfig) ProtoMessage() {}

func (x *FreyaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreyaConfig.ProtoReflect.Descriptor instead.
func (*FreyaConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{26}
}

func (x *FreyaConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *FreyaConfig) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FreyaConfig) GetIssuedCnt() int32 {
	if x != nil {
		return x.IssuedCnt
	}
	return 0
}

func (x *FreyaConfig) GetIsAlwaysShow() bool {
	if x != nil {
		return x.IsAlwaysShow
	}
	return false
}

func (x *FreyaConfig) GetScreenNumber() int32 {
	if x != nil {
		return x.ScreenNumber
	}
	return 0
}

func (x *FreyaConfig) GetFullScreenNumber() int32 {
	if x != nil {
		return x.FullScreenNumber
	}
	return 0
}

// 渐变色信息
type GradientColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartColor string `protobuf:"bytes,1,opt,name=start_color,json=startColor,proto3" json:"start_color,omitempty"`
	EndColor string `protobuf:"bytes,2,opt,name=end_color,json=endColor,proto3" json:"end_color,omitempty"`
}

func (x *GradientColor) Reset() {
	*x = GradientColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradientColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradientColor) ProtoMessage() {}

func (x *GradientColor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradientColor.ProtoReflect.Descriptor instead.
func (*GradientColor) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{27}
}

func (x *GradientColor) GetStartColor() string {
	if x != nil {
		return x.StartColor
	}
	return ""
}

func (x *GradientColor) GetEndColor() string {
	if x != nil {
		return x.EndColor
	}
	return ""
}

// 高画质试看信息
type HighDefinitionTrialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrialAble bool `protobuf:"varint,1,opt,name=trial_able,json=trialAble,proto3" json:"trial_able,omitempty"`
	RemainingTimes int32 `protobuf:"varint,2,opt,name=remaining_times,json=remainingTimes,proto3" json:"remaining_times,omitempty"`
	Start int32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	TimeLength int32 `protobuf:"varint,4,opt,name=time_length,json=timeLength,proto3" json:"time_length,omitempty"`
	StartToast *Toast `protobuf:"bytes,5,opt,name=start_toast,json=startToast,proto3" json:"start_toast,omitempty"`
	EndToast *Toast `protobuf:"bytes,6,opt,name=end_toast,json=endToast,proto3" json:"end_toast,omitempty"`
	Report *Report `protobuf:"bytes,7,opt,name=report,proto3" json:"report,omitempty"`
	QualityOpenTipBtn *ButtonInfo `protobuf:"bytes,8,opt,name=quality_open_tip_btn,json=qualityOpenTipBtn,proto3" json:"quality_open_tip_btn,omitempty"`
	NoLongerTrialBtn *ButtonInfo `protobuf:"bytes,9,opt,name=no_longer_trial_btn,json=noLongerTrialBtn,proto3" json:"no_longer_trial_btn,omitempty"`
}

func (x *HighDefinitionTrialInfo) Reset() {
	*x = HighDefinitionTrialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HighDefinitionTrialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HighDefinitionTrialInfo) ProtoMessage() {}

func (x *HighDefinitionTrialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HighDefinitionTrialInfo.ProtoReflect.Descriptor instead.
func (*HighDefinitionTrialInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{28}
}

func (x *HighDefinitionTrialInfo) GetTrialAble() bool {
	if x != nil {
		return x.TrialAble
	}
	return false
}

func (x *HighDefinitionTrialInfo) GetRemainingTimes() int32 {
	if x != nil {
		return x.RemainingTimes
	}
	return 0
}

func (x *HighDefinitionTrialInfo) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *HighDefinitionTrialInfo) GetTimeLength() int32 {
	if x != nil {
		return x.TimeLength
	}
	return 0
}

func (x *HighDefinitionTrialInfo) GetStartToast() *Toast {
	if x != nil {
		return x.StartToast
	}
	return nil
}

func (x *HighDefinitionTrialInfo) GetEndToast() *Toast {
	if x != nil {
		return x.EndToast
	}
	return nil
}

func (x *HighDefinitionTrialInfo) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *HighDefinitionTrialInfo) GetQualityOpenTipBtn() *ButtonInfo {
	if x != nil {
		return x.QualityOpenTipBtn
	}
	return nil
}

func (x *HighDefinitionTrialInfo) GetNoLongerTrialBtn() *ButtonInfo {
	if x != nil {
		return x.NoLongerTrialBtn
	}
	return nil
}

// 历史记录节点
type HistoryNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 节点ID
	NodeId int64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// 节点标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 对应CID
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *HistoryNode) Reset() {
	*x = HistoryNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryNode) ProtoMessage() {}

func (x *HistoryNode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryNode.ProtoReflect.Descriptor instead.
func (*HistoryNode) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{29}
}

func (x *HistoryNode) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *HistoryNode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HistoryNode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 图片信息
type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{30}
}

func (x *ImageInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 交互信息
type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 历史节点
	HistoryNode *HistoryNode `protobuf:"bytes,1,opt,name=history_node,json=historyNode,proto3" json:"history_node,omitempty"`
	// 版本
	GraphVersion int64 `protobuf:"varint,2,opt,name=graph_version,json=graphVersion,proto3" json:"graph_version,omitempty"`
	// 交互消息
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	// 是否为交互
	IsInteraction bool `protobuf:"varint,4,opt,name=is_interaction,json=isInteraction,proto3" json:"is_interaction,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{31}
}

func (x *Interaction) GetHistoryNode() *HistoryNode {
	if x != nil {
		return x.HistoryNode
	}
	return nil
}

func (x *Interaction) GetGraphVersion() int64 {
	if x != nil {
		return x.GraphVersion
	}
	return 0
}

func (x *Interaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Interaction) GetIsInteraction() bool {
	if x != nil {
		return x.IsInteraction
	}
	return false
}

type MultiView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonMaterial string `protobuf:"bytes,1,opt,name=button_material,json=buttonMaterial,proto3" json:"button_material,omitempty"`
	EpId int64 `protobuf:"varint,2,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Avid int64 `protobuf:"varint,4,opt,name=avid,proto3" json:"avid,omitempty"`
}

func (x *MultiView) Reset() {
	*x = MultiView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiView) ProtoMessage() {}

func (x *MultiView) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiView.ProtoReflect.Descriptor instead.
func (*MultiView) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{32}
}

func (x *MultiView) GetButtonMaterial() string {
	if x != nil {
		return x.ButtonMaterial
	}
	return ""
}

func (x *MultiView) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *MultiView) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MultiView) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

// 大会员广告: 支付提示信息
type PayTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转链接
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// 图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// 浮层类型
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// 显示类型
	ShowType int32 `protobuf:"varint,5,opt,name=show_type,json=showType,proto3" json:"show_type,omitempty"`
	// 图片信息
	Img string `protobuf:"bytes,6,opt,name=img,proto3" json:"img,omitempty"`
	// 白天背景颜色
	BgDayColor string `protobuf:"bytes,7,opt,name=bg_day_color,json=bgDayColor,proto3" json:"bg_day_color,omitempty"`
	// 夜间背景颜色
	BgNightColor string `protobuf:"bytes,8,opt,name=bg_night_color,json=bgNightColor,proto3" json:"bg_night_color,omitempty"`
	// 白天线条颜色
	BgLineColor string `protobuf:"bytes,9,opt,name=bg_line_color,json=bgLineColor,proto3" json:"bg_line_color,omitempty"`
	// 夜间线条颜色
	BgNightLineColor string `protobuf:"bytes,10,opt,name=bg_night_line_color,json=bgNightLineColor,proto3" json:"bg_night_line_color,omitempty"`
	// 文字颜色
	TextColor string `protobuf:"bytes,11,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 夜间文字颜色
	TextNightColor string `protobuf:"bytes,12,opt,name=text_night_color,json=textNightColor,proto3" json:"text_night_color,omitempty"`
	// 视图展示起始时间
	ViewStartTime int64 `protobuf:"varint,13,opt,name=view_start_time,json=viewStartTime,proto3" json:"view_start_time,omitempty"`
	// 按钮列表
	Button []*ButtonInfo `protobuf:"bytes,14,rep,name=button,proto3" json:"button,omitempty"`
	// 跳转链接打开方式
	UrlOpenType int32 `protobuf:"varint,15,opt,name=url_open_type,json=urlOpenType,proto3" json:"url_open_type,omitempty"`
	// 埋点上报信息
	Report *Report `protobuf:"bytes,16,opt,name=report,proto3" json:"report,omitempty"`
	// 角度样式
	AngleStyle int32 `protobuf:"varint,17,opt,name=angle_style,json=angleStyle,proto3" json:"angle_style,omitempty"`
	// 埋点上报类型
	ReportType int32 `protobuf:"varint,18,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"`
	// 订单埋点上报参数
	OrderReportParams map[string]string `protobuf:"bytes,19,rep,name=order_report_params,json=orderReportParams,proto3" json:"order_report_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 巨屏图片信息
	GiantScreenImg string `protobuf:"bytes,20,opt,name=giant_screen_img,json=giantScreenImg,proto3" json:"giant_screen_img,omitempty"`
}

func (x *PayTip) Reset() {
	*x = PayTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayTip) ProtoMessage() {}

func (x *PayTip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayTip.ProtoReflect.Descriptor instead.
func (*PayTip) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{33}
}

func (x *PayTip) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PayTip) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PayTip) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PayTip) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PayTip) GetShowType() int32 {
	if x != nil {
		return x.ShowType
	}
	return 0
}

func (x *PayTip) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *PayTip) GetBgDayColor() string {
	if x != nil {
		return x.BgDayColor
	}
	return ""
}

func (x *PayTip) GetBgNightColor() string {
	if x != nil {
		return x.BgNightColor
	}
	return ""
}

func (x *PayTip) GetBgLineColor() string {
	if x != nil {
		return x.BgLineColor
	}
	return ""
}

func (x *PayTip) GetBgNightLineColor() string {
	if x != nil {
		return x.BgNightLineColor
	}
	return ""
}

func (x *PayTip) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *PayTip) GetTextNightColor() string {
	if x != nil {
		return x.TextNightColor
	}
	return ""
}

func (x *PayTip) GetViewStartTime() int64 {
	if x != nil {
		return x.ViewStartTime
	}
	return 0
}

func (x *PayTip) GetButton() []*ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *PayTip) GetUrlOpenType() int32 {
	if x != nil {
		return x.UrlOpenType
	}
	return 0
}

func (x *PayTip) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *PayTip) GetAngleStyle() int32 {
	if x != nil {
		return x.AngleStyle
	}
	return 0
}

func (x *PayTip) GetReportType() int32 {
	if x != nil {
		return x.ReportType
	}
	return 0
}

func (x *PayTip) GetOrderReportParams() map[string]string {
	if x != nil {
		return x.OrderReportParams
	}
	return nil
}

func (x *PayTip) GetGiantScreenImg() string {
	if x != nil {
		return x.GiantScreenImg
	}
	return ""
}

// 禁用功能配置
type PlayAbilityConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundPlayDisable bool `protobuf:"varint,1,opt,name=background_play_disable,json=backgroundPlayDisable,proto3" json:"background_play_disable,omitempty"`    // 后台播放
	FlipDisable           bool `protobuf:"varint,2,opt,name=flip_disable,json=flipDisable,proto3" json:"flip_disable,omitempty"`                                    // 镜像反转
	CastDisable           bool `protobuf:"varint,3,opt,name=cast_disable,json=castDisable,proto3" json:"cast_disable,omitempty"`                                    // 投屏
	FeedbackDisable       bool `protobuf:"varint,4,opt,name=feedback_disable,json=feedbackDisable,proto3" json:"feedback_disable,omitempty"`                        // 反馈
	SubtitleDisable       bool `protobuf:"varint,5,opt,name=subtitle_disable,json=subtitleDisable,proto3" json:"subtitle_disable,omitempty"`                        // 字幕
	PlaybackRateDisable   bool `protobuf:"varint,6,opt,name=playback_rate_disable,json=playbackRateDisable,proto3" json:"playback_rate_disable,omitempty"`          // 播放速度
	TimeUpDisable         bool `protobuf:"varint,7,opt,name=time_up_disable,json=timeUpDisable,proto3" json:"time_up_disable,omitempty"`                            // 定时停止
	PlaybackModeDisable   bool `protobuf:"varint,8,opt,name=playback_mode_disable,json=playbackModeDisable,proto3" json:"playback_mode_disable,omitempty"`          // 播放方式
	ScaleModeDisable      bool `protobuf:"varint,9,opt,name=scale_mode_disable,json=scaleModeDisable,proto3" json:"scale_mode_disable,omitempty"`                   // 画面尺寸
	LikeDisable           bool `protobuf:"varint,10,opt,name=like_disable,json=likeDisable,proto3" json:"like_disable,omitempty"`                                   // 赞
	DislikeDisable        bool `protobuf:"varint,11,opt,name=dislike_disable,json=dislikeDisable,proto3" json:"dislike_disable,omitempty"`                          // 踩
	CoinDisable           bool `protobuf:"varint,12,opt,name=coin_disable,json=coinDisable,proto3" json:"coin_disable,omitempty"`                                   // 投币
	ElecDisable           bool `protobuf:"varint,13,opt,name=elec_disable,json=elecDisable,proto3" json:"elec_disable,omitempty"`                                   // 充电
	ShareDisable          bool `protobuf:"varint,14,opt,name=share_disable,json=shareDisable,proto3" json:"share_disable,omitempty"`                                // 分享
	ScreenShotDisable     bool `protobuf:"varint,15,opt,name=screen_shot_disable,json=screenShotDisable,proto3" json:"screen_shot_disable,omitempty"`               // 截图
	LockScreenDisable     bool `protobuf:"varint,16,opt,name=lock_screen_disable,json=lockScreenDisable,proto3" json:"lock_screen_disable,omitempty"`               // 锁定
	RecommendDisable      bool `protobuf:"varint,17,opt,name=recommend_disable,json=recommendDisable,proto3" json:"recommend_disable,omitempty"`                    // 相关推荐
	PlaybackSpeedDisable  bool `protobuf:"varint,18,opt,name=playback_speed_disable,json=playbackSpeedDisable,proto3" json:"playback_speed_disable,omitempty"`      // 播放速度
	DefinitionDisable     bool `protobuf:"varint,19,opt,name=definition_disable,json=definitionDisable,proto3" json:"definition_disable,omitempty"`                 // 清晰度
	SelectionsDisable     bool `protobuf:"varint,20,opt,name=selections_disable,json=selectionsDisable,proto3" json:"selections_disable,omitempty"`                 // 选集
	NextDisable           bool `protobuf:"varint,21,opt,name=next_disable,json=nextDisable,proto3" json:"next_disable,omitempty"`                                   // 下一集
	EditDmDisable         bool `protobuf:"varint,22,opt,name=edit_dm_disable,json=editDmDisable,proto3" json:"edit_dm_disable,omitempty"`                           // 编辑弹幕
	SmallWindowDisable    bool `protobuf:"varint,23,opt,name=small_window_disable,json=smallWindowDisable,proto3" json:"small_window_disable,omitempty"`            // 小窗
	ShakeDisable          bool `protobuf:"varint,24,opt,name=shake_disable,json=shakeDisable,proto3" json:"shake_disable,omitempty"`                                // 震动
	OuterDmDisable        bool `protobuf:"varint,25,opt,name=outer_dm_disable,json=outerDmDisable,proto3" json:"outer_dm_disable,omitempty"`                        // 外层面板弹幕设置
	InnerDmDisable        bool `protobuf:"varint,26,opt,name=inner_dm_disable,json=innerDmDisable,proto3" json:"inner_dm_disable,omitempty"`                        // 三点内弹幕设置
	FreyaEnterDisable     bool `protobuf:"varint,27,opt,name=freya_enter_disable,json=freyaEnterDisable,proto3" json:"freya_enter_disable,omitempty"`               // 一起看入口
	DolbyDisable          bool `protobuf:"varint,28,opt,name=dolby_disable,json=dolbyDisable,proto3" json:"dolby_disable,omitempty"`                                // 杜比音效
	FreyaFullDisable      bool `protobuf:"varint,29,opt,name=freya_full_disable,json=freyaFullDisable,proto3" json:"freya_full_disable,omitempty"`                  // 全屏一起看入口
	SkipOpedSwitchDisable bool `protobuf:"varint,30,opt,name=skip_oped_switch_disable,json=skipOpedSwitchDisable,proto3" json:"skip_oped_switch_disable,omitempty"` // 跳过片头片尾
	RecordScreenDisable   bool `protobuf:"varint,31,opt,name=record_screen_disable,json=recordScreenDisable,proto3" json:"record_screen_disable,omitempty"`         // 录屏
	ColorOptimizeDisable  bool `protobuf:"varint,32,opt,name=color_optimize_disable,json=colorOptimizeDisable,proto3" json:"color_optimize_disable,omitempty"`      // 色觉优化
	DubbingDisable        bool `protobuf:"varint,33,opt,name=dubbing_disable,json=dubbingDisable,proto3" json:"dubbing_disable,omitempty"`                          // 配音
}

func (x *PlayAbilityConf) Reset() {
	*x = PlayAbilityConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAbilityConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAbilityConf) ProtoMessage() {}

func (x *PlayAbilityConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAbilityConf.ProtoReflect.Descriptor instead.
func (*PlayAbilityConf) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{34}
}

func (x *PlayAbilityConf) GetBackgroundPlayDisable() bool {
	if x != nil {
		return x.BackgroundPlayDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFlipDisable() bool {
	if x != nil {
		return x.FlipDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCastDisable() bool {
	if x != nil {
		return x.CastDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFeedbackDisable() bool {
	if x != nil {
		return x.FeedbackDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSubtitleDisable() bool {
	if x != nil {
		return x.SubtitleDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackRateDisable() bool {
	if x != nil {
		return x.PlaybackRateDisable
	}
	return false
}

func (x *PlayAbilityConf) GetTimeUpDisable() bool {
	if x != nil {
		return x.TimeUpDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackModeDisable() bool {
	if x != nil {
		return x.PlaybackModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScaleModeDisable() bool {
	if x != nil {
		return x.ScaleModeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLikeDisable() bool {
	if x != nil {
		return x.LikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDislikeDisable() bool {
	if x != nil {
		return x.DislikeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetCoinDisable() bool {
	if x != nil {
		return x.CoinDisable
	}
	return false
}

func (x *PlayAbilityConf) GetElecDisable() bool {
	if x != nil {
		return x.ElecDisable
	}
	return false
}

func (x *PlayAbilityConf) GetShareDisable() bool {
	if x != nil {
		return x.ShareDisable
	}
	return false
}

func (x *PlayAbilityConf) GetScreenShotDisable() bool {
	if x != nil {
		return x.ScreenShotDisable
	}
	return false
}

func (x *PlayAbilityConf) GetLockScreenDisable() bool {
	if x != nil {
		return x.LockScreenDisable
	}
	return false
}

func (x *PlayAbilityConf) GetRecommendDisable() bool {
	if x != nil {
		return x.RecommendDisable
	}
	return false
}

func (x *PlayAbilityConf) GetPlaybackSpeedDisable() bool {
	if x != nil {
		return x.PlaybackSpeedDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDefinitionDisable() bool {
	if x != nil {
		return x.DefinitionDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSelectionsDisable() bool {
	if x != nil {
		return x.SelectionsDisable
	}
	return false
}

func (x *PlayAbilityConf) GetNextDisable() bool {
	if x != nil {
		return x.NextDisable
	}
	return false
}

func (x *PlayAbilityConf) GetEditDmDisable() bool {
	if x != nil {
		return x.EditDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSmallWindowDisable() bool {
	if x != nil {
		return x.SmallWindowDisable
	}
	return false
}

func (x *PlayAbilityConf) GetShakeDisable() bool {
	if x != nil {
		return x.ShakeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetOuterDmDisable() bool {
	if x != nil {
		return x.OuterDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetInnerDmDisable() bool {
	if x != nil {
		return x.InnerDmDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFreyaEnterDisable() bool {
	if x != nil {
		return x.FreyaEnterDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDolbyDisable() bool {
	if x != nil {
		return x.DolbyDisable
	}
	return false
}

func (x *PlayAbilityConf) GetFreyaFullDisable() bool {
	if x != nil {
		return x.FreyaFullDisable
	}
	return false
}

func (x *PlayAbilityConf) GetSkipOpedSwitchDisable() bool {
	if x != nil {
		return x.SkipOpedSwitchDisable
	}
	return false
}

func (x *PlayAbilityConf) GetRecordScreenDisable() bool {
	if x != nil {
		return x.RecordScreenDisable
	}
	return false
}

func (x *PlayAbilityConf) GetColorOptimizeDisable() bool {
	if x != nil {
		return x.ColorOptimizeDisable
	}
	return false
}

func (x *PlayAbilityConf) GetDubbingDisable() bool {
	if x != nil {
		return x.DubbingDisable
	}
	return false
}

// 云控扩展配置信息
type PlayAbilityExtConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowCloseSubtitle bool `protobuf:"varint,1,opt,name=allow_close_subtitle,json=allowCloseSubtitle,proto3" json:"allow_close_subtitle,omitempty"`
	FreyaConfig *FreyaConfig `protobuf:"bytes,2,opt,name=freya_config,json=freyaConfig,proto3" json:"freya_config,omitempty"`
	CastTips *CastTips `protobuf:"bytes,3,opt,name=cast_tips,json=castTips,proto3" json:"cast_tips,omitempty"`
}

func (x *PlayAbilityExtConf) Reset() {
	*x = PlayAbilityExtConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayAbilityExtConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayAbilityExtConf) ProtoMessage() {}

func (x *PlayAbilityExtConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayAbilityExtConf.ProtoReflect.Descriptor instead.
func (*PlayAbilityExtConf) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{35}
}

func (x *PlayAbilityExtConf) GetAllowCloseSubtitle() bool {
	if x != nil {
		return x.AllowCloseSubtitle
	}
	return false
}

func (x *PlayAbilityExtConf) GetFreyaConfig() *FreyaConfig {
	if x != nil {
		return x.FreyaConfig
	}
	return nil
}

func (x *PlayAbilityExtConf) GetCastTips() *CastTips {
	if x != nil {
		return x.CastTips
	}
	return nil
}

// 播放配音信息
type PlayDubbingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 背景音频
	BackgroundAudio *AudioMaterialProto `protobuf:"bytes,1,opt,name=background_audio,json=backgroundAudio,proto3" json:"background_audio,omitempty"`
	// 角色音频列表
	RoleAudioList []*RoleAudioProto `protobuf:"bytes,2,rep,name=role_audio_list,json=roleAudioList,proto3" json:"role_audio_list,omitempty"`
	// 引导文本
	GuideText string `protobuf:"bytes,3,opt,name=guide_text,json=guideText,proto3" json:"guide_text,omitempty"`
}

func (x *PlayDubbingInfo) Reset() {
	*x = PlayDubbingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayDubbingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayDubbingInfo) ProtoMessage() {}

func (x *PlayDubbingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayDubbingInfo.ProtoReflect.Descriptor instead.
func (*PlayDubbingInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{36}
}

func (x *PlayDubbingInfo) GetBackgroundAudio() *AudioMaterialProto {
	if x != nil {
		return x.BackgroundAudio
	}
	return nil
}

func (x *PlayDubbingInfo) GetRoleAudioList() []*RoleAudioProto {
	if x != nil {
		return x.RoleAudioList
	}
	return nil
}

func (x *PlayDubbingInfo) GetGuideText() string {
	if x != nil {
		return x.GuideText
	}
	return ""
}

// 播放扩展信息
type PlayExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 播放配音信息
	PlayDubbingInfo *PlayDubbingInfo `protobuf:"bytes,1,opt,name=play_dubbing_info,json=playDubbingInfo,proto3" json:"play_dubbing_info,omitempty"`
}

func (x *PlayExtInfo) Reset() {
	*x = PlayExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayExtInfo) ProtoMessage() {}

func (x *PlayExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayExtInfo.ProtoReflect.Descriptor instead.
func (*PlayExtInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{37}
}

func (x *PlayExtInfo) GetPlayDubbingInfo() *PlayDubbingInfo {
	if x != nil {
		return x.PlayDubbingInfo
	}
	return nil
}

type PlayList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Link string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,5,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
}

func (x *PlayList) Reset() {
	*x = PlayList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayList) ProtoMessage() {}

func (x *PlayList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayList.ProtoReflect.Descriptor instead.
func (*PlayList) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{38}
}

func (x *PlayList) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *PlayList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlayList) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *PlayList) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *PlayList) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

// 其他业务信息
type PlayViewBusinessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前视频是否是预览
	IsPreview bool `protobuf:"varint,1,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 用户是否承包过
	Bp bool `protobuf:"varint,2,opt,name=bp,proto3" json:"bp,omitempty"`
	// drm使用
	MarlinToken string `protobuf:"bytes,3,opt,name=marlin_token,json=marlinToken,proto3" json:"marlin_token,omitempty"`
	// 倍速动效色值
	PlaybackSpeedColor string `protobuf:"bytes,4,opt,name=playback_speed_color,json=playbackSpeedColor,proto3" json:"playback_speed_color,omitempty"`
	ContinuePlayInfo *ContinuePlayInfo `protobuf:"bytes,5,opt,name=continue_play_info,json=continuePlayInfo,proto3" json:"continue_play_info,omitempty"`
	// 跳过片头/片尾配置
	ClipInfo []*ClipInfo `protobuf:"bytes,6,rep,name=clip_info,json=clipInfo,proto3" json:"clip_info,omitempty"`
	InlineType InlineType `protobuf:"varint,7,opt,name=inline_type,json=inlineType,proto3,enum=bilibili.pgc.gateway.player.v2.InlineType" json:"inline_type,omitempty"`
	EpWholeDuration int32 `protobuf:"varint,8,opt,name=ep_whole_duration,json=epWholeDuration,proto3" json:"ep_whole_duration,omitempty"`
	// 当前分辨率信息
	Dimension *Dimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
	QualityExtMap map[int32]*QualityExtInfo `protobuf:"bytes,10,rep,name=quality_ext_map,json=qualityExtMap,proto3" json:"quality_ext_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExpMap map[string]int32 `protobuf:"bytes,11,rep,name=exp_map,json=expMap,proto3" json:"exp_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// DRM技术类型
	DrmTechType DrmTechType `protobuf:"varint,12,opt,name=drm_tech_type,json=drmTechType,proto3,enum=bilibili.pgc.gateway.player.v2.DrmTechType" json:"drm_tech_type,omitempty"`
	LimitActionType int32 `protobuf:"varint,13,opt,name=limit_action_type,json=limitActionType,proto3" json:"limit_action_type,omitempty"`
	IsDrm bool `protobuf:"varint,14,opt,name=is_drm,json=isDrm,proto3" json:"is_drm,omitempty"`
	RecordInfo *RecordInfo `protobuf:"bytes,15,opt,name=record_info,json=recordInfo,proto3" json:"record_info,omitempty"`
	VipStatus int32 `protobuf:"varint,16,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	IsLivePre bool `protobuf:"varint,17,opt,name=is_live_pre,json=isLivePre,proto3" json:"is_live_pre,omitempty"`
	EpisodeInfo *EpisodeInfo `protobuf:"bytes,18,opt,name=episode_info,json=episodeInfo,proto3" json:"episode_info,omitempty"`
	EpisodeAdvertisementInfo *EpisodeAdvertisementInfo `protobuf:"bytes,19,opt,name=episode_advertisement_info,json=episodeAdvertisementInfo,proto3" json:"episode_advertisement_info,omitempty"`
	UserStatus *UserStatus `protobuf:"bytes,20,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
}

func (x *PlayViewBusinessInfo) Reset() {
	*x = PlayViewBusinessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewBusinessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewBusinessInfo) ProtoMessage() {}

func (x *PlayViewBusinessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewBusinessInfo.ProtoReflect.Descriptor instead.
func (*PlayViewBusinessInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{39}
}

func (x *PlayViewBusinessInfo) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *PlayViewBusinessInfo) GetBp() bool {
	if x != nil {
		return x.Bp
	}
	return false
}

func (x *PlayViewBusinessInfo) GetMarlinToken() string {
	if x != nil {
		return x.MarlinToken
	}
	return ""
}

func (x *PlayViewBusinessInfo) GetPlaybackSpeedColor() string {
	if x != nil {
		return x.PlaybackSpeedColor
	}
	return ""
}

func (x *PlayViewBusinessInfo) GetContinuePlayInfo() *ContinuePlayInfo {
	if x != nil {
		return x.ContinuePlayInfo
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetClipInfo() []*ClipInfo {
	if x != nil {
		return x.ClipInfo
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetInlineType() InlineType {
	if x != nil {
		return x.InlineType
	}
	return InlineType_TYPE_UNKNOWN
}

func (x *PlayViewBusinessInfo) GetEpWholeDuration() int32 {
	if x != nil {
		return x.EpWholeDuration
	}
	return 0
}

func (x *PlayViewBusinessInfo) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetQualityExtMap() map[int32]*QualityExtInfo {
	if x != nil {
		return x.QualityExtMap
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetExpMap() map[string]int32 {
	if x != nil {
		return x.ExpMap
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetDrmTechType() DrmTechType {
	if x != nil {
		return x.DrmTechType
	}
	return DrmTechType_NON
}

func (x *PlayViewBusinessInfo) GetLimitActionType() int32 {
	if x != nil {
		return x.LimitActionType
	}
	return 0
}

func (x *PlayViewBusinessInfo) GetIsDrm() bool {
	if x != nil {
		return x.IsDrm
	}
	return false
}

func (x *PlayViewBusinessInfo) GetRecordInfo() *RecordInfo {
	if x != nil {
		return x.RecordInfo
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetVipStatus() int32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *PlayViewBusinessInfo) GetIsLivePre() bool {
	if x != nil {
		return x.IsLivePre
	}
	return false
}

func (x *PlayViewBusinessInfo) GetEpisodeInfo() *EpisodeInfo {
	if x != nil {
		return x.EpisodeInfo
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetEpisodeAdvertisementInfo() *EpisodeAdvertisementInfo {
	if x != nil {
		return x.EpisodeAdvertisementInfo
	}
	return nil
}

func (x *PlayViewBusinessInfo) GetUserStatus() *UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return nil
}

// 播放页信息-响应
type PlayViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频流信息
	VideoInfo *VideoInfo `protobuf:"bytes,1,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	// 播放控件用户自定义配置
	PlayConf *PlayAbilityConf `protobuf:"bytes,2,opt,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
	// 业务需要的其他信息
	Business *PlayViewBusinessInfo `protobuf:"bytes,3,opt,name=business,proto3" json:"business,omitempty"`
	// 事件
	Event *Event `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	// 展示信息
	ViewInfo *ViewInfo `protobuf:"bytes,5,opt,name=view_info,json=viewInfo,proto3" json:"view_info,omitempty"`
	// 自定义配置扩展信息
	PlayExtConf *PlayAbilityExtConf `protobuf:"bytes,6,opt,name=play_ext_conf,json=playExtConf,proto3" json:"play_ext_conf,omitempty"`
	// 播放扩展信息
	PlayExtInfo *PlayExtInfo `protobuf:"bytes,7,opt,name=play_ext_info,json=playExtInfo,proto3" json:"play_ext_info,omitempty"`
}

func (x *PlayViewReply) Reset() {
	*x = PlayViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReply) ProtoMessage() {}

func (x *PlayViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReply.ProtoReflect.Descriptor instead.
func (*PlayViewReply) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{40}
}

func (x *PlayViewReply) GetVideoInfo() *VideoInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *PlayViewReply) GetPlayConf() *PlayAbilityConf {
	if x != nil {
		return x.PlayConf
	}
	return nil
}

func (x *PlayViewReply) GetBusiness() *PlayViewBusinessInfo {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *PlayViewReply) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PlayViewReply) GetViewInfo() *ViewInfo {
	if x != nil {
		return x.ViewInfo
	}
	return nil
}

func (x *PlayViewReply) GetPlayExtConf() *PlayAbilityExtConf {
	if x != nil {
		return x.PlayExtConf
	}
	return nil
}

func (x *PlayViewReply) GetPlayExtInfo() *PlayExtInfo {
	if x != nil {
		return x.PlayExtInfo
	}
	return nil
}

// 播放页信息-请求
type PlayViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 剧集epid
	Epid int64 `protobuf:"varint,1,opt,name=epid,proto3" json:"epid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,11,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 视频编码
	PreferCodecType CodeType `protobuf:"varint,12,opt,name=prefer_codec_type,json=preferCodecType,proto3,enum=bilibili.pgc.gateway.player.v2.CodeType" json:"prefer_codec_type,omitempty"`
	// 是否强制请求预览视频
	IsPreview bool `protobuf:"varint,13,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	// 一起看房间id
	RoomId int64 `protobuf:"varint,14,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// 是否需要展示信息
	IsNeedViewInfo bool `protobuf:"varint,15,opt,name=is_need_view_info,json=isNeedViewInfo,proto3" json:"is_need_view_info,omitempty"`
	// 场景控制
	SceneControl *SceneControl `protobuf:"bytes,16,opt,name=scene_control,json=sceneControl,proto3" json:"scene_control,omitempty"`
	InlineScene InlineScene `protobuf:"varint,17,opt,name=inline_scene,json=inlineScene,proto3,enum=bilibili.pgc.gateway.player.v2.InlineScene" json:"inline_scene,omitempty"`
	MaterialNo int64 `protobuf:"varint,18,opt,name=material_no,json=materialNo,proto3" json:"material_no,omitempty"`
	// DRM 安全等级
	SecurityLevel int32 `protobuf:"varint,19,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"`
	SeasonId int64 `protobuf:"varint,20,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	DataControl *DataControl `protobuf:"bytes,21,opt,name=data_control,json=dataControl,proto3" json:"data_control,omitempty"`
}

func (x *PlayViewReq) Reset() {
	*x = PlayViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayViewReq) ProtoMessage() {}

func (x *PlayViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayViewReq.ProtoReflect.Descriptor instead.
func (*PlayViewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{41}
}

func (x *PlayViewReq) GetEpid() int64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *PlayViewReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *PlayViewReq) GetQn() int64 {
	if x != nil {
		return x.Qn
	}
	return 0
}

func (x *PlayViewReq) GetFnver() int32 {
	if x != nil {
		return x.Fnver
	}
	return 0
}

func (x *PlayViewReq) GetFnval() int32 {
	if x != nil {
		return x.Fnval
	}
	return 0
}

func (x *PlayViewReq) GetDownload() uint32 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *PlayViewReq) GetForceHost() int32 {
	if x != nil {
		return x.ForceHost
	}
	return 0
}

func (x *PlayViewReq) GetFourk() bool {
	if x != nil {
		return x.Fourk
	}
	return false
}

func (x *PlayViewReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *PlayViewReq) GetFromSpmid() string {
	if x != nil {
		return x.FromSpmid
	}
	return ""
}

func (x *PlayViewReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

func (x *PlayViewReq) GetPreferCodecType() CodeType {
	if x != nil {
		return x.PreferCodecType
	}
	return CodeType_NOCODE
}

func (x *PlayViewReq) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

func (x *PlayViewReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *PlayViewReq) GetIsNeedViewInfo() bool {
	if x != nil {
		return x.IsNeedViewInfo
	}
	return false
}

func (x *PlayViewReq) GetSceneControl() *SceneControl {
	if x != nil {
		return x.SceneControl
	}
	return nil
}

func (x *PlayViewReq) GetInlineScene() InlineScene {
	if x != nil {
		return x.InlineScene
	}
	return InlineScene_UNKNOWN
}

func (x *PlayViewReq) GetMaterialNo() int64 {
	if x != nil {
		return x.MaterialNo
	}
	return 0
}

func (x *PlayViewReq) GetSecurityLevel() int32 {
	if x != nil {
		return x.SecurityLevel
	}
	return 0
}

func (x *PlayViewReq) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *PlayViewReq) GetDataControl() *DataControl {
	if x != nil {
		return x.DataControl
	}
	return nil
}

// 弹窗信息
type PopWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 弹窗标题 老字段
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 优惠券列表
	Coupon []*Coupon `protobuf:"bytes,2,rep,name=coupon,proto3" json:"coupon,omitempty"`
	// 弹窗按钮列表
	Button []*ButtonInfo `protobuf:"bytes,3,rep,name=button,proto3" json:"button,omitempty"`
	// 底部文案 老字段
	BottomText string `protobuf:"bytes,4,opt,name=bottom_text,json=bottomText,proto3" json:"bottom_text,omitempty"`
	// 弹窗标题 新字段
	PopTitle *TextInfo `protobuf:"bytes,5,opt,name=pop_title,json=popTitle,proto3" json:"pop_title,omitempty"`
	// 弹窗副标题
	Subtitle *TextInfo `protobuf:"bytes,6,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 底部描述 新字段
	BottomDesc *ButtonInfo `protobuf:"bytes,7,opt,name=bottom_desc,json=bottomDesc,proto3" json:"bottom_desc,omitempty"`
	// 弹窗小图
	Cover string `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`
	// 弹窗类型
	PopType string `protobuf:"bytes,9,opt,name=pop_type,json=popType,proto3" json:"pop_type,omitempty"`
}

func (x *PopWin) Reset() {
	*x = PopWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PopWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PopWin) ProtoMessage() {}

func (x *PopWin) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PopWin.ProtoReflect.Descriptor instead.
func (*PopWin) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{42}
}

func (x *PopWin) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PopWin) GetCoupon() []*Coupon {
	if x != nil {
		return x.Coupon
	}
	return nil
}

func (x *PopWin) GetButton() []*ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *PopWin) GetBottomText() string {
	if x != nil {
		return x.BottomText
	}
	return ""
}

func (x *PopWin) GetPopTitle() *TextInfo {
	if x != nil {
		return x.PopTitle
	}
	return nil
}

func (x *PopWin) GetSubtitle() *TextInfo {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *PopWin) GetBottomDesc() *ButtonInfo {
	if x != nil {
		return x.BottomDesc
	}
	return nil
}

func (x *PopWin) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *PopWin) GetPopType() string {
	if x != nil {
		return x.PopType
	}
	return ""
}

// 广告组件: 竖屏时视频下部提示栏
type PromptBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主标题, 如: "本片含大会员专享内容"
	Title *TextInfo `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 副标题, 如: "成为大会员可免费看全部剧集"
	SubTitle *TextInfo `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	// 副标题前面的icon
	SubTitleIcon string `protobuf:"bytes,3,opt,name=sub_title_icon,json=subTitleIcon,proto3" json:"sub_title_icon,omitempty"`
	// 背景图
	BgImage string `protobuf:"bytes,4,opt,name=bg_image,json=bgImage,proto3" json:"bg_image,omitempty"`
	// 背景渐变色
	BgGradientColor *GradientColor `protobuf:"bytes,5,opt,name=bg_gradient_color,json=bgGradientColor,proto3" json:"bg_gradient_color,omitempty"`
	// 按钮
	Button []*ButtonInfo `protobuf:"bytes,6,rep,name=button,proto3" json:"button,omitempty"`
	// 埋点上报信息
	Report *Report `protobuf:"bytes,7,opt,name=report,proto3" json:"report,omitempty"`
	FullScreenIpIcon string `protobuf:"bytes,8,opt,name=full_screen_ip_icon,json=fullScreenIpIcon,proto3" json:"full_screen_ip_icon,omitempty"`
	FullScreenBgGradientColor *GradientColor `protobuf:"bytes,9,opt,name=full_screen_bg_gradient_color,json=fullScreenBgGradientColor,proto3" json:"full_screen_bg_gradient_color,omitempty"`
}

func (x *PromptBar) Reset() {
	*x = PromptBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptBar) ProtoMessage() {}

func (x *PromptBar) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptBar.ProtoReflect.Descriptor instead.
func (*PromptBar) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{43}
}

func (x *PromptBar) GetTitle() *TextInfo {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PromptBar) GetSubTitle() *TextInfo {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *PromptBar) GetSubTitleIcon() string {
	if x != nil {
		return x.SubTitleIcon
	}
	return ""
}

func (x *PromptBar) GetBgImage() string {
	if x != nil {
		return x.BgImage
	}
	return ""
}

func (x *PromptBar) GetBgGradientColor() *GradientColor {
	if x != nil {
		return x.BgGradientColor
	}
	return nil
}

func (x *PromptBar) GetButton() []*ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *PromptBar) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *PromptBar) GetFullScreenIpIcon() string {
	if x != nil {
		return x.FullScreenIpIcon
	}
	return ""
}

func (x *PromptBar) GetFullScreenBgGradientColor() *GradientColor {
	if x != nil {
		return x.FullScreenBgGradientColor
	}
	return nil
}

// 云控拓展视频画质信息
type QualityExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否支持试看
	TrialSupport bool `protobuf:"varint,1,opt,name=trial_support,json=trialSupport,proto3" json:"trial_support,omitempty"`
}

func (x *QualityExtInfo) Reset() {
	*x = QualityExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualityExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityExtInfo) ProtoMessage() {}

func (x *QualityExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityExtInfo.ProtoReflect.Descriptor instead.
func (*QualityExtInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{44}
}

func (x *QualityExtInfo) GetTrialSupport() bool {
	if x != nil {
		return x.TrialSupport
	}
	return false
}

// 备案信息
type RecordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 记录
	Record string `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	// 记录图标
	RecordIcon string `protobuf:"bytes,2,opt,name=record_icon,json=recordIcon,proto3" json:"record_icon,omitempty"`
}

func (x *RecordInfo) Reset() {
	*x = RecordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordInfo) ProtoMessage() {}

func (x *RecordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordInfo.ProtoReflect.Descriptor instead.
func (*RecordInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{45}
}

func (x *RecordInfo) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

func (x *RecordInfo) GetRecordIcon() string {
	if x != nil {
		return x.RecordIcon
	}
	return ""
}

// 埋点上报信息
type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 曝光事件
	ShowEventId string `protobuf:"bytes,1,opt,name=show_event_id,json=showEventId,proto3" json:"show_event_id,omitempty"`
	// 点击事件
	ClickEventId string `protobuf:"bytes,2,opt,name=click_event_id,json=clickEventId,proto3" json:"click_event_id,omitempty"`
	// 埋点透传参数
	Extends string `protobuf:"bytes,3,opt,name=extends,proto3" json:"extends,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{46}
}

func (x *Report) GetShowEventId() string {
	if x != nil {
		return x.ShowEventId
	}
	return ""
}

func (x *Report) GetClickEventId() string {
	if x != nil {
		return x.ClickEventId
	}
	return ""
}

func (x *Report) GetExtends() string {
	if x != nil {
		return x.Extends
	}
	return ""
}

// 分段流条目
type ResponseUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分段序号
	Order uint32 `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	// 分段时长
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// 分段大小
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// 主线流
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,5,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// md5
	Md5 string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *ResponseUrl) Reset() {
	*x = ResponseUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUrl) ProtoMessage() {}

func (x *ResponseUrl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUrl.ProtoReflect.Descriptor instead.
func (*ResponseUrl) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{47}
}

func (x *ResponseUrl) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ResponseUrl) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ResponseUrl) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResponseUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResponseUrl) GetBackupUrl() []string {
	if x != nil {
		return x.BackupUrl
	}
	return nil
}

func (x *ResponseUrl) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

// 权限信息
type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否可以观看
	CanWatch int32 `protobuf:"varint,1,opt,name=can_watch,json=canWatch,proto3" json:"can_watch,omitempty"`
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{48}
}

func (x *Rights) GetCanWatch() int32 {
	if x != nil {
		return x.CanWatch
	}
	return 0
}

// 角色配音信息
type RoleAudioProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色ID
	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// 角色名称
	RoleName string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// 角色头像
	RoleAvatar string `protobuf:"bytes,3,opt,name=role_avatar,json=roleAvatar,proto3" json:"role_avatar,omitempty"`
	// 音频素材列表
	AudioMaterialList []*AudioMaterialProto `protobuf:"bytes,4,rep,name=audio_material_list,json=audioMaterialList,proto3" json:"audio_material_list,omitempty"`
}

func (x *RoleAudioProto) Reset() {
	*x = RoleAudioProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAudioProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAudioProto) ProtoMessage() {}

func (x *RoleAudioProto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAudioProto.ProtoReflect.Descriptor instead.
func (*RoleAudioProto) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{49}
}

func (x *RoleAudioProto) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleAudioProto) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleAudioProto) GetRoleAvatar() string {
	if x != nil {
		return x.RoleAvatar
	}
	return ""
}

func (x *RoleAudioProto) GetAudioMaterialList() []*AudioMaterialProto {
	if x != nil {
		return x.AudioMaterialList
	}
	return nil
}

// 场景控制
type SceneControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否收藏播单
	FavPlaylist bool `protobuf:"varint,1,opt,name=fav_playlist,json=favPlaylist,proto3" json:"fav_playlist,omitempty"`
	// 是否小窗
	SmallWindow bool `protobuf:"varint,2,opt,name=small_window,json=smallWindow,proto3" json:"small_window,omitempty"`
	// 是否画中画
	Pip bool `protobuf:"varint,3,opt,name=pip,proto3" json:"pip,omitempty"`
	WasHeInline bool `protobuf:"varint,4,opt,name=was_he_inline,json=wasHeInline,proto3" json:"was_he_inline,omitempty"`
	IsNeedTrial bool `protobuf:"varint,5,opt,name=is_need_trial,json=isNeedTrial,proto3" json:"is_need_trial,omitempty"`
}

func (x *SceneControl) Reset() {
	*x = SceneControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneControl) ProtoMessage() {}

func (x *SceneControl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneControl.ProtoReflect.Descriptor instead.
func (*SceneControl) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{50}
}

func (x *SceneControl) GetFavPlaylist() bool {
	if x != nil {
		return x.FavPlaylist
	}
	return false
}

func (x *SceneControl) GetSmallWindow() bool {
	if x != nil {
		return x.SmallWindow
	}
	return false
}

func (x *SceneControl) GetPip() bool {
	if x != nil {
		return x.Pip
	}
	return false
}

func (x *SceneControl) GetWasHeInline() bool {
	if x != nil {
		return x.WasHeInline
	}
	return false
}

func (x *SceneControl) GetIsNeedTrial() bool {
	if x != nil {
		return x.IsNeedTrial
	}
	return false
}

// 方案
type Scheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType Scheme_ActionType `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=bilibili.pgc.gateway.player.v2.Scheme_ActionType" json:"action_type,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *Scheme) Reset() {
	*x = Scheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheme) ProtoMessage() {}

func (x *Scheme) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheme.ProtoReflect.Descriptor instead.
func (*Scheme) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{51}
}

func (x *Scheme) GetActionType() Scheme_ActionType {
	if x != nil {
		return x.ActionType
	}
	return Scheme_UNKNOWN
}

func (x *Scheme) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

// PGC SEASON 信息
type SeasonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PGC SEASON ID
	SeasonId int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// PGC SEASON 类型
	SeasonType int32 `protobuf:"varint,2,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	// PGC SEASON 状态
	SeasonStatus int32 `protobuf:"varint,3,opt,name=season_status,json=seasonStatus,proto3" json:"season_status,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	// 标题
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// 权限信息
	Rights *Rights `protobuf:"bytes,6,opt,name=rights,proto3" json:"rights,omitempty"`
	// 模式
	Mode int32 `protobuf:"varint,7,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *SeasonInfo) Reset() {
	*x = SeasonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonInfo) ProtoMessage() {}

func (x *SeasonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonInfo.ProtoReflect.Descriptor instead.
func (*SeasonInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{52}
}

func (x *SeasonInfo) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SeasonInfo) GetSeasonType() int32 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *SeasonInfo) GetSeasonStatus() int32 {
	if x != nil {
		return x.SeasonStatus
	}
	return 0
}

func (x *SeasonInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SeasonInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeasonInfo) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *SeasonInfo) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

// 分段视频流
type SegmentVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分段视频流列表
	Segment []*ResponseUrl `protobuf:"bytes,1,rep,name=segment,proto3" json:"segment,omitempty"`
}

func (x *SegmentVideo) Reset() {
	*x = SegmentVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentVideo) ProtoMessage() {}

func (x *SegmentVideo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentVideo.ProtoReflect.Descriptor instead.
func (*SegmentVideo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{53}
}

func (x *SegmentVideo) GetSegment() []*ResponseUrl {
	if x != nil {
		return x.Segment
	}
	return nil
}

// 震动
type Shake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件地址
	File string `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *Shake) Reset() {
	*x = Shake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shake) ProtoMessage() {}

func (x *Shake) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shake.ProtoReflect.Descriptor instead.
func (*Shake) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{54}
}

func (x *Shake) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

// 视频流信息
type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元数据
	Info *StreamInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// 流数据
	//
	// Types that are assignable to Content:
	//
	//	*Stream_DashVideo
	//	*Stream_SegmentVideo
	Content isStream_Content `protobuf_oneof:"content"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{55}
}

func (x *Stream) GetInfo() *StreamInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (m *Stream) GetContent() isStream_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Stream) GetDashVideo() *DashVideo {
	if x, ok := x.GetContent().(*Stream_DashVideo); ok {
		return x.DashVideo
	}
	return nil
}

func (x *Stream) GetSegmentVideo() *SegmentVideo {
	if x, ok := x.GetContent().(*Stream_SegmentVideo); ok {
		return x.SegmentVideo
	}
	return nil
}

type isStream_Content interface {
	isStream_Content()
}

type Stream_DashVideo struct {
	// dash流
	DashVideo *DashVideo `protobuf:"bytes,2,opt,name=dash_video,json=dashVideo,proto3,oneof"`
}

type Stream_SegmentVideo struct {
	// 分段流
	SegmentVideo *SegmentVideo `protobuf:"bytes,3,opt,name=segment_video,json=segmentVideo,proto3,oneof"`
}

func (*Stream_DashVideo) isStream_Content() {}

func (*Stream_SegmentVideo) isStream_Content() {}

// 流媒体元数据
type StreamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频质量
	Quality int32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 视频格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 描述信息
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// 错误码
	ErrCode int32 `protobuf:"varint,4,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	// 流限制信息
	Limit *StreamLimit `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// 是否需要VIP
	NeedVip bool `protobuf:"varint,6,opt,name=need_vip,json=needVip,proto3" json:"need_vip,omitempty"`
	// 是否需要登录
	NeedLogin bool `protobuf:"varint,7,opt,name=need_login,json=needLogin,proto3" json:"need_login,omitempty"`
	// 是否完整
	Intact bool `protobuf:"varint,8,opt,name=intact,proto3" json:"intact,omitempty"`
	// 权限信息
	Attribute int64 `protobuf:"varint,10,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// 新版描述信息
	NewDescription string `protobuf:"bytes,11,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	// 显示描述信息
	DisplayDesc string `protobuf:"bytes,12,opt,name=display_desc,json=displayDesc,proto3" json:"display_desc,omitempty"`
	// 上标
	Superscript string `protobuf:"bytes,13,opt,name=superscript,proto3" json:"superscript,omitempty"`
	// 方案信息
	Scheme *Scheme `protobuf:"bytes,14,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// 是否支持DRM
	SupportDrm bool `protobuf:"varint,15,opt,name=support_drm,json=supportDrm,proto3" json:"support_drm,omitempty"`
	// 字幕信息
	Subtitle string `protobuf:"bytes,16,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{56}
}

func (x *StreamInfo) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *StreamInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *StreamInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StreamInfo) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *StreamInfo) GetLimit() *StreamLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *StreamInfo) GetNeedVip() bool {
	if x != nil {
		return x.NeedVip
	}
	return false
}

func (x *StreamInfo) GetNeedLogin() bool {
	if x != nil {
		return x.NeedLogin
	}
	return false
}

func (x *StreamInfo) GetIntact() bool {
	if x != nil {
		return x.Intact
	}
	return false
}

func (x *StreamInfo) GetAttribute() int64 {
	if x != nil {
		return x.Attribute
	}
	return 0
}

func (x *StreamInfo) GetNewDescription() string {
	if x != nil {
		return x.NewDescription
	}
	return ""
}

func (x *StreamInfo) GetDisplayDesc() string {
	if x != nil {
		return x.DisplayDesc
	}
	return ""
}

func (x *StreamInfo) GetSuperscript() string {
	if x != nil {
		return x.Superscript
	}
	return ""
}

func (x *StreamInfo) GetScheme() *Scheme {
	if x != nil {
		return x.Scheme
	}
	return nil
}

func (x *StreamInfo) GetSupportDrm() bool {
	if x != nil {
		return x.SupportDrm
	}
	return false
}

func (x *StreamInfo) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

// 清晰度不满足条件信息
type StreamLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 提示信息
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *StreamLimit) Reset() {
	*x = StreamLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLimit) ProtoMessage() {}

func (x *StreamLimit) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLimit.ProtoReflect.Descriptor instead.
func (*StreamLimit) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{57}
}

func (x *StreamLimit) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StreamLimit) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *StreamLimit) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 任务参数信息
type TaskParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 任务类型
	TaskType string `protobuf:"bytes,1,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// 活动ID
	ActivityId int64 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// 提示ID
	TipsId int64 `protobuf:"varint,3,opt,name=tips_id,json=tipsId,proto3" json:"tips_id,omitempty"`
}

func (x *TaskParam) Reset() {
	*x = TaskParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskParam) ProtoMessage() {}

func (x *TaskParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskParam.ProtoReflect.Descriptor instead.
func (*TaskParam) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{58}
}

func (x *TaskParam) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskParam) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *TaskParam) GetTipsId() int64 {
	if x != nil {
		return x.TipsId
	}
	return 0
}

// 文案信息
type TextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文案
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// 字体色值
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 字体色值-夜间模式
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
}

func (x *TextInfo) Reset() {
	*x = TextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextInfo) ProtoMessage() {}

func (x *TextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextInfo.ProtoReflect.Descriptor instead.
func (*TextInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{59}
}

func (x *TextInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextInfo) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *TextInfo) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

// toast
type Toast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// toast文案 老字段
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// toast按钮
	Button *ButtonInfo `protobuf:"bytes,2,opt,name=button,proto3" json:"button,omitempty"`
	// 显示样式类型
	ShowStyleType int32 `protobuf:"varint,3,opt,name=show_style_type,json=showStyleType,proto3" json:"show_style_type,omitempty"`
	// 图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// toast文案 新字段
	ToastText *TextInfo `protobuf:"bytes,5,opt,name=toast_text,json=toastText,proto3" json:"toast_text,omitempty"`
	// 埋点上报信息
	Report *Report `protobuf:"bytes,6,opt,name=report,proto3" json:"report,omitempty"`
	OrderReportParams map[string]string `protobuf:"bytes,7,rep,name=order_report_params,json=orderReportParams,proto3" json:"order_report_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Toast) Reset() {
	*x = Toast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toast) ProtoMessage() {}

func (x *Toast) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toast.ProtoReflect.Descriptor instead.
func (*Toast) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{60}
}

func (x *Toast) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Toast) GetButton() *ButtonInfo {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *Toast) GetShowStyleType() int32 {
	if x != nil {
		return x.ShowStyleType
	}
	return 0
}

func (x *Toast) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Toast) GetToastText() *TextInfo {
	if x != nil {
		return x.ToastText
	}
	return nil
}

func (x *Toast) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *Toast) GetOrderReportParams() map[string]string {
	if x != nil {
		return x.OrderReportParams
	}
	return nil
}

// 用户状态信息
type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否支付
	PayCheck bool `protobuf:"varint,1,opt,name=pay_check,json=payCheck,proto3" json:"pay_check,omitempty"`
	// 是否承包
	Sponsor bool `protobuf:"varint,2,opt,name=sponsor,proto3" json:"sponsor,omitempty"`
	// 观看进度
	WatchProgress *WatchProgress `protobuf:"bytes,3,opt,name=watch_progress,json=watchProgress,proto3" json:"watch_progress,omitempty"`
	// 系列观看进度
	AidWatchProgress *WatchProgress `protobuf:"bytes,4,opt,name=aid_watch_progress,json=aidWatchProgress,proto3" json:"aid_watch_progress,omitempty"`
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{61}
}

func (x *UserStatus) GetPayCheck() bool {
	if x != nil {
		return x.PayCheck
	}
	return false
}

func (x *UserStatus) GetSponsor() bool {
	if x != nil {
		return x.Sponsor
	}
	return false
}

func (x *UserStatus) GetWatchProgress() *WatchProgress {
	if x != nil {
		return x.WatchProgress
	}
	return nil
}

func (x *UserStatus) GetAidWatchProgress() *WatchProgress {
	if x != nil {
		return x.AidWatchProgress
	}
	return nil
}

// 视频url信息
type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频清晰度
	Quality uint32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 视频格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 视频时长
	Timelength uint64 `protobuf:"varint,3,opt,name=timelength,proto3" json:"timelength,omitempty"`
	// 视频编码id
	VideoCodecid uint32 `protobuf:"varint,4,opt,name=video_codecid,json=videoCodecid,proto3" json:"video_codecid,omitempty"`
	// 视频流
	StreamList []*Stream `protobuf:"bytes,5,rep,name=stream_list,json=streamList,proto3" json:"stream_list,omitempty"`
	// 伴音流
	DashAudio []*DashItem `protobuf:"bytes,6,rep,name=dash_audio,json=dashAudio,proto3" json:"dash_audio,omitempty"`
	// 杜比伴音流
	Dolby *DolbyItem `protobuf:"bytes,7,opt,name=dolby,proto3" json:"dolby,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{62}
}

func (x *VideoInfo) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *VideoInfo) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VideoInfo) GetTimelength() uint64 {
	if x != nil {
		return x.Timelength
	}
	return 0
}

func (x *VideoInfo) GetVideoCodecid() uint32 {
	if x != nil {
		return x.VideoCodecid
	}
	return 0
}

func (x *VideoInfo) GetStreamList() []*Stream {
	if x != nil {
		return x.StreamList
	}
	return nil
}

func (x *VideoInfo) GetDashAudio() []*DashItem {
	if x != nil {
		return x.DashAudio
	}
	return nil
}

func (x *VideoInfo) GetDolby() *DolbyItem {
	if x != nil {
		return x.Dolby
	}
	return nil
}

// 展示信息
type ViewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 弹窗
	Dialog *Dialog `protobuf:"bytes,1,opt,name=dialog,proto3" json:"dialog,omitempty"`
	// Toast
	Toast *Toast `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	// 优惠券信息
	CouponInfo *CouponInfo `protobuf:"bytes,3,opt,name=coupon_info,json=couponInfo,proto3" json:"coupon_info,omitempty"`
	// 未支付剧集ID列表
	DemandNoPayEpids []int64 `protobuf:"varint,4,rep,packed,name=demand_no_pay_epids,json=demandNoPayEpids,proto3" json:"demand_no_pay_epids,omitempty"`
	// 结束页
	EndPage *EndPage `protobuf:"bytes,5,opt,name=end_page,json=endPage,proto3" json:"end_page,omitempty"`
	// 扩展配置
	ExpConfig map[string]bool `protobuf:"bytes,6,rep,name=exp_config,json=expConfig,proto3" json:"exp_config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// 弹窗
	PopWin *PopWin `protobuf:"bytes,7,opt,name=pop_win,json=popWin,proto3" json:"pop_win,omitempty"`
	// 试看提示栏
	TryWatchPromptBar *PromptBar `protobuf:"bytes,8,opt,name=try_watch_prompt_bar,json=tryWatchPromptBar,proto3" json:"try_watch_prompt_bar,omitempty"`
	// 支付提示信息
	PayTip *PayTip `protobuf:"bytes,9,opt,name=pay_tip,json=payTip,proto3" json:"pay_tip,omitempty"`
	// 高清试看提示信息
	HighDefinitionTrialInfo *HighDefinitionTrialInfo `protobuf:"bytes,10,opt,name=high_definition_trial_info,json=highDefinitionTrialInfo,proto3" json:"high_definition_trial_info,omitempty"`
	// 弹窗扩展
	ExtDialog map[string]*Dialog `protobuf:"bytes,11,rep,name=ext_dialog,json=extDialog,proto3" json:"ext_dialog,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 动画
	Animation *Animation `protobuf:"bytes,12,opt,name=animation,proto3" json:"animation,omitempty"`
	// Toast扩展
	ExtToast map[string]*Toast `protobuf:"bytes,13,rep,name=ext_toast,json=extToast,proto3" json:"ext_toast,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ViewInfo) Reset() {
	*x = ViewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewInfo) ProtoMessage() {}

func (x *ViewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewInfo.ProtoReflect.Descriptor instead.
func (*ViewInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{63}
}

func (x *ViewInfo) GetDialog() *Dialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

func (x *ViewInfo) GetToast() *Toast {
	if x != nil {
		return x.Toast
	}
	return nil
}

func (x *ViewInfo) GetCouponInfo() *CouponInfo {
	if x != nil {
		return x.CouponInfo
	}
	return nil
}

func (x *ViewInfo) GetDemandNoPayEpids() []int64 {
	if x != nil {
		return x.DemandNoPayEpids
	}
	return nil
}

func (x *ViewInfo) GetEndPage() *EndPage {
	if x != nil {
		return x.EndPage
	}
	return nil
}

func (x *ViewInfo) GetExpConfig() map[string]bool {
	if x != nil {
		return x.ExpConfig
	}
	return nil
}

func (x *ViewInfo) GetPopWin() *PopWin {
	if x != nil {
		return x.PopWin
	}
	return nil
}

func (x *ViewInfo) GetTryWatchPromptBar() *PromptBar {
	if x != nil {
		return x.TryWatchPromptBar
	}
	return nil
}

func (x *ViewInfo) GetPayTip() *PayTip {
	if x != nil {
		return x.PayTip
	}
	return nil
}

func (x *ViewInfo) GetHighDefinitionTrialInfo() *HighDefinitionTrialInfo {
	if x != nil {
		return x.HighDefinitionTrialInfo
	}
	return nil
}

func (x *ViewInfo) GetExtDialog() map[string]*Dialog {
	if x != nil {
		return x.ExtDialog
	}
	return nil
}

func (x *ViewInfo) GetAnimation() *Animation {
	if x != nil {
		return x.Animation
	}
	return nil
}

func (x *ViewInfo) GetExtToast() map[string]*Toast {
	if x != nil {
		return x.ExtToast
	}
	return nil
}

// 观看进度信息
type WatchProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 上次观看的 EP ID
	LastEpId int32 `protobuf:"varint,1,opt,name=last_ep_id,json=lastEpId,proto3" json:"last_ep_id,omitempty"`
	// 上次观看到的EP INDEX
	LastEpIndex string `protobuf:"bytes,2,opt,name=last_ep_index,json=lastEpIndex,proto3" json:"last_ep_index,omitempty"`
	// 上次观看的进度
	Progress int64 `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`
	// 上次观看的 CID
	LastPlayCid int64 `protobuf:"varint,4,opt,name=last_play_cid,json=lastPlayCid,proto3" json:"last_play_cid,omitempty"`
	// 带时间的提示信息
	Toast *Toast `protobuf:"bytes,5,opt,name=toast,proto3" json:"toast,omitempty"`
	// 不带时间的提示信息
	ToastWithoutTime *Toast `protobuf:"bytes,6,opt,name=toast_without_time,json=toastWithoutTime,proto3" json:"toast_without_time,omitempty"`
	// 上次观看的 AID
	LastPlayAid int64 `protobuf:"varint,7,opt,name=last_play_aid,json=lastPlayAid,proto3" json:"last_play_aid,omitempty"`
}

func (x *WatchProgress) Reset() {
	*x = WatchProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchProgress) ProtoMessage() {}

func (x *WatchProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchProgress.ProtoReflect.Descriptor instead.
func (*WatchProgress) Descriptor() ([]byte, []int) {
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP(), []int{64}
}

func (x *WatchProgress) GetLastEpId() int32 {
	if x != nil {
		return x.LastEpId
	}
	return 0
}

func (x *WatchProgress) GetLastEpIndex() string {
	if x != nil {
		return x.LastEpIndex
	}
	return ""
}

func (x *WatchProgress) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *WatchProgress) GetLastPlayCid() int64 {
	if x != nil {
		return x.LastPlayCid
	}
	return 0
}

func (x *WatchProgress) GetToast() *Toast {
	if x != nil {
		return x.Toast
	}
	return nil
}

func (x *WatchProgress) GetToastWithoutTime() *Toast {
	if x != nil {
		return x.ToastWithoutTime
	}
	return nil
}

func (x *WatchProgress) GetLastPlayAid() int64 {
	if x != nil {
		return x.LastPlayAid
	}
	return 0
}

var File_bilibili_pgc_gateway_player_v2_playurl_proto protoreflect.FileDescriptor

var file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x67, 0x63, 0x2f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x32,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc8, 0x01, 0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a,
	0x15, 0x71, 0x6e, 0x5f, 0x73, 0x76, 0x67, 0x61, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x6e, 0x53, 0x76, 0x67, 0x61, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x12, 0x71, 0x6e, 0x53, 0x76, 0x67, 0x61, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x70, 0x1a, 0x45, 0x0a, 0x17, 0x51, 0x6e, 0x53, 0x76, 0x67, 0x61, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x02, 0x0a, 0x12, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x3e, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x61, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22,
	0xec, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x59, 0x0a, 0x11, 0x62, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72,
	0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f, 0x62, 0x67, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x22, 0x63,
	0x0a, 0x0d, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12,
	0x3e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0xc7, 0x07, 0x0a, 0x0a, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x36, 0x0a, 0x17, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x6c, 0x65, 0x66, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x67, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x59, 0x0a, 0x11, 0x62, 0x67, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x0f, 0x62, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x71, 0x0a, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x44, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a,
	0x08, 0x43, 0x61, 0x73, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x45, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x22, 0x41, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x70, 0x49, 0x64,
	0x22, 0x8e, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x61, 0x79,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x41, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x05, 0x74, 0x6f,
	0x61, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x70, 0x6f, 0x70, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x6f,
	0x70, 0x57, 0x69, 0x6e, 0x22, 0x55, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x0b,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a,
	0x08, 0x44, 0x61, 0x73, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x64, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x73, 0x73,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x64, 0x65, 0x76, 0x69, 0x6e,
	0x65, 0x50, 0x73, 0x73, 0x68, 0x22, 0xcf, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x73, 0x68, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x78,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65,
	0x78, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x64, 0x65, 0x76, 0x69, 0x6e, 0x65, 0x5f, 0x70,
	0x73, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x64, 0x65, 0x76,
	0x69, 0x6e, 0x65, 0x50, 0x73, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x65, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd8, 0x06, 0x0a, 0x06, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x44, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x54,
	0x0a, 0x11, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x54, 0x0a, 0x0e, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x0d, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xa3, 0x02, 0x0a, 0x0c, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73,
	0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x61,
	0x6c, 0x66, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x61,
	0x6c, 0x66, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x47,
	0x0a, 0x20, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x69, 0x73, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x75, 0x63, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x44,
	0x6f, 0x6c, 0x62, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6c, 0x62, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x05,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x73,
	0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x27, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x54,
	0x4d, 0x4f, 0x53, 0x10, 0x02, 0x22, 0x5d, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x68, 0x69, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x0d, 0x45, 0x70, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x18, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x62, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42,
	0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22,
	0xca, 0x02, 0x0a, 0x0b, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x65, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4d,
	0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x30, 0x0a, 0x0a,
	0x45, 0x70, 0x50, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0xc9,
	0x02, 0x0a, 0x10, 0x45, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4e,
	0x0a, 0x0c, 0x65, 0x70, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x50, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x70, 0x50, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x57,
	0x0a, 0x0f, 0x65, 0x70, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x70, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x39, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x50, 0x5f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x03, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x22, 0xcd, 0x01, 0x0a, 0x0b, 0x46, 0x72, 0x65, 0x79, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x43, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x61, 0x6c,
	0x77, 0x61, 0x79, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x4d, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x9c, 0x04, 0x0a, 0x17, 0x48, 0x69, 0x67, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x61,
	0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x14, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x62, 0x74, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x11, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x70,
	0x42, 0x74, 0x6e, 0x12, 0x59, 0x0a, 0x13, 0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x65, 0x72,
	0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x74, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x6f,
	0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x74, 0x6e, 0x22, 0x4e,
	0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x1d,
	0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xbb, 0x01,
	0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a,
	0x0c, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x0b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x70, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x09, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x65, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x76, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x76, 0x69, 0x64, 0x22, 0xdc, 0x06, 0x0a,
	0x06, 0x50, 0x61, 0x79, 0x54, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x67, 0x5f, 0x64, 0x61, 0x79,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67,
	0x44, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x67, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x62, 0x67, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x67, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75,
	0x72, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6d, 0x0a, 0x13,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x79, 0x54, 0x69,
	0x70, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x67,
	0x69, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x49, 0x6d, 0x67, 0x1a, 0x44, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x0b, 0x0a, 0x0f,
	0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x36, 0x0a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x69, 0x70, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66,
	0x6c, 0x69, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x63, 0x61, 0x73, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x75, 0x70, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x6f,
	0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x44, 0x6d, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x44, 0x6d, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64,
	0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x79, 0x61, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66, 0x72,
	0x65, 0x79, 0x61, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6c, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x6f, 0x6c, 0x62, 0x79, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x79, 0x61, 0x5f, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x66, 0x72, 0x65, 0x79, 0x61, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x64, 0x5f,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x4f, 0x70, 0x65, 0x64, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x64, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xdd,
	0x01, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x79, 0x61,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x46,
	0x72, 0x65, 0x79, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x79,
	0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x52, 0x08, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x70, 0x73, 0x22, 0xe7,
	0x01, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x56, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69,
	0x64, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x75, 0x69, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0x6a, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x64, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x75, 0x62, 0x62, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x48,
	0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb1, 0x0b, 0x0a, 0x14, 0x50, 0x6c, 0x61,
	0x79, 0x56, 0x69, 0x65, 0x77, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x62, 0x70,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6c, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6c, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x5e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0b,
	0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x70, 0x5f,
	0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6f,
	0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x74, 0x4d, 0x61, 0x70, 0x12,
	0x59, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x40, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x4d, 0x61, 0x70, 0x12, 0x4f, 0x0a, 0x0d, 0x64, 0x72,
	0x6d, 0x5f, 0x74, 0x65, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x72, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x64, 0x72, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x72,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x72, 0x6d, 0x12, 0x4b,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x65,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x76, 0x0a, 0x1a, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x18, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x70, 0x0a, 0x12, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x74, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x04, 0x0a,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x50, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x78, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x4f, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x78,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xad, 0x06, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x71,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x71, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6e, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6e, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x66, 0x6e, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x4e, 0x65, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a,
	0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x4e, 0x0a, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xce, 0x03, 0x0a, 0x06, 0x50, 0x6f, 0x70, 0x57, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x70,
	0x6f, 0x70, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x6f, 0x70, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd2, 0x04, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x42, 0x61, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x11,
	0x62, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f, 0x62, 0x67, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x70, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x49, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x1d, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x62, 0x67, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x19, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x42, 0x67, 0x47, 0x72,
	0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x0e, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x45, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x06, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x25, 0x0a, 0x06,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x22, 0xcb, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x62, 0x0a,
	0x13, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x76, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x61, 0x76, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x61,
	0x73, 0x5f, 0x68, 0x65, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x77, 0x61, 0x73, 0x48, 0x65, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x54, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x52, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67,
	0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x54, 0x4f, 0x41, 0x53, 0x54,
	0x10, 0x01, 0x22, 0xef, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x0c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x72, 0x6c, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x05, 0x53,
	0x68, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x3e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x0a, 0x64, 0x61, 0x73, 0x68, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12,
	0x53, 0x0a, 0x0d, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x99, 0x04, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x56, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6e, 0x65, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x3e,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x72, 0x6d, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x72, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x62, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x69, 0x70, 0x73, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68,
	0x74, 0x22, 0xd8, 0x03, 0x0a, 0x05, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x42, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x68,
	0x6f, 0x77, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x47, 0x0a, 0x0a, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70,
	0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x6c, 0x0a, 0x13, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf6, 0x01, 0x0a,
	0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x70, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5b, 0x0a, 0x12, 0x61, 0x69, 0x64, 0x5f,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x10, 0x61, 0x69, 0x64, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xd5, 0x02, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0b, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x64, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x64, 0x61, 0x73, 0x68, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x3f, 0x0a, 0x05,
	0x64, 0x6f, 0x6c, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x6f, 0x6c,
	0x62, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x64, 0x6f, 0x6c, 0x62, 0x79, 0x22, 0xf1, 0x09,
	0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x3b, 0x0a, 0x05, 0x74, 0x6f,
	0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74,
	0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6e,
	0x6f, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x70, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x10, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x4e, 0x6f, 0x50, 0x61, 0x79, 0x45, 0x70,
	0x69, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3f, 0x0a, 0x07, 0x70, 0x6f, 0x70, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x6f, 0x70, 0x57, 0x69, 0x6e,
	0x12, 0x5a, 0x0a, 0x14, 0x74, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x42, 0x61, 0x72, 0x52, 0x11, 0x74, 0x72, 0x79, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x42, 0x61, 0x72, 0x12, 0x3f, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x52, 0x06, 0x70, 0x61, 0x79, 0x54, 0x69, 0x70, 0x12, 0x74, 0x0a,
	0x1a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x17, 0x68, 0x69, 0x67, 0x68,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x45, 0x78, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x47, 0x0a, 0x09, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x6f, 0x61, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x45, 0x78, 0x74, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a,
	0x0d, 0x45, 0x78, 0x74, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xc7, 0x02, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x70, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x63,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x61,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x10, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x69, 0x64, 0x2a, 0x7c, 0x0a, 0x08, 0x43,
	0x6c, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x54, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49, 0x50, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49,
	0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x4c, 0x49, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x4c, 0x49, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49,
	0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49, 0x50, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x10, 0x05, 0x2a, 0x30, 0x0a, 0x08, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x43, 0x4f, 0x44, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x44, 0x45, 0x32, 0x36, 0x34, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x44, 0x45, 0x32, 0x36, 0x35, 0x10, 0x02, 0x2a, 0x42, 0x0a, 0x0b, 0x44,
	0x72, 0x6d, 0x54, 0x65, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f,
	0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x49, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x49, 0x44, 0x45, 0x5f, 0x56, 0x49, 0x4e, 0x45, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x4c, 0x49, 0x5f, 0x44, 0x52, 0x4d, 0x10, 0x03, 0x2a,
	0x2b, 0x0a, 0x14, 0x45, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x79, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x0b,
	0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x45, 0x44, 0x5f, 0x45, 0x50, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x45, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x4b, 0x49, 0x50, 0x10, 0x03, 0x2a, 0x52, 0x0a, 0x0a, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x57, 0x48, 0x4f, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x48, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x50, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x03, 0x2a, 0x4e,
	0x0a, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x44, 0x49, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4b, 0x49,
	0x50, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x50, 0x10, 0x02, 0x2a, 0x31,
	0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x72, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x6f, 0x45,
	0x72, 0x72, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x10,
	0x01, 0x2a, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c,
	0x31, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c, 0x32, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4c, 0x33, 0x10, 0x03, 0x32,
	0xde, 0x01, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x66, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x43,
	0x6f, 0x6d, 0x69, 0x63, 0x12, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x70, 0x67, 0x63, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x67, 0x63,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58,
	0x69, 0x61, 0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70, 0x67, 0x63, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescOnce sync.Once
	file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescData = file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDesc
)

func file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescGZIP() []byte {
	file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescOnce.Do(func() {
		file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescData)
	})
	return file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDescData
}

var file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_bilibili_pgc_gateway_player_v2_playurl_proto_goTypes = []interface{}{
	(ClipType)(0),                    // 0: bilibili.pgc.gateway.player.v2.ClipType
	(CodeType)(0),                    // 1: bilibili.pgc.gateway.player.v2.CodeType
	(DrmTechType)(0),                 // 2: bilibili.pgc.gateway.player.v2.DrmTechType
	(EpPublicityVideoType)(0),        // 3: bilibili.pgc.gateway.player.v2.EpPublicityVideoType
	(InlineScene)(0),                 // 4: bilibili.pgc.gateway.player.v2.InlineScene
	(InlineType)(0),                  // 5: bilibili.pgc.gateway.player.v2.InlineType
	(LimitActionType)(0),             // 6: bilibili.pgc.gateway.player.v2.LimitActionType
	(PlayErr)(0),                     // 7: bilibili.pgc.gateway.player.v2.PlayErr
	(SecurityLevel)(0),               // 8: bilibili.pgc.gateway.player.v2.SecurityLevel
	(DolbyItem_Type)(0),              // 9: bilibili.pgc.gateway.player.v2.DolbyItem.Type
	(EpPublicityVideo_Type)(0),       // 10: bilibili.pgc.gateway.player.v2.EpPublicityVideo.Type
	(Scheme_ActionType)(0),           // 11: bilibili.pgc.gateway.player.v2.Scheme.ActionType
	(*Animation)(nil),                // 12: bilibili.pgc.gateway.player.v2.Animation
	(*AudioMaterialProto)(nil),       // 13: bilibili.pgc.gateway.player.v2.AudioMaterialProto
	(*BadgeInfo)(nil),                // 14: bilibili.pgc.gateway.player.v2.BadgeInfo
	(*BottomDisplay)(nil),            // 15: bilibili.pgc.gateway.player.v2.BottomDisplay
	(*ButtonInfo)(nil),               // 16: bilibili.pgc.gateway.player.v2.ButtonInfo
	(*CastTips)(nil),                 // 17: bilibili.pgc.gateway.player.v2.CastTips
	(*ClipInfo)(nil),                 // 18: bilibili.pgc.gateway.player.v2.ClipInfo
	(*ContinuePlayInfo)(nil),         // 19: bilibili.pgc.gateway.player.v2.ContinuePlayInfo
	(*Coupon)(nil),                   // 20: bilibili.pgc.gateway.player.v2.Coupon
	(*CouponInfo)(nil),               // 21: bilibili.pgc.gateway.player.v2.CouponInfo
	(*CouponTextInfo)(nil),           // 22: bilibili.pgc.gateway.player.v2.CouponTextInfo
	(*CouponToast)(nil),              // 23: bilibili.pgc.gateway.player.v2.CouponToast
	(*DashItem)(nil),                 // 24: bilibili.pgc.gateway.player.v2.DashItem
	(*DashVideo)(nil),                // 25: bilibili.pgc.gateway.player.v2.DashVideo
	(*DataControl)(nil),              // 26: bilibili.pgc.gateway.player.v2.DataControl
	(*Dialog)(nil),                   // 27: bilibili.pgc.gateway.player.v2.Dialog
	(*DialogConfig)(nil),             // 28: bilibili.pgc.gateway.player.v2.DialogConfig
	(*Dimension)(nil),                // 29: bilibili.pgc.gateway.player.v2.Dimension
	(*DolbyItem)(nil),                // 30: bilibili.pgc.gateway.player.v2.DolbyItem
	(*EndPage)(nil),                  // 31: bilibili.pgc.gateway.player.v2.EndPage
	(*EpInlineVideo)(nil),            // 32: bilibili.pgc.gateway.player.v2.EpInlineVideo
	(*EpisodeAdvertisementInfo)(nil), // 33: bilibili.pgc.gateway.player.v2.EpisodeAdvertisementInfo
	(*EpisodeInfo)(nil),              // 34: bilibili.pgc.gateway.player.v2.EpisodeInfo
	(*EpPreVideo)(nil),               // 35: bilibili.pgc.gateway.player.v2.EpPreVideo
	(*EpPublicityVideo)(nil),         // 36: bilibili.pgc.gateway.player.v2.EpPublicityVideo
	(*Event)(nil),                    // 37: bilibili.pgc.gateway.player.v2.Event
	(*FreyaConfig)(nil),              // 38: bilibili.pgc.gateway.player.v2.FreyaConfig
	(*GradientColor)(nil),            // 39: bilibili.pgc.gateway.player.v2.GradientColor
	(*HighDefinitionTrialInfo)(nil),  // 40: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo
	(*HistoryNode)(nil),              // 41: bilibili.pgc.gateway.player.v2.HistoryNode
	(*ImageInfo)(nil),                // 42: bilibili.pgc.gateway.player.v2.ImageInfo
	(*Interaction)(nil),              // 43: bilibili.pgc.gateway.player.v2.Interaction
	(*MultiView)(nil),                // 44: bilibili.pgc.gateway.player.v2.MultiView
	(*PayTip)(nil),                   // 45: bilibili.pgc.gateway.player.v2.PayTip
	(*PlayAbilityConf)(nil),          // 46: bilibili.pgc.gateway.player.v2.PlayAbilityConf
	(*PlayAbilityExtConf)(nil),       // 47: bilibili.pgc.gateway.player.v2.PlayAbilityExtConf
	(*PlayDubbingInfo)(nil),          // 48: bilibili.pgc.gateway.player.v2.PlayDubbingInfo
	(*PlayExtInfo)(nil),              // 49: bilibili.pgc.gateway.player.v2.PlayExtInfo
	(*PlayList)(nil),                 // 50: bilibili.pgc.gateway.player.v2.PlayList
	(*PlayViewBusinessInfo)(nil),     // 51: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo
	(*PlayViewReply)(nil),            // 52: bilibili.pgc.gateway.player.v2.PlayViewReply
	(*PlayViewReq)(nil),              // 53: bilibili.pgc.gateway.player.v2.PlayViewReq
	(*PopWin)(nil),                   // 54: bilibili.pgc.gateway.player.v2.PopWin
	(*PromptBar)(nil),                // 55: bilibili.pgc.gateway.player.v2.PromptBar
	(*QualityExtInfo)(nil),           // 56: bilibili.pgc.gateway.player.v2.QualityExtInfo
	(*RecordInfo)(nil),               // 57: bilibili.pgc.gateway.player.v2.RecordInfo
	(*Report)(nil),                   // 58: bilibili.pgc.gateway.player.v2.Report
	(*ResponseUrl)(nil),              // 59: bilibili.pgc.gateway.player.v2.ResponseUrl
	(*Rights)(nil),                   // 60: bilibili.pgc.gateway.player.v2.Rights
	(*RoleAudioProto)(nil),           // 61: bilibili.pgc.gateway.player.v2.RoleAudioProto
	(*SceneControl)(nil),             // 62: bilibili.pgc.gateway.player.v2.SceneControl
	(*Scheme)(nil),                   // 63: bilibili.pgc.gateway.player.v2.Scheme
	(*SeasonInfo)(nil),               // 64: bilibili.pgc.gateway.player.v2.SeasonInfo
	(*SegmentVideo)(nil),             // 65: bilibili.pgc.gateway.player.v2.SegmentVideo
	(*Shake)(nil),                    // 66: bilibili.pgc.gateway.player.v2.Shake
	(*Stream)(nil),                   // 67: bilibili.pgc.gateway.player.v2.Stream
	(*StreamInfo)(nil),               // 68: bilibili.pgc.gateway.player.v2.StreamInfo
	(*StreamLimit)(nil),              // 69: bilibili.pgc.gateway.player.v2.StreamLimit
	(*TaskParam)(nil),                // 70: bilibili.pgc.gateway.player.v2.TaskParam
	(*TextInfo)(nil),                 // 71: bilibili.pgc.gateway.player.v2.TextInfo
	(*Toast)(nil),                    // 72: bilibili.pgc.gateway.player.v2.Toast
	(*UserStatus)(nil),               // 73: bilibili.pgc.gateway.player.v2.UserStatus
	(*VideoInfo)(nil),                // 74: bilibili.pgc.gateway.player.v2.VideoInfo
	(*ViewInfo)(nil),                 // 75: bilibili.pgc.gateway.player.v2.ViewInfo
	(*WatchProgress)(nil),            // 76: bilibili.pgc.gateway.player.v2.WatchProgress
	nil,                              // 77: bilibili.pgc.gateway.player.v2.Animation.QnSvgaAnimationMapEntry
	nil,                              // 78: bilibili.pgc.gateway.player.v2.ButtonInfo.OrderReportParamsEntry
	nil,                              // 79: bilibili.pgc.gateway.player.v2.PayTip.OrderReportParamsEntry
	nil,                              // 80: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.QualityExtMapEntry
	nil,                              // 81: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.ExpMapEntry
	nil,                              // 82: bilibili.pgc.gateway.player.v2.Toast.OrderReportParamsEntry
	nil,                              // 83: bilibili.pgc.gateway.player.v2.ViewInfo.ExpConfigEntry
	nil,                              // 84: bilibili.pgc.gateway.player.v2.ViewInfo.ExtDialogEntry
	nil,                              // 85: bilibili.pgc.gateway.player.v2.ViewInfo.ExtToastEntry
	(*timestamp.Timestamp)(nil),      // 86: google.protobuf.Timestamp
}
var file_bilibili_pgc_gateway_player_v2_playurl_proto_depIdxs = []int32{
	77,  // 0: bilibili.pgc.gateway.player.v2.Animation.qn_svga_animation_map:type_name -> bilibili.pgc.gateway.player.v2.Animation.QnSvgaAnimationMapEntry
	24,  // 1: bilibili.pgc.gateway.player.v2.AudioMaterialProto.audio:type_name -> bilibili.pgc.gateway.player.v2.DashItem
	39,  // 2: bilibili.pgc.gateway.player.v2.BadgeInfo.bg_gradient_color:type_name -> bilibili.pgc.gateway.player.v2.GradientColor
	71,  // 3: bilibili.pgc.gateway.player.v2.BottomDisplay.title:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	14,  // 4: bilibili.pgc.gateway.player.v2.ButtonInfo.badge_info:type_name -> bilibili.pgc.gateway.player.v2.BadgeInfo
	58,  // 5: bilibili.pgc.gateway.player.v2.ButtonInfo.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	71,  // 6: bilibili.pgc.gateway.player.v2.ButtonInfo.simple_text_info:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	39,  // 7: bilibili.pgc.gateway.player.v2.ButtonInfo.bg_gradient_color:type_name -> bilibili.pgc.gateway.player.v2.GradientColor
	78,  // 8: bilibili.pgc.gateway.player.v2.ButtonInfo.order_report_params:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo.OrderReportParamsEntry
	70,  // 9: bilibili.pgc.gateway.player.v2.ButtonInfo.task_param:type_name -> bilibili.pgc.gateway.player.v2.TaskParam
	0,   // 10: bilibili.pgc.gateway.player.v2.ClipInfo.clip_type:type_name -> bilibili.pgc.gateway.player.v2.ClipType
	44,  // 11: bilibili.pgc.gateway.player.v2.ClipInfo.multi_view:type_name -> bilibili.pgc.gateway.player.v2.MultiView
	86,  // 12: bilibili.pgc.gateway.player.v2.Coupon.expire_time:type_name -> google.protobuf.Timestamp
	23,  // 13: bilibili.pgc.gateway.player.v2.CouponInfo.toast:type_name -> bilibili.pgc.gateway.player.v2.CouponToast
	54,  // 14: bilibili.pgc.gateway.player.v2.CouponInfo.pop_win:type_name -> bilibili.pgc.gateway.player.v2.PopWin
	22,  // 15: bilibili.pgc.gateway.player.v2.CouponToast.text_info:type_name -> bilibili.pgc.gateway.player.v2.CouponTextInfo
	16,  // 16: bilibili.pgc.gateway.player.v2.CouponToast.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	28,  // 17: bilibili.pgc.gateway.player.v2.Dialog.config:type_name -> bilibili.pgc.gateway.player.v2.DialogConfig
	71,  // 18: bilibili.pgc.gateway.player.v2.Dialog.title:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	71,  // 19: bilibili.pgc.gateway.player.v2.Dialog.subtitle:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	42,  // 20: bilibili.pgc.gateway.player.v2.Dialog.image:type_name -> bilibili.pgc.gateway.player.v2.ImageInfo
	16,  // 21: bilibili.pgc.gateway.player.v2.Dialog.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	16,  // 22: bilibili.pgc.gateway.player.v2.Dialog.bottom_desc:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	58,  // 23: bilibili.pgc.gateway.player.v2.Dialog.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	71,  // 24: bilibili.pgc.gateway.player.v2.Dialog.right_bottom_desc:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	15,  // 25: bilibili.pgc.gateway.player.v2.Dialog.bottom_display:type_name -> bilibili.pgc.gateway.player.v2.BottomDisplay
	50,  // 26: bilibili.pgc.gateway.player.v2.Dialog.play_list:type_name -> bilibili.pgc.gateway.player.v2.PlayList
	9,   // 27: bilibili.pgc.gateway.player.v2.DolbyItem.type:type_name -> bilibili.pgc.gateway.player.v2.DolbyItem.Type
	24,  // 28: bilibili.pgc.gateway.player.v2.DolbyItem.audio:type_name -> bilibili.pgc.gateway.player.v2.DashItem
	27,  // 29: bilibili.pgc.gateway.player.v2.EndPage.dialog:type_name -> bilibili.pgc.gateway.player.v2.Dialog
	64,  // 30: bilibili.pgc.gateway.player.v2.EpisodeInfo.season_info:type_name -> bilibili.pgc.gateway.player.v2.SeasonInfo
	43,  // 31: bilibili.pgc.gateway.player.v2.EpisodeInfo.interaction:type_name -> bilibili.pgc.gateway.player.v2.Interaction
	10,  // 32: bilibili.pgc.gateway.player.v2.EpPublicityVideo.type:type_name -> bilibili.pgc.gateway.player.v2.EpPublicityVideo.Type
	35,  // 33: bilibili.pgc.gateway.player.v2.EpPublicityVideo.ep_pre_video:type_name -> bilibili.pgc.gateway.player.v2.EpPreVideo
	32,  // 34: bilibili.pgc.gateway.player.v2.EpPublicityVideo.ep_inline_video:type_name -> bilibili.pgc.gateway.player.v2.EpInlineVideo
	66,  // 35: bilibili.pgc.gateway.player.v2.Event.shake:type_name -> bilibili.pgc.gateway.player.v2.Shake
	72,  // 36: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo.start_toast:type_name -> bilibili.pgc.gateway.player.v2.Toast
	72,  // 37: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo.end_toast:type_name -> bilibili.pgc.gateway.player.v2.Toast
	58,  // 38: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	16,  // 39: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo.quality_open_tip_btn:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	16,  // 40: bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo.no_longer_trial_btn:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	41,  // 41: bilibili.pgc.gateway.player.v2.Interaction.history_node:type_name -> bilibili.pgc.gateway.player.v2.HistoryNode
	16,  // 42: bilibili.pgc.gateway.player.v2.PayTip.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	58,  // 43: bilibili.pgc.gateway.player.v2.PayTip.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	79,  // 44: bilibili.pgc.gateway.player.v2.PayTip.order_report_params:type_name -> bilibili.pgc.gateway.player.v2.PayTip.OrderReportParamsEntry
	38,  // 45: bilibili.pgc.gateway.player.v2.PlayAbilityExtConf.freya_config:type_name -> bilibili.pgc.gateway.player.v2.FreyaConfig
	17,  // 46: bilibili.pgc.gateway.player.v2.PlayAbilityExtConf.cast_tips:type_name -> bilibili.pgc.gateway.player.v2.CastTips
	13,  // 47: bilibili.pgc.gateway.player.v2.PlayDubbingInfo.background_audio:type_name -> bilibili.pgc.gateway.player.v2.AudioMaterialProto
	61,  // 48: bilibili.pgc.gateway.player.v2.PlayDubbingInfo.role_audio_list:type_name -> bilibili.pgc.gateway.player.v2.RoleAudioProto
	48,  // 49: bilibili.pgc.gateway.player.v2.PlayExtInfo.play_dubbing_info:type_name -> bilibili.pgc.gateway.player.v2.PlayDubbingInfo
	14,  // 50: bilibili.pgc.gateway.player.v2.PlayList.badge_info:type_name -> bilibili.pgc.gateway.player.v2.BadgeInfo
	19,  // 51: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.continue_play_info:type_name -> bilibili.pgc.gateway.player.v2.ContinuePlayInfo
	18,  // 52: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.clip_info:type_name -> bilibili.pgc.gateway.player.v2.ClipInfo
	5,   // 53: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.inline_type:type_name -> bilibili.pgc.gateway.player.v2.InlineType
	29,  // 54: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.dimension:type_name -> bilibili.pgc.gateway.player.v2.Dimension
	80,  // 55: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.quality_ext_map:type_name -> bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.QualityExtMapEntry
	81,  // 56: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.exp_map:type_name -> bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.ExpMapEntry
	2,   // 57: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.drm_tech_type:type_name -> bilibili.pgc.gateway.player.v2.DrmTechType
	57,  // 58: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.record_info:type_name -> bilibili.pgc.gateway.player.v2.RecordInfo
	34,  // 59: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.episode_info:type_name -> bilibili.pgc.gateway.player.v2.EpisodeInfo
	33,  // 60: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.episode_advertisement_info:type_name -> bilibili.pgc.gateway.player.v2.EpisodeAdvertisementInfo
	73,  // 61: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.user_status:type_name -> bilibili.pgc.gateway.player.v2.UserStatus
	74,  // 62: bilibili.pgc.gateway.player.v2.PlayViewReply.video_info:type_name -> bilibili.pgc.gateway.player.v2.VideoInfo
	46,  // 63: bilibili.pgc.gateway.player.v2.PlayViewReply.play_conf:type_name -> bilibili.pgc.gateway.player.v2.PlayAbilityConf
	51,  // 64: bilibili.pgc.gateway.player.v2.PlayViewReply.business:type_name -> bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo
	37,  // 65: bilibili.pgc.gateway.player.v2.PlayViewReply.event:type_name -> bilibili.pgc.gateway.player.v2.Event
	75,  // 66: bilibili.pgc.gateway.player.v2.PlayViewReply.view_info:type_name -> bilibili.pgc.gateway.player.v2.ViewInfo
	47,  // 67: bilibili.pgc.gateway.player.v2.PlayViewReply.play_ext_conf:type_name -> bilibili.pgc.gateway.player.v2.PlayAbilityExtConf
	49,  // 68: bilibili.pgc.gateway.player.v2.PlayViewReply.play_ext_info:type_name -> bilibili.pgc.gateway.player.v2.PlayExtInfo
	1,   // 69: bilibili.pgc.gateway.player.v2.PlayViewReq.prefer_codec_type:type_name -> bilibili.pgc.gateway.player.v2.CodeType
	62,  // 70: bilibili.pgc.gateway.player.v2.PlayViewReq.scene_control:type_name -> bilibili.pgc.gateway.player.v2.SceneControl
	4,   // 71: bilibili.pgc.gateway.player.v2.PlayViewReq.inline_scene:type_name -> bilibili.pgc.gateway.player.v2.InlineScene
	26,  // 72: bilibili.pgc.gateway.player.v2.PlayViewReq.data_control:type_name -> bilibili.pgc.gateway.player.v2.DataControl
	20,  // 73: bilibili.pgc.gateway.player.v2.PopWin.coupon:type_name -> bilibili.pgc.gateway.player.v2.Coupon
	16,  // 74: bilibili.pgc.gateway.player.v2.PopWin.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	71,  // 75: bilibili.pgc.gateway.player.v2.PopWin.pop_title:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	71,  // 76: bilibili.pgc.gateway.player.v2.PopWin.subtitle:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	16,  // 77: bilibili.pgc.gateway.player.v2.PopWin.bottom_desc:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	71,  // 78: bilibili.pgc.gateway.player.v2.PromptBar.title:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	71,  // 79: bilibili.pgc.gateway.player.v2.PromptBar.sub_title:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	39,  // 80: bilibili.pgc.gateway.player.v2.PromptBar.bg_gradient_color:type_name -> bilibili.pgc.gateway.player.v2.GradientColor
	16,  // 81: bilibili.pgc.gateway.player.v2.PromptBar.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	58,  // 82: bilibili.pgc.gateway.player.v2.PromptBar.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	39,  // 83: bilibili.pgc.gateway.player.v2.PromptBar.full_screen_bg_gradient_color:type_name -> bilibili.pgc.gateway.player.v2.GradientColor
	13,  // 84: bilibili.pgc.gateway.player.v2.RoleAudioProto.audio_material_list:type_name -> bilibili.pgc.gateway.player.v2.AudioMaterialProto
	11,  // 85: bilibili.pgc.gateway.player.v2.Scheme.action_type:type_name -> bilibili.pgc.gateway.player.v2.Scheme.ActionType
	60,  // 86: bilibili.pgc.gateway.player.v2.SeasonInfo.rights:type_name -> bilibili.pgc.gateway.player.v2.Rights
	59,  // 87: bilibili.pgc.gateway.player.v2.SegmentVideo.segment:type_name -> bilibili.pgc.gateway.player.v2.ResponseUrl
	68,  // 88: bilibili.pgc.gateway.player.v2.Stream.info:type_name -> bilibili.pgc.gateway.player.v2.StreamInfo
	25,  // 89: bilibili.pgc.gateway.player.v2.Stream.dash_video:type_name -> bilibili.pgc.gateway.player.v2.DashVideo
	65,  // 90: bilibili.pgc.gateway.player.v2.Stream.segment_video:type_name -> bilibili.pgc.gateway.player.v2.SegmentVideo
	69,  // 91: bilibili.pgc.gateway.player.v2.StreamInfo.limit:type_name -> bilibili.pgc.gateway.player.v2.StreamLimit
	63,  // 92: bilibili.pgc.gateway.player.v2.StreamInfo.scheme:type_name -> bilibili.pgc.gateway.player.v2.Scheme
	16,  // 93: bilibili.pgc.gateway.player.v2.Toast.button:type_name -> bilibili.pgc.gateway.player.v2.ButtonInfo
	71,  // 94: bilibili.pgc.gateway.player.v2.Toast.toast_text:type_name -> bilibili.pgc.gateway.player.v2.TextInfo
	58,  // 95: bilibili.pgc.gateway.player.v2.Toast.report:type_name -> bilibili.pgc.gateway.player.v2.Report
	82,  // 96: bilibili.pgc.gateway.player.v2.Toast.order_report_params:type_name -> bilibili.pgc.gateway.player.v2.Toast.OrderReportParamsEntry
	76,  // 97: bilibili.pgc.gateway.player.v2.UserStatus.watch_progress:type_name -> bilibili.pgc.gateway.player.v2.WatchProgress
	76,  // 98: bilibili.pgc.gateway.player.v2.UserStatus.aid_watch_progress:type_name -> bilibili.pgc.gateway.player.v2.WatchProgress
	67,  // 99: bilibili.pgc.gateway.player.v2.VideoInfo.stream_list:type_name -> bilibili.pgc.gateway.player.v2.Stream
	24,  // 100: bilibili.pgc.gateway.player.v2.VideoInfo.dash_audio:type_name -> bilibili.pgc.gateway.player.v2.DashItem
	30,  // 101: bilibili.pgc.gateway.player.v2.VideoInfo.dolby:type_name -> bilibili.pgc.gateway.player.v2.DolbyItem
	27,  // 102: bilibili.pgc.gateway.player.v2.ViewInfo.dialog:type_name -> bilibili.pgc.gateway.player.v2.Dialog
	72,  // 103: bilibili.pgc.gateway.player.v2.ViewInfo.toast:type_name -> bilibili.pgc.gateway.player.v2.Toast
	21,  // 104: bilibili.pgc.gateway.player.v2.ViewInfo.coupon_info:type_name -> bilibili.pgc.gateway.player.v2.CouponInfo
	31,  // 105: bilibili.pgc.gateway.player.v2.ViewInfo.end_page:type_name -> bilibili.pgc.gateway.player.v2.EndPage
	83,  // 106: bilibili.pgc.gateway.player.v2.ViewInfo.exp_config:type_name -> bilibili.pgc.gateway.player.v2.ViewInfo.ExpConfigEntry
	54,  // 107: bilibili.pgc.gateway.player.v2.ViewInfo.pop_win:type_name -> bilibili.pgc.gateway.player.v2.PopWin
	55,  // 108: bilibili.pgc.gateway.player.v2.ViewInfo.try_watch_prompt_bar:type_name -> bilibili.pgc.gateway.player.v2.PromptBar
	45,  // 109: bilibili.pgc.gateway.player.v2.ViewInfo.pay_tip:type_name -> bilibili.pgc.gateway.player.v2.PayTip
	40,  // 110: bilibili.pgc.gateway.player.v2.ViewInfo.high_definition_trial_info:type_name -> bilibili.pgc.gateway.player.v2.HighDefinitionTrialInfo
	84,  // 111: bilibili.pgc.gateway.player.v2.ViewInfo.ext_dialog:type_name -> bilibili.pgc.gateway.player.v2.ViewInfo.ExtDialogEntry
	12,  // 112: bilibili.pgc.gateway.player.v2.ViewInfo.animation:type_name -> bilibili.pgc.gateway.player.v2.Animation
	85,  // 113: bilibili.pgc.gateway.player.v2.ViewInfo.ext_toast:type_name -> bilibili.pgc.gateway.player.v2.ViewInfo.ExtToastEntry
	72,  // 114: bilibili.pgc.gateway.player.v2.WatchProgress.toast:type_name -> bilibili.pgc.gateway.player.v2.Toast
	72,  // 115: bilibili.pgc.gateway.player.v2.WatchProgress.toast_without_time:type_name -> bilibili.pgc.gateway.player.v2.Toast
	56,  // 116: bilibili.pgc.gateway.player.v2.PlayViewBusinessInfo.QualityExtMapEntry.value:type_name -> bilibili.pgc.gateway.player.v2.QualityExtInfo
	27,  // 117: bilibili.pgc.gateway.player.v2.ViewInfo.ExtDialogEntry.value:type_name -> bilibili.pgc.gateway.player.v2.Dialog
	72,  // 118: bilibili.pgc.gateway.player.v2.ViewInfo.ExtToastEntry.value:type_name -> bilibili.pgc.gateway.player.v2.Toast
	53,  // 119: bilibili.pgc.gateway.player.v2.PlayURL.PlayView:input_type -> bilibili.pgc.gateway.player.v2.PlayViewReq
	53,  // 120: bilibili.pgc.gateway.player.v2.PlayURL.PlayViewComic:input_type -> bilibili.pgc.gateway.player.v2.PlayViewReq
	52,  // 121: bilibili.pgc.gateway.player.v2.PlayURL.PlayView:output_type -> bilibili.pgc.gateway.player.v2.PlayViewReply
	52,  // 122: bilibili.pgc.gateway.player.v2.PlayURL.PlayViewComic:output_type -> bilibili.pgc.gateway.player.v2.PlayViewReply
	121, // [121:123] is the sub-list for method output_type
	119, // [119:121] is the sub-list for method input_type
	119, // [119:119] is the sub-list for extension type_name
	119, // [119:119] is the sub-list for extension extendee
	0,   // [0:119] is the sub-list for field type_name
}

func init() { file_bilibili_pgc_gateway_player_v2_playurl_proto_init() }
func file_bilibili_pgc_gateway_player_v2_playurl_proto_init() {
	if File_bilibili_pgc_gateway_player_v2_playurl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Animation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioMaterialProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BottomDisplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinuePlayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponTextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponToast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DolbyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInlineVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpisodeAdvertisementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpisodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpPreVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpPublicityVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreyaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradientColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HighDefinitionTrialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAbilityConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayAbilityExtConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayDubbingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewBusinessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PopWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualityExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAudioProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*EpPublicityVideo_EpPreVideo)(nil),
		(*EpPublicityVideo_EpInlineVideo)(nil),
	}
	file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes[55].OneofWrappers = []interface{}{
		(*Stream_DashVideo)(nil),
		(*Stream_SegmentVideo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_pgc_gateway_player_v2_playurl_proto_goTypes,
		DependencyIndexes: file_bilibili_pgc_gateway_player_v2_playurl_proto_depIdxs,
		EnumInfos:         file_bilibili_pgc_gateway_player_v2_playurl_proto_enumTypes,
		MessageInfos:      file_bilibili_pgc_gateway_player_v2_playurl_proto_msgTypes,
	}.Build()
	File_bilibili_pgc_gateway_player_v2_playurl_proto = out.File
	file_bilibili_pgc_gateway_player_v2_playurl_proto_rawDesc = nil
	file_bilibili_pgc_gateway_player_v2_playurl_proto_goTypes = nil
	file_bilibili_pgc_gateway_player_v2_playurl_proto_depIdxs = nil
}
