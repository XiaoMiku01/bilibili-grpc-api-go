// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: bilibili/broadcast/message/main/native.proto

package main

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	NativePage_WatchNotify_FullMethodName = "/bilibili.broadcast.message.main.NativePage/WatchNotify"
)

// NativePageClient is the client API for NativePage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NativePageClient interface {
	WatchNotify(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (NativePage_WatchNotifyClient, error)
}

type nativePageClient struct {
	cc grpc.ClientConnInterface
}

func NewNativePageClient(cc grpc.ClientConnInterface) NativePageClient {
	return &nativePageClient{cc}
}

func (c *nativePageClient) WatchNotify(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (NativePage_WatchNotifyClient, error) {
	stream, err := c.cc.NewStream(ctx, &NativePage_ServiceDesc.Streams[0], NativePage_WatchNotify_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &nativePageWatchNotifyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NativePage_WatchNotifyClient interface {
	Recv() (*NativePageEvent, error)
	grpc.ClientStream
}

type nativePageWatchNotifyClient struct {
	grpc.ClientStream
}

func (x *nativePageWatchNotifyClient) Recv() (*NativePageEvent, error) {
	m := new(NativePageEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NativePageServer is the server API for NativePage service.
// All implementations must embed UnimplementedNativePageServer
// for forward compatibility
type NativePageServer interface {
	WatchNotify(*empty.Empty, NativePage_WatchNotifyServer) error
	mustEmbedUnimplementedNativePageServer()
}

// UnimplementedNativePageServer must be embedded to have forward compatible implementations.
type UnimplementedNativePageServer struct {
}

func (UnimplementedNativePageServer) WatchNotify(*empty.Empty, NativePage_WatchNotifyServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchNotify not implemented")
}
func (UnimplementedNativePageServer) mustEmbedUnimplementedNativePageServer() {}

// UnsafeNativePageServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NativePageServer will
// result in compilation errors.
type UnsafeNativePageServer interface {
	mustEmbedUnimplementedNativePageServer()
}

func RegisterNativePageServer(s grpc.ServiceRegistrar, srv NativePageServer) {
	s.RegisterService(&NativePage_ServiceDesc, srv)
}

func _NativePage_WatchNotify_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NativePageServer).WatchNotify(m, &nativePageWatchNotifyServer{stream})
}

type NativePage_WatchNotifyServer interface {
	Send(*NativePageEvent) error
	grpc.ServerStream
}

type nativePageWatchNotifyServer struct {
	grpc.ServerStream
}

func (x *nativePageWatchNotifyServer) Send(m *NativePageEvent) error {
	return x.ServerStream.SendMsg(m)
}

// NativePage_ServiceDesc is the grpc.ServiceDesc for NativePage service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NativePage_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.broadcast.message.main.NativePage",
	HandlerType: (*NativePageServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchNotify",
			Handler:       _NativePage_WatchNotify_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bilibili/broadcast/message/main/native.proto",
}
