// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: bilibili/ad/v1/ad.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 自动播放视频
type AdAutoPlayVideoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// avid
	Avid int64 `protobuf:"varint,1,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 分P
	Page int64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	From string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	// 是否自动播放
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// 是否自动播放
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	// 是否自动播放
	AutoPlay bool `protobuf:"varint,7,opt,name=auto_play,json=autoPlay,proto3" json:"auto_play,omitempty"`
	// 按钮是否动态变色
	BtnDycColor bool `protobuf:"varint,8,opt,name=btn_dyc_color,json=btnDycColor,proto3" json:"btn_dyc_color,omitempty"`
	// 按钮动态变色时间 ms
	BtnDycTime int32 `protobuf:"varint,9,opt,name=btn_dyc_time,json=btnDycTime,proto3" json:"btn_dyc_time,omitempty"`
	// 用于做联播是否是同一个视频的id
	BizId int64 `protobuf:"varint,10,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 开始播放三方监控
	Process0Urls []string `protobuf:"bytes,11,rep,name=process0_urls,json=process0Urls,proto3" json:"process0_urls,omitempty"`
	// 播放3S三方监控
	Play_3SUrls []string `protobuf:"bytes,12,rep,name=play_3s_urls,json=play3sUrls,proto3" json:"play_3s_urls,omitempty"`
	// 播放5S三方监控
	Play_5SUrls []string `protobuf:"bytes,13,rep,name=play_5s_urls,json=play5sUrls,proto3" json:"play_5s_urls,omitempty"`
	// 横竖屏
	Orientation int32 `protobuf:"varint,14,opt,name=orientation,proto3" json:"orientation,omitempty"`
}

func (x *AdAutoPlayVideoDto) Reset() {
	*x = AdAutoPlayVideoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdAutoPlayVideoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdAutoPlayVideoDto) ProtoMessage() {}

func (x *AdAutoPlayVideoDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdAutoPlayVideoDto.ProtoReflect.Descriptor instead.
func (*AdAutoPlayVideoDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{0}
}

func (x *AdAutoPlayVideoDto) GetAvid() int64 {
	if x != nil {
		return x.Avid
	}
	return 0
}

func (x *AdAutoPlayVideoDto) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *AdAutoPlayVideoDto) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdAutoPlayVideoDto) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AdAutoPlayVideoDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdAutoPlayVideoDto) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AdAutoPlayVideoDto) GetAutoPlay() bool {
	if x != nil {
		return x.AutoPlay
	}
	return false
}

func (x *AdAutoPlayVideoDto) GetBtnDycColor() bool {
	if x != nil {
		return x.BtnDycColor
	}
	return false
}

func (x *AdAutoPlayVideoDto) GetBtnDycTime() int32 {
	if x != nil {
		return x.BtnDycTime
	}
	return 0
}

func (x *AdAutoPlayVideoDto) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AdAutoPlayVideoDto) GetProcess0Urls() []string {
	if x != nil {
		return x.Process0Urls
	}
	return nil
}

func (x *AdAutoPlayVideoDto) GetPlay_3SUrls() []string {
	if x != nil {
		return x.Play_3SUrls
	}
	return nil
}

func (x *AdAutoPlayVideoDto) GetPlay_5SUrls() []string {
	if x != nil {
		return x.Play_5SUrls
	}
	return nil
}

func (x *AdAutoPlayVideoDto) GetOrientation() int32 {
	if x != nil {
		return x.Orientation
	}
	return 0
}

// 商业标信息
type AdBusinessMarkDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商业标样式
	// 0:不展示标 1:实心+文字 2:空心框+文字 3:纯文字标 4:纯图片标
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 商业标文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 商业标文案颜色,如#80FFFFFF RGBA
	TextColor string `protobuf:"bytes,3,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 夜间模式文字色
	TextColorNight string `protobuf:"bytes,4,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景色
	BgColor string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 夜间模式背景色
	BgColorNight string `protobuf:"bytes,6,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 边框色
	BorderColor string `protobuf:"bytes,7,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 夜间模式边框色
	BorderColorNight string `protobuf:"bytes,8,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 图片商业标
	ImgUrl string `protobuf:"bytes,9,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	// 图片高度
	ImgHeight int32 `protobuf:"varint,10,opt,name=img_height,json=imgHeight,proto3" json:"img_height,omitempty"`
	// 图片宽度
	ImgWidth int32 `protobuf:"varint,11,opt,name=img_width,json=imgWidth,proto3" json:"img_width,omitempty"`
	BgBorderColor string `protobuf:"bytes,12,opt,name=bg_border_color,json=bgBorderColor,proto3" json:"bg_border_color,omitempty"`
}

func (x *AdBusinessMarkDto) Reset() {
	*x = AdBusinessMarkDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdBusinessMarkDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdBusinessMarkDto) ProtoMessage() {}

func (x *AdBusinessMarkDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdBusinessMarkDto.ProtoReflect.Descriptor instead.
func (*AdBusinessMarkDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{1}
}

func (x *AdBusinessMarkDto) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdBusinessMarkDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdBusinessMarkDto) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *AdBusinessMarkDto) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *AdBusinessMarkDto) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *AdBusinessMarkDto) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *AdBusinessMarkDto) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *AdBusinessMarkDto) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *AdBusinessMarkDto) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *AdBusinessMarkDto) GetImgHeight() int32 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

func (x *AdBusinessMarkDto) GetImgWidth() int32 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *AdBusinessMarkDto) GetBgBorderColor() string {
	if x != nil {
		return x.BgBorderColor
	}
	return ""
}

// 按钮
type AdButtonDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	// 1:落地页 2:应用唤起 3:应用下载
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 按钮文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 按钮跳转地址
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转监测链接
	ReportUrls string `protobuf:"bytes,4,opt,name=report_urls,json=reportUrls,proto3" json:"report_urls,omitempty"`
	// 唤起schema
	DlsucCallupUrl string `protobuf:"bytes,5,opt,name=dlsuc_callup_url,json=dlsucCallupUrl,proto3" json:"dlsuc_callup_url,omitempty"`
	// 游戏id
	GameId int32 `protobuf:"varint,6,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// 游戏监控字段
	GameMonitorParam string `protobuf:"bytes,7,opt,name=game_monitor_param,json=gameMonitorParam,proto3" json:"game_monitor_param,omitempty"`
	GameChannelId int32 `protobuf:"varint,8,opt,name=game_channel_id,json=gameChannelId,proto3" json:"game_channel_id,omitempty"`
	GameChannelExtra string `protobuf:"bytes,9,opt,name=game_channel_extra,json=gameChannelExtra,proto3" json:"game_channel_extra,omitempty"`
}

func (x *AdButtonDto) Reset() {
	*x = AdButtonDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdButtonDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdButtonDto) ProtoMessage() {}

func (x *AdButtonDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdButtonDto.ProtoReflect.Descriptor instead.
func (*AdButtonDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{2}
}

func (x *AdButtonDto) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdButtonDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdButtonDto) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *AdButtonDto) GetReportUrls() string {
	if x != nil {
		return x.ReportUrls
	}
	return ""
}

func (x *AdButtonDto) GetDlsucCallupUrl() string {
	if x != nil {
		return x.DlsucCallupUrl
	}
	return ""
}

func (x *AdButtonDto) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AdButtonDto) GetGameMonitorParam() string {
	if x != nil {
		return x.GameMonitorParam
	}
	return ""
}

func (x *AdButtonDto) GetGameChannelId() int32 {
	if x != nil {
		return x.GameChannelId
	}
	return 0
}

func (x *AdButtonDto) GetGameChannelExtra() string {
	if x != nil {
		return x.GameChannelExtra
	}
	return ""
}

// 卡片
type AdCardDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 卡片类型
	CardType int32 `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 额外描述
	ExtraDesc string `protobuf:"bytes,4,opt,name=extra_desc,json=extraDesc,proto3" json:"extra_desc,omitempty"`
	// 长描述
	LongDesc string `protobuf:"bytes,5,opt,name=long_desc,json=longDesc,proto3" json:"long_desc,omitempty"`
	// 短标题, 弹幕广告目录面板标题
	ShortTitle string `protobuf:"bytes,6,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	// 弹幕/浮层广告的弹幕标题
	DanmuTitle string `protobuf:"bytes,7,opt,name=danmu_title,json=danmuTitle,proto3" json:"danmu_title,omitempty"`
	// 弹幕/浮层广告的弹幕高度，整型，分母为100
	DanmuHeight int32 `protobuf:"varint,8,opt,name=danmu_height,json=danmuHeight,proto3" json:"danmu_height,omitempty"`
	// 弹幕/浮层广告的弹幕宽度，整型，分母为100
	DanmuWidth int32 `protobuf:"varint,9,opt,name=danmu_width,json=danmuWidth,proto3" json:"danmu_width,omitempty"`
	// 弹幕/浮层广告生存时间，单位为毫秒
	DanmuLife int32 `protobuf:"varint,10,opt,name=danmu_life,json=danmuLife,proto3" json:"danmu_life,omitempty"`
	// 弹幕/浮层开始时间，单位为毫秒
	DanmuBegin int32 `protobuf:"varint,11,opt,name=danmu_begin,json=danmuBegin,proto3" json:"danmu_begin,omitempty"`
	// 背景色值（含透明度）如#80FFFFFF
	DanmuColor string `protobuf:"bytes,12,opt,name=danmu_color,json=danmuColor,proto3" json:"danmu_color,omitempty"`
	// 弹幕/浮层广告H5落地页
	DanmuH5Url string `protobuf:"bytes,13,opt,name=danmu_h5url,json=danmuH5url,proto3" json:"danmu_h5url,omitempty"`
	// 弹幕/浮层 广告icon
	DanmuIcon string `protobuf:"bytes,14,opt,name=danmu_icon,json=danmuIcon,proto3" json:"danmu_icon,omitempty"`
	// 折叠时间，永驻浮层折叠时间，单位为毫秒
	FoldTime int32 `protobuf:"varint,15,opt,name=fold_time,json=foldTime,proto3" json:"fold_time,omitempty"`
	// 广告标文案
	AdTag string `protobuf:"bytes,16,opt,name=ad_tag,json=adTag,proto3" json:"ad_tag,omitempty"`
	// cover数组
	Covers []*AdCoverDto `protobuf:"bytes,17,rep,name=covers,proto3" json:"covers,omitempty"`
	// 卡片跳转链接
	JumpUrl string `protobuf:"bytes,18,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	ImaxLandingPageJsonString string `protobuf:"bytes,19,opt,name=imax_landing_page_json_string,json=imaxLandingPageJsonString,proto3" json:"imax_landing_page_json_string,omitempty"`
	// app唤起schema
	CallupUrl string `protobuf:"bytes,20,opt,name=callup_url,json=callupUrl,proto3" json:"callup_url,omitempty"`
	// univeral link域名
	UniversalApp string `protobuf:"bytes,21,opt,name=universal_app,json=universalApp,proto3" json:"universal_app,omitempty"`
	// 原价, 单位为分
	OriPrice string `protobuf:"bytes,22,opt,name=ori_price,json=oriPrice,proto3" json:"ori_price,omitempty"`
	// 现价, 同上
	CurPrice int32 `protobuf:"varint,23,opt,name=cur_price,json=curPrice,proto3" json:"cur_price,omitempty"`
	// 券后/现价 价格描述
	PriceDesc string `protobuf:"bytes,24,opt,name=price_desc,json=priceDesc,proto3" json:"price_desc,omitempty"`
	// 价格单位符号
	PriceSymbol string `protobuf:"bytes,25,opt,name=price_symbol,json=priceSymbol,proto3" json:"price_symbol,omitempty"`
	// 券后价格 "1000"
	GoodsCurPrice string `protobuf:"bytes,26,opt,name=goods_cur_price,json=goodsCurPrice,proto3" json:"goods_cur_price,omitempty"`
	// 原价 "¥1002"
	GoodsOriPrice string `protobuf:"bytes,27,opt,name=goods_ori_price,json=goodsOriPrice,proto3" json:"goods_ori_price,omitempty"`
	// 开放平台商品
	Good *AdGoodDto `protobuf:"bytes,28,opt,name=good,proto3" json:"good,omitempty"`
	// 打分? 满分为100
	Rank int32 `protobuf:"varint,29,opt,name=rank,proto3" json:"rank,omitempty"`
	// 热度
	HotScore int32 `protobuf:"varint,30,opt,name=hot_score,json=hotScore,proto3" json:"hot_score,omitempty"`
	// 按钮
	Button *AdButtonDto `protobuf:"bytes,31,opt,name=button,proto3" json:"button,omitempty"`
	// 广告主logo
	AdverLogo string `protobuf:"bytes,32,opt,name=adver_logo,json=adverLogo,proto3" json:"adver_logo,omitempty"`
	// 广告主name
	AdverName string `protobuf:"bytes,33,opt,name=adver_name,json=adverName,proto3" json:"adver_name,omitempty"`
	// 广告主主页链接
	AdverPageUrl string `protobuf:"bytes,34,opt,name=adver_page_url,json=adverPageUrl,proto3" json:"adver_page_url,omitempty"`
	// 视频弹幕，视频广告用
	VideoBarrage []string `protobuf:"bytes,35,rep,name=video_barrage,json=videoBarrage,proto3" json:"video_barrage,omitempty"`
	// 商业标信息
	AdTagStyle *AdBusinessMarkDto `protobuf:"bytes,36,opt,name=ad_tag_style,json=adTagStyle,proto3" json:"ad_tag_style,omitempty"`
	// 自动播放视频
	Video *AdAutoPlayVideoDto `protobuf:"bytes,37,opt,name=video,proto3" json:"video,omitempty"`
	// 反馈面板功能模块，屏蔽、投诉、广告介绍
	FeedbackPanel *AdFeedbackPanelDto `protobuf:"bytes,38,opt,name=feedback_panel,json=feedbackPanel,proto3" json:"feedback_panel,omitempty"`
	AdverMid int64 `protobuf:"varint,39,opt,name=adver_mid,json=adverMid,proto3" json:"adver_mid,omitempty"`
	AdverAccountId int64 `protobuf:"varint,40,opt,name=adver_account_id,json=adverAccountId,proto3" json:"adver_account_id,omitempty"`
	Duration string `protobuf:"bytes,41,opt,name=duration,proto3" json:"duration,omitempty"`
	QualityInfos []*QualityInfo `protobuf:"bytes,42,rep,name=quality_infos,json=qualityInfos,proto3" json:"quality_infos,omitempty"`
	// 动态广告文本
	DynamicText string `protobuf:"bytes,43,opt,name=dynamic_text,json=dynamicText,proto3" json:"dynamic_text,omitempty"`
	// 广告主信息
	Adver *AdverDto `protobuf:"bytes,44,opt,name=adver,proto3" json:"adver,omitempty"`
	// 评分
	GradeLevel int32 `protobuf:"varint,45,opt,name=grade_level,json=gradeLevel,proto3" json:"grade_level,omitempty"`
	SupportTransition bool `protobuf:"varint,46,opt,name=support_transition,json=supportTransition,proto3" json:"support_transition,omitempty"`
	Transition string `protobuf:"bytes,47,opt,name=transition,proto3" json:"transition,omitempty"`
	UnderPlayerInteractionStyle int32 `protobuf:"varint,48,opt,name=under_player_interaction_style,json=underPlayerInteractionStyle,proto3" json:"under_player_interaction_style,omitempty"`
	ImaxLandingPageV2 string `protobuf:"bytes,49,opt,name=imax_landing_page_v2,json=imaxLandingPageV2,proto3" json:"imax_landing_page_v2,omitempty"`
	SubcardModule *SubCardModule `protobuf:"bytes,50,opt,name=subcard_module,json=subcardModule,proto3" json:"subcard_module,omitempty"`
	GradeDenominator int32 `protobuf:"varint,51,opt,name=grade_denominator,json=gradeDenominator,proto3" json:"grade_denominator,omitempty"`
	StarLevel int32 `protobuf:"varint,52,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`
	Bulletin *Bulletin `protobuf:"bytes,53,opt,name=bulletin,proto3" json:"bulletin,omitempty"`
	Gift *Gift `protobuf:"bytes,54,opt,name=gift,proto3" json:"gift,omitempty"`
	GameTags []string `protobuf:"bytes,55,rep,name=game_tags,json=gameTags,proto3" json:"game_tags,omitempty"`
	OriMarkHidden int32 `protobuf:"varint,56,opt,name=ori_mark_hidden,json=oriMarkHidden,proto3" json:"ori_mark_hidden,omitempty"`
	UseMultiCover bool `protobuf:"varint,57,opt,name=use_multi_cover,json=useMultiCover,proto3" json:"use_multi_cover,omitempty"`
	WxProgramInfo *WxProgramInfo `protobuf:"bytes,58,opt,name=wx_program_info,json=wxProgramInfo,proto3" json:"wx_program_info,omitempty"`
	AndroidGamePageRes *AndroidGamePageRes `protobuf:"bytes,59,opt,name=android_game_page_res,json=androidGamePageRes,proto3" json:"android_game_page_res,omitempty"`
	NotClickableArea *NotClickableArea `protobuf:"bytes,60,opt,name=not_clickable_area,json=notClickableArea,proto3" json:"not_clickable_area,omitempty"`
	ForwardReply *ForwardReply `protobuf:"bytes,61,opt,name=forward_reply,json=forwardReply,proto3" json:"forward_reply,omitempty"`
}

func (x *AdCardDto) Reset() {
	*x = AdCardDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdCardDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdCardDto) ProtoMessage() {}

func (x *AdCardDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdCardDto.ProtoReflect.Descriptor instead.
func (*AdCardDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{3}
}

func (x *AdCardDto) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *AdCardDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdCardDto) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AdCardDto) GetExtraDesc() string {
	if x != nil {
		return x.ExtraDesc
	}
	return ""
}

func (x *AdCardDto) GetLongDesc() string {
	if x != nil {
		return x.LongDesc
	}
	return ""
}

func (x *AdCardDto) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *AdCardDto) GetDanmuTitle() string {
	if x != nil {
		return x.DanmuTitle
	}
	return ""
}

func (x *AdCardDto) GetDanmuHeight() int32 {
	if x != nil {
		return x.DanmuHeight
	}
	return 0
}

func (x *AdCardDto) GetDanmuWidth() int32 {
	if x != nil {
		return x.DanmuWidth
	}
	return 0
}

func (x *AdCardDto) GetDanmuLife() int32 {
	if x != nil {
		return x.DanmuLife
	}
	return 0
}

func (x *AdCardDto) GetDanmuBegin() int32 {
	if x != nil {
		return x.DanmuBegin
	}
	return 0
}

func (x *AdCardDto) GetDanmuColor() string {
	if x != nil {
		return x.DanmuColor
	}
	return ""
}

func (x *AdCardDto) GetDanmuH5Url() string {
	if x != nil {
		return x.DanmuH5Url
	}
	return ""
}

func (x *AdCardDto) GetDanmuIcon() string {
	if x != nil {
		return x.DanmuIcon
	}
	return ""
}

func (x *AdCardDto) GetFoldTime() int32 {
	if x != nil {
		return x.FoldTime
	}
	return 0
}

func (x *AdCardDto) GetAdTag() string {
	if x != nil {
		return x.AdTag
	}
	return ""
}

func (x *AdCardDto) GetCovers() []*AdCoverDto {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *AdCardDto) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *AdCardDto) GetImaxLandingPageJsonString() string {
	if x != nil {
		return x.ImaxLandingPageJsonString
	}
	return ""
}

func (x *AdCardDto) GetCallupUrl() string {
	if x != nil {
		return x.CallupUrl
	}
	return ""
}

func (x *AdCardDto) GetUniversalApp() string {
	if x != nil {
		return x.UniversalApp
	}
	return ""
}

func (x *AdCardDto) GetOriPrice() string {
	if x != nil {
		return x.OriPrice
	}
	return ""
}

func (x *AdCardDto) GetCurPrice() int32 {
	if x != nil {
		return x.CurPrice
	}
	return 0
}

func (x *AdCardDto) GetPriceDesc() string {
	if x != nil {
		return x.PriceDesc
	}
	return ""
}

func (x *AdCardDto) GetPriceSymbol() string {
	if x != nil {
		return x.PriceSymbol
	}
	return ""
}

func (x *AdCardDto) GetGoodsCurPrice() string {
	if x != nil {
		return x.GoodsCurPrice
	}
	return ""
}

func (x *AdCardDto) GetGoodsOriPrice() string {
	if x != nil {
		return x.GoodsOriPrice
	}
	return ""
}

func (x *AdCardDto) GetGood() *AdGoodDto {
	if x != nil {
		return x.Good
	}
	return nil
}

func (x *AdCardDto) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *AdCardDto) GetHotScore() int32 {
	if x != nil {
		return x.HotScore
	}
	return 0
}

func (x *AdCardDto) GetButton() *AdButtonDto {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *AdCardDto) GetAdverLogo() string {
	if x != nil {
		return x.AdverLogo
	}
	return ""
}

func (x *AdCardDto) GetAdverName() string {
	if x != nil {
		return x.AdverName
	}
	return ""
}

func (x *AdCardDto) GetAdverPageUrl() string {
	if x != nil {
		return x.AdverPageUrl
	}
	return ""
}

func (x *AdCardDto) GetVideoBarrage() []string {
	if x != nil {
		return x.VideoBarrage
	}
	return nil
}

func (x *AdCardDto) GetAdTagStyle() *AdBusinessMarkDto {
	if x != nil {
		return x.AdTagStyle
	}
	return nil
}

func (x *AdCardDto) GetVideo() *AdAutoPlayVideoDto {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *AdCardDto) GetFeedbackPanel() *AdFeedbackPanelDto {
	if x != nil {
		return x.FeedbackPanel
	}
	return nil
}

func (x *AdCardDto) GetAdverMid() int64 {
	if x != nil {
		return x.AdverMid
	}
	return 0
}

func (x *AdCardDto) GetAdverAccountId() int64 {
	if x != nil {
		return x.AdverAccountId
	}
	return 0
}

func (x *AdCardDto) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AdCardDto) GetQualityInfos() []*QualityInfo {
	if x != nil {
		return x.QualityInfos
	}
	return nil
}

func (x *AdCardDto) GetDynamicText() string {
	if x != nil {
		return x.DynamicText
	}
	return ""
}

func (x *AdCardDto) GetAdver() *AdverDto {
	if x != nil {
		return x.Adver
	}
	return nil
}

func (x *AdCardDto) GetGradeLevel() int32 {
	if x != nil {
		return x.GradeLevel
	}
	return 0
}

func (x *AdCardDto) GetSupportTransition() bool {
	if x != nil {
		return x.SupportTransition
	}
	return false
}

func (x *AdCardDto) GetTransition() string {
	if x != nil {
		return x.Transition
	}
	return ""
}

func (x *AdCardDto) GetUnderPlayerInteractionStyle() int32 {
	if x != nil {
		return x.UnderPlayerInteractionStyle
	}
	return 0
}

func (x *AdCardDto) GetImaxLandingPageV2() string {
	if x != nil {
		return x.ImaxLandingPageV2
	}
	return ""
}

func (x *AdCardDto) GetSubcardModule() *SubCardModule {
	if x != nil {
		return x.SubcardModule
	}
	return nil
}

func (x *AdCardDto) GetGradeDenominator() int32 {
	if x != nil {
		return x.GradeDenominator
	}
	return 0
}

func (x *AdCardDto) GetStarLevel() int32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *AdCardDto) GetBulletin() *Bulletin {
	if x != nil {
		return x.Bulletin
	}
	return nil
}

func (x *AdCardDto) GetGift() *Gift {
	if x != nil {
		return x.Gift
	}
	return nil
}

func (x *AdCardDto) GetGameTags() []string {
	if x != nil {
		return x.GameTags
	}
	return nil
}

func (x *AdCardDto) GetOriMarkHidden() int32 {
	if x != nil {
		return x.OriMarkHidden
	}
	return 0
}

func (x *AdCardDto) GetUseMultiCover() bool {
	if x != nil {
		return x.UseMultiCover
	}
	return false
}

func (x *AdCardDto) GetWxProgramInfo() *WxProgramInfo {
	if x != nil {
		return x.WxProgramInfo
	}
	return nil
}

func (x *AdCardDto) GetAndroidGamePageRes() *AndroidGamePageRes {
	if x != nil {
		return x.AndroidGamePageRes
	}
	return nil
}

func (x *AdCardDto) GetNotClickableArea() *NotClickableArea {
	if x != nil {
		return x.NotClickableArea
	}
	return nil
}

func (x *AdCardDto) GetForwardReply() *ForwardReply {
	if x != nil {
		return x.ForwardReply
	}
	return nil
}

// 额外广告数据
type AdContentExtraDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 动态布局
	Layout string `protobuf:"bytes,1,opt,name=layout,proto3" json:"layout,omitempty"`
	// 展现监控url
	ShowUrls []string `protobuf:"bytes,2,rep,name=show_urls,json=showUrls,proto3" json:"show_urls,omitempty"`
	// 点击监控url
	ClickUrls []string `protobuf:"bytes,3,rep,name=click_urls,json=clickUrls,proto3" json:"click_urls,omitempty"`
	// 弹幕创意列表展示第三方上报
	DanmuListShowUrls []string `protobuf:"bytes,4,rep,name=danmu_list_show_urls,json=danmuListShowUrls,proto3" json:"danmu_list_show_urls,omitempty"`
	// 弹幕创意列表点击第三方上报
	DanmuListClickUrls []string `protobuf:"bytes,5,rep,name=danmu_list_click_urls,json=danmuListClickUrls,proto3" json:"danmu_list_click_urls,omitempty"`
	// 弹幕详情页展示第三方上报
	DanmuDetailShowUrls []string `protobuf:"bytes,6,rep,name=danmu_detail_show_urls,json=danmuDetailShowUrls,proto3" json:"danmu_detail_show_urls,omitempty"`
	// 弹幕商品添加购物车第三方上报
	DanmuTrolleyAddUrls []string `protobuf:"bytes,7,rep,name=danmu_trolley_add_urls,json=danmuTrolleyAddUrls,proto3" json:"danmu_trolley_add_urls,omitempty"`
	// useWebView默认false
	UseAdWebV2 bool `protobuf:"varint,8,opt,name=use_ad_web_v2,json=useAdWebV2,proto3" json:"use_ad_web_v2,omitempty"`
	// app唤起白名单
	OpenWhitelist []string `protobuf:"bytes,9,rep,name=open_whitelist,json=openWhitelist,proto3" json:"open_whitelist,omitempty"`
	// app下载白名单
	DownloadWhitelist *AppPackageDto `protobuf:"bytes,10,opt,name=download_whitelist,json=downloadWhitelist,proto3" json:"download_whitelist,omitempty"`
	// 卡片相关信息
	Card *AdCardDto `protobuf:"bytes,11,opt,name=card,proto3" json:"card,omitempty"`
	// 视频播放和弹幕播放上报控制时间 ms
	ReportTime int32 `protobuf:"varint,12,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	// 是否优先唤起app store
	AppstorePriority int32 `protobuf:"varint,13,opt,name=appstore_priority,json=appstorePriority,proto3" json:"appstore_priority,omitempty"`
	// 广告售卖类型
	SalesType int32 `protobuf:"varint,14,opt,name=sales_type,json=salesType,proto3" json:"sales_type,omitempty"`
	// 落地页是否预加载
	PreloadLandingpage int32 `protobuf:"varint,15,opt,name=preload_landingpage,json=preloadLandingpage,proto3" json:"preload_landingpage,omitempty"`
	// 是否需要展示风险行业提示
	SpecialIndustry bool `protobuf:"varint,16,opt,name=special_industry,json=specialIndustry,proto3" json:"special_industry,omitempty"`
	// 风险行业提示
	SpecialIndustryTips string `protobuf:"bytes,17,opt,name=special_industry_tips,json=specialIndustryTips,proto3" json:"special_industry_tips,omitempty"`
	// 是否展示下载弹框
	EnableDownloadDialog bool `protobuf:"varint,18,opt,name=enable_download_dialog,json=enableDownloadDialog,proto3" json:"enable_download_dialog,omitempty"`
	// 是否允许分享
	EnableShare bool `protobuf:"varint,19,opt,name=enable_share,json=enableShare,proto3" json:"enable_share,omitempty"`
	// 个人空间广告入口类型
	// 1:橱窗 2:商品店铺 3:小程序
	UpzoneEntranceType int32 `protobuf:"varint,20,opt,name=upzone_entrance_type,json=upzoneEntranceType,proto3" json:"upzone_entrance_type,omitempty"`
	// 个人空间广告入口上报id,橱窗id(当前用Mid)、店铺id或者小程序id
	UpzoneEntranceReportId int32 `protobuf:"varint,21,opt,name=upzone_entrance_report_id,json=upzoneEntranceReportId,proto3" json:"upzone_entrance_report_id,omitempty"`
	// 分享数据
	ShareInfo *AdShareInfoDto `protobuf:"bytes,22,opt,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
	// topview图片链接，闪屏预下载用
	TopviewPicUrl string `protobuf:"bytes,23,opt,name=topview_pic_url,json=topviewPicUrl,proto3" json:"topview_pic_url,omitempty"`
	// topview视频链接，闪屏预下载用
	TopviewVideoUrl string `protobuf:"bytes,24,opt,name=topview_video_url,json=topviewVideoUrl,proto3" json:"topview_video_url,omitempty"`
	// 点击区域
	// 0:表示banner可点击 1:表示素材可点击
	ClickArea int32 `protobuf:"varint,25,opt,name=click_area,json=clickArea,proto3" json:"click_area,omitempty"`
	// 店铺
	ShopId int64 `protobuf:"varint,26,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// up主
	UpMid int64 `protobuf:"varint,27,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 回传id
	TrackId string `protobuf:"bytes,28,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	// 商店直投
	EnableStoreDirectLaunch int32 `protobuf:"varint,29,opt,name=enable_store_direct_launch,json=enableStoreDirectLaunch,proto3" json:"enable_store_direct_launch,omitempty"`
	// DPA2.0商品ID
	ProductId int64 `protobuf:"varint,30,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	EnableDoubleJump bool `protobuf:"varint,31,opt,name=enable_double_jump,json=enableDoubleJump,proto3" json:"enable_double_jump,omitempty"`
	Show1SUrls []string `protobuf:"bytes,32,rep,name=show1s_urls,json=show1sUrls,proto3" json:"show1s_urls,omitempty"`
	FromTrackId string `protobuf:"bytes,33,opt,name=from_track_id,json=fromTrackId,proto3" json:"from_track_id,omitempty"`
	StoreCallupCard bool `protobuf:"varint,34,opt,name=store_callup_card,json=storeCallupCard,proto3" json:"store_callup_card,omitempty"`
	LandingpageDownloadStyle int32 `protobuf:"varint,35,opt,name=landingpage_download_style,json=landingpageDownloadStyle,proto3" json:"landingpage_download_style,omitempty"`
	SpecialIndustryStyle int32 `protobuf:"varint,36,opt,name=special_industry_style,json=specialIndustryStyle,proto3" json:"special_industry_style,omitempty"`
	EnableH5Alert bool `protobuf:"varint,37,opt,name=enable_h5_alert,json=enableH5Alert,proto3" json:"enable_h5_alert,omitempty"`
	MacroReplacePriority int32 `protobuf:"varint,38,opt,name=macro_replace_priority,json=macroReplacePriority,proto3" json:"macro_replace_priority,omitempty"`
	FeedbackPanelStyle int32 `protobuf:"varint,39,opt,name=feedback_panel_style,json=feedbackPanelStyle,proto3" json:"feedback_panel_style,omitempty"`
	AppstoreUrl string `protobuf:"bytes,40,opt,name=appstore_url,json=appstoreUrl,proto3" json:"appstore_url,omitempty"`
	EnableH5PreLoad int32 `protobuf:"varint,41,opt,name=enable_h5_pre_load,json=enableH5PreLoad,proto3" json:"enable_h5_pre_load,omitempty"`
	H5PreLoadUrl string `protobuf:"bytes,42,opt,name=h5_pre_load_url,json=h5PreLoadUrl,proto3" json:"h5_pre_load_url,omitempty"`
	CmFromTrackId string `protobuf:"bytes,43,opt,name=cm_from_track_id,json=cmFromTrackId,proto3" json:"cm_from_track_id,omitempty"`
}

func (x *AdContentExtraDto) Reset() {
	*x = AdContentExtraDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdContentExtraDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdContentExtraDto) ProtoMessage() {}

func (x *AdContentExtraDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdContentExtraDto.ProtoReflect.Descriptor instead.
func (*AdContentExtraDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{4}
}

func (x *AdContentExtraDto) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *AdContentExtraDto) GetShowUrls() []string {
	if x != nil {
		return x.ShowUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetClickUrls() []string {
	if x != nil {
		return x.ClickUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetDanmuListShowUrls() []string {
	if x != nil {
		return x.DanmuListShowUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetDanmuListClickUrls() []string {
	if x != nil {
		return x.DanmuListClickUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetDanmuDetailShowUrls() []string {
	if x != nil {
		return x.DanmuDetailShowUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetDanmuTrolleyAddUrls() []string {
	if x != nil {
		return x.DanmuTrolleyAddUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetUseAdWebV2() bool {
	if x != nil {
		return x.UseAdWebV2
	}
	return false
}

func (x *AdContentExtraDto) GetOpenWhitelist() []string {
	if x != nil {
		return x.OpenWhitelist
	}
	return nil
}

func (x *AdContentExtraDto) GetDownloadWhitelist() *AppPackageDto {
	if x != nil {
		return x.DownloadWhitelist
	}
	return nil
}

func (x *AdContentExtraDto) GetCard() *AdCardDto {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *AdContentExtraDto) GetReportTime() int32 {
	if x != nil {
		return x.ReportTime
	}
	return 0
}

func (x *AdContentExtraDto) GetAppstorePriority() int32 {
	if x != nil {
		return x.AppstorePriority
	}
	return 0
}

func (x *AdContentExtraDto) GetSalesType() int32 {
	if x != nil {
		return x.SalesType
	}
	return 0
}

func (x *AdContentExtraDto) GetPreloadLandingpage() int32 {
	if x != nil {
		return x.PreloadLandingpage
	}
	return 0
}

func (x *AdContentExtraDto) GetSpecialIndustry() bool {
	if x != nil {
		return x.SpecialIndustry
	}
	return false
}

func (x *AdContentExtraDto) GetSpecialIndustryTips() string {
	if x != nil {
		return x.SpecialIndustryTips
	}
	return ""
}

func (x *AdContentExtraDto) GetEnableDownloadDialog() bool {
	if x != nil {
		return x.EnableDownloadDialog
	}
	return false
}

func (x *AdContentExtraDto) GetEnableShare() bool {
	if x != nil {
		return x.EnableShare
	}
	return false
}

func (x *AdContentExtraDto) GetUpzoneEntranceType() int32 {
	if x != nil {
		return x.UpzoneEntranceType
	}
	return 0
}

func (x *AdContentExtraDto) GetUpzoneEntranceReportId() int32 {
	if x != nil {
		return x.UpzoneEntranceReportId
	}
	return 0
}

func (x *AdContentExtraDto) GetShareInfo() *AdShareInfoDto {
	if x != nil {
		return x.ShareInfo
	}
	return nil
}

func (x *AdContentExtraDto) GetTopviewPicUrl() string {
	if x != nil {
		return x.TopviewPicUrl
	}
	return ""
}

func (x *AdContentExtraDto) GetTopviewVideoUrl() string {
	if x != nil {
		return x.TopviewVideoUrl
	}
	return ""
}

func (x *AdContentExtraDto) GetClickArea() int32 {
	if x != nil {
		return x.ClickArea
	}
	return 0
}

func (x *AdContentExtraDto) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *AdContentExtraDto) GetUpMid() int64 {
	if x != nil {
		return x.UpMid
	}
	return 0
}

func (x *AdContentExtraDto) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *AdContentExtraDto) GetEnableStoreDirectLaunch() int32 {
	if x != nil {
		return x.EnableStoreDirectLaunch
	}
	return 0
}

func (x *AdContentExtraDto) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AdContentExtraDto) GetEnableDoubleJump() bool {
	if x != nil {
		return x.EnableDoubleJump
	}
	return false
}

func (x *AdContentExtraDto) GetShow1SUrls() []string {
	if x != nil {
		return x.Show1SUrls
	}
	return nil
}

func (x *AdContentExtraDto) GetFromTrackId() string {
	if x != nil {
		return x.FromTrackId
	}
	return ""
}

func (x *AdContentExtraDto) GetStoreCallupCard() bool {
	if x != nil {
		return x.StoreCallupCard
	}
	return false
}

func (x *AdContentExtraDto) GetLandingpageDownloadStyle() int32 {
	if x != nil {
		return x.LandingpageDownloadStyle
	}
	return 0
}

func (x *AdContentExtraDto) GetSpecialIndustryStyle() int32 {
	if x != nil {
		return x.SpecialIndustryStyle
	}
	return 0
}

func (x *AdContentExtraDto) GetEnableH5Alert() bool {
	if x != nil {
		return x.EnableH5Alert
	}
	return false
}

func (x *AdContentExtraDto) GetMacroReplacePriority() int32 {
	if x != nil {
		return x.MacroReplacePriority
	}
	return 0
}

func (x *AdContentExtraDto) GetFeedbackPanelStyle() int32 {
	if x != nil {
		return x.FeedbackPanelStyle
	}
	return 0
}

func (x *AdContentExtraDto) GetAppstoreUrl() string {
	if x != nil {
		return x.AppstoreUrl
	}
	return ""
}

func (x *AdContentExtraDto) GetEnableH5PreLoad() int32 {
	if x != nil {
		return x.EnableH5PreLoad
	}
	return 0
}

func (x *AdContentExtraDto) GetH5PreLoadUrl() string {
	if x != nil {
		return x.H5PreLoadUrl
	}
	return ""
}

func (x *AdContentExtraDto) GetCmFromTrackId() string {
	if x != nil {
		return x.CmFromTrackId
	}
	return ""
}

// 广告卡片封面数据
type AdCoverDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 图片链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 动图循环次数
	// 0:无限循环
	Loop int32 `protobuf:"varint,2,opt,name=loop,proto3" json:"loop,omitempty"`
	// 图片点击跳转地址，截至目前为空
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
	ReportUrls []string `protobuf:"bytes,4,rep,name=report_urls,json=reportUrls,proto3" json:"report_urls,omitempty"`
	// 图片高度
	ImageHeight int32 `protobuf:"varint,5,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`
	// 图片宽度
	ImageWidth int32 `protobuf:"varint,6,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`
}

func (x *AdCoverDto) Reset() {
	*x = AdCoverDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdCoverDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdCoverDto) ProtoMessage() {}

func (x *AdCoverDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdCoverDto.ProtoReflect.Descriptor instead.
func (*AdCoverDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{5}
}

func (x *AdCoverDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdCoverDto) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

func (x *AdCoverDto) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *AdCoverDto) GetReportUrls() []string {
	if x != nil {
		return x.ReportUrls
	}
	return nil
}

func (x *AdCoverDto) GetImageHeight() int32 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

func (x *AdCoverDto) GetImageWidth() int32 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

// 广告内容
type AdDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告创意ID
	CreativeId int64 `protobuf:"varint,1,opt,name=creative_id,json=creativeId,proto3" json:"creative_id,omitempty"`
	// 广告闭环上报回传数据
	AdCb string `protobuf:"bytes,2,opt,name=ad_cb,json=adCb,proto3" json:"ad_cb,omitempty"`
	// 额外广告数据
	Extra *AdContentExtraDto `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
	// 广告标记
	CmMark int32 `protobuf:"varint,4,opt,name=cm_mark,json=cmMark,proto3" json:"cm_mark,omitempty"`
	TopViewId int64 `protobuf:"varint,5,opt,name=top_view_id,json=topViewId,proto3" json:"top_view_id,omitempty"`
	CreativeType int32 `protobuf:"varint,6,opt,name=creative_type,json=creativeType,proto3" json:"creative_type,omitempty"`
	CardType int32 `protobuf:"varint,7,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CreativeStyle int32 `protobuf:"varint,8,opt,name=creative_style,json=creativeStyle,proto3" json:"creative_style,omitempty"`
	IsAd int32 `protobuf:"varint,9,opt,name=is_ad,json=isAd,proto3" json:"is_ad,omitempty"`
	CreativeContent *CreativeDto `protobuf:"bytes,10,opt,name=creative_content,json=creativeContent,proto3" json:"creative_content,omitempty"`
}

func (x *AdDto) Reset() {
	*x = AdDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdDto) ProtoMessage() {}

func (x *AdDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdDto.ProtoReflect.Descriptor instead.
func (*AdDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{6}
}

func (x *AdDto) GetCreativeId() int64 {
	if x != nil {
		return x.CreativeId
	}
	return 0
}

func (x *AdDto) GetAdCb() string {
	if x != nil {
		return x.AdCb
	}
	return ""
}

func (x *AdDto) GetExtra() *AdContentExtraDto {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *AdDto) GetCmMark() int32 {
	if x != nil {
		return x.CmMark
	}
	return 0
}

func (x *AdDto) GetTopViewId() int64 {
	if x != nil {
		return x.TopViewId
	}
	return 0
}

func (x *AdDto) GetCreativeType() int32 {
	if x != nil {
		return x.CreativeType
	}
	return 0
}

func (x *AdDto) GetCardType() int32 {
	if x != nil {
		return x.CardType
	}
	return 0
}

func (x *AdDto) GetCreativeStyle() int32 {
	if x != nil {
		return x.CreativeStyle
	}
	return 0
}

func (x *AdDto) GetIsAd() int32 {
	if x != nil {
		return x.IsAd
	}
	return 0
}

func (x *AdDto) GetCreativeContent() *CreativeDto {
	if x != nil {
		return x.CreativeContent
	}
	return nil
}

// 反馈面板功能模块
type AdFeedbackPanelDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 面板类型，广告、推广
	PanelTypeText string `protobuf:"bytes,1,opt,name=panel_type_text,json=panelTypeText,proto3" json:"panel_type_text,omitempty"`
	// 反馈面版信息
	FeedbackPanelDetail []*AdFeedbackPanelModuleDto `protobuf:"bytes,2,rep,name=feedback_panel_detail,json=feedbackPanelDetail,proto3" json:"feedback_panel_detail,omitempty"`
	Toast string `protobuf:"bytes,3,opt,name=toast,proto3" json:"toast,omitempty"`
	OpenRecTips string `protobuf:"bytes,4,opt,name=open_rec_tips,json=openRecTips,proto3" json:"open_rec_tips,omitempty"`
	CloseRecTips string `protobuf:"bytes,5,opt,name=close_rec_tips,json=closeRecTips,proto3" json:"close_rec_tips,omitempty"`
}

func (x *AdFeedbackPanelDto) Reset() {
	*x = AdFeedbackPanelDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdFeedbackPanelDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdFeedbackPanelDto) ProtoMessage() {}

func (x *AdFeedbackPanelDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdFeedbackPanelDto.ProtoReflect.Descriptor instead.
func (*AdFeedbackPanelDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{7}
}

func (x *AdFeedbackPanelDto) GetPanelTypeText() string {
	if x != nil {
		return x.PanelTypeText
	}
	return ""
}

func (x *AdFeedbackPanelDto) GetFeedbackPanelDetail() []*AdFeedbackPanelModuleDto {
	if x != nil {
		return x.FeedbackPanelDetail
	}
	return nil
}

func (x *AdFeedbackPanelDto) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *AdFeedbackPanelDto) GetOpenRecTips() string {
	if x != nil {
		return x.OpenRecTips
	}
	return ""
}

func (x *AdFeedbackPanelDto) GetCloseRecTips() string {
	if x != nil {
		return x.CloseRecTips
	}
	return ""
}

// 反馈面版信息
type AdFeedbackPanelModuleDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 模块id
	ModuleId int32 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// icon url
	IconUrl string `protobuf:"bytes,2,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// 跳转类型
	// 1:气泡 2:H5
	JumpType int32 `protobuf:"varint,3,opt,name=jump_type,json=jumpType,proto3" json:"jump_type,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,4,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 文案
	Text string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// 二级文案数组
	SecondaryPanel []*AdSecondFeedbackPanelDto `protobuf:"bytes,6,rep,name=secondary_panel,json=secondaryPanel,proto3" json:"secondary_panel,omitempty"`
	SubText string `protobuf:"bytes,7,opt,name=sub_text,json=subText,proto3" json:"sub_text,omitempty"`
}

func (x *AdFeedbackPanelModuleDto) Reset() {
	*x = AdFeedbackPanelModuleDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdFeedbackPanelModuleDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdFeedbackPanelModuleDto) ProtoMessage() {}

func (x *AdFeedbackPanelModuleDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdFeedbackPanelModuleDto.ProtoReflect.Descriptor instead.
func (*AdFeedbackPanelModuleDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{8}
}

func (x *AdFeedbackPanelModuleDto) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *AdFeedbackPanelModuleDto) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *AdFeedbackPanelModuleDto) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

func (x *AdFeedbackPanelModuleDto) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *AdFeedbackPanelModuleDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdFeedbackPanelModuleDto) GetSecondaryPanel() []*AdSecondFeedbackPanelDto {
	if x != nil {
		return x.SecondaryPanel
	}
	return nil
}

func (x *AdFeedbackPanelModuleDto) GetSubText() string {
	if x != nil {
		return x.SubText
	}
	return ""
}

// 开放平台商品
type AdGoodDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 电商商品ID
	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 电商SKU ID
	SkuId int64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	// 店铺ID
	ShopId int64 `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// SKU库存
	SkuNum int64 `protobuf:"varint,4,opt,name=sku_num,json=skuNum,proto3" json:"sku_num,omitempty"`
}

func (x *AdGoodDto) Reset() {
	*x = AdGoodDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdGoodDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdGoodDto) ProtoMessage() {}

func (x *AdGoodDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdGoodDto.ProtoReflect.Descriptor instead.
func (*AdGoodDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{9}
}

func (x *AdGoodDto) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AdGoodDto) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *AdGoodDto) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *AdGoodDto) GetSkuNum() int64 {
	if x != nil {
		return x.SkuNum
	}
	return 0
}

// 有弹幕的ogv ep
type AdOgvEpDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分集epid
	Epid int64 `protobuf:"varint,1,opt,name=epid,proto3" json:"epid,omitempty"`
	// 是否显示 "荐"
	HasRecommend bool `protobuf:"varint,2,opt,name=has_recommend,json=hasRecommend,proto3" json:"has_recommend,omitempty"`
}

func (x *AdOgvEpDto) Reset() {
	*x = AdOgvEpDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdOgvEpDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdOgvEpDto) ProtoMessage() {}

func (x *AdOgvEpDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdOgvEpDto.ProtoReflect.Descriptor instead.
func (*AdOgvEpDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{10}
}

func (x *AdOgvEpDto) GetEpid() int64 {
	if x != nil {
		return x.Epid
	}
	return 0
}

func (x *AdOgvEpDto) GetHasRecommend() bool {
	if x != nil {
		return x.HasRecommend
	}
	return false
}

// 广告控制
type AdsControlDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频是否有弹幕，如有，需请求弹幕广告
	HasDanmu int32 `protobuf:"varint,1,opt,name=has_danmu,json=hasDanmu,proto3" json:"has_danmu,omitempty"`
	// 有弹幕的分P视频的cid，已弃用
	Cids []int64 `protobuf:"varint,2,rep,packed,name=cids,proto3" json:"cids,omitempty"`
	// 有弹幕的ogv ep
	Eps []*AdOgvEpDto `protobuf:"bytes,3,rep,name=eps,proto3" json:"eps,omitempty"`
}

func (x *AdsControlDto) Reset() {
	*x = AdsControlDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdsControlDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdsControlDto) ProtoMessage() {}

func (x *AdsControlDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdsControlDto.ProtoReflect.Descriptor instead.
func (*AdsControlDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{11}
}

func (x *AdsControlDto) GetHasDanmu() int32 {
	if x != nil {
		return x.HasDanmu
	}
	return 0
}

func (x *AdsControlDto) GetCids() []int64 {
	if x != nil {
		return x.Cids
	}
	return nil
}

func (x *AdsControlDto) GetEps() []*AdOgvEpDto {
	if x != nil {
		return x.Eps
	}
	return nil
}

// 二级文案
type AdSecondFeedbackPanelDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 屏蔽理由id
	ReasonId int32 `protobuf:"varint,1,opt,name=reason_id,json=reasonId,proto3" json:"reason_id,omitempty"`
	// 理由文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *AdSecondFeedbackPanelDto) Reset() {
	*x = AdSecondFeedbackPanelDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdSecondFeedbackPanelDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSecondFeedbackPanelDto) ProtoMessage() {}

func (x *AdSecondFeedbackPanelDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSecondFeedbackPanelDto.ProtoReflect.Descriptor instead.
func (*AdSecondFeedbackPanelDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{12}
}

func (x *AdSecondFeedbackPanelDto) GetReasonId() int32 {
	if x != nil {
		return x.ReasonId
	}
	return 0
}

func (x *AdSecondFeedbackPanelDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// 分享
type AdShareInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分享标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 分享副标题
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 分享图片url
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *AdShareInfoDto) Reset() {
	*x = AdShareInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdShareInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdShareInfoDto) ProtoMessage() {}

func (x *AdShareInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdShareInfoDto.ProtoReflect.Descriptor instead.
func (*AdShareInfoDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{13}
}

func (x *AdShareInfoDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdShareInfoDto) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *AdShareInfoDto) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// 广告主信息
type AdverDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdverId int64 `protobuf:"varint,1,opt,name=adver_id,json=adverId,proto3" json:"adver_id,omitempty"`
	AdverLogo string `protobuf:"bytes,2,opt,name=adver_logo,json=adverLogo,proto3" json:"adver_logo,omitempty"`
	AdverName string `protobuf:"bytes,3,opt,name=adver_name,json=adverName,proto3" json:"adver_name,omitempty"`
	AdverType int32 `protobuf:"varint,4,opt,name=adver_type,json=adverType,proto3" json:"adver_type,omitempty"`
	AdverPageUrl string `protobuf:"bytes,5,opt,name=adver_page_url,json=adverPageUrl,proto3" json:"adver_page_url,omitempty"`
	AdverDesc string `protobuf:"bytes,6,opt,name=adver_desc,json=adverDesc,proto3" json:"adver_desc,omitempty"`
}

func (x *AdverDto) Reset() {
	*x = AdverDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdverDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdverDto) ProtoMessage() {}

func (x *AdverDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdverDto.ProtoReflect.Descriptor instead.
func (*AdverDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{14}
}

func (x *AdverDto) GetAdverId() int64 {
	if x != nil {
		return x.AdverId
	}
	return 0
}

func (x *AdverDto) GetAdverLogo() string {
	if x != nil {
		return x.AdverLogo
	}
	return ""
}

func (x *AdverDto) GetAdverName() string {
	if x != nil {
		return x.AdverName
	}
	return ""
}

func (x *AdverDto) GetAdverType() int32 {
	if x != nil {
		return x.AdverType
	}
	return 0
}

func (x *AdverDto) GetAdverPageUrl() string {
	if x != nil {
		return x.AdverPageUrl
	}
	return ""
}

func (x *AdverDto) GetAdverDesc() string {
	if x != nil {
		return x.AdverDesc
	}
	return ""
}

type AndroidGamePageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module1 *Module1 `protobuf:"bytes,1,opt,name=module1,proto3" json:"module1,omitempty"`
	Module3 *Module3 `protobuf:"bytes,2,opt,name=module3,proto3" json:"module3,omitempty"`
	Module4 *Module4 `protobuf:"bytes,3,opt,name=module4,proto3" json:"module4,omitempty"`
	Module5 *Module5 `protobuf:"bytes,4,opt,name=module5,proto3" json:"module5,omitempty"`
	Module6 *Module6 `protobuf:"bytes,5,opt,name=module6,proto3" json:"module6,omitempty"`
	Module7 *Module7 `protobuf:"bytes,6,opt,name=module7,proto3" json:"module7,omitempty"`
	Module8 *Module8 `protobuf:"bytes,7,opt,name=module8,proto3" json:"module8,omitempty"`
	Module9 *Module9 `protobuf:"bytes,8,opt,name=module9,proto3" json:"module9,omitempty"`
	Module10 *Module10 `protobuf:"bytes,9,opt,name=module10,proto3" json:"module10,omitempty"`
	Module11 *Module11 `protobuf:"bytes,10,opt,name=module11,proto3" json:"module11,omitempty"`
	Module12 *Module12 `protobuf:"bytes,11,opt,name=module12,proto3" json:"module12,omitempty"`
	Module13 *Module13 `protobuf:"bytes,12,opt,name=module13,proto3" json:"module13,omitempty"`
	ModuleSeq []int32 `protobuf:"varint,13,rep,packed,name=module_seq,json=moduleSeq,proto3" json:"module_seq,omitempty"`
	BackgroundColor string `protobuf:"bytes,14,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	Module14 *Module14 `protobuf:"bytes,15,opt,name=module14,proto3" json:"module14,omitempty"`
}

func (x *AndroidGamePageRes) Reset() {
	*x = AndroidGamePageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidGamePageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidGamePageRes) ProtoMessage() {}

func (x *AndroidGamePageRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidGamePageRes.ProtoReflect.Descriptor instead.
func (*AndroidGamePageRes) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{15}
}

func (x *AndroidGamePageRes) GetModule1() *Module1 {
	if x != nil {
		return x.Module1
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule3() *Module3 {
	if x != nil {
		return x.Module3
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule4() *Module4 {
	if x != nil {
		return x.Module4
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule5() *Module5 {
	if x != nil {
		return x.Module5
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule6() *Module6 {
	if x != nil {
		return x.Module6
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule7() *Module7 {
	if x != nil {
		return x.Module7
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule8() *Module8 {
	if x != nil {
		return x.Module8
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule9() *Module9 {
	if x != nil {
		return x.Module9
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule10() *Module10 {
	if x != nil {
		return x.Module10
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule11() *Module11 {
	if x != nil {
		return x.Module11
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule12() *Module12 {
	if x != nil {
		return x.Module12
	}
	return nil
}

func (x *AndroidGamePageRes) GetModule13() *Module13 {
	if x != nil {
		return x.Module13
	}
	return nil
}

func (x *AndroidGamePageRes) GetModuleSeq() []int32 {
	if x != nil {
		return x.ModuleSeq
	}
	return nil
}

func (x *AndroidGamePageRes) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *AndroidGamePageRes) GetModule14() *Module14 {
	if x != nil {
		return x.Module14
	}
	return nil
}

type AndroidTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AndroidTag) Reset() {
	*x = AndroidTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidTag) ProtoMessage() {}

func (x *AndroidTag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidTag.ProtoReflect.Descriptor instead.
func (*AndroidTag) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{16}
}

func (x *AndroidTag) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AndroidTag) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// app下载白名单
type AppPackageDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 包大小(单位bytes)
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ApkName string `protobuf:"bytes,3,opt,name=apk_name,json=apkName,proto3" json:"apk_name,omitempty"`
	// url
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// bili schema url
	BiliUrl string `protobuf:"bytes,5,opt,name=bili_url,json=biliUrl,proto3" json:"bili_url,omitempty"`
	// 包md5
	Md5 string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	// 包icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 开发者姓名
	DevName string `protobuf:"bytes,8,opt,name=dev_name,json=devName,proto3" json:"dev_name,omitempty"`
	// 权限地址
	AuthUrl string `protobuf:"bytes,9,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	// 权限名，逗号隔开
	AuthName string `protobuf:"bytes,10,opt,name=auth_name,json=authName,proto3" json:"auth_name,omitempty"`
	// 版本
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// 更新时间,yy-mm-hh格式
	UpdateTime string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 隐私协议标题
	PrivacyName string `protobuf:"bytes,13,opt,name=privacy_name,json=privacyName,proto3" json:"privacy_name,omitempty"`
	// 隐私协议url
	PrivacyUrl string `protobuf:"bytes,14,opt,name=privacy_url,json=privacyUrl,proto3" json:"privacy_url,omitempty"`
}

func (x *AppPackageDto) Reset() {
	*x = AppPackageDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPackageDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPackageDto) ProtoMessage() {}

func (x *AppPackageDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPackageDto.ProtoReflect.Descriptor instead.
func (*AppPackageDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{17}
}

func (x *AppPackageDto) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AppPackageDto) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *AppPackageDto) GetApkName() string {
	if x != nil {
		return x.ApkName
	}
	return ""
}

func (x *AppPackageDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AppPackageDto) GetBiliUrl() string {
	if x != nil {
		return x.BiliUrl
	}
	return ""
}

func (x *AppPackageDto) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AppPackageDto) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppPackageDto) GetDevName() string {
	if x != nil {
		return x.DevName
	}
	return ""
}

func (x *AppPackageDto) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *AppPackageDto) GetAuthName() string {
	if x != nil {
		return x.AuthName
	}
	return ""
}

func (x *AppPackageDto) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppPackageDto) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *AppPackageDto) GetPrivacyName() string {
	if x != nil {
		return x.PrivacyName
	}
	return ""
}

func (x *AppPackageDto) GetPrivacyUrl() string {
	if x != nil {
		return x.PrivacyUrl
	}
	return ""
}

type Bulletin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagText string `protobuf:"bytes,1,opt,name=tag_text,json=tagText,proto3" json:"tag_text,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Bulletin) Reset() {
	*x = Bulletin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bulletin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bulletin) ProtoMessage() {}

func (x *Bulletin) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bulletin.ProtoReflect.Descriptor instead.
func (*Bulletin) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{18}
}

func (x *Bulletin) GetTagText() string {
	if x != nil {
		return x.TagText
	}
	return ""
}

func (x *Bulletin) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameBaseId int64 `protobuf:"varint,1,opt,name=game_base_id,json=gameBaseId,proto3" json:"game_base_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserFace string `protobuf:"bytes,3,opt,name=user_face,json=userFace,proto3" json:"user_face,omitempty"`
	UserLevel int32 `protobuf:"varint,4,opt,name=user_level,json=userLevel,proto3" json:"user_level,omitempty"`
	CommentNo string `protobuf:"bytes,5,opt,name=comment_no,json=commentNo,proto3" json:"comment_no,omitempty"`
	Grade int32 `protobuf:"varint,6,opt,name=grade,proto3" json:"grade,omitempty"`
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	UpCount int32 `protobuf:"varint,8,opt,name=up_count,json=upCount,proto3" json:"up_count,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{19}
}

func (x *Comment) GetGameBaseId() int64 {
	if x != nil {
		return x.GameBaseId
	}
	return 0
}

func (x *Comment) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Comment) GetUserFace() string {
	if x != nil {
		return x.UserFace
	}
	return ""
}

func (x *Comment) GetUserLevel() int32 {
	if x != nil {
		return x.UserLevel
	}
	return 0
}

func (x *Comment) GetCommentNo() string {
	if x != nil {
		return x.CommentNo
	}
	return ""
}

func (x *Comment) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetUpCount() int32 {
	if x != nil {
		return x.UpCount
	}
	return 0
}

type CreativeDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ImageMd5 string `protobuf:"bytes,4,opt,name=image_md5,json=imageMd5,proto3" json:"image_md5,omitempty"`
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	ClickUrl string `protobuf:"bytes,6,opt,name=click_url,json=clickUrl,proto3" json:"click_url,omitempty"`
	ShowUrl string `protobuf:"bytes,7,opt,name=show_url,json=showUrl,proto3" json:"show_url,omitempty"`
	VideoId int64 `protobuf:"varint,8,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,9,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	ThumbnailUrlMd5 string `protobuf:"bytes,10,opt,name=thumbnail_url_md5,json=thumbnailUrlMd5,proto3" json:"thumbnail_url_md5,omitempty"`
	LogoUrl string `protobuf:"bytes,11,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	LogoMd5 string `protobuf:"bytes,12,opt,name=logo_md5,json=logoMd5,proto3" json:"logo_md5,omitempty"`
	Username string `protobuf:"bytes,13,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CreativeDto) Reset() {
	*x = CreativeDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeDto) ProtoMessage() {}

func (x *CreativeDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeDto.ProtoReflect.Descriptor instead.
func (*CreativeDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{20}
}

func (x *CreativeDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreativeDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreativeDto) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CreativeDto) GetImageMd5() string {
	if x != nil {
		return x.ImageMd5
	}
	return ""
}

func (x *CreativeDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreativeDto) GetClickUrl() string {
	if x != nil {
		return x.ClickUrl
	}
	return ""
}

func (x *CreativeDto) GetShowUrl() string {
	if x != nil {
		return x.ShowUrl
	}
	return ""
}

func (x *CreativeDto) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *CreativeDto) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *CreativeDto) GetThumbnailUrlMd5() string {
	if x != nil {
		return x.ThumbnailUrlMd5
	}
	return ""
}

func (x *CreativeDto) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *CreativeDto) GetLogoMd5() string {
	if x != nil {
		return x.LogoMd5
	}
	return ""
}

func (x *CreativeDto) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CustomPlayUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayTime int32 `protobuf:"varint,1,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	Urls []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *CustomPlayUrl) Reset() {
	*x = CustomPlayUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomPlayUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomPlayUrl) ProtoMessage() {}

func (x *CustomPlayUrl) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomPlayUrl.ProtoReflect.Descriptor instead.
func (*CustomPlayUrl) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{21}
}

func (x *CustomPlayUrl) GetPlayTime() int32 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

func (x *CustomPlayUrl) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type ForwardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	HighlightText string `protobuf:"bytes,3,opt,name=highlight_text,json=highlightText,proto3" json:"highlight_text,omitempty"`
	HighlightPrefixIcon string `protobuf:"bytes,4,opt,name=highlight_prefix_icon,json=highlightPrefixIcon,proto3" json:"highlight_prefix_icon,omitempty"`
	CallupUrl string `protobuf:"bytes,5,opt,name=callup_url,json=callupUrl,proto3" json:"callup_url,omitempty"`
	JumpUrl string `protobuf:"bytes,6,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	JumpType int32 `protobuf:"varint,7,opt,name=jump_type,json=jumpType,proto3" json:"jump_type,omitempty"`
	AuthorName string `protobuf:"bytes,8,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	AuthorIcon string `protobuf:"bytes,9,opt,name=author_icon,json=authorIcon,proto3" json:"author_icon,omitempty"`
}

func (x *ForwardReply) Reset() {
	*x = ForwardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardReply) ProtoMessage() {}

func (x *ForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardReply.ProtoReflect.Descriptor instead.
func (*ForwardReply) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{22}
}

func (x *ForwardReply) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ForwardReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ForwardReply) GetHighlightText() string {
	if x != nil {
		return x.HighlightText
	}
	return ""
}

func (x *ForwardReply) GetHighlightPrefixIcon() string {
	if x != nil {
		return x.HighlightPrefixIcon
	}
	return ""
}

func (x *ForwardReply) GetCallupUrl() string {
	if x != nil {
		return x.CallupUrl
	}
	return ""
}

func (x *ForwardReply) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *ForwardReply) GetJumpType() int32 {
	if x != nil {
		return x.JumpType
	}
	return 0
}

func (x *ForwardReply) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *ForwardReply) GetAuthorIcon() string {
	if x != nil {
		return x.AuthorIcon
	}
	return ""
}

type Gift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	NightIcon string `protobuf:"bytes,2,opt,name=night_icon,json=nightIcon,proto3" json:"night_icon,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Gift) Reset() {
	*x = Gift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gift) ProtoMessage() {}

func (x *Gift) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gift.ProtoReflect.Descriptor instead.
func (*Gift) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{23}
}

func (x *Gift) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Gift) GetNightIcon() string {
	if x != nil {
		return x.NightIcon
	}
	return ""
}

func (x *Gift) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Gift) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type IosGamePageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logo string `protobuf:"bytes,1,opt,name=logo,proto3" json:"logo,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubTitile string `protobuf:"bytes,3,opt,name=sub_titile,json=subTitile,proto3" json:"sub_titile,omitempty"`
	ImageUrl []string `protobuf:"bytes,4,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Desc string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	GameButton *AdButtonDto `protobuf:"bytes,6,opt,name=game_button,json=gameButton,proto3" json:"game_button,omitempty"`
	Grade float64 `protobuf:"fixed64,7,opt,name=grade,proto3" json:"grade,omitempty"`
	RankNum string `protobuf:"bytes,8,opt,name=rank_num,json=rankNum,proto3" json:"rank_num,omitempty"`
	RankName string `protobuf:"bytes,9,opt,name=rank_name,json=rankName,proto3" json:"rank_name,omitempty"`
}

func (x *IosGamePageRes) Reset() {
	*x = IosGamePageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosGamePageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosGamePageRes) ProtoMessage() {}

func (x *IosGamePageRes) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosGamePageRes.ProtoReflect.Descriptor instead.
func (*IosGamePageRes) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{24}
}

func (x *IosGamePageRes) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *IosGamePageRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IosGamePageRes) GetSubTitile() string {
	if x != nil {
		return x.SubTitile
	}
	return ""
}

func (x *IosGamePageRes) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *IosGamePageRes) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *IosGamePageRes) GetGameButton() *AdButtonDto {
	if x != nil {
		return x.GameButton
	}
	return nil
}

func (x *IosGamePageRes) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *IosGamePageRes) GetRankNum() string {
	if x != nil {
		return x.RankNum
	}
	return ""
}

func (x *IosGamePageRes) GetRankName() string {
	if x != nil {
		return x.RankName
	}
	return ""
}

type Module1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName string `protobuf:"bytes,1,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	GameIcon string `protobuf:"bytes,2,opt,name=game_icon,json=gameIcon,proto3" json:"game_icon,omitempty"`
	DeveloperInputName string `protobuf:"bytes,3,opt,name=developer_input_name,json=developerInputName,proto3" json:"developer_input_name,omitempty"`
	TagList []*AndroidTag `protobuf:"bytes,4,rep,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
}

func (x *Module1) Reset() {
	*x = Module1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module1) ProtoMessage() {}

func (x *Module1) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module1.ProtoReflect.Descriptor instead.
func (*Module1) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{25}
}

func (x *Module1) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *Module1) GetGameIcon() string {
	if x != nil {
		return x.GameIcon
	}
	return ""
}

func (x *Module1) GetDeveloperInputName() string {
	if x != nil {
		return x.DeveloperInputName
	}
	return ""
}

func (x *Module1) GetTagList() []*AndroidTag {
	if x != nil {
		return x.TagList
	}
	return nil
}

type Module3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	QualityParams []*QualityParmas `protobuf:"bytes,3,rep,name=quality_params,json=qualityParams,proto3" json:"quality_params,omitempty"`
}

func (x *Module3) Reset() {
	*x = Module3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module3) ProtoMessage() {}

func (x *Module3) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module3.ProtoReflect.Descriptor instead.
func (*Module3) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{26}
}

func (x *Module3) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module3) GetQualityParams() []*QualityParmas {
	if x != nil {
		return x.QualityParams
	}
	return nil
}

type Module4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	GiftNum int32 `protobuf:"varint,2,opt,name=gift_num,json=giftNum,proto3" json:"gift_num,omitempty"`
	GiftName string `protobuf:"bytes,3,opt,name=gift_name,json=giftName,proto3" json:"gift_name,omitempty"`
	GiftIconNum int32 `protobuf:"varint,4,opt,name=gift_icon_num,json=giftIconNum,proto3" json:"gift_icon_num,omitempty"`
	IconUrls []string `protobuf:"bytes,5,rep,name=icon_urls,json=iconUrls,proto3" json:"icon_urls,omitempty"`
}

func (x *Module4) Reset() {
	*x = Module4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module4) ProtoMessage() {}

func (x *Module4) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module4.ProtoReflect.Descriptor instead.
func (*Module4) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{27}
}

func (x *Module4) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module4) GetGiftNum() int32 {
	if x != nil {
		return x.GiftNum
	}
	return 0
}

func (x *Module4) GetGiftName() string {
	if x != nil {
		return x.GiftName
	}
	return ""
}

func (x *Module4) GetGiftIconNum() int32 {
	if x != nil {
		return x.GiftIconNum
	}
	return 0
}

func (x *Module4) GetIconUrls() []string {
	if x != nil {
		return x.IconUrls
	}
	return nil
}

type Module5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	GameSummary string `protobuf:"bytes,2,opt,name=game_summary,json=gameSummary,proto3" json:"game_summary,omitempty"`
}

func (x *Module5) Reset() {
	*x = Module5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module5) ProtoMessage() {}

func (x *Module5) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module5.ProtoReflect.Descriptor instead.
func (*Module5) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{28}
}

func (x *Module5) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module5) GetGameSummary() string {
	if x != nil {
		return x.GameSummary
	}
	return ""
}

type Module6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	GameDesc string `protobuf:"bytes,2,opt,name=game_desc,json=gameDesc,proto3" json:"game_desc,omitempty"`
}

func (x *Module6) Reset() {
	*x = Module6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module6) ProtoMessage() {}

func (x *Module6) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module6.ProtoReflect.Descriptor instead.
func (*Module6) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{29}
}

func (x *Module6) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module6) GetGameDesc() string {
	if x != nil {
		return x.GameDesc
	}
	return ""
}

type Module7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	ScreenShots []*ScreenShots `protobuf:"bytes,2,rep,name=screen_shots,json=screenShots,proto3" json:"screen_shots,omitempty"`
}

func (x *Module7) Reset() {
	*x = Module7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module7) ProtoMessage() {}

func (x *Module7) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module7.ProtoReflect.Descriptor instead.
func (*Module7) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{30}
}

func (x *Module7) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module7) GetScreenShots() []*ScreenShots {
	if x != nil {
		return x.ScreenShots
	}
	return nil
}

type Module8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	TagList []string `protobuf:"bytes,2,rep,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
}

func (x *Module8) Reset() {
	*x = Module8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module8) ProtoMessage() {}

func (x *Module8) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module8.ProtoReflect.Descriptor instead.
func (*Module8) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{31}
}

func (x *Module8) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module8) GetTagList() []string {
	if x != nil {
		return x.TagList
	}
	return nil
}

type Module9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	DevIntroduction string `protobuf:"bytes,2,opt,name=dev_introduction,json=devIntroduction,proto3" json:"dev_introduction,omitempty"`
}

func (x *Module9) Reset() {
	*x = Module9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module9) ProtoMessage() {}

func (x *Module9) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module9.ProtoReflect.Descriptor instead.
func (*Module9) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{32}
}

func (x *Module9) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module9) GetDevIntroduction() string {
	if x != nil {
		return x.DevIntroduction
	}
	return ""
}

type Module10 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	LatestUpdate string `protobuf:"bytes,2,opt,name=latest_update,json=latestUpdate,proto3" json:"latest_update,omitempty"`
}

func (x *Module10) Reset() {
	*x = Module10{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module10) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module10) ProtoMessage() {}

func (x *Module10) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module10.ProtoReflect.Descriptor instead.
func (*Module10) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{33}
}

func (x *Module10) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module10) GetLatestUpdate() string {
	if x != nil {
		return x.LatestUpdate
	}
	return ""
}

type Module11 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	StarNumberList []int32 `protobuf:"varint,2,rep,packed,name=star_number_list,json=starNumberList,proto3" json:"star_number_list,omitempty"`
	CommentStr string `protobuf:"bytes,3,opt,name=comment_str,json=commentStr,proto3" json:"comment_str,omitempty"`
	Grade float64 `protobuf:"fixed64,4,opt,name=grade,proto3" json:"grade,omitempty"`
}

func (x *Module11) Reset() {
	*x = Module11{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module11) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module11) ProtoMessage() {}

func (x *Module11) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module11.ProtoReflect.Descriptor instead.
func (*Module11) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{34}
}

func (x *Module11) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module11) GetStarNumberList() []int32 {
	if x != nil {
		return x.StarNumberList
	}
	return nil
}

func (x *Module11) GetCommentStr() string {
	if x != nil {
		return x.CommentStr
	}
	return ""
}

func (x *Module11) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

type Module12 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display bool `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	CommentList []*Comment `protobuf:"bytes,2,rep,name=comment_list,json=commentList,proto3" json:"comment_list,omitempty"`
	CommentNum string `protobuf:"bytes,3,opt,name=comment_num,json=commentNum,proto3" json:"comment_num,omitempty"`
	ShowAllComment bool `protobuf:"varint,4,opt,name=show_all_comment,json=showAllComment,proto3" json:"show_all_comment,omitempty"`
}

func (x *Module12) Reset() {
	*x = Module12{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module12) ProtoMessage() {}

func (x *Module12) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module12.ProtoReflect.Descriptor instead.
func (*Module12) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{35}
}

func (x *Module12) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *Module12) GetCommentList() []*Comment {
	if x != nil {
		return x.CommentList
	}
	return nil
}

func (x *Module12) GetCommentNum() string {
	if x != nil {
		return x.CommentNum
	}
	return ""
}

func (x *Module12) GetShowAllComment() bool {
	if x != nil {
		return x.ShowAllComment
	}
	return false
}

type Module13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkgSize int64 `protobuf:"varint,1,opt,name=pkg_size,json=pkgSize,proto3" json:"pkg_size,omitempty"`
	CustomerService string `protobuf:"bytes,2,opt,name=customer_service,json=customerService,proto3" json:"customer_service,omitempty"`
	Website string `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	Authority string `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
	Privacy string `protobuf:"bytes,5,opt,name=privacy,proto3" json:"privacy,omitempty"`
	DeveloperName string `protobuf:"bytes,6,opt,name=developer_name,json=developerName,proto3" json:"developer_name,omitempty"`
	UpdateTime string `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GameVersion string `protobuf:"bytes,8,opt,name=game_version,json=gameVersion,proto3" json:"game_version,omitempty"`
	AndroidPkgName string `protobuf:"bytes,9,opt,name=android_pkg_name,json=androidPkgName,proto3" json:"android_pkg_name,omitempty"`
}

func (x *Module13) Reset() {
	*x = Module13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module13) ProtoMessage() {}

func (x *Module13) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module13.ProtoReflect.Descriptor instead.
func (*Module13) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{36}
}

func (x *Module13) GetPkgSize() int64 {
	if x != nil {
		return x.PkgSize
	}
	return 0
}

func (x *Module13) GetCustomerService() string {
	if x != nil {
		return x.CustomerService
	}
	return ""
}

func (x *Module13) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Module13) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *Module13) GetPrivacy() string {
	if x != nil {
		return x.Privacy
	}
	return ""
}

func (x *Module13) GetDeveloperName() string {
	if x != nil {
		return x.DeveloperName
	}
	return ""
}

func (x *Module13) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Module13) GetGameVersion() string {
	if x != nil {
		return x.GameVersion
	}
	return ""
}

func (x *Module13) GetAndroidPkgName() string {
	if x != nil {
		return x.AndroidPkgName
	}
	return ""
}

type Module14 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardList []*Reward `protobuf:"bytes,1,rep,name=reward_list,json=rewardList,proto3" json:"reward_list,omitempty"`
	Display bool `protobuf:"varint,2,opt,name=display,proto3" json:"display,omitempty"`
}

func (x *Module14) Reset() {
	*x = Module14{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module14) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module14) ProtoMessage() {}

func (x *Module14) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module14.ProtoReflect.Descriptor instead.
func (*Module14) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{37}
}

func (x *Module14) GetRewardList() []*Reward {
	if x != nil {
		return x.RewardList
	}
	return nil
}

func (x *Module14) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

type NotClickableArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *NotClickableArea) Reset() {
	*x = NotClickableArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotClickableArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotClickableArea) ProtoMessage() {}

func (x *NotClickableArea) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotClickableArea.ProtoReflect.Descriptor instead.
func (*NotClickableArea) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{38}
}

func (x *NotClickableArea) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *NotClickableArea) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *NotClickableArea) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type QualityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	IsBg bool `protobuf:"varint,3,opt,name=is_bg,json=isBg,proto3" json:"is_bg,omitempty"`
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
}

func (x *QualityInfo) Reset() {
	*x = QualityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityInfo) ProtoMessage() {}

func (x *QualityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityInfo.ProtoReflect.Descriptor instead.
func (*QualityInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{39}
}

func (x *QualityInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *QualityInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QualityInfo) GetIsBg() bool {
	if x != nil {
		return x.IsBg
	}
	return false
}

func (x *QualityInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *QualityInfo) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

type QualityParmas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstLine string `protobuf:"bytes,1,opt,name=first_line,json=firstLine,proto3" json:"first_line,omitempty"`
	SecondLine string `protobuf:"bytes,2,opt,name=second_line,json=secondLine,proto3" json:"second_line,omitempty"`
	Grade float64 `protobuf:"fixed64,3,opt,name=grade,proto3" json:"grade,omitempty"`
	RankIcon string `protobuf:"bytes,4,opt,name=rank_icon,json=rankIcon,proto3" json:"rank_icon,omitempty"`
	QualityType int32 `protobuf:"varint,5,opt,name=quality_type,json=qualityType,proto3" json:"quality_type,omitempty"`
}

func (x *QualityParmas) Reset() {
	*x = QualityParmas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualityParmas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityParmas) ProtoMessage() {}

func (x *QualityParmas) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityParmas.ProtoReflect.Descriptor instead.
func (*QualityParmas) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{40}
}

func (x *QualityParmas) GetFirstLine() string {
	if x != nil {
		return x.FirstLine
	}
	return ""
}

func (x *QualityParmas) GetSecondLine() string {
	if x != nil {
		return x.SecondLine
	}
	return ""
}

func (x *QualityParmas) GetGrade() float64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *QualityParmas) GetRankIcon() string {
	if x != nil {
		return x.RankIcon
	}
	return ""
}

func (x *QualityParmas) GetQualityType() int32 {
	if x != nil {
		return x.QualityType
	}
	return 0
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Pic string `protobuf:"bytes,4,opt,name=pic,proto3" json:"pic,omitempty"`
	Reach bool `protobuf:"varint,5,opt,name=reach,proto3" json:"reach,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{41}
}

func (x *Reward) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Reward) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Reward) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Reward) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Reward) GetReach() bool {
	if x != nil {
		return x.Reach
	}
	return false
}

type ScreenShots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Seq int32 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *ScreenShots) Reset() {
	*x = ScreenShots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenShots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenShots) ProtoMessage() {}

func (x *ScreenShots) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenShots.ProtoReflect.Descriptor instead.
func (*ScreenShots) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{42}
}

func (x *ScreenShots) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ScreenShots) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ScreenShots) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ScreenShots) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

// 广告数据
type SourceContentDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告请求id
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 广告资源位source ID
	SourceId int32 `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// 广告资源位resource ID
	ResourceId int32 `protobuf:"varint,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// 广告位上报标记,对广告返回数据恒为true
	IsAdLoc bool `protobuf:"varint,4,opt,name=is_ad_loc,json=isAdLoc,proto3" json:"is_ad_loc,omitempty"`
	// 与天马现有逻辑一致, 0有含义
	// 0:内容 1:广告
	ServerType *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	// 客户端IP回传拼接
	ClientIp string `protobuf:"bytes,6,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	// 广告卡片位置在一刷中的位置, 天马用, 0有含义
	CardIndex *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=card_index,json=cardIndex,proto3" json:"card_index,omitempty"`
	// 广告资源位source 位次
	Index int32 `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	// 广告内容
	AdContent *AdDto `protobuf:"bytes,9,opt,name=ad_content,json=adContent,proto3" json:"ad_content,omitempty"`
}

func (x *SourceContentDto) Reset() {
	*x = SourceContentDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceContentDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceContentDto) ProtoMessage() {}

func (x *SourceContentDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceContentDto.ProtoReflect.Descriptor instead.
func (*SourceContentDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{43}
}

func (x *SourceContentDto) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SourceContentDto) GetSourceId() int32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *SourceContentDto) GetResourceId() int32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *SourceContentDto) GetIsAdLoc() bool {
	if x != nil {
		return x.IsAdLoc
	}
	return false
}

func (x *SourceContentDto) GetServerType() *wrapperspb.Int32Value {
	if x != nil {
		return x.ServerType
	}
	return nil
}

func (x *SourceContentDto) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SourceContentDto) GetCardIndex() *wrapperspb.Int32Value {
	if x != nil {
		return x.CardIndex
	}
	return nil
}

func (x *SourceContentDto) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SourceContentDto) GetAdContent() *AdDto {
	if x != nil {
		return x.AdContent
	}
	return nil
}

type SubCardModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubcardType string `protobuf:"bytes,1,opt,name=subcard_type,json=subcardType,proto3" json:"subcard_type,omitempty"`
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	RankStars string `protobuf:"bytes,4,opt,name=rank_stars,json=rankStars,proto3" json:"rank_stars,omitempty"`
	AmountNumber string `protobuf:"bytes,5,opt,name=amount_number,json=amountNumber,proto3" json:"amount_number,omitempty"`
	Avatar string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Button *AdButtonDto `protobuf:"bytes,8,opt,name=button,proto3" json:"button,omitempty"`
	TagInfos []*TagInfo `protobuf:"bytes,9,rep,name=tag_infos,json=tagInfos,proto3" json:"tag_infos,omitempty"`
}

func (x *SubCardModule) Reset() {
	*x = SubCardModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCardModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCardModule) ProtoMessage() {}

func (x *SubCardModule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCardModule.ProtoReflect.Descriptor instead.
func (*SubCardModule) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{44}
}

func (x *SubCardModule) GetSubcardType() string {
	if x != nil {
		return x.SubcardType
	}
	return ""
}

func (x *SubCardModule) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SubCardModule) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SubCardModule) GetRankStars() string {
	if x != nil {
		return x.RankStars
	}
	return ""
}

func (x *SubCardModule) GetAmountNumber() string {
	if x != nil {
		return x.AmountNumber
	}
	return ""
}

func (x *SubCardModule) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SubCardModule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubCardModule) GetButton() *AdButtonDto {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *SubCardModule) GetTagInfos() []*TagInfo {
	if x != nil {
		return x.TagInfos
	}
	return nil
}

type Tab2ExtraDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoverUrl string `protobuf:"bytes,1,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Button *AdButtonDto `protobuf:"bytes,5,opt,name=button,proto3" json:"button,omitempty"`
	AutoAnimateTimeMs int32 `protobuf:"varint,6,opt,name=auto_animate_time_ms,json=autoAnimateTimeMs,proto3" json:"auto_animate_time_ms,omitempty"`
	EnableClick bool `protobuf:"varint,7,opt,name=enable_click,json=enableClick,proto3" json:"enable_click,omitempty"`
	PanelUrl string `protobuf:"bytes,8,opt,name=panel_url,json=panelUrl,proto3" json:"panel_url,omitempty"`
	DownloadWhitelist []*AppPackageDto `protobuf:"bytes,9,rep,name=download_whitelist,json=downloadWhitelist,proto3" json:"download_whitelist,omitempty"`
	OpenWhitelist []string `protobuf:"bytes,10,rep,name=open_whitelist,json=openWhitelist,proto3" json:"open_whitelist,omitempty"`
	UseAdWebV2 bool `protobuf:"varint,11,opt,name=use_ad_web_v2,json=useAdWebV2,proto3" json:"use_ad_web_v2,omitempty"`
	EnableStoreDirectLaunch bool `protobuf:"varint,12,opt,name=enable_store_direct_launch,json=enableStoreDirectLaunch,proto3" json:"enable_store_direct_launch,omitempty"`
	SalesType int32 `protobuf:"varint,13,opt,name=sales_type,json=salesType,proto3" json:"sales_type,omitempty"`
	LandingpageDownloadStyle int32 `protobuf:"varint,15,opt,name=landingpage_download_style,json=landingpageDownloadStyle,proto3" json:"landingpage_download_style,omitempty"`
	AppstorePriority int32 `protobuf:"varint,16,opt,name=appstore_priority,json=appstorePriority,proto3" json:"appstore_priority,omitempty"`
	AppstoreUrl string `protobuf:"bytes,17,opt,name=appstore_url,json=appstoreUrl,proto3" json:"appstore_url,omitempty"`
	AppstoreDelayTime int32 `protobuf:"varint,18,opt,name=appstore_delay_time,json=appstoreDelayTime,proto3" json:"appstore_delay_time,omitempty"`
	PageCoverType int32 `protobuf:"varint,19,opt,name=page_cover_type,json=pageCoverType,proto3" json:"page_cover_type,omitempty"`
	PagePullType int32 `protobuf:"varint,20,opt,name=page_pull_type,json=pagePullType,proto3" json:"page_pull_type,omitempty"`
	AndroidGamePageRes *AndroidGamePageRes `protobuf:"bytes,21,opt,name=android_game_page_res,json=androidGamePageRes,proto3" json:"android_game_page_res,omitempty"`
	IosGamePageRes *IosGamePageRes `protobuf:"bytes,22,opt,name=ios_game_page_res,json=iosGamePageRes,proto3" json:"ios_game_page_res,omitempty"`
	AdTagStyle *AdBusinessMarkDto `protobuf:"bytes,23,opt,name=ad_tag_style,json=adTagStyle,proto3" json:"ad_tag_style,omitempty"`
	FeedbackPanel *AdFeedbackPanelDto `protobuf:"bytes,24,opt,name=feedback_panel,json=feedbackPanel,proto3" json:"feedback_panel,omitempty"`
	AdCb string `protobuf:"bytes,25,opt,name=ad_cb,json=adCb,proto3" json:"ad_cb,omitempty"`
	UrlType int32 `protobuf:"varint,26,opt,name=url_type,json=urlType,proto3" json:"url_type,omitempty"`
}

func (x *Tab2ExtraDto) Reset() {
	*x = Tab2ExtraDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tab2ExtraDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tab2ExtraDto) ProtoMessage() {}

func (x *Tab2ExtraDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tab2ExtraDto.ProtoReflect.Descriptor instead.
func (*Tab2ExtraDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{45}
}

func (x *Tab2ExtraDto) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Tab2ExtraDto) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Tab2ExtraDto) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Tab2ExtraDto) GetButton() *AdButtonDto {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *Tab2ExtraDto) GetAutoAnimateTimeMs() int32 {
	if x != nil {
		return x.AutoAnimateTimeMs
	}
	return 0
}

func (x *Tab2ExtraDto) GetEnableClick() bool {
	if x != nil {
		return x.EnableClick
	}
	return false
}

func (x *Tab2ExtraDto) GetPanelUrl() string {
	if x != nil {
		return x.PanelUrl
	}
	return ""
}

func (x *Tab2ExtraDto) GetDownloadWhitelist() []*AppPackageDto {
	if x != nil {
		return x.DownloadWhitelist
	}
	return nil
}

func (x *Tab2ExtraDto) GetOpenWhitelist() []string {
	if x != nil {
		return x.OpenWhitelist
	}
	return nil
}

func (x *Tab2ExtraDto) GetUseAdWebV2() bool {
	if x != nil {
		return x.UseAdWebV2
	}
	return false
}

func (x *Tab2ExtraDto) GetEnableStoreDirectLaunch() bool {
	if x != nil {
		return x.EnableStoreDirectLaunch
	}
	return false
}

func (x *Tab2ExtraDto) GetSalesType() int32 {
	if x != nil {
		return x.SalesType
	}
	return 0
}

func (x *Tab2ExtraDto) GetLandingpageDownloadStyle() int32 {
	if x != nil {
		return x.LandingpageDownloadStyle
	}
	return 0
}

func (x *Tab2ExtraDto) GetAppstorePriority() int32 {
	if x != nil {
		return x.AppstorePriority
	}
	return 0
}

func (x *Tab2ExtraDto) GetAppstoreUrl() string {
	if x != nil {
		return x.AppstoreUrl
	}
	return ""
}

func (x *Tab2ExtraDto) GetAppstoreDelayTime() int32 {
	if x != nil {
		return x.AppstoreDelayTime
	}
	return 0
}

func (x *Tab2ExtraDto) GetPageCoverType() int32 {
	if x != nil {
		return x.PageCoverType
	}
	return 0
}

func (x *Tab2ExtraDto) GetPagePullType() int32 {
	if x != nil {
		return x.PagePullType
	}
	return 0
}

func (x *Tab2ExtraDto) GetAndroidGamePageRes() *AndroidGamePageRes {
	if x != nil {
		return x.AndroidGamePageRes
	}
	return nil
}

func (x *Tab2ExtraDto) GetIosGamePageRes() *IosGamePageRes {
	if x != nil {
		return x.IosGamePageRes
	}
	return nil
}

func (x *Tab2ExtraDto) GetAdTagStyle() *AdBusinessMarkDto {
	if x != nil {
		return x.AdTagStyle
	}
	return nil
}

func (x *Tab2ExtraDto) GetFeedbackPanel() *AdFeedbackPanelDto {
	if x != nil {
		return x.FeedbackPanel
	}
	return nil
}

func (x *Tab2ExtraDto) GetAdCb() string {
	if x != nil {
		return x.AdCb
	}
	return ""
}

func (x *Tab2ExtraDto) GetUrlType() int32 {
	if x != nil {
		return x.UrlType
	}
	return 0
}

type TabExtraDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabUrl string `protobuf:"bytes,1,opt,name=tab_url,json=tabUrl,proto3" json:"tab_url,omitempty"`
	EnableStoreDirectLaunch int32 `protobuf:"varint,2,opt,name=enable_store_direct_launch,json=enableStoreDirectLaunch,proto3" json:"enable_store_direct_launch,omitempty"`
	StoreCallupCard int32 `protobuf:"varint,3,opt,name=store_callup_card,json=storeCallupCard,proto3" json:"store_callup_card,omitempty"`
	SalesType int32 `protobuf:"varint,4,opt,name=sales_type,json=salesType,proto3" json:"sales_type,omitempty"`
	DownloadWhitelist []*AppPackageDto `protobuf:"bytes,5,rep,name=download_whitelist,json=downloadWhitelist,proto3" json:"download_whitelist,omitempty"`
	SpecialIndustry bool `protobuf:"varint,6,opt,name=special_industry,json=specialIndustry,proto3" json:"special_industry,omitempty"`
	SpecialIndustryTips string `protobuf:"bytes,7,opt,name=special_industry_tips,json=specialIndustryTips,proto3" json:"special_industry_tips,omitempty"`
	OpenWhitelist []string `protobuf:"bytes,8,rep,name=open_whitelist,json=openWhitelist,proto3" json:"open_whitelist,omitempty"`
	LandingpageDownloadStyle int32 `protobuf:"varint,9,opt,name=landingpage_download_style,json=landingpageDownloadStyle,proto3" json:"landingpage_download_style,omitempty"`
	AppstorePriority int32 `protobuf:"varint,10,opt,name=appstore_priority,json=appstorePriority,proto3" json:"appstore_priority,omitempty"`
	UseAdWebV2 bool `protobuf:"varint,11,opt,name=use_ad_web_v2,json=useAdWebV2,proto3" json:"use_ad_web_v2,omitempty"`
	EnableDownloadDialog bool `protobuf:"varint,12,opt,name=enable_download_dialog,json=enableDownloadDialog,proto3" json:"enable_download_dialog,omitempty"`
	AppstoreUrl string `protobuf:"bytes,13,opt,name=appstore_url,json=appstoreUrl,proto3" json:"appstore_url,omitempty"`
	AppstoreDelayTime int32 `protobuf:"varint,14,opt,name=appstore_delay_time,json=appstoreDelayTime,proto3" json:"appstore_delay_time,omitempty"`
}

func (x *TabExtraDto) Reset() {
	*x = TabExtraDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabExtraDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabExtraDto) ProtoMessage() {}

func (x *TabExtraDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabExtraDto.ProtoReflect.Descriptor instead.
func (*TabExtraDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{46}
}

func (x *TabExtraDto) GetTabUrl() string {
	if x != nil {
		return x.TabUrl
	}
	return ""
}

func (x *TabExtraDto) GetEnableStoreDirectLaunch() int32 {
	if x != nil {
		return x.EnableStoreDirectLaunch
	}
	return 0
}

func (x *TabExtraDto) GetStoreCallupCard() int32 {
	if x != nil {
		return x.StoreCallupCard
	}
	return 0
}

func (x *TabExtraDto) GetSalesType() int32 {
	if x != nil {
		return x.SalesType
	}
	return 0
}

func (x *TabExtraDto) GetDownloadWhitelist() []*AppPackageDto {
	if x != nil {
		return x.DownloadWhitelist
	}
	return nil
}

func (x *TabExtraDto) GetSpecialIndustry() bool {
	if x != nil {
		return x.SpecialIndustry
	}
	return false
}

func (x *TabExtraDto) GetSpecialIndustryTips() string {
	if x != nil {
		return x.SpecialIndustryTips
	}
	return ""
}

func (x *TabExtraDto) GetOpenWhitelist() []string {
	if x != nil {
		return x.OpenWhitelist
	}
	return nil
}

func (x *TabExtraDto) GetLandingpageDownloadStyle() int32 {
	if x != nil {
		return x.LandingpageDownloadStyle
	}
	return 0
}

func (x *TabExtraDto) GetAppstorePriority() int32 {
	if x != nil {
		return x.AppstorePriority
	}
	return 0
}

func (x *TabExtraDto) GetUseAdWebV2() bool {
	if x != nil {
		return x.UseAdWebV2
	}
	return false
}

func (x *TabExtraDto) GetEnableDownloadDialog() bool {
	if x != nil {
		return x.EnableDownloadDialog
	}
	return false
}

func (x *TabExtraDto) GetAppstoreUrl() string {
	if x != nil {
		return x.AppstoreUrl
	}
	return ""
}

func (x *TabExtraDto) GetAppstoreDelayTime() int32 {
	if x != nil {
		return x.AppstoreDelayTime
	}
	return 0
}

type TabInfoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabName string `protobuf:"bytes,1,opt,name=tab_name,json=tabName,proto3" json:"tab_name,omitempty"`
	Extra *anypb.Any `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
	TabVersion int32 `protobuf:"varint,3,opt,name=tab_version,json=tabVersion,proto3" json:"tab_version,omitempty"`
}

func (x *TabInfoDto) Reset() {
	*x = TabInfoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TabInfoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabInfoDto) ProtoMessage() {}

func (x *TabInfoDto) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabInfoDto.ProtoReflect.Descriptor instead.
func (*TabInfoDto) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{47}
}

func (x *TabInfoDto) GetTabName() string {
	if x != nil {
		return x.TabName
	}
	return ""
}

func (x *TabInfoDto) GetExtra() *anypb.Any {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *TabInfoDto) GetTabVersion() int32 {
	if x != nil {
		return x.TabVersion
	}
	return 0
}

type TagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	BorderColor string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TagInfo) Reset() {
	*x = TagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagInfo) ProtoMessage() {}

func (x *TagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagInfo.ProtoReflect.Descriptor instead.
func (*TagInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{48}
}

func (x *TagInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TagInfo) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *TagInfo) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *TagInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *TagInfo) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *TagInfo) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *TagInfo) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *TagInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type WxProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *WxProgramInfo) Reset() {
	*x = WxProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_ad_v1_ad_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxProgramInfo) ProtoMessage() {}

func (x *WxProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_ad_v1_ad_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxProgramInfo.ProtoReflect.Descriptor instead.
func (*WxProgramInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_ad_v1_ad_proto_rawDescGZIP(), []int{49}
}

func (x *WxProgramInfo) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *WxProgramInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WxProgramInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_bilibili_ad_v1_ad_proto protoreflect.FileDescriptor

var file_bilibili_ad_v1_ad_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03, 0x0a, 0x12, 0x41, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x50,
	0x6c, 0x61, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x76, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x74, 0x6e, 0x5f, 0x64, 0x79, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x74, 0x6e, 0x44, 0x79, 0x63, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x74, 0x6e, 0x5f, 0x64, 0x79, 0x63, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x74, 0x6e, 0x44, 0x79, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x30, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x30, 0x55, 0x72, 0x6c, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x33, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x33, 0x73, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x35, 0x73, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x35, 0x73,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x03, 0x0a, 0x11, 0x41, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x67, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6d,
	0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x67, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6d, 0x67, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x67, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x67, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xb8, 0x02, 0x0a,
	0x0b, 0x41, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x6c, 0x73, 0x75, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6c, 0x73, 0x75,
	0x63, 0x43, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0xe0, 0x13, 0x0a, 0x09, 0x41, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x6e,
	0x6d, 0x75, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x61, 0x6e, 0x6d, 0x75, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x6e, 0x6d, 0x75, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4c, 0x69, 0x66, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x68, 0x35, 0x75, 0x72, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x48, 0x35, 0x75, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x54, 0x61, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52,
	0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6d, 0x61, 0x78, 0x4c,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x5f, 0x61, 0x70, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x75,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x43, 0x75, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6f, 0x72, 0x69, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4f, 0x72, 0x69, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x67, 0x6f, 0x6f, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x67,
	0x6f, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x74, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x44, 0x74,
	0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x18, 0x23,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x72, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x61, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x74, 0x6f, 0x52, 0x0a, 0x61, 0x64, 0x54,
	0x61, 0x67, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x49, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x64, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x64, 0x76, 0x65, 0x72, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x05, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x1e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1b, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x6d, 0x61,
	0x78, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x76,
	0x32, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x78, 0x4c, 0x61, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x67, 0x65, 0x56, 0x32, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x08,
	0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x52, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74,
	0x69, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x67, 0x69, 0x66, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x52, 0x04, 0x67, 0x69, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x37, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x69,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x38, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x48, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x39, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0f, 0x77, 0x78, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x77, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x55, 0x0a, 0x15, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x52, 0x12, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x5f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x3c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x41, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xdb, 0x0e, 0x0a, 0x11, 0x41,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x74, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x6f,
	0x77, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x61, 0x6e, 0x6d,
	0x75, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x33, 0x0a,
	0x16, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x5f, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x64,
	0x61, 0x6e, 0x6d, 0x75, 0x54, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x79, 0x41, 0x64, 0x64, 0x55, 0x72,
	0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x76, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x64,
	0x57, 0x65, 0x62, 0x56, 0x32, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x12,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x74, 0x6f, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x70,
	0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x70, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x75, 0x70, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x75,
	0x70, 0x7a, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x39, 0x0a, 0x19, 0x75, 0x70, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x75, 0x70, 0x7a, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f,
	0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x70, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x70, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69, 0x63,
	0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x6f, 0x70, 0x76, 0x69, 0x65, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x72, 0x65, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x70, 0x5f, 0x6d, 0x69,
	0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x70, 0x4d, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x4a,
	0x75, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x31, 0x73, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x31, 0x73,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x75, 0x70,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x70, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x68, 0x35, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x35, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x34, 0x0a, 0x16, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x35, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x48,
	0x35, 0x50, 0x72, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0f, 0x68, 0x35, 0x5f, 0x70,
	0x72, 0x65, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x68, 0x35, 0x50, 0x72, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x27, 0x0a, 0x10, 0x63, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6d, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0xf5, 0x02,
	0x0a, 0x05, 0x41, 0x64, 0x44, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x63,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x43, 0x62, 0x12, 0x37, 0x0a,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x74, 0x6f, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6d, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x12,
	0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x61,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x73, 0x41, 0x64, 0x12, 0x46, 0x0a,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x74, 0x6f, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xfa, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x44, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x13, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x54, 0x69, 0x70, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x63, 0x54, 0x69,
	0x70, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x18, 0x41, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x74, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x44, 0x74, 0x6f, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x65, 0x78,
	0x74, 0x22, 0x6d, 0x0a, 0x09, 0x41, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x44, 0x74, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x4e, 0x75, 0x6d,
	0x22, 0x45, 0x0a, 0x0a, 0x41, 0x64, 0x4f, 0x67, 0x76, 0x45, 0x70, 0x44, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22, 0x6e, 0x0a, 0x0d, 0x41, 0x64, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x44, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f,
	0x64, 0x61, 0x6e, 0x6d, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x73,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x04, 0x63, 0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x4f, 0x67, 0x76, 0x45, 0x70, 0x44,
	0x74, 0x6f, 0x52, 0x03, 0x65, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x41, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x44, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x22, 0x5f, 0x0a, 0x0e, 0x41, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xc7, 0x01, 0x0a, 0x08, 0x41, 0x64, 0x76, 0x65, 0x72, 0x44,
	0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x64, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x61, 0x64, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x22,
	0x84, 0x06, 0x0a, 0x12, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31,
	0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x33, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x33, 0x12, 0x31, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x34, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x34, 0x12,
	0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x35, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x35, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x36, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x36, 0x52, 0x07, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x36, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x37,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x37, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x37, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x38, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x38, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x38, 0x12, 0x31, 0x0a, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x39, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x39, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x39, 0x12, 0x34,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x30, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x31, 0x30, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x31,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x31,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x31, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x31, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x31, 0x32, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x32,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x33, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x33, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x31, 0x33, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x34, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x34, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x31, 0x34, 0x22, 0x34, 0x0a, 0x0a, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x86, 0x03, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x6c, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x55, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x08, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xee, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x87, 0x03, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a,
	0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x4d, 0x64, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x4d, 0x64, 0x35, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0d, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0xbb, 0x02,
	0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x55, 0x72,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x04, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x94, 0x02, 0x0a,
	0x0e, 0x49, 0x6f, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3c, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74,
	0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x54, 0x61, 0x67, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x69, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x33, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x6d, 0x61, 0x73, 0x52, 0x0d,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x9c, 0x01,
	0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x67,
	0x69, 0x66, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x07,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x22, 0x40, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x36, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x63, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x37, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x0b,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x6f, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x07, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x38, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x07, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x08, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x31, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0xab,
	0x01, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68,
	0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb7, 0x02, 0x0a,
	0x08, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x31, 0x33, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6b, 0x67,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6b, 0x67,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x50,
	0x6b, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x31, 0x34, 0x12, 0x37, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x3c, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x7a, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69,
	0x73, 0x5f, 0x62, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x42, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68,
	0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72,
	0x6d, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x69,
	0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x76, 0x0a, 0x06, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x22, 0x5f, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x22, 0xee, 0x02, 0x0a, 0x10, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x5f, 0x6c, 0x6f,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x4c, 0x6f, 0x63,
	0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a,
	0x0a, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x52,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xdd, 0x08,
	0x0a, 0x0c, 0x54, 0x61, 0x62, 0x32, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x74, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x33, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x44,
	0x74, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x4c, 0x0a, 0x12, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76,
	0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x64, 0x57, 0x65,
	0x62, 0x56, 0x32, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3c, 0x0a, 0x1a, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x67, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a,
	0x13, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x70, 0x70, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75,
	0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x52, 0x12,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x69, 0x6f, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6f, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x52, 0x0e, 0x69,
	0x6f, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a,
	0x0c, 0x61, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d,
	0x61, 0x72, 0x6b, 0x44, 0x74, 0x6f, 0x52, 0x0a, 0x61, 0x64, 0x54, 0x61, 0x67, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x44, 0x74, 0x6f, 0x52, 0x0d,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x0a,
	0x05, 0x61, 0x64, 0x5f, 0x63, 0x62, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x43, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x99, 0x05,
	0x0a, 0x0b, 0x54, 0x61, 0x62, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x74, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c,
	0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x70,
	0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x70, 0x70,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x76, 0x32, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x41, 0x64, 0x57, 0x65, 0x62, 0x56, 0x32,
	0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70,
	0x70, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x70, 0x70,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x70, 0x70, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0a, 0x54, 0x61, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x8c, 0x02, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e,
	0x0a, 0x0d, 0x57, 0x78, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x3b,
	0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x58, 0x69, 0x61,
	0x6f, 0x4d, 0x69, 0x6b, 0x75, 0x30, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bilibili_ad_v1_ad_proto_rawDescOnce sync.Once
	file_bilibili_ad_v1_ad_proto_rawDescData = file_bilibili_ad_v1_ad_proto_rawDesc
)

func file_bilibili_ad_v1_ad_proto_rawDescGZIP() []byte {
	file_bilibili_ad_v1_ad_proto_rawDescOnce.Do(func() {
		file_bilibili_ad_v1_ad_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_ad_v1_ad_proto_rawDescData)
	})
	return file_bilibili_ad_v1_ad_proto_rawDescData
}

var file_bilibili_ad_v1_ad_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_bilibili_ad_v1_ad_proto_goTypes = []interface{}{
	(*AdAutoPlayVideoDto)(nil),       // 0: bilibili.ad.v1.AdAutoPlayVideoDto
	(*AdBusinessMarkDto)(nil),        // 1: bilibili.ad.v1.AdBusinessMarkDto
	(*AdButtonDto)(nil),              // 2: bilibili.ad.v1.AdButtonDto
	(*AdCardDto)(nil),                // 3: bilibili.ad.v1.AdCardDto
	(*AdContentExtraDto)(nil),        // 4: bilibili.ad.v1.AdContentExtraDto
	(*AdCoverDto)(nil),               // 5: bilibili.ad.v1.AdCoverDto
	(*AdDto)(nil),                    // 6: bilibili.ad.v1.AdDto
	(*AdFeedbackPanelDto)(nil),       // 7: bilibili.ad.v1.AdFeedbackPanelDto
	(*AdFeedbackPanelModuleDto)(nil), // 8: bilibili.ad.v1.AdFeedbackPanelModuleDto
	(*AdGoodDto)(nil),                // 9: bilibili.ad.v1.AdGoodDto
	(*AdOgvEpDto)(nil),               // 10: bilibili.ad.v1.AdOgvEpDto
	(*AdsControlDto)(nil),            // 11: bilibili.ad.v1.AdsControlDto
	(*AdSecondFeedbackPanelDto)(nil), // 12: bilibili.ad.v1.AdSecondFeedbackPanelDto
	(*AdShareInfoDto)(nil),           // 13: bilibili.ad.v1.AdShareInfoDto
	(*AdverDto)(nil),                 // 14: bilibili.ad.v1.AdverDto
	(*AndroidGamePageRes)(nil),       // 15: bilibili.ad.v1.AndroidGamePageRes
	(*AndroidTag)(nil),               // 16: bilibili.ad.v1.AndroidTag
	(*AppPackageDto)(nil),            // 17: bilibili.ad.v1.AppPackageDto
	(*Bulletin)(nil),                 // 18: bilibili.ad.v1.Bulletin
	(*Comment)(nil),                  // 19: bilibili.ad.v1.Comment
	(*CreativeDto)(nil),              // 20: bilibili.ad.v1.CreativeDto
	(*CustomPlayUrl)(nil),            // 21: bilibili.ad.v1.CustomPlayUrl
	(*ForwardReply)(nil),             // 22: bilibili.ad.v1.ForwardReply
	(*Gift)(nil),                     // 23: bilibili.ad.v1.Gift
	(*IosGamePageRes)(nil),           // 24: bilibili.ad.v1.IosGamePageRes
	(*Module1)(nil),                  // 25: bilibili.ad.v1.Module1
	(*Module3)(nil),                  // 26: bilibili.ad.v1.Module3
	(*Module4)(nil),                  // 27: bilibili.ad.v1.Module4
	(*Module5)(nil),                  // 28: bilibili.ad.v1.Module5
	(*Module6)(nil),                  // 29: bilibili.ad.v1.Module6
	(*Module7)(nil),                  // 30: bilibili.ad.v1.Module7
	(*Module8)(nil),                  // 31: bilibili.ad.v1.Module8
	(*Module9)(nil),                  // 32: bilibili.ad.v1.Module9
	(*Module10)(nil),                 // 33: bilibili.ad.v1.Module10
	(*Module11)(nil),                 // 34: bilibili.ad.v1.Module11
	(*Module12)(nil),                 // 35: bilibili.ad.v1.Module12
	(*Module13)(nil),                 // 36: bilibili.ad.v1.Module13
	(*Module14)(nil),                 // 37: bilibili.ad.v1.Module14
	(*NotClickableArea)(nil),         // 38: bilibili.ad.v1.NotClickableArea
	(*QualityInfo)(nil),              // 39: bilibili.ad.v1.QualityInfo
	(*QualityParmas)(nil),            // 40: bilibili.ad.v1.QualityParmas
	(*Reward)(nil),                   // 41: bilibili.ad.v1.Reward
	(*ScreenShots)(nil),              // 42: bilibili.ad.v1.ScreenShots
	(*SourceContentDto)(nil),         // 43: bilibili.ad.v1.SourceContentDto
	(*SubCardModule)(nil),            // 44: bilibili.ad.v1.SubCardModule
	(*Tab2ExtraDto)(nil),             // 45: bilibili.ad.v1.Tab2ExtraDto
	(*TabExtraDto)(nil),              // 46: bilibili.ad.v1.TabExtraDto
	(*TabInfoDto)(nil),               // 47: bilibili.ad.v1.TabInfoDto
	(*TagInfo)(nil),                  // 48: bilibili.ad.v1.TagInfo
	(*WxProgramInfo)(nil),            // 49: bilibili.ad.v1.WxProgramInfo
	(*wrapperspb.Int32Value)(nil),    // 50: google.protobuf.Int32Value
	(*anypb.Any)(nil),                // 51: google.protobuf.Any
}
var file_bilibili_ad_v1_ad_proto_depIdxs = []int32{
	5,  // 0: bilibili.ad.v1.AdCardDto.covers:type_name -> bilibili.ad.v1.AdCoverDto
	9,  // 1: bilibili.ad.v1.AdCardDto.good:type_name -> bilibili.ad.v1.AdGoodDto
	2,  // 2: bilibili.ad.v1.AdCardDto.button:type_name -> bilibili.ad.v1.AdButtonDto
	1,  // 3: bilibili.ad.v1.AdCardDto.ad_tag_style:type_name -> bilibili.ad.v1.AdBusinessMarkDto
	0,  // 4: bilibili.ad.v1.AdCardDto.video:type_name -> bilibili.ad.v1.AdAutoPlayVideoDto
	7,  // 5: bilibili.ad.v1.AdCardDto.feedback_panel:type_name -> bilibili.ad.v1.AdFeedbackPanelDto
	39, // 6: bilibili.ad.v1.AdCardDto.quality_infos:type_name -> bilibili.ad.v1.QualityInfo
	14, // 7: bilibili.ad.v1.AdCardDto.adver:type_name -> bilibili.ad.v1.AdverDto
	44, // 8: bilibili.ad.v1.AdCardDto.subcard_module:type_name -> bilibili.ad.v1.SubCardModule
	18, // 9: bilibili.ad.v1.AdCardDto.bulletin:type_name -> bilibili.ad.v1.Bulletin
	23, // 10: bilibili.ad.v1.AdCardDto.gift:type_name -> bilibili.ad.v1.Gift
	49, // 11: bilibili.ad.v1.AdCardDto.wx_program_info:type_name -> bilibili.ad.v1.WxProgramInfo
	15, // 12: bilibili.ad.v1.AdCardDto.android_game_page_res:type_name -> bilibili.ad.v1.AndroidGamePageRes
	38, // 13: bilibili.ad.v1.AdCardDto.not_clickable_area:type_name -> bilibili.ad.v1.NotClickableArea
	22, // 14: bilibili.ad.v1.AdCardDto.forward_reply:type_name -> bilibili.ad.v1.ForwardReply
	17, // 15: bilibili.ad.v1.AdContentExtraDto.download_whitelist:type_name -> bilibili.ad.v1.AppPackageDto
	3,  // 16: bilibili.ad.v1.AdContentExtraDto.card:type_name -> bilibili.ad.v1.AdCardDto
	13, // 17: bilibili.ad.v1.AdContentExtraDto.share_info:type_name -> bilibili.ad.v1.AdShareInfoDto
	4,  // 18: bilibili.ad.v1.AdDto.extra:type_name -> bilibili.ad.v1.AdContentExtraDto
	20, // 19: bilibili.ad.v1.AdDto.creative_content:type_name -> bilibili.ad.v1.CreativeDto
	8,  // 20: bilibili.ad.v1.AdFeedbackPanelDto.feedback_panel_detail:type_name -> bilibili.ad.v1.AdFeedbackPanelModuleDto
	12, // 21: bilibili.ad.v1.AdFeedbackPanelModuleDto.secondary_panel:type_name -> bilibili.ad.v1.AdSecondFeedbackPanelDto
	10, // 22: bilibili.ad.v1.AdsControlDto.eps:type_name -> bilibili.ad.v1.AdOgvEpDto
	25, // 23: bilibili.ad.v1.AndroidGamePageRes.module1:type_name -> bilibili.ad.v1.Module1
	26, // 24: bilibili.ad.v1.AndroidGamePageRes.module3:type_name -> bilibili.ad.v1.Module3
	27, // 25: bilibili.ad.v1.AndroidGamePageRes.module4:type_name -> bilibili.ad.v1.Module4
	28, // 26: bilibili.ad.v1.AndroidGamePageRes.module5:type_name -> bilibili.ad.v1.Module5
	29, // 27: bilibili.ad.v1.AndroidGamePageRes.module6:type_name -> bilibili.ad.v1.Module6
	30, // 28: bilibili.ad.v1.AndroidGamePageRes.module7:type_name -> bilibili.ad.v1.Module7
	31, // 29: bilibili.ad.v1.AndroidGamePageRes.module8:type_name -> bilibili.ad.v1.Module8
	32, // 30: bilibili.ad.v1.AndroidGamePageRes.module9:type_name -> bilibili.ad.v1.Module9
	33, // 31: bilibili.ad.v1.AndroidGamePageRes.module10:type_name -> bilibili.ad.v1.Module10
	34, // 32: bilibili.ad.v1.AndroidGamePageRes.module11:type_name -> bilibili.ad.v1.Module11
	35, // 33: bilibili.ad.v1.AndroidGamePageRes.module12:type_name -> bilibili.ad.v1.Module12
	36, // 34: bilibili.ad.v1.AndroidGamePageRes.module13:type_name -> bilibili.ad.v1.Module13
	37, // 35: bilibili.ad.v1.AndroidGamePageRes.module14:type_name -> bilibili.ad.v1.Module14
	2,  // 36: bilibili.ad.v1.IosGamePageRes.game_button:type_name -> bilibili.ad.v1.AdButtonDto
	16, // 37: bilibili.ad.v1.Module1.tag_list:type_name -> bilibili.ad.v1.AndroidTag
	40, // 38: bilibili.ad.v1.Module3.quality_params:type_name -> bilibili.ad.v1.QualityParmas
	42, // 39: bilibili.ad.v1.Module7.screen_shots:type_name -> bilibili.ad.v1.ScreenShots
	19, // 40: bilibili.ad.v1.Module12.comment_list:type_name -> bilibili.ad.v1.Comment
	41, // 41: bilibili.ad.v1.Module14.reward_list:type_name -> bilibili.ad.v1.Reward
	50, // 42: bilibili.ad.v1.SourceContentDto.server_type:type_name -> google.protobuf.Int32Value
	50, // 43: bilibili.ad.v1.SourceContentDto.card_index:type_name -> google.protobuf.Int32Value
	6,  // 44: bilibili.ad.v1.SourceContentDto.ad_content:type_name -> bilibili.ad.v1.AdDto
	2,  // 45: bilibili.ad.v1.SubCardModule.button:type_name -> bilibili.ad.v1.AdButtonDto
	48, // 46: bilibili.ad.v1.SubCardModule.tag_infos:type_name -> bilibili.ad.v1.TagInfo
	2,  // 47: bilibili.ad.v1.Tab2ExtraDto.button:type_name -> bilibili.ad.v1.AdButtonDto
	17, // 48: bilibili.ad.v1.Tab2ExtraDto.download_whitelist:type_name -> bilibili.ad.v1.AppPackageDto
	15, // 49: bilibili.ad.v1.Tab2ExtraDto.android_game_page_res:type_name -> bilibili.ad.v1.AndroidGamePageRes
	24, // 50: bilibili.ad.v1.Tab2ExtraDto.ios_game_page_res:type_name -> bilibili.ad.v1.IosGamePageRes
	1,  // 51: bilibili.ad.v1.Tab2ExtraDto.ad_tag_style:type_name -> bilibili.ad.v1.AdBusinessMarkDto
	7,  // 52: bilibili.ad.v1.Tab2ExtraDto.feedback_panel:type_name -> bilibili.ad.v1.AdFeedbackPanelDto
	17, // 53: bilibili.ad.v1.TabExtraDto.download_whitelist:type_name -> bilibili.ad.v1.AppPackageDto
	51, // 54: bilibili.ad.v1.TabInfoDto.extra:type_name -> google.protobuf.Any
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_bilibili_ad_v1_ad_proto_init() }
func file_bilibili_ad_v1_ad_proto_init() {
	if File_bilibili_ad_v1_ad_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_ad_v1_ad_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdAutoPlayVideoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdBusinessMarkDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdButtonDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdCardDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdContentExtraDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdCoverDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdFeedbackPanelDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdFeedbackPanelModuleDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdGoodDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdOgvEpDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdsControlDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdSecondFeedbackPanelDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdShareInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdverDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidGamePageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPackageDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bulletin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomPlayUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosGamePageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module10); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module11); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module12); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module14); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotClickableArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualityParmas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenShots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceContentDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCardModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tab2ExtraDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabExtraDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TabInfoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_ad_v1_ad_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_ad_v1_ad_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_ad_v1_ad_proto_goTypes,
		DependencyIndexes: file_bilibili_ad_v1_ad_proto_depIdxs,
		MessageInfos:      file_bilibili_ad_v1_ad_proto_msgTypes,
	}.Build()
	File_bilibili_ad_v1_ad_proto = out.File
	file_bilibili_ad_v1_ad_proto_rawDesc = nil
	file_bilibili_ad_v1_ad_proto_goTypes = nil
	file_bilibili_ad_v1_ad_proto_depIdxs = nil
}
